Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"
    LLPIPE


State 1466 conflicts: 1 reduce/reduce
State 1559 conflicts: 1 reduce/reduce
State 1586 conflicts: 1 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration SEMICOLON
    9        | program options_declaration SEMICOLON
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program tuple_alias_declaration
   13        | program bitfield_alias_declaration
   14        | program top_level_reader_macro
   15        | program SEMICOLON

   16 COMMA: ','
   17      | "new line, comma"

   18 SEMICOLON: ';'
   19          | "new line, semicolon"

   20 top_level_reader_macro: expr_reader SEMICOLON

   21 optional_public_or_private_module: %empty
   22                                  | "public"
   23                                  | "private"

   24 module_name: '$'
   25            | "name"

   26 optional_not_required: %empty
   27                      | '!' "inscope"

   28 module_declaration: "module" module_name optional_shared optional_public_or_private_module optional_not_required

   29 character_sequence: STRING_CHARACTER
   30                   | STRING_CHARACTER_ESC
   31                   | character_sequence STRING_CHARACTER
   32                   | character_sequence STRING_CHARACTER_ESC

   33 string_constant: "start of the string" character_sequence "end of the string"
   34                | "start of the string" "end of the string"

   35 format_string: %empty
   36              | format_string STRING_CHARACTER

   37 optional_format_string: %empty

   38 $@1: %empty

   39 optional_format_string: ':' $@1 format_string

   40 string_builder_body: %empty
   41                    | string_builder_body character_sequence
   42                    | string_builder_body "{" expr optional_format_string "}"

   43 string_builder: "start of the string" string_builder_body "end of the string"

   44 reader_character_sequence: STRING_CHARACTER
   45                          | reader_character_sequence STRING_CHARACTER

   46 $@2: %empty

   47 expr_reader: '%' name_in_namespace $@2 reader_character_sequence

   48 options_declaration: "options" annotation_argument_list

   49 require_declaration: "require" require_module

   50 require_module_name: "name"
   51                    | '%' require_module_name
   52                    | require_module_name '.' "name"
   53                    | require_module_name '/' "name"

   54 require_module: require_module_name is_public_module
   55               | require_module_name "as" "name" is_public_module

   56 is_public_module: %empty
   57                 | "public"

   58 expect_declaration: "expect" expect_list

   59 expect_list: expect_error
   60            | expect_list ',' expect_error

   61 expect_error: "integer constant"
   62             | "integer constant" ':' "integer constant"

   63 expression_label: "label" "integer constant" ':'

   64 expression_goto: "goto" "label" "integer constant"
   65                | "goto" expr

   66 elif_or_static_elif: "elif"
   67                    | "static_elif"

   68 emit_semis: "new line, semicolon"
   69           | emit_semis "new line, semicolon"

   70 optional_emit_semis: %empty
   71                    | emit_semis

   72 expression_else: %empty
   73                | "else" optional_emit_semis expression_else_block
   74                | elif_or_static_elif '(' expr ')' optional_emit_semis expression_else_block expression_else

   75 if_or_static_if: "if"
   76                | "static_if"

   77 expression_else_one_liner: %empty
   78                          | "else" expression_if_one_liner

   79 expression_if_one_liner: expr
   80                        | expression_return
   81                        | expression_yield
   82                        | expression_break
   83                        | expression_continue

   84 semis: SEMICOLON
   85      | semis SEMICOLON

   86 optional_semis: %empty
   87               | semis

   88 $@3: %empty

   89 $@4: %empty

   90 expression_if_block: $@3 '{' expressions $@4 '}' expression_block_finally

   91 $@5: %empty

   92 expression_if_block: $@5 expression_if_one_liner SEMICOLON

   93 $@6: %empty

   94 $@7: %empty

   95 expression_else_block: $@6 '{' expressions $@7 '}' expression_block_finally

   96 $@8: %empty

   97 expression_else_block: $@8 expression_if_one_liner SEMICOLON

   98 $@9: %empty

   99 expression_if_then_else: $@9 if_or_static_if '(' expr ')' optional_emit_semis expression_if_block expression_else

  100 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner SEMICOLON

  101 for_variable_name_with_pos_list: "name"
  102                                | "$i" '(' expr ')'
  103                                | "name" "aka" "name"
  104                                | '(' tuple_expansion ')'
  105                                | for_variable_name_with_pos_list ',' "name"
  106                                | for_variable_name_with_pos_list ',' "name" "aka" "name"
  107                                | for_variable_name_with_pos_list ',' '(' tuple_expansion ')'

  108 $@10: %empty

  109 expression_for_loop: $@10 "for" '(' for_variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

  110 expression_unsafe: "unsafe" optional_emit_semis expression_block

  111 $@11: %empty

  112 expression_while_loop: $@11 "while" '(' expr ')' optional_emit_semis expression_block

  113 $@12: %empty

  114 expression_with: $@12 "with" '(' expr ')' optional_emit_semis expression_block

  115 expression_with_alias: "assume" "name" '=' expr

  116 annotation_argument_value: string_constant
  117                          | "name"
  118                          | "integer constant"
  119                          | "floating point constant"
  120                          | "true"
  121                          | "false"

  122 annotation_argument_value_list: annotation_argument_value
  123                               | annotation_argument_value_list ',' annotation_argument_value

  124 annotation_argument_name: "name"
  125                         | "type"
  126                         | "in"

  127 annotation_argument: annotation_argument_name '=' string_constant
  128                    | annotation_argument_name '=' "name"
  129                    | annotation_argument_name '=' "integer constant"
  130                    | annotation_argument_name '=' "floating point constant"
  131                    | annotation_argument_name '=' "true"
  132                    | annotation_argument_name '=' "false"
  133                    | annotation_argument_name
  134                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

  135 annotation_argument_list: annotation_argument
  136                         | annotation_argument_list ',' annotation_argument

  137 metadata_argument_list: '@' annotation_argument optional_emit_semis
  138                       | metadata_argument_list '@' annotation_argument optional_emit_semis

  139 annotation_declaration_name: name_in_namespace
  140                            | "require"
  141                            | "private"
  142                            | "template"

  143 annotation_declaration_basic: annotation_declaration_name
  144                             | annotation_declaration_name '(' annotation_argument_list ')'

  145 annotation_declaration: annotation_declaration_basic
  146                       | '!' annotation_declaration
  147                       | annotation_declaration "&&" annotation_declaration
  148                       | annotation_declaration "||" annotation_declaration
  149                       | annotation_declaration "^^" annotation_declaration
  150                       | '(' annotation_declaration ')'
  151                       | "|>" annotation_declaration

  152 annotation_list: annotation_declaration
  153                | annotation_list ',' annotation_declaration

  154 optional_annotation_list: %empty
  155                         | '[' annotation_list ']'

  156 optional_annotation_list_with_emit_semis: %empty
  157                                         | '[' annotation_list ']' optional_emit_semis

  158 optional_function_argument_list: %empty
  159                                | '(' ')'
  160                                | '(' function_argument_list ')'

  161 optional_function_type: %empty
  162                       | ':' type_declaration

  163 function_name: "name"
  164              | "operator" '!'
  165              | "operator" '~'
  166              | "operator" "+="
  167              | "operator" "-="
  168              | "operator" "*="
  169              | "operator" "/="
  170              | "operator" "%="
  171              | "operator" "&="
  172              | "operator" "|="
  173              | "operator" "^="
  174              | "operator" "&&="
  175              | "operator" "||="
  176              | "operator" "^^="
  177              | "operator" "&&"
  178              | "operator" "||"
  179              | "operator" "^^"
  180              | "operator" '+'
  181              | "operator" '-'
  182              | "operator" '*'
  183              | "operator" '/'
  184              | "operator" '%'
  185              | "operator" '<'
  186              | "operator" '>'
  187              | "operator" ".."
  188              | "operator" "=="
  189              | "operator" "!="
  190              | "operator" "<="
  191              | "operator" ">="
  192              | "operator" '&'
  193              | "operator" '|'
  194              | "operator" '^'
  195              | "++" "operator"
  196              | "--" "operator"
  197              | "operator" "++"
  198              | "operator" "--"
  199              | "operator" "<<"
  200              | "operator" ">>"
  201              | "operator" "<<="
  202              | "operator" ">>="
  203              | "operator" "<<<"
  204              | "operator" ">>>"
  205              | "operator" "<<<="
  206              | "operator" ">>>="
  207              | "operator" '[' ']'
  208              | "operator" "?[" ']'
  209              | "operator" '.'
  210              | "operator" "?."
  211              | "operator" '.' "name"
  212              | "operator" '.' "name" ":="
  213              | "operator" '.' "name" "+="
  214              | "operator" '.' "name" "-="
  215              | "operator" '.' "name" "*="
  216              | "operator" '.' "name" "/="
  217              | "operator" '.' "name" "%="
  218              | "operator" '.' "name" "&="
  219              | "operator" '.' "name" "|="
  220              | "operator" '.' "name" "^="
  221              | "operator" '.' "name" "&&="
  222              | "operator" '.' "name" "||="
  223              | "operator" '.' "name" "^^="
  224              | "operator" "?." "name"
  225              | "operator" ":="
  226              | "operator" "delete"
  227              | "operator" "??"
  228              | "operator" "is"
  229              | "operator" "as"
  230              | "operator" "is" "name"
  231              | "operator" "as" "name"
  232              | "operator" '?' "as"
  233              | "operator" '?' "as" "name"
  234              | "bool"
  235              | "string"
  236              | "int"
  237              | "int2"
  238              | "int3"
  239              | "int4"
  240              | "uint"
  241              | "uint2"
  242              | "uint3"
  243              | "uint4"
  244              | "float"
  245              | "float2"
  246              | "float3"
  247              | "float4"
  248              | "range"
  249              | "urange"
  250              | "range64"
  251              | "urange64"
  252              | "int64"
  253              | "uint64"
  254              | "double"
  255              | "int8"
  256              | "uint8"
  257              | "int16"
  258              | "uint16"

  259 global_function_declaration: optional_annotation_list_with_emit_semis "def" function_declaration

  260 optional_public_or_private_function: %empty
  261                                    | "private"
  262                                    | "public"

  263 function_declaration_header: function_name optional_function_argument_list optional_function_type

  264 $@13: %empty

  265 function_declaration: optional_public_or_private_function $@13 function_declaration_header optional_emit_semis expression_block

  266 expression_block_finally: %empty

  267 $@14: %empty

  268 $@15: %empty

  269 expression_block_finally: "finally" $@14 '{' expressions $@15 '}'

  270 $@16: %empty

  271 $@17: %empty

  272 expression_block: $@16 '{' expressions $@17 '}' expression_block_finally

  273 expr_call_pipe: expr_call expr_full_block_assumed_piped

  274 expression_any: SEMICOLON
  275               | expr_assign SEMICOLON
  276               | expression_delete SEMICOLON
  277               | expression_let
  278               | expression_while_loop
  279               | expression_unsafe
  280               | expression_with
  281               | expression_with_alias SEMICOLON
  282               | expression_for_loop
  283               | expression_break SEMICOLON
  284               | expression_continue SEMICOLON
  285               | expression_return SEMICOLON
  286               | expression_yield SEMICOLON
  287               | expression_if_then_else
  288               | expression_if_then_else_oneliner
  289               | expression_try_catch
  290               | expression_label SEMICOLON
  291               | expression_goto SEMICOLON
  292               | "pass" SEMICOLON

  293 expressions: %empty
  294            | expressions expression_any
  295            | expressions error

  296 optional_expr_list: %empty
  297                   | expr_list optional_comma

  298 optional_expr_map_tuple_list: %empty
  299                             | expr_map_tuple_list optional_comma

  300 type_declaration_no_options_list: type_declaration
  301                                 | type_declaration_no_options_list c_or_s type_declaration

  302 name_in_namespace: "name"
  303                  | "name" "::" "name"
  304                  | "::" "name"

  305 expression_delete: "delete" expr
  306                  | "delete" "explicit" expr

  307 $@18: %empty

  308 $@19: %empty

  309 new_type_declaration: '<' $@18 type_declaration '>' $@19
  310                     | structure_type_declaration

  311 expr_new: "new" new_type_declaration
  312         | "new" new_type_declaration '(' use_initializer ')'
  313         | "new" new_type_declaration '(' expr_list ')'
  314         | "new" new_type_declaration '(' make_struct_single ')'
  315         | "new" new_type_declaration '(' "uninitialized" make_struct_single ')'
  316         | "new" make_decl

  317 expression_break: "break"

  318 expression_continue: "continue"

  319 expression_return: "return"
  320                  | "return" expr
  321                  | "return" "<-" expr

  322 expression_yield: "yield" expr
  323                 | "yield" "<-" expr

  324 expression_try_catch: "try" expression_block "recover" expression_block

  325 kwd_let_var_or_nothing: "let"
  326                       | "var"
  327                       | %empty

  328 kwd_let: "let"
  329        | "var"

  330 optional_in_scope: "inscope"
  331                  | %empty

  332 tuple_expansion: "name"
  333                | tuple_expansion ',' "name"

  334 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  335                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr SEMICOLON

  336 expression_let: kwd_let optional_in_scope let_variable_declaration
  337               | kwd_let optional_in_scope tuple_expansion_variable_declaration
  338               | kwd_let optional_in_scope '{' variable_declaration_list '}'

  339 $@20: %empty

  340 $@21: %empty

  341 expr_cast: "cast" '<' $@20 type_declaration_no_options '>' $@21 expr

  342 $@22: %empty

  343 $@23: %empty

  344 expr_cast: "upcast" '<' $@22 type_declaration_no_options '>' $@23 expr

  345 $@24: %empty

  346 $@25: %empty

  347 expr_cast: "reinterpret" '<' $@24 type_declaration_no_options '>' $@25 expr

  348 $@26: %empty

  349 $@27: %empty

  350 expr_type_decl: "type" '<' $@26 type_declaration '>' $@27

  351 expr_type_info: "typeinfo" name_in_namespace '(' expr ')'
  352               | "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')'
  353               | "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')'

  354 expr_list: expr
  355          | expr_list ',' expr

  356 block_or_simple_block: expression_block
  357                      | "=>" expr
  358                      | "=>" "<-" expr

  359 block_or_lambda: '$'
  360                | '@'
  361                | '@' '@'

  362 capture_entry: '&' "name"
  363              | '=' "name"
  364              | "<-" "name"
  365              | ":=" "name"
  366              | "name" '(' "name" ')'

  367 capture_list: capture_entry
  368             | capture_list ',' capture_entry

  369 optional_capture_list: %empty
  370                      | "capture" '(' capture_list ')'

  371 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

  372 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block
  373                              | '{' expressions '}'

  374 expr_numeric_const: "integer constant"
  375                   | "unsigned integer constant"
  376                   | "long integer constant"
  377                   | "unsigned long integer constant"
  378                   | "unsigned int8 constant"
  379                   | "floating point constant"
  380                   | "double constant"

  381 expr_assign: expr
  382            | expr '=' expr
  383            | expr "<-" expr
  384            | expr ":=" expr
  385            | expr "&=" expr
  386            | expr "|=" expr
  387            | expr "^=" expr
  388            | expr "&&=" expr
  389            | expr "||=" expr
  390            | expr "^^=" expr
  391            | expr "+=" expr
  392            | expr "-=" expr
  393            | expr "*=" expr
  394            | expr "/=" expr
  395            | expr "%=" expr
  396            | expr "<<=" expr
  397            | expr ">>=" expr
  398            | expr "<<<=" expr
  399            | expr ">>>=" expr

  400 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  401                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  402 expr_method_call: expr "->" "name" '(' ')'
  403                 | expr "->" "name" '(' expr_list ')'

  404 func_addr_name: name_in_namespace
  405               | "$i" '(' expr ')'

  406 func_addr_expr: '@' '@' func_addr_name

  407 $@28: %empty

  408 $@29: %empty

  409 func_addr_expr: '@' '@' '<' $@28 type_declaration_no_options '>' $@29 func_addr_name

  410 $@30: %empty

  411 $@31: %empty

  412 func_addr_expr: '@' '@' '<' $@30 optional_function_argument_list optional_function_type '>' $@31 func_addr_name

  413 expr_field: expr '.' "name"
  414           | expr '.' '.' "name"
  415           | expr '.' "name" '(' ')'
  416           | expr '.' "name" '(' expr_list ')'
  417           | expr '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr '.' basic_type_declaration '(' ')'
  419           | expr '.' basic_type_declaration '(' expr_list ')'

  420 $@32: %empty

  421 $@33: %empty

  422 expr_field: expr '.' $@32 error $@33

  423 expr_call: name_in_namespace '(' ')'
  424          | name_in_namespace '(' "uninitialized" ')'
  425          | name_in_namespace '(' make_struct_single ')'
  426          | name_in_namespace '(' "uninitialized" make_struct_single ')'
  427          | name_in_namespace '(' expr_list ')'
  428          | basic_type_declaration '(' ')'
  429          | basic_type_declaration '(' expr_list ')'

  430 expr: "null"
  431     | name_in_namespace
  432     | expr_numeric_const
  433     | expr_reader
  434     | string_builder
  435     | make_decl
  436     | "true"
  437     | "false"
  438     | expr_field
  439     | expr_mtag
  440     | '!' expr
  441     | '~' expr
  442     | '+' expr
  443     | '-' expr
  444     | expr "<<" expr
  445     | expr ">>" expr
  446     | expr "<<<" expr
  447     | expr ">>>" expr
  448     | expr '+' expr
  449     | expr '-' expr
  450     | expr '*' expr
  451     | expr '/' expr
  452     | expr '%' expr
  453     | expr '<' expr
  454     | expr '>' expr
  455     | expr "==" expr
  456     | expr "!=" expr
  457     | expr "<=" expr
  458     | expr ">=" expr
  459     | expr '&' expr
  460     | expr '|' expr
  461     | expr '^' expr
  462     | expr "&&" expr
  463     | expr "||" expr
  464     | expr "^^" expr
  465     | expr ".." expr
  466     | "++" expr
  467     | "--" expr
  468     | expr "++"
  469     | expr "--"
  470     | '(' expr_list optional_comma ')'
  471     | '(' make_struct_single ')'
  472     | expr '[' expr ']'
  473     | expr '.' '[' expr ']'
  474     | expr "?[" expr ']'
  475     | expr '.' "?[" expr ']'
  476     | expr "?." "name"
  477     | expr '.' "?." "name"
  478     | func_addr_expr
  479     | expr_call
  480     | '*' expr
  481     | "deref" '(' expr ')'
  482     | "addr" '(' expr ')'
  483     | expr_generator
  484     | expr "??" expr
  485     | expr '?' expr ':' expr

  486 $@34: %empty

  487 $@35: %empty

  488 expr: expr "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr "is" basic_type_declaration
  490     | expr "is" "name"
  491     | expr "as" "name"

  492 $@36: %empty

  493 $@37: %empty

  494 expr: expr "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr "as" basic_type_declaration
  496     | expr '?' "as" "name"

  497 $@38: %empty

  498 $@39: %empty

  499 expr: expr '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr '?' "as" basic_type_declaration
  501     | expr_type_info
  502     | expr_type_decl
  503     | expr_cast
  504     | expr_new
  505     | expr_method_call
  506     | expr_named_call
  507     | expr_full_block
  508     | expr "<|" expr
  509     | expr "|>" expr
  510     | expr "|>" basic_type_declaration
  511     | expr_call_pipe
  512     | "unsafe" '(' expr ')'

  513 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  514               | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  515               | "generator" '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block

  516 expr_mtag: "$$" '(' expr ')'
  517          | "$i" '(' expr ')'
  518          | "$v" '(' expr ')'
  519          | "$b" '(' expr ')'
  520          | "$a" '(' expr ')'
  521          | "..."
  522          | "$c" '(' expr ')' '(' ')'
  523          | "$c" '(' expr ')' '(' expr_list ')'
  524          | expr '.' "$f" '(' expr ')'
  525          | expr "?." "$f" '(' expr ')'
  526          | expr '.' '.' "$f" '(' expr ')'
  527          | expr '.' "?." "$f" '(' expr ')'
  528          | expr "as" "$f" '(' expr ')'
  529          | expr '?' "as" "$f" '(' expr ')'
  530          | expr "is" "$f" '(' expr ')'
  531          | '@' '@' "$c" '(' expr ')'

  532 optional_field_annotation: %empty
  533                          | metadata_argument_list

  534 optional_override: %empty
  535                  | "override"
  536                  | "sealed"

  537 optional_constant: %empty
  538                  | "const"

  539 optional_public_or_private_member_variable: %empty
  540                                           | "public"
  541                                           | "private"

  542 optional_static_member_variable: %empty
  543                                | "static"

  544 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  545 struct_variable_declaration_list: %empty
  546                                 | struct_variable_declaration_list "new line, semicolon"

  547 $@40: %empty

  548 struct_variable_declaration_list: struct_variable_declaration_list $@40 structure_variable_declaration SEMICOLON

  549 $@41: %empty

  550 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@41 function_declaration_header SEMICOLON

  551 $@42: %empty

  552 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@42 function_declaration_header optional_emit_semis expression_block

  553 function_argument_declaration_no_type: optional_field_annotation kwd_let_var_or_nothing variable_declaration_no_type

  554 function_argument_declaration_type: optional_field_annotation kwd_let_var_or_nothing variable_declaration_type
  555                                   | "$a" '(' expr ')'

  556 function_argument_list: function_argument_declaration_no_type
  557                       | function_argument_declaration_type
  558                       | function_argument_declaration_no_type ';' function_argument_list
  559                       | function_argument_declaration_type ';' function_argument_list
  560                       | function_argument_declaration_type ',' function_argument_list

  561 tuple_type: type_declaration
  562           | "name" ':' type_declaration

  563 tuple_type_list: tuple_type
  564                | tuple_type_list c_or_s tuple_type

  565 tuple_alias_type_list: %empty
  566                      | tuple_type
  567                      | tuple_alias_type_list semis tuple_type

  568 variant_type: "name" ':' type_declaration

  569 variant_type_list: variant_type
  570                  | variant_type_list c_or_s variant_type

  571 variant_alias_type_list: %empty
  572                        | variant_type
  573                        | variant_alias_type_list semis variant_type

  574 copy_or_move: '='
  575             | "<-"

  576 variable_declaration_no_type: variable_name_with_pos_list
  577                             | variable_name_with_pos_list '&'
  578                             | variable_name_with_pos_list copy_or_move expr

  579 variable_declaration_type: variable_name_with_pos_list ':' type_declaration
  580                          | variable_name_with_pos_list ':' type_declaration copy_or_move expr

  581 variable_declaration: variable_declaration_type
  582                     | variable_declaration_no_type

  583 copy_or_move_or_clone: '='
  584                      | "<-"
  585                      | ":="

  586 optional_ref: %empty
  587             | '&'

  588 let_variable_name_with_pos_list: "name"
  589                                | "$i" '(' expr ')'
  590                                | "name" "aka" "name"
  591                                | let_variable_name_with_pos_list ',' "name"
  592                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  593 global_let_variable_name_with_pos_list: "name"
  594                                       | global_let_variable_name_with_pos_list ',' "name"

  595 variable_declaration_list: %empty
  596                          | variable_declaration_list SEMICOLON
  597                          | variable_declaration_list let_variable_declaration

  598 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options SEMICOLON
  599                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  600                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr SEMICOLON

  601 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options SEMICOLON
  602                                | global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  603                                | global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr SEMICOLON

  604 optional_shared: %empty
  605                | "shared"

  606 optional_public_or_private_variable: %empty
  607                                    | "private"
  608                                    | "public"

  609 global_variable_declaration_list: %empty
  610                                 | global_variable_declaration_list SEMICOLON

  611 $@43: %empty

  612 global_variable_declaration_list: global_variable_declaration_list $@43 optional_field_annotation let_variable_declaration

  613 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'

  614 $@44: %empty

  615 global_let: kwd_let optional_shared optional_public_or_private_variable $@44 optional_field_annotation global_let_variable_declaration

  616 enum_expression: "name"
  617                | "name" '=' expr

  618 commas: COMMA
  619       | commas COMMA

  620 enum_list: %empty
  621          | enum_expression
  622          | enum_list commas enum_expression

  623 optional_public_or_private_alias: %empty
  624                                 | "private"
  625                                 | "public"

  626 $@45: %empty

  627 single_alias: optional_public_or_private_alias "name" $@45 '=' type_declaration

  628 alias_declaration: "typedef" single_alias SEMICOLON

  629 optional_public_or_private_enum: %empty
  630                                | "private"
  631                                | "public"

  632 enum_name: "name"

  633 optional_enum_basic_type_declaration: %empty
  634                                     | ':' enum_basic_type_declaration

  635 optional_commas: %empty
  636                | commas

  637 emit_commas: "new line, comma"
  638            | emit_commas "new line, comma"

  639 optional_emit_commas: %empty
  640                     | emit_commas

  641 $@46: %empty

  642 $@47: %empty

  643 $@48: %empty

  644 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas $@48 '}'

  645 optional_structure_parent: %empty
  646                          | ':' name_in_namespace

  647 optional_sealed: %empty
  648                | "sealed"

  649 structure_name: optional_sealed "name" optional_structure_parent

  650 class_or_struct: "class"
  651                | "struct"
  652                | "template" "class"
  653                | "template" "struct"

  654 optional_public_or_private_structure: %empty
  655                                     | "private"
  656                                     | "public"

  657 optional_struct_variable_declaration_list: ';'
  658                                          | '{' struct_variable_declaration_list '}'

  659 $@49: %empty

  660 $@50: %empty

  661 $@51: %empty

  662 structure_declaration: optional_annotation_list_with_emit_semis $@49 class_or_struct optional_public_or_private_structure $@50 structure_name optional_emit_semis $@51 optional_struct_variable_declaration_list

  663 variable_name_with_pos_list: "name"
  664                            | "$i" '(' expr ')'
  665                            | "name" "aka" "name"
  666                            | variable_name_with_pos_list ',' "name"
  667                            | variable_name_with_pos_list ',' "name" "aka" "name"

  668 basic_type_declaration: "bool"
  669                       | "string"
  670                       | "int"
  671                       | "int8"
  672                       | "int16"
  673                       | "int64"
  674                       | "int2"
  675                       | "int3"
  676                       | "int4"
  677                       | "uint"
  678                       | "uint8"
  679                       | "uint16"
  680                       | "uint64"
  681                       | "uint2"
  682                       | "uint3"
  683                       | "uint4"
  684                       | "float"
  685                       | "float2"
  686                       | "float3"
  687                       | "float4"
  688                       | "void"
  689                       | "range"
  690                       | "urange"
  691                       | "range64"
  692                       | "urange64"
  693                       | "double"
  694                       | "bitfield"

  695 enum_basic_type_declaration: "int"
  696                            | "int8"
  697                            | "int16"
  698                            | "uint"
  699                            | "uint8"
  700                            | "uint16"
  701                            | "int64"
  702                            | "uint64"

  703 structure_type_declaration: name_in_namespace

  704 auto_type_declaration: "auto"
  705                      | "auto" '(' "name" ')'
  706                      | "$t" '(' expr ')'

  707 bitfield_bits: "name"
  708              | bitfield_bits ';' "name"

  709 bitfield_alias_bits: %empty
  710                    | "name"
  711                    | "name" '=' expr
  712                    | bitfield_alias_bits commas "name"
  713                    | bitfield_alias_bits commas "name" '=' expr

  714 $@52: %empty

  715 $@53: %empty

  716 bitfield_type_declaration: "bitfield" '<' $@52 bitfield_bits '>' $@53

  717 c_or_s: COMMA
  718       | SEMICOLON

  719 table_type_pair: type_declaration
  720                | type_declaration c_or_s type_declaration

  721 dim_list: '[' expr ']'
  722         | '[' ']'
  723         | dim_list '[' expr ']'
  724         | dim_list '[' ']'

  725 type_declaration_no_options: type_declaration_no_options_no_dim
  726                            | type_declaration_no_options_no_dim dim_list

  727 type_declaration_no_options_no_dim: basic_type_declaration
  728                                   | auto_type_declaration
  729                                   | bitfield_type_declaration
  730                                   | structure_type_declaration

  731 $@54: %empty

  732 $@55: %empty

  733 type_declaration_no_options_no_dim: "type" '<' $@54 type_declaration '>' $@55
  734                                   | "typedecl" '(' expr ')'
  735                                   | '$' name_in_namespace '(' optional_expr_list ')'

  736 $@56: %empty

  737 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@56 type_declaration_no_options_list '>' '(' optional_expr_list ')'
  738                                   | type_declaration_no_options '-' '[' ']'
  739                                   | type_declaration_no_options "explicit"
  740                                   | type_declaration_no_options "const"
  741                                   | type_declaration_no_options '-' "const"
  742                                   | type_declaration_no_options '&'
  743                                   | type_declaration_no_options '-' '&'
  744                                   | type_declaration_no_options '#'
  745                                   | type_declaration_no_options "implicit"
  746                                   | type_declaration_no_options '-' '#'
  747                                   | type_declaration_no_options "==" "const"
  748                                   | type_declaration_no_options "==" '&'
  749                                   | type_declaration_no_options '?'

  750 $@57: %empty

  751 $@58: %empty

  752 type_declaration_no_options_no_dim: "smart_ptr" '<' $@57 type_declaration '>' $@58
  753                                   | type_declaration_no_options "??"

  754 $@59: %empty

  755 $@60: %empty

  756 type_declaration_no_options_no_dim: "array" '<' $@59 type_declaration '>' $@60

  757 $@61: %empty

  758 $@62: %empty

  759 type_declaration_no_options_no_dim: "table" '<' $@61 table_type_pair '>' $@62

  760 $@63: %empty

  761 $@64: %empty

  762 type_declaration_no_options_no_dim: "iterator" '<' $@63 type_declaration '>' $@64
  763                                   | "block"

  764 $@65: %empty

  765 $@66: %empty

  766 type_declaration_no_options_no_dim: "block" '<' $@65 type_declaration '>' $@66

  767 $@67: %empty

  768 $@68: %empty

  769 type_declaration_no_options_no_dim: "block" '<' $@67 optional_function_argument_list optional_function_type '>' $@68
  770                                   | "function"

  771 $@69: %empty

  772 $@70: %empty

  773 type_declaration_no_options_no_dim: "function" '<' $@69 type_declaration '>' $@70

  774 $@71: %empty

  775 $@72: %empty

  776 type_declaration_no_options_no_dim: "function" '<' $@71 optional_function_argument_list optional_function_type '>' $@72
  777                                   | "lambda"

  778 $@73: %empty

  779 $@74: %empty

  780 type_declaration_no_options_no_dim: "lambda" '<' $@73 type_declaration '>' $@74

  781 $@75: %empty

  782 $@76: %empty

  783 type_declaration_no_options_no_dim: "lambda" '<' $@75 optional_function_argument_list optional_function_type '>' $@76

  784 $@77: %empty

  785 $@78: %empty

  786 type_declaration_no_options_no_dim: "tuple" '<' $@77 tuple_type_list '>' $@78

  787 $@79: %empty

  788 $@80: %empty

  789 type_declaration_no_options_no_dim: "variant" '<' $@79 variant_type_list '>' $@80

  790 type_declaration: type_declaration_no_options
  791                 | type_declaration '|' type_declaration_no_options
  792                 | type_declaration '|' '#'

  793 $@81: %empty

  794 $@82: %empty

  795 $@83: %empty

  796 $@84: %empty

  797 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 tuple_alias_type_list optional_semis $@84 '}'

  798 $@85: %empty

  799 $@86: %empty

  800 $@87: %empty

  801 $@88: %empty

  802 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 '{' $@87 variant_alias_type_list optional_semis $@88 '}'

  803 $@89: %empty

  804 $@90: %empty

  805 $@91: %empty

  806 $@92: %empty

  807 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias "name" optional_emit_commas $@90 '{' $@91 bitfield_alias_bits optional_commas $@92 '}'

  808 make_decl: make_struct_decl
  809          | make_dim_decl
  810          | make_table_decl
  811          | array_comprehension
  812          | make_tuple_call

  813 make_struct_fields: "name" copy_or_move expr
  814                   | "name" ":=" expr
  815                   | make_struct_fields ',' "name" copy_or_move expr
  816                   | make_struct_fields ',' "name" ":=" expr
  817                   | "$f" '(' expr ')' copy_or_move expr
  818                   | "$f" '(' expr ')' ":=" expr
  819                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  820                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  821 make_variant_dim: %empty
  822                 | make_struct_fields

  823 make_struct_single: make_struct_fields optional_comma

  824 make_struct_dim_list: '(' make_struct_fields ')'
  825                     | make_struct_dim_list ',' '(' make_struct_fields ')'

  826 make_struct_dim_decl: make_struct_fields
  827                     | make_struct_dim_list optional_comma

  828 optional_make_struct_dim_decl: make_struct_dim_decl
  829                              | %empty

  830 use_initializer: %empty
  831                | "uninitialized"

  832 $@93: %empty

  833 $@94: %empty

  834 make_struct_decl: "struct" '<' $@93 type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')'

  835 $@95: %empty

  836 $@96: %empty

  837 make_struct_decl: "class" '<' $@95 type_declaration_no_options '>' $@96 '(' use_initializer optional_make_struct_dim_decl ')'

  838 $@97: %empty

  839 $@98: %empty

  840 make_struct_decl: "variant" '<' $@97 variant_type_list '>' $@98 '(' use_initializer make_variant_dim ')'

  841 $@99: %empty

  842 $@100: %empty

  843 make_struct_decl: "default" '<' $@99 type_declaration_no_options '>' $@100 use_initializer

  844 make_map_tuple: expr "=>" expr
  845               | expr

  846 make_tuple_call: "tuple" '(' expr_list optional_comma ')'

  847 $@101: %empty

  848 $@102: %empty

  849 make_tuple_call: "tuple" '<' $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

  850 make_dim_decl: '[' optional_expr_list ']'

  851 $@103: %empty

  852 $@104: %empty

  853 make_dim_decl: "array" "struct" '<' $@103 type_declaration_no_options '>' $@104 '(' use_initializer optional_make_struct_dim_decl ')'

  854 $@105: %empty

  855 $@106: %empty

  856 make_dim_decl: "array" "tuple" '<' $@105 tuple_type_list '>' $@106 '(' use_initializer optional_make_struct_dim_decl ')'

  857 $@107: %empty

  858 $@108: %empty

  859 make_dim_decl: "array" "variant" '<' $@107 variant_type_list '>' $@108 '(' make_variant_dim ')'
  860              | "array" '(' expr_list optional_comma ')'

  861 $@109: %empty

  862 $@110: %empty

  863 make_dim_decl: "array" '<' $@109 type_declaration_no_options '>' $@110 '(' optional_expr_list ')'
  864              | "fixed_array" '(' expr_list optional_comma ')'

  865 $@111: %empty

  866 $@112: %empty

  867 make_dim_decl: "fixed_array" '<' $@111 type_declaration_no_options '>' $@112 '(' expr_list optional_comma ')'

  868 expr_map_tuple_list: make_map_tuple
  869                    | expr_map_tuple_list ',' make_map_tuple

  870 $@113: %empty

  871 make_table_decl: '{' $@113 optional_emit_semis optional_expr_map_tuple_list '}'
  872                | "table" '(' expr_map_tuple_list optional_comma ')'
  873                | "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  874                | "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

  875 array_comprehension_where: %empty
  876                          | ';' "where" expr

  877 optional_comma: %empty
  878               | ','

  879 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  880                    | '[' "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  881                    | '{' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 27 146 164 440
    '#' (35) 744 746 792
    '$' (36) 24 359 735 737
    '%' (37) 47 51 184 452
    '&' (38) 192 362 459 577 587 742 743 748
    '(' (40) 74 99 100 102 104 107 109 112 114 134 144 150 159 160 312 313 314 315 334 335 351 352 353 366 370 400 401 402 403 405 415 416 417 418 419 423 424 425 426 427 428 429 470 471 481 482 512 513 514 516 517 518 519 520 522 523 524 525 526 527 528 529 530 531 555 589 664 705 706 734 735 737 817 818 819 820 824 825 834 837 840 846 849 853 856 859 860 863 864 867 872 873 874 879 880 881
    ')' (41) 74 99 100 102 104 107 109 112 114 134 144 150 159 160 312 313 314 315 334 335 351 352 353 366 370 400 401 402 403 405 415 416 417 418 419 423 424 425 426 427 428 429 470 471 481 482 512 513 514 516 517 518 519 520 522 523 524 525 526 527 528 529 530 531 555 589 664 705 706 734 735 737 817 818 819 820 824 825 834 837 840 846 849 853 856 859 860 863 864 867 872 873 874 879 880 881
    '*' (42) 182 450 480
    '+' (43) 180 442 448
    ',' (44) 16 60 105 106 107 123 136 153 333 355 368 401 560 591 592 594 666 667 815 816 819 820 825 869 878
    '-' (45) 181 443 449 738 741 743 746
    '.' (46) 52 209 211 212 213 214 215 216 217 218 219 220 221 222 223 413 414 415 416 417 418 419 422 473 475 477 524 526 527
    '/' (47) 53 183 451
    ':' (58) 39 62 63 162 334 485 562 568 579 580 598 599 601 602 634 646
    ';' (59) 18 558 559 657 708 876 879 880 881
    '<' (60) 185 309 341 344 347 350 352 353 409 412 453 488 494 499 513 514 515 716 733 737 752 756 759 762 766 769 773 776 780 783 786 789 834 837 840 843 849 853 856 859 863 867 873 874
    '=' (61) 115 127 128 129 130 131 132 134 363 382 574 583 617 627 711 713
    '>' (62) 186 309 341 344 347 350 352 353 409 412 454 488 494 499 513 514 515 716 733 737 752 756 759 762 766 769 773 776 780 783 786 789 834 837 840 843 849 853 856 859 863 867 873 874
    '?' (63) 232 233 485 496 499 500 529 749
    '@' (64) 137 138 360 361 406 409 412 531
    '[' (91) 155 157 207 400 401 417 472 473 721 722 723 724 738 850 879 880
    ']' (93) 155 157 207 208 400 401 417 472 473 474 475 721 722 723 724 738 850 879 880
    '^' (94) 194 461
    '{' (123) 90 95 269 272 338 373 613 644 658 797 802 807 871 881
    '|' (124) 193 460 791 792
    '}' (125) 90 95 269 272 338 373 613 644 658 797 802 807 871 881
    '~' (126) 165 441
    error (256) 295 422
    "lexer error" (258)
    "capture" (259) 370
    "struct" (260) 651 653 834 853
    "class" (261) 650 652 837
    "let" (262) 325 328
    "def" (263) 259 550 552
    "while" (264) 112
    "if" (265) 75 100
    "static_if" (266) 76
    "else" (267) 73 78
    "for" (268) 109 879 880 881
    "recover" (269) 324
    "true" (270) 120 131 436
    "false" (271) 121 132 437
    "new" (272) 311 312 313 314 315 316
    "typeinfo" (273) 351 352 353
    "type" (274) 125 350 488 494 499 733
    "in" (275) 109 126 879 880 881
    "is" (276) 228 230 488 489 490 530
    "as" (277) 55 229 231 232 233 491 494 495 496 499 500 528 529
    "elif" (278) 66
    "static_elif" (279) 67
    "array" (280) 756 853 856 859 860 863
    "return" (281) 319 320 321
    "null" (282) 430
    "break" (283) 317
    "try" (284) 324
    "options" (285) 48
    "table" (286) 759 872 873 874
    "expect" (287) 58
    "const" (288) 538 740 741 747
    "require" (289) 49 140
    "operator" (290) 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233
    "enum" (291) 644
    "finally" (292) 269
    "delete" (293) 226 305 306
    "deref" (294) 481
    "typedef" (295) 628
    "typedecl" (296) 734
    "with" (297) 114
    "aka" (298) 103 106 590 592 665 667
    "assume" (299) 115
    "cast" (300) 341
    "override" (301) 535
    "abstract" (302) 550
    "upcast" (303) 344
    "iterator" (304) 762 880
    "var" (305) 326 329
    "addr" (306) 482
    "continue" (307) 318
    "where" (308) 876
    "pass" (309) 292
    "reinterpret" (310) 347
    "module" (311) 28
    "public" (312) 22 57 262 540 608 625 631 656
    "label" (313) 63 64
    "goto" (314) 64 65
    "implicit" (315) 745
    "explicit" (316) 306 739
    "shared" (317) 605
    "private" (318) 23 141 261 541 607 624 630 655
    "smart_ptr" (319) 752
    "unsafe" (320) 110 512
    "inscope" (321) 27 330
    "static" (322) 543
    "fixed_array" (323) 864 867
    "default" (324) 843
    "uninitialized" (325) 315 424 426 831
    "bool" (326) 234 668
    "void" (327) 688
    "string" (328) 235 669
    "auto" (329) 704 705
    "int" (330) 236 670 695
    "int2" (331) 237 674
    "int3" (332) 238 675
    "int4" (333) 239 676
    "uint" (334) 240 677 698
    "bitfield" (335) 694 716 807
    "uint2" (336) 241 681
    "uint3" (337) 242 682
    "uint4" (338) 243 683
    "float" (339) 244 684
    "float2" (340) 245 685
    "float3" (341) 246 686
    "float4" (342) 247 687
    "range" (343) 248 689
    "urange" (344) 249 690
    "range64" (345) 250 691
    "urange64" (346) 251 692
    "block" (347) 763 766 769
    "int64" (348) 252 673 701
    "uint64" (349) 253 680 702
    "double" (350) 254 693
    "function" (351) 770 773 776
    "lambda" (352) 777 780 783
    "int8" (353) 255 671 696
    "uint8" (354) 256 678 699
    "int16" (355) 257 672 697
    "uint16" (356) 258 679 700
    "tuple" (357) 786 797 846 849 856
    "variant" (358) 789 802 840 859
    "generator" (359) 513 514 515
    "yield" (360) 322 323
    "sealed" (361) 536 648
    "template" (362) 142 652 653
    "+=" (363) 166 213 391
    "-=" (364) 167 214 392
    "/=" (365) 169 216 394
    "*=" (366) 168 215 393
    "%=" (367) 170 217 395
    "&=" (368) 171 218 385
    "|=" (369) 172 219 386
    "^=" (370) 173 220 387
    "<<" (371) 199 444
    ">>" (372) 200 445
    "++" (373) 195 197 466 468
    "--" (374) 196 198 467 469
    "<=" (375) 190 457
    "<<=" (376) 201 396
    ">>=" (377) 202 397
    ">=" (378) 191 458
    "==" (379) 188 455 747 748
    "!=" (380) 189 456
    "->" (381) 402 403
    "<-" (382) 321 323 358 364 383 575 584
    "??" (383) 227 484 753
    "?." (384) 210 224 476 477 525 527
    "?[" (385) 208 474 475
    "<|" (386) 508
    "|>" (387) 151 509 510
    ":=" (388) 212 225 365 384 585 814 816 818 820
    "<<<" (389) 203 446
    ">>>" (390) 204 447
    "<<<=" (391) 205 398
    ">>>=" (392) 206 399
    "=>" (393) 357 358 844
    "::" (394) 303 304
    "&&" (395) 147 177 462
    "||" (396) 148 178 463
    "^^" (397) 149 179 464
    "&&=" (398) 174 221 388
    "||=" (399) 175 222 389
    "^^=" (400) 176 223 390
    ".." (401) 187 465
    "$$" (402) 516
    "$i" (403) 102 405 517 589 664
    "$v" (404) 518
    "$b" (405) 519
    "$a" (406) 520 555
    "$t" (407) 706
    "$c" (408) 522 523 531
    "$f" (409) 524 525 526 527 528 529 530 817 818 819 820
    "..." (410) 521
    "integer constant" <i> (411) 61 62 63 64 118 129 374
    "long integer constant" <i64> (412) 376
    "unsigned integer constant" <ui> (413) 375
    "unsigned long integer constant" <ui64> (414) 377
    "unsigned int8 constant" <ui> (415) 378
    "floating point constant" <fd> (416) 119 130 379
    "double constant" <d> (417) 380
    "name" <s> (418) 25 50 52 53 55 101 103 105 106 115 117 124 128 163 211 212 213 214 215 216 217 218 219 220 221 222 223 224 230 231 233 302 303 304 332 333 352 353 362 363 364 365 366 402 403 413 414 415 416 417 476 477 490 491 496 562 568 588 590 591 592 593 594 616 617 627 632 649 663 665 666 667 705 707 708 710 711 712 713 797 802 807 813 814 815 816
    "new line, comma" (419) 17 637 638
    "new line, semicolon" (420) 19 68 69 546
    "start of the string" (421) 33 34 43
    STRING_CHARACTER <ch> (422) 29 31 36 44 45
    STRING_CHARACTER_ESC (423) 30 32
    "end of the string" (424) 33 34 43
    "{" (425) 42
    "}" (426) 42
    "end of failed eader macro" (427)
    UNARY_MINUS (428)
    UNARY_PLUS (429)
    PRE_INC (430)
    PRE_DEC (431)
    LLPIPE (432)
    POST_INC (433)
    POST_DEC (434)
    DEREF (435)


Nonterminals, with rules where they appear

    $accept (208)
        on left: 0
    program (209)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    COMMA (210)
        on left: 16 17
        on right: 618 619 717
    SEMICOLON (211)
        on left: 18 19
        on right: 8 9 15 20 84 85 92 97 100 274 275 276 281 283 284 285 286 290 291 292 334 335 548 550 596 598 599 600 601 602 603 610 628 718
    top_level_reader_macro (212)
        on left: 20
        on right: 14
    optional_public_or_private_module <b> (213)
        on left: 21 22 23
        on right: 28
    module_name <s> (214)
        on left: 24 25
        on right: 28
    optional_not_required <b> (215)
        on left: 26 27
        on right: 28
    module_declaration (216)
        on left: 28
        on right: 2
    character_sequence <s> (217)
        on left: 29 30 31 32
        on right: 31 32 33 41
    string_constant <s> (218)
        on left: 33 34
        on right: 116 127
    format_string <s> (219)
        on left: 35 36
        on right: 36 39
    optional_format_string <s> (220)
        on left: 37 39
        on right: 42
    $@1 (221)
        on left: 38
        on right: 39
    string_builder_body <pExpression> (222)
        on left: 40 41 42
        on right: 41 42 43
    string_builder <pExpression> (223)
        on left: 43
        on right: 434
    reader_character_sequence (224)
        on left: 44 45
        on right: 45 47
    expr_reader <pExpression> (225)
        on left: 47
        on right: 20 433
    $@2 (226)
        on left: 46
        on right: 47
    options_declaration (227)
        on left: 48
        on right: 9
    require_declaration (228)
        on left: 49
        on right: 8
    require_module_name <s> (229)
        on left: 50 51 52 53
        on right: 51 52 53 54 55
    require_module (230)
        on left: 54 55
        on right: 49
    is_public_module <b> (231)
        on left: 56 57
        on right: 54 55
    expect_declaration (232)
        on left: 58
        on right: 7
    expect_list (233)
        on left: 59 60
        on right: 58 60
    expect_error (234)
        on left: 61 62
        on right: 59 60
    expression_label <pExpression> (235)
        on left: 63
        on right: 290
    expression_goto <pExpression> (236)
        on left: 64 65
        on right: 291
    elif_or_static_elif <b> (237)
        on left: 66 67
        on right: 74
    emit_semis (238)
        on left: 68 69
        on right: 69 71
    optional_emit_semis (239)
        on left: 70 71
        on right: 73 74 99 109 110 112 114 137 138 157 265 371 372 515 552 662 797 802 871
    expression_else <pExpression> (240)
        on left: 72 73 74
        on right: 74 99
    if_or_static_if <b> (241)
        on left: 75 76
        on right: 99
    expression_else_one_liner <pExpression> (242)
        on left: 77 78
        on right: 100
    expression_if_one_liner <pExpression> (243)
        on left: 79 80 81 82 83
        on right: 78 92 97 100
    semis (244)
        on left: 84 85
        on right: 85 87 567 573
    optional_semis (245)
        on left: 86 87
        on right: 797 802
    expression_if_block <pExpression> (246)
        on left: 90 92
        on right: 99
    $@3 (247)
        on left: 88
        on right: 90
    $@4 (248)
        on left: 89
        on right: 90
    $@5 (249)
        on left: 91
        on right: 92
    expression_else_block <pExpression> (250)
        on left: 95 97
        on right: 73 74
    $@6 (251)
        on left: 93
        on right: 95
    $@7 (252)
        on left: 94
        on right: 95
    $@8 (253)
        on left: 96
        on right: 97
    expression_if_then_else <pExpression> (254)
        on left: 99
        on right: 287
    $@9 (255)
        on left: 98
        on right: 99
    expression_if_then_else_oneliner <pExpression> (256)
        on left: 100
        on right: 288
    for_variable_name_with_pos_list <pNameWithPosList> (257)
        on left: 101 102 103 104 105 106 107
        on right: 105 106 107 109 879 880 881
    expression_for_loop <pExpression> (258)
        on left: 109
        on right: 282
    $@10 (259)
        on left: 108
        on right: 109
    expression_unsafe <pExpression> (260)
        on left: 110
        on right: 279
    expression_while_loop <pExpression> (261)
        on left: 112
        on right: 278
    $@11 (262)
        on left: 111
        on right: 112
    expression_with <pExpression> (263)
        on left: 114
        on right: 280
    $@12 (264)
        on left: 113
        on right: 114
    expression_with_alias <pExpression> (265)
        on left: 115
        on right: 281
    annotation_argument_value <aa> (266)
        on left: 116 117 118 119 120 121
        on right: 122 123
    annotation_argument_value_list <aaList> (267)
        on left: 122 123
        on right: 123 134
    annotation_argument_name <s> (268)
        on left: 124 125 126
        on right: 127 128 129 130 131 132 133 134
    annotation_argument <aa> (269)
        on left: 127 128 129 130 131 132 133 134
        on right: 135 136 137 138
    annotation_argument_list <aaList> (270)
        on left: 135 136
        on right: 48 136 144
    metadata_argument_list <aaList> (271)
        on left: 137 138
        on right: 138 533
    annotation_declaration_name <s> (272)
        on left: 139 140 141 142
        on right: 143 144
    annotation_declaration_basic <fa> (273)
        on left: 143 144
        on right: 145
    annotation_declaration <fa> (274)
        on left: 145 146 147 148 149 150 151
        on right: 146 147 148 149 150 151 152 153
    annotation_list <faList> (275)
        on left: 152 153
        on right: 153 155 157
    optional_annotation_list <faList> (276)
        on left: 154 155
        on right: 371 372
    optional_annotation_list_with_emit_semis <faList> (277)
        on left: 156 157
        on right: 259 550 552 644 662
    optional_function_argument_list <pVarDeclList> (278)
        on left: 158 159 160
        on right: 263 371 372 412 769 776 783
    optional_function_type <pTypeDecl> (279)
        on left: 161 162
        on right: 263 371 372 412 769 776 783
    function_name <s> (280)
        on left: 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258
        on right: 263
    global_function_declaration (281)
        on left: 259
        on right: 6
    optional_public_or_private_function <b> (282)
        on left: 260 261 262
        on right: 265
    function_declaration_header <pFuncDecl> (283)
        on left: 263
        on right: 265 550 552
    function_declaration <pFuncDecl> (284)
        on left: 265
        on right: 259
    $@13 (285)
        on left: 264
        on right: 265
    expression_block_finally <pExpression> (286)
        on left: 266 269
        on right: 90 95 272
    $@14 (287)
        on left: 267
        on right: 269
    $@15 (288)
        on left: 268
        on right: 269
    expression_block <pExpression> (289)
        on left: 272
        on right: 109 110 112 114 265 324 356 372 515 552
    $@16 (290)
        on left: 270
        on right: 272
    $@17 (291)
        on left: 271
        on right: 272
    expr_call_pipe <pExpression> (292)
        on left: 273
        on right: 511
    expression_any <pExpression> (293)
        on left: 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292
        on right: 294
    expressions <pExpression> (294)
        on left: 293 294 295
        on right: 90 95 269 272 294 295 373
    optional_expr_list <pExpression> (295)
        on left: 296 297
        on right: 735 737 850 863
    optional_expr_map_tuple_list <pExpression> (296)
        on left: 298 299
        on right: 871 873 874
    type_declaration_no_options_list <pTypeDeclList> (297)
        on left: 300 301
        on right: 301 737
    name_in_namespace <s> (298)
        on left: 302 303 304
        on right: 47 139 351 352 353 400 401 404 423 424 425 426 427 431 646 703 735 737
    expression_delete <pExpression> (299)
        on left: 305 306
        on right: 276
    new_type_declaration <pTypeDecl> (300)
        on left: 309 310
        on right: 311 312 313 314 315
    $@18 (301)
        on left: 307
        on right: 309
    $@19 (302)
        on left: 308
        on right: 309
    expr_new <pExpression> (303)
        on left: 311 312 313 314 315 316
        on right: 504
    expression_break <pExpression> (304)
        on left: 317
        on right: 82 283
    expression_continue <pExpression> (305)
        on left: 318
        on right: 83 284
    expression_return <pExpression> (306)
        on left: 319 320 321
        on right: 80 285
    expression_yield <pExpression> (307)
        on left: 322 323
        on right: 81 286
    expression_try_catch <pExpression> (308)
        on left: 324
        on right: 289
    kwd_let_var_or_nothing <b> (309)
        on left: 325 326 327
        on right: 553 554
    kwd_let <b> (310)
        on left: 328 329
        on right: 336 337 338 613 615
    optional_in_scope <b> (311)
        on left: 330 331
        on right: 336 337 338
    tuple_expansion <pNameList> (312)
        on left: 332 333
        on right: 104 107 333 334 335
    tuple_expansion_variable_declaration <pVarDecl> (313)
        on left: 334 335
        on right: 337
    expression_let <pExpression> (314)
        on left: 336 337 338
        on right: 277
    expr_cast <pExpression> (315)
        on left: 341 344 347
        on right: 503
    $@20 (316)
        on left: 339
        on right: 341
    $@21 (317)
        on left: 340
        on right: 341
    $@22 (318)
        on left: 342
        on right: 344
    $@23 (319)
        on left: 343
        on right: 344
    $@24 (320)
        on left: 345
        on right: 347
    $@25 (321)
        on left: 346
        on right: 347
    expr_type_decl <pExpression> (322)
        on left: 350
        on right: 502
    $@26 (323)
        on left: 348
        on right: 350
    $@27 (324)
        on left: 349
        on right: 350
    expr_type_info <pExpression> (325)
        on left: 351 352 353
        on right: 501
    expr_list <pExpression> (326)
        on left: 354 355
        on right: 109 297 313 355 401 403 416 419 427 429 470 523 846 860 864 867 879 880 881
    block_or_simple_block <pExpression> (327)
        on left: 356 357 358
        on right: 371
    block_or_lambda <i> (328)
        on left: 359 360 361
        on right: 371 372
    capture_entry <pCapt> (329)
        on left: 362 363 364 365 366
        on right: 367 368
    capture_list <pCaptList> (330)
        on left: 367 368
        on right: 368 370
    optional_capture_list <pCaptList> (331)
        on left: 369 370
        on right: 371 372 513 514 515
    expr_full_block <pExpression> (332)
        on left: 371
        on right: 507
    expr_full_block_assumed_piped <pExpression> (333)
        on left: 372 373
        on right: 273
    expr_numeric_const <pExpression> (334)
        on left: 374 375 376 377 378 379 380
        on right: 432
    expr_assign <pExpression> (335)
        on left: 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399
        on right: 275
    expr_named_call <pExpression> (336)
        on left: 400 401
        on right: 506
    expr_method_call <pExpression> (337)
        on left: 402 403
        on right: 505
    func_addr_name <pExpression> (338)
        on left: 404 405
        on right: 406 409 412
    func_addr_expr <pExpression> (339)
        on left: 406 409 412
        on right: 478
    $@28 (340)
        on left: 407
        on right: 409
    $@29 (341)
        on left: 408
        on right: 409
    $@30 (342)
        on left: 410
        on right: 412
    $@31 (343)
        on left: 411
        on right: 412
    expr_field <pExpression> (344)
        on left: 413 414 415 416 417 418 419 422
        on right: 438
    $@32 (345)
        on left: 420
        on right: 422
    $@33 (346)
        on left: 421
        on right: 422
    expr_call <pExpression> (347)
        on left: 423 424 425 426 427 428 429
        on right: 273 479
    expr <pExpression> (348)
        on left: 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 488 489 490 491 494 495 496 499 500 501 502 503 504 505 506 507 508 509 510 511 512
        on right
    $@34 (349)
        on left: 486
        on right: 488
    $@35 (350)
        on left: 487
        on right: 488
    $@36 (351)
        on left: 492
        on right: 494
    $@37 (352)
        on left: 493
        on right: 494
    $@38 (353)
        on left: 497
        on right: 499
    $@39 (354)
        on left: 498
        on right: 499
    expr_generator <pExpression> (355)
        on left: 513 514 515
        on right: 483
    expr_mtag <pExpression> (356)
        on left: 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531
        on right: 439
    optional_field_annotation <aaList> (357)
        on left: 532 533
        on right: 544 553 554 612 615
    optional_override <i> (358)
        on left: 534 535 536
        on right: 544 552
    optional_constant <b> (359)
        on left: 537 538
        on right: 550 552
    optional_public_or_private_member_variable <b> (360)
        on left: 539 540 541
        on right: 544 550 552
    optional_static_member_variable <b> (361)
        on left: 542 543
        on right: 544 552
    structure_variable_declaration <pVarDecl> (362)
        on left: 544
        on right: 548
    struct_variable_declaration_list <pVarDeclList> (363)
        on left: 545 546 548 550 552
        on right: 546 548 550 552 658
    $@40 (364)
        on left: 547
        on right: 548
    $@41 (365)
        on left: 549
        on right: 550
    $@42 (366)
        on left: 551
        on right: 552
    function_argument_declaration_no_type <pVarDecl> (367)
        on left: 553
        on right: 556 558
    function_argument_declaration_type <pVarDecl> (368)
        on left: 554 555
        on right: 557 559 560
    function_argument_list <pVarDeclList> (369)
        on left: 556 557 558 559 560
        on right: 160 558 559 560
    tuple_type <pVarDecl> (370)
        on left: 561 562
        on right: 563 564 566 567
    tuple_type_list <pVarDeclList> (371)
        on left: 563 564
        on right: 564 786 849 856
    tuple_alias_type_list <pVarDeclList> (372)
        on left: 565 566 567
        on right: 567 797
    variant_type <pVarDecl> (373)
        on left: 568
        on right: 569 570 572 573
    variant_type_list <pVarDeclList> (374)
        on left: 569 570
        on right: 570 789 840 859
    variant_alias_type_list <pVarDeclList> (375)
        on left: 571 572 573
        on right: 573 802
    copy_or_move <b> (376)
        on left: 574 575
        on right: 578 580 813 815 817 819
    variable_declaration_no_type <pVarDecl> (377)
        on left: 576 577 578
        on right: 553 582
    variable_declaration_type <pVarDecl> (378)
        on left: 579 580
        on right: 554 581
    variable_declaration <pVarDecl> (379)
        on left: 581 582
        on right: 544
    copy_or_move_or_clone <i> (380)
        on left: 583 584 585
        on right: 334 335 599 600 602 603
    optional_ref <b> (381)
        on left: 586 587
        on right: 335 600 603
    let_variable_name_with_pos_list <pNameWithPosList> (382)
        on left: 588 589 590 591 592
        on right: 591 592 598 599 600
    global_let_variable_name_with_pos_list <pNameWithPosList> (383)
        on left: 593 594
        on right: 594 601 602 603
    variable_declaration_list <pVarDeclList> (384)
        on left: 595 596 597
        on right: 338 596 597
    let_variable_declaration <pVarDecl> (385)
        on left: 598 599 600
        on right: 336 597 612
    global_let_variable_declaration <pVarDecl> (386)
        on left: 601 602 603
        on right: 615
    optional_shared <b> (387)
        on left: 604 605
        on right: 28 613 615
    optional_public_or_private_variable <b> (388)
        on left: 606 607 608
        on right: 613 615
    global_variable_declaration_list <pVarDeclList> (389)
        on left: 609 610 612
        on right: 610 612 613
    $@43 (390)
        on left: 611
        on right: 612
    global_let (391)
        on left: 613 615
        on right: 5
    $@44 (392)
        on left: 614
        on right: 615
    enum_expression <pEnumPair> (393)
        on left: 616 617
        on right: 621 622
    commas (394)
        on left: 618 619
        on right: 619 622 636 712 713
    enum_list <pEnum> (395)
        on left: 620 621 622
        on right: 622 644
    optional_public_or_private_alias <b> (396)
        on left: 623 624 625
        on right: 627 797 802 807
    single_alias (397)
        on left: 627
        on right: 628
    $@45 (398)
        on left: 626
        on right: 627
    alias_declaration (399)
        on left: 628
        on right: 10
    optional_public_or_private_enum <b> (400)
        on left: 629 630 631
        on right: 644
    enum_name <pEnum> (401)
        on left: 632
        on right: 644
    optional_enum_basic_type_declaration <type> (402)
        on left: 633 634
        on right: 644
    optional_commas (403)
        on left: 635 636
        on right: 644 807
    emit_commas (404)
        on left: 637 638
        on right: 638 640
    optional_emit_commas (405)
        on left: 639 640
        on right: 644 807
    enum_declaration (406)
        on left: 644
        on right: 4
    $@46 (407)
        on left: 641
        on right: 644
    $@47 (408)
        on left: 642
        on right: 644
    $@48 (409)
        on left: 643
        on right: 644
    optional_structure_parent <s> (410)
        on left: 645 646
        on right: 649
    optional_sealed <b> (411)
        on left: 647 648
        on right: 649
    structure_name <pStructure> (412)
        on left: 649
        on right: 662
    class_or_struct <i> (413)
        on left: 650 651 652 653
        on right: 662
    optional_public_or_private_structure <b> (414)
        on left: 654 655 656
        on right: 662
    optional_struct_variable_declaration_list <pVarDeclList> (415)
        on left: 657 658
        on right: 662
    structure_declaration (416)
        on left: 662
        on right: 3
    $@49 (417)
        on left: 659
        on right: 662
    $@50 (418)
        on left: 660
        on right: 662
    $@51 (419)
        on left: 661
        on right: 662
    variable_name_with_pos_list <pNameWithPosList> (420)
        on left: 663 664 665 666 667
        on right: 576 577 578 579 580 666 667
    basic_type_declaration <type> (421)
        on left: 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694
        on right: 418 419 428 429 489 495 500 510 727
    enum_basic_type_declaration <type> (422)
        on left: 695 696 697 698 699 700 701 702
        on right: 634
    structure_type_declaration <pTypeDecl> (423)
        on left: 703
        on right: 310 730
    auto_type_declaration <pTypeDecl> (424)
        on left: 704 705 706
        on right: 728
    bitfield_bits <pNameList> (425)
        on left: 707 708
        on right: 708 716
    bitfield_alias_bits <pNameExprList> (426)
        on left: 709 710 711 712 713
        on right: 712 713 807
    bitfield_type_declaration <pTypeDecl> (427)
        on left: 716
        on right: 729
    $@52 (428)
        on left: 714
        on right: 716
    $@53 (429)
        on left: 715
        on right: 716
    c_or_s (430)
        on left: 717 718
        on right: 301 353 564 570 720 874
    table_type_pair <aTypePair> (431)
        on left: 719 720
        on right: 759
    dim_list <pTypeDecl> (432)
        on left: 721 722 723 724
        on right: 723 724 726
    type_declaration_no_options <pTypeDecl> (433)
        on left: 725 726
        on right: 334 341 344 347 409 488 513 514 515 598 599 601 602 738 739 740 741 742 743 744 745 746 747 748 749 753 790 791 834 837 843 853 863 867 873 874
    type_declaration_no_options_no_dim <pTypeDecl> (434)
        on left: 727 728 729 730 733 734 735 737 738 739 740 741 742 743 744 745 746 747 748 749 752 753 756 759 762 763 766 769 770 773 776 777 780 783 786 789
        on right: 725 726
    $@54 (435)
        on left: 731
        on right: 733
    $@55 (436)
        on left: 732
        on right: 733
    $@56 (437)
        on left: 736
        on right: 737
    $@57 (438)
        on left: 750
        on right: 752
    $@58 (439)
        on left: 751
        on right: 752
    $@59 (440)
        on left: 754
        on right: 756
    $@60 (441)
        on left: 755
        on right: 756
    $@61 (442)
        on left: 757
        on right: 759
    $@62 (443)
        on left: 758
        on right: 759
    $@63 (444)
        on left: 760
        on right: 762
    $@64 (445)
        on left: 761
        on right: 762
    $@65 (446)
        on left: 764
        on right: 766
    $@66 (447)
        on left: 765
        on right: 766
    $@67 (448)
        on left: 767
        on right: 769
    $@68 (449)
        on left: 768
        on right: 769
    $@69 (450)
        on left: 771
        on right: 773
    $@70 (451)
        on left: 772
        on right: 773
    $@71 (452)
        on left: 774
        on right: 776
    $@72 (453)
        on left: 775
        on right: 776
    $@73 (454)
        on left: 778
        on right: 780
    $@74 (455)
        on left: 779
        on right: 780
    $@75 (456)
        on left: 781
        on right: 783
    $@76 (457)
        on left: 782
        on right: 783
    $@77 (458)
        on left: 784
        on right: 786
    $@78 (459)
        on left: 785
        on right: 786
    $@79 (460)
        on left: 787
        on right: 789
    $@80 (461)
        on left: 788
        on right: 789
    type_declaration <pTypeDecl> (462)
        on left: 790 791 792
        on right: 162 300 301 309 350 494 499 561 562 568 579 580 627 719 720 733 752 756 762 766 773 780 791 792
    tuple_alias_declaration (463)
        on left: 797
        on right: 12
    $@81 (464)
        on left: 793
        on right: 797
    $@82 (465)
        on left: 794
        on right: 797
    $@83 (466)
        on left: 795
        on right: 797
    $@84 (467)
        on left: 796
        on right: 797
    variant_alias_declaration (468)
        on left: 802
        on right: 11
    $@85 (469)
        on left: 798
        on right: 802
    $@86 (470)
        on left: 799
        on right: 802
    $@87 (471)
        on left: 800
        on right: 802
    $@88 (472)
        on left: 801
        on right: 802
    bitfield_alias_declaration (473)
        on left: 807
        on right: 13
    $@89 (474)
        on left: 803
        on right: 807
    $@90 (475)
        on left: 804
        on right: 807
    $@91 (476)
        on left: 805
        on right: 807
    $@92 (477)
        on left: 806
        on right: 807
    make_decl <pExpression> (478)
        on left: 808 809 810 811 812
        on right: 316 435
    make_struct_fields <pMakeStruct> (479)
        on left: 813 814 815 816 817 818 819 820
        on right: 400 401 417 815 816 819 820 822 823 824 825 826
    make_variant_dim <pExpression> (480)
        on left: 821 822
        on right: 840 859
    make_struct_single <pExpression> (481)
        on left: 823
        on right: 314 315 425 426 471
    make_struct_dim_list <pExpression> (482)
        on left: 824 825
        on right: 825 827
    make_struct_dim_decl <pExpression> (483)
        on left: 826 827
        on right: 828
    optional_make_struct_dim_decl <pExpression> (484)
        on left: 828 829
        on right: 834 837 849 853 856
    use_initializer <b> (485)
        on left: 830 831
        on right: 312 834 837 840 843 849 853 856
    make_struct_decl <pExpression> (486)
        on left: 834 837 840 843
        on right: 808
    $@93 (487)
        on left: 832
        on right: 834
    $@94 (488)
        on left: 833
        on right: 834
    $@95 (489)
        on left: 835
        on right: 837
    $@96 (490)
        on left: 836
        on right: 837
    $@97 (491)
        on left: 838
        on right: 840
    $@98 (492)
        on left: 839
        on right: 840
    $@99 (493)
        on left: 841
        on right: 843
    $@100 (494)
        on left: 842
        on right: 843
    make_map_tuple <pExpression> (495)
        on left: 844 845
        on right: 868 869 881
    make_tuple_call <pExpression> (496)
        on left: 846 849
        on right: 812
    $@101 (497)
        on left: 847
        on right: 849
    $@102 (498)
        on left: 848
        on right: 849
    make_dim_decl <pExpression> (499)
        on left: 850 853 856 859 860 863 864 867
        on right: 809
    $@103 (500)
        on left: 851
        on right: 853
    $@104 (501)
        on left: 852
        on right: 853
    $@105 (502)
        on left: 854
        on right: 856
    $@106 (503)
        on left: 855
        on right: 856
    $@107 (504)
        on left: 857
        on right: 859
    $@108 (505)
        on left: 858
        on right: 859
    $@109 (506)
        on left: 861
        on right: 863
    $@110 (507)
        on left: 862
        on right: 863
    $@111 (508)
        on left: 865
        on right: 867
    $@112 (509)
        on left: 866
        on right: 867
    expr_map_tuple_list <pExpression> (510)
        on left: 868 869
        on right: 299 869 872
    make_table_decl <pExpression> (511)
        on left: 871 872 873 874
        on right: 810
    $@113 (512)
        on left: 870
        on right: 871
    array_comprehension_where <pExpression> (513)
        on left: 875 876
        on right: 879 880 881
    optional_comma <b> (514)
        on left: 877 878
        on right: 297 299 470 823 827 846 860 864 867 872
    array_comprehension <pExpression> (515)
        on left: 879 880 881
        on right: 811


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration SEMICOLON
    9        | program . options_declaration SEMICOLON
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . tuple_alias_declaration
   13        | program . bitfield_alias_declaration
   14        | program . top_level_reader_macro
   15        | program . SEMICOLON

    $end                   shift, and go to state 2
    "let"                  shift, and go to state 3
    "options"              shift, and go to state 4
    "expect"               shift, and go to state 5
    "require"              shift, and go to state 6
    "typedef"              shift, and go to state 7
    "var"                  shift, and go to state 8
    "module"               shift, and go to state 9
    "bitfield"             shift, and go to state 10
    "tuple"                shift, and go to state 11
    "variant"              shift, and go to state 12
    "new line, semicolon"  shift, and go to state 13
    '%'                    shift, and go to state 14
    '['                    shift, and go to state 15
    ';'                    shift, and go to state 16

    $default  reduce using rule 156 (optional_annotation_list_with_emit_semis)

    SEMICOLON                                 go to state 17
    top_level_reader_macro                    go to state 18
    module_declaration                        go to state 19
    expr_reader                               go to state 20
    options_declaration                       go to state 21
    require_declaration                       go to state 22
    expect_declaration                        go to state 23
    optional_annotation_list_with_emit_semis  go to state 24
    global_function_declaration               go to state 25
    kwd_let                                   go to state 26
    global_let                                go to state 27
    alias_declaration                         go to state 28
    enum_declaration                          go to state 29
    structure_declaration                     go to state 30
    tuple_alias_declaration                   go to state 31
    variant_alias_declaration                 go to state 32
    bitfield_alias_declaration                go to state 33


State 2

    0 $accept: program $end .

    $default  accept


State 3

  328 kwd_let: "let" .

    $default  reduce using rule 328 (kwd_let)


State 4

   48 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 38
    annotation_argument_list  go to state 39


State 5

   58 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 40

    expect_list   go to state 41
    expect_error  go to state 42


State 6

   49 require_declaration: "require" . require_module

    "name"  shift, and go to state 43
    '%'     shift, and go to state 44

    require_module_name  go to state 45
    require_module       go to state 46


State 7

  628 alias_declaration: "typedef" . single_alias SEMICOLON

    "public"   shift, and go to state 47
    "private"  shift, and go to state 48

    $default  reduce using rule 623 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 49
    single_alias                      go to state 50


State 8

  329 kwd_let: "var" .

    $default  reduce using rule 329 (kwd_let)


State 9

   28 module_declaration: "module" . module_name optional_shared optional_public_or_private_module optional_not_required

    "name"  shift, and go to state 51
    '$'     shift, and go to state 52

    module_name  go to state 53


State 10

  807 bitfield_alias_declaration: "bitfield" . $@89 optional_public_or_private_alias "name" optional_emit_commas $@90 '{' $@91 bitfield_alias_bits optional_commas $@92 '}'

    $default  reduce using rule 803 ($@89)

    $@89  go to state 54


State 11

  797 tuple_alias_declaration: "tuple" . $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 tuple_alias_type_list optional_semis $@84 '}'

    $default  reduce using rule 793 ($@81)

    $@81  go to state 55


State 12

  802 variant_alias_declaration: "variant" . $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 '{' $@87 variant_alias_type_list optional_semis $@88 '}'

    $default  reduce using rule 798 ($@85)

    $@85  go to state 56


State 13

   19 SEMICOLON: "new line, semicolon" .

    $default  reduce using rule 19 (SEMICOLON)


State 14

   47 expr_reader: '%' . name_in_namespace $@2 reader_character_sequence

    "::"    shift, and go to state 57
    "name"  shift, and go to state 58

    name_in_namespace  go to state 59


State 15

  157 optional_annotation_list_with_emit_semis: '[' . annotation_list ']' optional_emit_semis

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 68
    annotation_list               go to state 69
    name_in_namespace             go to state 70


State 16

   18 SEMICOLON: ';' .

    $default  reduce using rule 18 (SEMICOLON)


State 17

   15 program: program SEMICOLON .

    $default  reduce using rule 15 (program)


State 18

   14 program: program top_level_reader_macro .

    $default  reduce using rule 14 (program)


State 19

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 20

   20 top_level_reader_macro: expr_reader . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 71


State 21

    9 program: program options_declaration . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 72


State 22

    8 program: program require_declaration . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 73


State 23

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 24

  259 global_function_declaration: optional_annotation_list_with_emit_semis . "def" function_declaration
  644 enum_declaration: optional_annotation_list_with_emit_semis . "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas $@48 '}'
  662 structure_declaration: optional_annotation_list_with_emit_semis . $@49 class_or_struct optional_public_or_private_structure $@50 structure_name optional_emit_semis $@51 optional_struct_variable_declaration_list

    "def"   shift, and go to state 74
    "enum"  shift, and go to state 75

    $default  reduce using rule 659 ($@49)

    $@49  go to state 76


State 25

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 26

  613 global_let: kwd_let . optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'
  615           | kwd_let . optional_shared optional_public_or_private_variable $@44 optional_field_annotation global_let_variable_declaration

    "shared"  shift, and go to state 77

    $default  reduce using rule 604 (optional_shared)

    optional_shared  go to state 78


State 27

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 28

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 29

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 30

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 31

   12 program: program tuple_alias_declaration .

    $default  reduce using rule 12 (program)


State 32

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 33

   13 program: program bitfield_alias_declaration .

    $default  reduce using rule 13 (program)


State 34

  125 annotation_argument_name: "type" .

    $default  reduce using rule 125 (annotation_argument_name)


State 35

  126 annotation_argument_name: "in" .

    $default  reduce using rule 126 (annotation_argument_name)


State 36

  124 annotation_argument_name: "name" .

    $default  reduce using rule 124 (annotation_argument_name)


State 37

  127 annotation_argument: annotation_argument_name . '=' string_constant
  128                    | annotation_argument_name . '=' "name"
  129                    | annotation_argument_name . '=' "integer constant"
  130                    | annotation_argument_name . '=' "floating point constant"
  131                    | annotation_argument_name . '=' "true"
  132                    | annotation_argument_name . '=' "false"
  133                    | annotation_argument_name .
  134                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 79

    $default  reduce using rule 133 (annotation_argument)


State 38

  135 annotation_argument_list: annotation_argument .

    $default  reduce using rule 135 (annotation_argument_list)


State 39

   48 options_declaration: "options" annotation_argument_list .
  136 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 80

    $default  reduce using rule 48 (options_declaration)


State 40

   61 expect_error: "integer constant" .
   62             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 81

    $default  reduce using rule 61 (expect_error)


State 41

   58 expect_declaration: "expect" expect_list .
   60 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 82

    $default  reduce using rule 58 (expect_declaration)


State 42

   59 expect_list: expect_error .

    $default  reduce using rule 59 (expect_list)


State 43

   50 require_module_name: "name" .

    $default  reduce using rule 50 (require_module_name)


State 44

   51 require_module_name: '%' . require_module_name

    "name"  shift, and go to state 43
    '%'     shift, and go to state 44

    require_module_name  go to state 83


State 45

   52 require_module_name: require_module_name . '.' "name"
   53                    | require_module_name . '/' "name"
   54 require_module: require_module_name . is_public_module
   55               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 84
    "public"  shift, and go to state 85
    '/'       shift, and go to state 86
    '.'       shift, and go to state 87

    $default  reduce using rule 56 (is_public_module)

    is_public_module  go to state 88


State 46

   49 require_declaration: "require" require_module .

    $default  reduce using rule 49 (require_declaration)


State 47

  625 optional_public_or_private_alias: "public" .

    $default  reduce using rule 625 (optional_public_or_private_alias)


State 48

  624 optional_public_or_private_alias: "private" .

    $default  reduce using rule 624 (optional_public_or_private_alias)


State 49

  627 single_alias: optional_public_or_private_alias . "name" $@45 '=' type_declaration

    "name"  shift, and go to state 89


State 50

  628 alias_declaration: "typedef" single_alias . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 90


State 51

   25 module_name: "name" .

    $default  reduce using rule 25 (module_name)


State 52

   24 module_name: '$' .

    $default  reduce using rule 24 (module_name)


State 53

   28 module_declaration: "module" module_name . optional_shared optional_public_or_private_module optional_not_required

    "shared"  shift, and go to state 77

    $default  reduce using rule 604 (optional_shared)

    optional_shared  go to state 91


State 54

  807 bitfield_alias_declaration: "bitfield" $@89 . optional_public_or_private_alias "name" optional_emit_commas $@90 '{' $@91 bitfield_alias_bits optional_commas $@92 '}'

    "public"   shift, and go to state 47
    "private"  shift, and go to state 48

    $default  reduce using rule 623 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 92


State 55

  797 tuple_alias_declaration: "tuple" $@81 . optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 tuple_alias_type_list optional_semis $@84 '}'

    "public"   shift, and go to state 47
    "private"  shift, and go to state 48

    $default  reduce using rule 623 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 93


State 56

  802 variant_alias_declaration: "variant" $@85 . optional_public_or_private_alias "name" optional_emit_semis $@86 '{' $@87 variant_alias_type_list optional_semis $@88 '}'

    "public"   shift, and go to state 47
    "private"  shift, and go to state 48

    $default  reduce using rule 623 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 94


State 57

  304 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 95


State 58

  302 name_in_namespace: "name" .
  303                  | "name" . "::" "name"

    "::"  shift, and go to state 96

    $default  reduce using rule 302 (name_in_namespace)


State 59

   47 expr_reader: '%' name_in_namespace . $@2 reader_character_sequence

    $default  reduce using rule 46 ($@2)

    $@2  go to state 97


State 60

  140 annotation_declaration_name: "require" .

    $default  reduce using rule 140 (annotation_declaration_name)


State 61

  141 annotation_declaration_name: "private" .

    $default  reduce using rule 141 (annotation_declaration_name)


State 62

  142 annotation_declaration_name: "template" .

    $default  reduce using rule 142 (annotation_declaration_name)


State 63

  151 annotation_declaration: "|>" . annotation_declaration

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 98
    name_in_namespace             go to state 70


State 64

  146 annotation_declaration: '!' . annotation_declaration

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 99
    name_in_namespace             go to state 70


State 65

  150 annotation_declaration: '(' . annotation_declaration ')'

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 100
    name_in_namespace             go to state 70


State 66

  143 annotation_declaration_basic: annotation_declaration_name .
  144                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 101

    $default  reduce using rule 143 (annotation_declaration_basic)


State 67

  145 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 145 (annotation_declaration)


State 68

  147 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  148                       | annotation_declaration . "||" annotation_declaration
  149                       | annotation_declaration . "^^" annotation_declaration
  152 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 102
    "||"  shift, and go to state 103
    "^^"  shift, and go to state 104

    $default  reduce using rule 152 (annotation_list)


State 69

  153 annotation_list: annotation_list . ',' annotation_declaration
  157 optional_annotation_list_with_emit_semis: '[' annotation_list . ']' optional_emit_semis

    ','  shift, and go to state 105
    ']'  shift, and go to state 106


State 70

  139 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 139 (annotation_declaration_name)


State 71

   20 top_level_reader_macro: expr_reader SEMICOLON .

    $default  reduce using rule 20 (top_level_reader_macro)


State 72

    9 program: program options_declaration SEMICOLON .

    $default  reduce using rule 9 (program)


State 73

    8 program: program require_declaration SEMICOLON .

    $default  reduce using rule 8 (program)


State 74

  259 global_function_declaration: optional_annotation_list_with_emit_semis "def" . function_declaration

    "public"   shift, and go to state 107
    "private"  shift, and go to state 108

    $default  reduce using rule 260 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 109
    function_declaration                 go to state 110


State 75

  644 enum_declaration: optional_annotation_list_with_emit_semis "enum" . $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas $@48 '}'

    $default  reduce using rule 641 ($@46)

    $@46  go to state 111


State 76

  662 structure_declaration: optional_annotation_list_with_emit_semis $@49 . class_or_struct optional_public_or_private_structure $@50 structure_name optional_emit_semis $@51 optional_struct_variable_declaration_list

    "struct"    shift, and go to state 112
    "class"     shift, and go to state 113
    "template"  shift, and go to state 114

    class_or_struct  go to state 115


State 77

  605 optional_shared: "shared" .

    $default  reduce using rule 605 (optional_shared)


State 78

  613 global_let: kwd_let optional_shared . optional_public_or_private_variable '{' global_variable_declaration_list '}'
  615           | kwd_let optional_shared . optional_public_or_private_variable $@44 optional_field_annotation global_let_variable_declaration

    "public"   shift, and go to state 116
    "private"  shift, and go to state 117

    $default  reduce using rule 606 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 118


State 79

  127 annotation_argument: annotation_argument_name '=' . string_constant
  128                    | annotation_argument_name '=' . "name"
  129                    | annotation_argument_name '=' . "integer constant"
  130                    | annotation_argument_name '=' . "floating point constant"
  131                    | annotation_argument_name '=' . "true"
  132                    | annotation_argument_name '=' . "false"
  134                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 119
    "false"                    shift, and go to state 120
    "integer constant"         shift, and go to state 121
    "floating point constant"  shift, and go to state 122
    "name"                     shift, and go to state 123
    "start of the string"      shift, and go to state 124
    '('                        shift, and go to state 125

    string_constant  go to state 126


State 80

  136 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 127


State 81

   62 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 128


State 82

   60 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 40

    expect_error  go to state 129


State 83

   51 require_module_name: '%' require_module_name .
   52                    | require_module_name . '.' "name"
   53                    | require_module_name . '/' "name"

    '.'  shift, and go to state 87

    $default  reduce using rule 51 (require_module_name)


State 84

   55 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 130


State 85

   57 is_public_module: "public" .

    $default  reduce using rule 57 (is_public_module)


State 86

   53 require_module_name: require_module_name '/' . "name"

    "name"  shift, and go to state 131


State 87

   52 require_module_name: require_module_name '.' . "name"

    "name"  shift, and go to state 132


State 88

   54 require_module: require_module_name is_public_module .

    $default  reduce using rule 54 (require_module)


State 89

  627 single_alias: optional_public_or_private_alias "name" . $@45 '=' type_declaration

    $default  reduce using rule 626 ($@45)

    $@45  go to state 133


State 90

  628 alias_declaration: "typedef" single_alias SEMICOLON .

    $default  reduce using rule 628 (alias_declaration)


State 91

   28 module_declaration: "module" module_name optional_shared . optional_public_or_private_module optional_not_required

    "public"   shift, and go to state 134
    "private"  shift, and go to state 135

    $default  reduce using rule 21 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 136


State 92

  807 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias . "name" optional_emit_commas $@90 '{' $@91 bitfield_alias_bits optional_commas $@92 '}'

    "name"  shift, and go to state 137


State 93

  797 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias . "name" optional_emit_semis $@82 '{' $@83 tuple_alias_type_list optional_semis $@84 '}'

    "name"  shift, and go to state 138


State 94

  802 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias . "name" optional_emit_semis $@86 '{' $@87 variant_alias_type_list optional_semis $@88 '}'

    "name"  shift, and go to state 139


State 95

  304 name_in_namespace: "::" "name" .

    $default  reduce using rule 304 (name_in_namespace)


State 96

  303 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 140


State 97

   47 expr_reader: '%' name_in_namespace $@2 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 141

    reader_character_sequence  go to state 142


State 98

  147 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  148                       | annotation_declaration . "||" annotation_declaration
  149                       | annotation_declaration . "^^" annotation_declaration
  151                       | "|>" annotation_declaration .

    $default  reduce using rule 151 (annotation_declaration)


State 99

  146 annotation_declaration: '!' annotation_declaration .
  147                       | annotation_declaration . "&&" annotation_declaration
  148                       | annotation_declaration . "||" annotation_declaration
  149                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 146 (annotation_declaration)


State 100

  147 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  148                       | annotation_declaration . "||" annotation_declaration
  149                       | annotation_declaration . "^^" annotation_declaration
  150                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 102
    "||"  shift, and go to state 103
    "^^"  shift, and go to state 104
    ')'   shift, and go to state 143


State 101

  144 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 38
    annotation_argument_list  go to state 144


State 102

  147 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 145
    name_in_namespace             go to state 70


State 103

  148 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 146
    name_in_namespace             go to state 70


State 104

  149 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 147
    name_in_namespace             go to state 70


State 105

  153 annotation_list: annotation_list ',' . annotation_declaration

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 148
    name_in_namespace             go to state 70


State 106

  157 optional_annotation_list_with_emit_semis: '[' annotation_list ']' . optional_emit_semis

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 151


State 107

  262 optional_public_or_private_function: "public" .

    $default  reduce using rule 262 (optional_public_or_private_function)


State 108

  261 optional_public_or_private_function: "private" .

    $default  reduce using rule 261 (optional_public_or_private_function)


State 109

  265 function_declaration: optional_public_or_private_function . $@13 function_declaration_header optional_emit_semis expression_block

    $default  reduce using rule 264 ($@13)

    $@13  go to state 152


State 110

  259 global_function_declaration: optional_annotation_list_with_emit_semis "def" function_declaration .

    $default  reduce using rule 259 (global_function_declaration)


State 111

  644 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 . optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas $@48 '}'

    "public"   shift, and go to state 153
    "private"  shift, and go to state 154

    $default  reduce using rule 629 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 155


State 112

  651 class_or_struct: "struct" .

    $default  reduce using rule 651 (class_or_struct)


State 113

  650 class_or_struct: "class" .

    $default  reduce using rule 650 (class_or_struct)


State 114

  652 class_or_struct: "template" . "class"
  653                | "template" . "struct"

    "struct"  shift, and go to state 156
    "class"   shift, and go to state 157


State 115

  662 structure_declaration: optional_annotation_list_with_emit_semis $@49 class_or_struct . optional_public_or_private_structure $@50 structure_name optional_emit_semis $@51 optional_struct_variable_declaration_list

    "public"   shift, and go to state 158
    "private"  shift, and go to state 159

    $default  reduce using rule 654 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 160


State 116

  608 optional_public_or_private_variable: "public" .

    $default  reduce using rule 608 (optional_public_or_private_variable)


State 117

  607 optional_public_or_private_variable: "private" .

    $default  reduce using rule 607 (optional_public_or_private_variable)


State 118

  613 global_let: kwd_let optional_shared optional_public_or_private_variable . '{' global_variable_declaration_list '}'
  615           | kwd_let optional_shared optional_public_or_private_variable . $@44 optional_field_annotation global_let_variable_declaration

    '{'  shift, and go to state 161

    $default  reduce using rule 614 ($@44)

    $@44  go to state 162


State 119

  131 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 131 (annotation_argument)


State 120

  132 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 132 (annotation_argument)


State 121

  129 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 129 (annotation_argument)


State 122

  130 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 130 (annotation_argument)


State 123

  128 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 128 (annotation_argument)


State 124

   33 string_constant: "start of the string" . character_sequence "end of the string"
   34                | "start of the string" . "end of the string"

    STRING_CHARACTER      shift, and go to state 163
    STRING_CHARACTER_ESC  shift, and go to state 164
    "end of the string"   shift, and go to state 165

    character_sequence  go to state 166


State 125

  134 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 167
    "false"                    shift, and go to state 168
    "integer constant"         shift, and go to state 169
    "floating point constant"  shift, and go to state 170
    "name"                     shift, and go to state 171
    "start of the string"      shift, and go to state 124

    string_constant                 go to state 172
    annotation_argument_value       go to state 173
    annotation_argument_value_list  go to state 174


State 126

  127 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 127 (annotation_argument)


State 127

  136 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 136 (annotation_argument_list)


State 128

   62 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 62 (expect_error)


State 129

   60 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 60 (expect_list)


State 130

   55 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 85

    $default  reduce using rule 56 (is_public_module)

    is_public_module  go to state 175


State 131

   53 require_module_name: require_module_name '/' "name" .

    $default  reduce using rule 53 (require_module_name)


State 132

   52 require_module_name: require_module_name '.' "name" .

    $default  reduce using rule 52 (require_module_name)


State 133

  627 single_alias: optional_public_or_private_alias "name" $@45 . '=' type_declaration

    '='  shift, and go to state 176


State 134

   22 optional_public_or_private_module: "public" .

    $default  reduce using rule 22 (optional_public_or_private_module)


State 135

   23 optional_public_or_private_module: "private" .

    $default  reduce using rule 23 (optional_public_or_private_module)


State 136

   28 module_declaration: "module" module_name optional_shared optional_public_or_private_module . optional_not_required

    '!'  shift, and go to state 177

    $default  reduce using rule 26 (optional_not_required)

    optional_not_required  go to state 178


State 137

  807 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias "name" . optional_emit_commas $@90 '{' $@91 bitfield_alias_bits optional_commas $@92 '}'

    "new line, comma"  shift, and go to state 179

    $default  reduce using rule 639 (optional_emit_commas)

    emit_commas           go to state 180
    optional_emit_commas  go to state 181


State 138

  797 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" . optional_emit_semis $@82 '{' $@83 tuple_alias_type_list optional_semis $@84 '}'

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 182


State 139

  802 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" . optional_emit_semis $@86 '{' $@87 variant_alias_type_list optional_semis $@88 '}'

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 183


State 140

  303 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 303 (name_in_namespace)


State 141

   44 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 44 (reader_character_sequence)


State 142

   45 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   47 expr_reader: '%' name_in_namespace $@2 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 184

    $default  reduce using rule 47 (expr_reader)


State 143

  150 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 150 (annotation_declaration)


State 144

  136 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  144 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 80
    ')'  shift, and go to state 185


State 145

  147 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  147                       | annotation_declaration "&&" annotation_declaration .
  148                       | annotation_declaration . "||" annotation_declaration
  149                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 147 (annotation_declaration)


State 146

  147 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  148                       | annotation_declaration . "||" annotation_declaration
  148                       | annotation_declaration "||" annotation_declaration .
  149                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 102
    "^^"  shift, and go to state 104

    $default  reduce using rule 148 (annotation_declaration)


State 147

  147 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  148                       | annotation_declaration . "||" annotation_declaration
  149                       | annotation_declaration . "^^" annotation_declaration
  149                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 102

    $default  reduce using rule 149 (annotation_declaration)


State 148

  147 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  148                       | annotation_declaration . "||" annotation_declaration
  149                       | annotation_declaration . "^^" annotation_declaration
  153 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 102
    "||"  shift, and go to state 103
    "^^"  shift, and go to state 104

    $default  reduce using rule 153 (annotation_list)


State 149

   68 emit_semis: "new line, semicolon" .

    $default  reduce using rule 68 (emit_semis)


State 150

   69 emit_semis: emit_semis . "new line, semicolon"
   71 optional_emit_semis: emit_semis .

    "new line, semicolon"  shift, and go to state 186

    $default  reduce using rule 71 (optional_emit_semis)


State 151

  157 optional_annotation_list_with_emit_semis: '[' annotation_list ']' optional_emit_semis .

    $default  reduce using rule 157 (optional_annotation_list_with_emit_semis)


State 152

  265 function_declaration: optional_public_or_private_function $@13 . function_declaration_header optional_emit_semis expression_block

    "operator"  shift, and go to state 187
    "bool"      shift, and go to state 188
    "string"    shift, and go to state 189
    "int"       shift, and go to state 190
    "int2"      shift, and go to state 191
    "int3"      shift, and go to state 192
    "int4"      shift, and go to state 193
    "uint"      shift, and go to state 194
    "uint2"     shift, and go to state 195
    "uint3"     shift, and go to state 196
    "uint4"     shift, and go to state 197
    "float"     shift, and go to state 198
    "float2"    shift, and go to state 199
    "float3"    shift, and go to state 200
    "float4"    shift, and go to state 201
    "range"     shift, and go to state 202
    "urange"    shift, and go to state 203
    "range64"   shift, and go to state 204
    "urange64"  shift, and go to state 205
    "int64"     shift, and go to state 206
    "uint64"    shift, and go to state 207
    "double"    shift, and go to state 208
    "int8"      shift, and go to state 209
    "uint8"     shift, and go to state 210
    "int16"     shift, and go to state 211
    "uint16"    shift, and go to state 212
    "++"        shift, and go to state 213
    "--"        shift, and go to state 214
    "name"      shift, and go to state 215

    function_name                go to state 216
    function_declaration_header  go to state 217


State 153

  631 optional_public_or_private_enum: "public" .

    $default  reduce using rule 631 (optional_public_or_private_enum)


State 154

  630 optional_public_or_private_enum: "private" .

    $default  reduce using rule 630 (optional_public_or_private_enum)


State 155

  644 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum . enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas $@48 '}'

    "name"  shift, and go to state 218

    enum_name  go to state 219


State 156

  653 class_or_struct: "template" "struct" .

    $default  reduce using rule 653 (class_or_struct)


State 157

  652 class_or_struct: "template" "class" .

    $default  reduce using rule 652 (class_or_struct)


State 158

  656 optional_public_or_private_structure: "public" .

    $default  reduce using rule 656 (optional_public_or_private_structure)


State 159

  655 optional_public_or_private_structure: "private" .

    $default  reduce using rule 655 (optional_public_or_private_structure)


State 160

  662 structure_declaration: optional_annotation_list_with_emit_semis $@49 class_or_struct optional_public_or_private_structure . $@50 structure_name optional_emit_semis $@51 optional_struct_variable_declaration_list

    $default  reduce using rule 660 ($@50)

    $@50  go to state 220


State 161

  613 global_let: kwd_let optional_shared optional_public_or_private_variable '{' . global_variable_declaration_list '}'

    $default  reduce using rule 609 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 221


State 162

  615 global_let: kwd_let optional_shared optional_public_or_private_variable $@44 . optional_field_annotation global_let_variable_declaration

    '@'  shift, and go to state 222

    $default  reduce using rule 532 (optional_field_annotation)

    metadata_argument_list     go to state 223
    optional_field_annotation  go to state 224


State 163

   29 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 29 (character_sequence)


State 164

   30 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 30 (character_sequence)


State 165

   34 string_constant: "start of the string" "end of the string" .

    $default  reduce using rule 34 (string_constant)


State 166

   31 character_sequence: character_sequence . STRING_CHARACTER
   32                   | character_sequence . STRING_CHARACTER_ESC
   33 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 225
    STRING_CHARACTER_ESC  shift, and go to state 226
    "end of the string"   shift, and go to state 227


State 167

  120 annotation_argument_value: "true" .

    $default  reduce using rule 120 (annotation_argument_value)


State 168

  121 annotation_argument_value: "false" .

    $default  reduce using rule 121 (annotation_argument_value)


State 169

  118 annotation_argument_value: "integer constant" .

    $default  reduce using rule 118 (annotation_argument_value)


State 170

  119 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 119 (annotation_argument_value)


State 171

  117 annotation_argument_value: "name" .

    $default  reduce using rule 117 (annotation_argument_value)


State 172

  116 annotation_argument_value: string_constant .

    $default  reduce using rule 116 (annotation_argument_value)


State 173

  122 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 122 (annotation_argument_value_list)


State 174

  123 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
  134 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 228
    ')'  shift, and go to state 229


State 175

   55 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 55 (require_module)


State 176

  627 single_alias: optional_public_or_private_alias "name" $@45 '=' . type_declaration

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 276
    type_declaration_no_options_no_dim  go to state 277
    type_declaration                    go to state 278


State 177

   27 optional_not_required: '!' . "inscope"

    "inscope"  shift, and go to state 279


State 178

   28 module_declaration: "module" module_name optional_shared optional_public_or_private_module optional_not_required .

    $default  reduce using rule 28 (module_declaration)


State 179

  637 emit_commas: "new line, comma" .

    $default  reduce using rule 637 (emit_commas)


State 180

  638 emit_commas: emit_commas . "new line, comma"
  640 optional_emit_commas: emit_commas .

    "new line, comma"  shift, and go to state 280

    $default  reduce using rule 640 (optional_emit_commas)


State 181

  807 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias "name" optional_emit_commas . $@90 '{' $@91 bitfield_alias_bits optional_commas $@92 '}'

    $default  reduce using rule 804 ($@90)

    $@90  go to state 281


State 182

  797 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis . $@82 '{' $@83 tuple_alias_type_list optional_semis $@84 '}'

    $default  reduce using rule 794 ($@82)

    $@82  go to state 282


State 183

  802 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis . $@86 '{' $@87 variant_alias_type_list optional_semis $@88 '}'

    $default  reduce using rule 799 ($@86)

    $@86  go to state 283


State 184

   45 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 45 (reader_character_sequence)


State 185

  144 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 144 (annotation_declaration_basic)


State 186

   69 emit_semis: emit_semis "new line, semicolon" .

    $default  reduce using rule 69 (emit_semis)


State 187

  164 function_name: "operator" . '!'
  165              | "operator" . '~'
  166              | "operator" . "+="
  167              | "operator" . "-="
  168              | "operator" . "*="
  169              | "operator" . "/="
  170              | "operator" . "%="
  171              | "operator" . "&="
  172              | "operator" . "|="
  173              | "operator" . "^="
  174              | "operator" . "&&="
  175              | "operator" . "||="
  176              | "operator" . "^^="
  177              | "operator" . "&&"
  178              | "operator" . "||"
  179              | "operator" . "^^"
  180              | "operator" . '+'
  181              | "operator" . '-'
  182              | "operator" . '*'
  183              | "operator" . '/'
  184              | "operator" . '%'
  185              | "operator" . '<'
  186              | "operator" . '>'
  187              | "operator" . ".."
  188              | "operator" . "=="
  189              | "operator" . "!="
  190              | "operator" . "<="
  191              | "operator" . ">="
  192              | "operator" . '&'
  193              | "operator" . '|'
  194              | "operator" . '^'
  197              | "operator" . "++"
  198              | "operator" . "--"
  199              | "operator" . "<<"
  200              | "operator" . ">>"
  201              | "operator" . "<<="
  202              | "operator" . ">>="
  203              | "operator" . "<<<"
  204              | "operator" . ">>>"
  205              | "operator" . "<<<="
  206              | "operator" . ">>>="
  207              | "operator" . '[' ']'
  208              | "operator" . "?[" ']'
  209              | "operator" . '.'
  210              | "operator" . "?."
  211              | "operator" . '.' "name"
  212              | "operator" . '.' "name" ":="
  213              | "operator" . '.' "name" "+="
  214              | "operator" . '.' "name" "-="
  215              | "operator" . '.' "name" "*="
  216              | "operator" . '.' "name" "/="
  217              | "operator" . '.' "name" "%="
  218              | "operator" . '.' "name" "&="
  219              | "operator" . '.' "name" "|="
  220              | "operator" . '.' "name" "^="
  221              | "operator" . '.' "name" "&&="
  222              | "operator" . '.' "name" "||="
  223              | "operator" . '.' "name" "^^="
  224              | "operator" . "?." "name"
  225              | "operator" . ":="
  226              | "operator" . "delete"
  227              | "operator" . "??"
  228              | "operator" . "is"
  229              | "operator" . "as"
  230              | "operator" . "is" "name"
  231              | "operator" . "as" "name"
  232              | "operator" . '?' "as"
  233              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 284
    "as"      shift, and go to state 285
    "delete"  shift, and go to state 286
    "+="      shift, and go to state 287
    "-="      shift, and go to state 288
    "/="      shift, and go to state 289
    "*="      shift, and go to state 290
    "%="      shift, and go to state 291
    "&="      shift, and go to state 292
    "|="      shift, and go to state 293
    "^="      shift, and go to state 294
    "<<"      shift, and go to state 295
    ">>"      shift, and go to state 296
    "++"      shift, and go to state 297
    "--"      shift, and go to state 298
    "<="      shift, and go to state 299
    "<<="     shift, and go to state 300
    ">>="     shift, and go to state 301
    ">="      shift, and go to state 302
    "=="      shift, and go to state 303
    "!="      shift, and go to state 304
    "??"      shift, and go to state 305
    "?."      shift, and go to state 306
    "?["      shift, and go to state 307
    ":="      shift, and go to state 308
    "<<<"     shift, and go to state 309
    ">>>"     shift, and go to state 310
    "<<<="    shift, and go to state 311
    ">>>="    shift, and go to state 312
    "&&"      shift, and go to state 313
    "||"      shift, and go to state 314
    "^^"      shift, and go to state 315
    "&&="     shift, and go to state 316
    "||="     shift, and go to state 317
    "^^="     shift, and go to state 318
    ".."      shift, and go to state 319
    '?'       shift, and go to state 320
    '|'       shift, and go to state 321
    '^'       shift, and go to state 322
    '&'       shift, and go to state 323
    '<'       shift, and go to state 324
    '>'       shift, and go to state 325
    '-'       shift, and go to state 326
    '+'       shift, and go to state 327
    '*'       shift, and go to state 328
    '/'       shift, and go to state 329
    '%'       shift, and go to state 330
    '~'       shift, and go to state 331
    '!'       shift, and go to state 332
    '.'       shift, and go to state 333
    '['       shift, and go to state 334


State 188

  234 function_name: "bool" .

    $default  reduce using rule 234 (function_name)


State 189

  235 function_name: "string" .

    $default  reduce using rule 235 (function_name)


State 190

  236 function_name: "int" .

    $default  reduce using rule 236 (function_name)


State 191

  237 function_name: "int2" .

    $default  reduce using rule 237 (function_name)


State 192

  238 function_name: "int3" .

    $default  reduce using rule 238 (function_name)


State 193

  239 function_name: "int4" .

    $default  reduce using rule 239 (function_name)


State 194

  240 function_name: "uint" .

    $default  reduce using rule 240 (function_name)


State 195

  241 function_name: "uint2" .

    $default  reduce using rule 241 (function_name)


State 196

  242 function_name: "uint3" .

    $default  reduce using rule 242 (function_name)


State 197

  243 function_name: "uint4" .

    $default  reduce using rule 243 (function_name)


State 198

  244 function_name: "float" .

    $default  reduce using rule 244 (function_name)


State 199

  245 function_name: "float2" .

    $default  reduce using rule 245 (function_name)


State 200

  246 function_name: "float3" .

    $default  reduce using rule 246 (function_name)


State 201

  247 function_name: "float4" .

    $default  reduce using rule 247 (function_name)


State 202

  248 function_name: "range" .

    $default  reduce using rule 248 (function_name)


State 203

  249 function_name: "urange" .

    $default  reduce using rule 249 (function_name)


State 204

  250 function_name: "range64" .

    $default  reduce using rule 250 (function_name)


State 205

  251 function_name: "urange64" .

    $default  reduce using rule 251 (function_name)


State 206

  252 function_name: "int64" .

    $default  reduce using rule 252 (function_name)


State 207

  253 function_name: "uint64" .

    $default  reduce using rule 253 (function_name)


State 208

  254 function_name: "double" .

    $default  reduce using rule 254 (function_name)


State 209

  255 function_name: "int8" .

    $default  reduce using rule 255 (function_name)


State 210

  256 function_name: "uint8" .

    $default  reduce using rule 256 (function_name)


State 211

  257 function_name: "int16" .

    $default  reduce using rule 257 (function_name)


State 212

  258 function_name: "uint16" .

    $default  reduce using rule 258 (function_name)


State 213

  195 function_name: "++" . "operator"

    "operator"  shift, and go to state 335


State 214

  196 function_name: "--" . "operator"

    "operator"  shift, and go to state 336


State 215

  163 function_name: "name" .

    $default  reduce using rule 163 (function_name)


State 216

  263 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 337

    $default  reduce using rule 158 (optional_function_argument_list)

    optional_function_argument_list  go to state 338


State 217

  265 function_declaration: optional_public_or_private_function $@13 function_declaration_header . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 339


State 218

  632 enum_name: "name" .

    $default  reduce using rule 632 (enum_name)


State 219

  644 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name . optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas $@48 '}'

    ':'  shift, and go to state 340

    $default  reduce using rule 633 (optional_enum_basic_type_declaration)

    optional_enum_basic_type_declaration  go to state 341


State 220

  662 structure_declaration: optional_annotation_list_with_emit_semis $@49 class_or_struct optional_public_or_private_structure $@50 . structure_name optional_emit_semis $@51 optional_struct_variable_declaration_list

    "sealed"  shift, and go to state 342

    $default  reduce using rule 647 (optional_sealed)

    optional_sealed  go to state 343
    structure_name   go to state 344


State 221

  610 global_variable_declaration_list: global_variable_declaration_list . SEMICOLON
  612                                 | global_variable_declaration_list . $@43 optional_field_annotation let_variable_declaration
  613 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list . '}'

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16
    '}'                    shift, and go to state 345

    $default  reduce using rule 611 ($@43)

    SEMICOLON  go to state 346
    $@43       go to state 347


State 222

  137 metadata_argument_list: '@' . annotation_argument optional_emit_semis

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 348


State 223

  138 metadata_argument_list: metadata_argument_list . '@' annotation_argument optional_emit_semis
  533 optional_field_annotation: metadata_argument_list .

    '@'  shift, and go to state 349

    $default  reduce using rule 533 (optional_field_annotation)


State 224

  615 global_let: kwd_let optional_shared optional_public_or_private_variable $@44 optional_field_annotation . global_let_variable_declaration

    "name"  shift, and go to state 350

    global_let_variable_name_with_pos_list  go to state 351
    global_let_variable_declaration         go to state 352


State 225

   31 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 31 (character_sequence)


State 226

   32 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 32 (character_sequence)


State 227

   33 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 33 (string_constant)


State 228

  123 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 167
    "false"                    shift, and go to state 168
    "integer constant"         shift, and go to state 169
    "floating point constant"  shift, and go to state 170
    "name"                     shift, and go to state 171
    "start of the string"      shift, and go to state 124

    string_constant            go to state 172
    annotation_argument_value  go to state 353


State 229

  134 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 134 (annotation_argument)


State 230

  733 type_declaration_no_options_no_dim: "type" . '<' $@54 type_declaration '>' $@55

    '<'  shift, and go to state 354


State 231

  756 type_declaration_no_options_no_dim: "array" . '<' $@59 type_declaration '>' $@60

    '<'  shift, and go to state 355


State 232

  759 type_declaration_no_options_no_dim: "table" . '<' $@61 table_type_pair '>' $@62

    '<'  shift, and go to state 356


State 233

  734 type_declaration_no_options_no_dim: "typedecl" . '(' expr ')'

    '('  shift, and go to state 357


State 234

  762 type_declaration_no_options_no_dim: "iterator" . '<' $@63 type_declaration '>' $@64

    '<'  shift, and go to state 358


State 235

  752 type_declaration_no_options_no_dim: "smart_ptr" . '<' $@57 type_declaration '>' $@58

    '<'  shift, and go to state 359


State 236

  668 basic_type_declaration: "bool" .

    $default  reduce using rule 668 (basic_type_declaration)


State 237

  688 basic_type_declaration: "void" .

    $default  reduce using rule 688 (basic_type_declaration)


State 238

  669 basic_type_declaration: "string" .

    $default  reduce using rule 669 (basic_type_declaration)


State 239

  704 auto_type_declaration: "auto" .
  705                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 360

    $default  reduce using rule 704 (auto_type_declaration)


State 240

  670 basic_type_declaration: "int" .

    $default  reduce using rule 670 (basic_type_declaration)


State 241

  674 basic_type_declaration: "int2" .

    $default  reduce using rule 674 (basic_type_declaration)


State 242

  675 basic_type_declaration: "int3" .

    $default  reduce using rule 675 (basic_type_declaration)


State 243

  676 basic_type_declaration: "int4" .

    $default  reduce using rule 676 (basic_type_declaration)


State 244

  677 basic_type_declaration: "uint" .

    $default  reduce using rule 677 (basic_type_declaration)


State 245

  694 basic_type_declaration: "bitfield" .
  716 bitfield_type_declaration: "bitfield" . '<' $@52 bitfield_bits '>' $@53

    '<'  shift, and go to state 361

    $default  reduce using rule 694 (basic_type_declaration)


State 246

  681 basic_type_declaration: "uint2" .

    $default  reduce using rule 681 (basic_type_declaration)


State 247

  682 basic_type_declaration: "uint3" .

    $default  reduce using rule 682 (basic_type_declaration)


State 248

  683 basic_type_declaration: "uint4" .

    $default  reduce using rule 683 (basic_type_declaration)


State 249

  684 basic_type_declaration: "float" .

    $default  reduce using rule 684 (basic_type_declaration)


State 250

  685 basic_type_declaration: "float2" .

    $default  reduce using rule 685 (basic_type_declaration)


State 251

  686 basic_type_declaration: "float3" .

    $default  reduce using rule 686 (basic_type_declaration)


State 252

  687 basic_type_declaration: "float4" .

    $default  reduce using rule 687 (basic_type_declaration)


State 253

  689 basic_type_declaration: "range" .

    $default  reduce using rule 689 (basic_type_declaration)


State 254

  690 basic_type_declaration: "urange" .

    $default  reduce using rule 690 (basic_type_declaration)


State 255

  691 basic_type_declaration: "range64" .

    $default  reduce using rule 691 (basic_type_declaration)


State 256

  692 basic_type_declaration: "urange64" .

    $default  reduce using rule 692 (basic_type_declaration)


State 257

  763 type_declaration_no_options_no_dim: "block" .
  766                                   | "block" . '<' $@65 type_declaration '>' $@66
  769                                   | "block" . '<' $@67 optional_function_argument_list optional_function_type '>' $@68

    '<'  shift, and go to state 362

    $default  reduce using rule 763 (type_declaration_no_options_no_dim)


State 258

  673 basic_type_declaration: "int64" .

    $default  reduce using rule 673 (basic_type_declaration)


State 259

  680 basic_type_declaration: "uint64" .

    $default  reduce using rule 680 (basic_type_declaration)


State 260

  693 basic_type_declaration: "double" .

    $default  reduce using rule 693 (basic_type_declaration)


State 261

  770 type_declaration_no_options_no_dim: "function" .
  773                                   | "function" . '<' $@69 type_declaration '>' $@70
  776                                   | "function" . '<' $@71 optional_function_argument_list optional_function_type '>' $@72

    '<'  shift, and go to state 363

    $default  reduce using rule 770 (type_declaration_no_options_no_dim)


State 262

  777 type_declaration_no_options_no_dim: "lambda" .
  780                                   | "lambda" . '<' $@73 type_declaration '>' $@74
  783                                   | "lambda" . '<' $@75 optional_function_argument_list optional_function_type '>' $@76

    '<'  shift, and go to state 364

    $default  reduce using rule 777 (type_declaration_no_options_no_dim)


State 263

  671 basic_type_declaration: "int8" .

    $default  reduce using rule 671 (basic_type_declaration)


State 264

  678 basic_type_declaration: "uint8" .

    $default  reduce using rule 678 (basic_type_declaration)


State 265

  672 basic_type_declaration: "int16" .

    $default  reduce using rule 672 (basic_type_declaration)


State 266

  679 basic_type_declaration: "uint16" .

    $default  reduce using rule 679 (basic_type_declaration)


State 267

  786 type_declaration_no_options_no_dim: "tuple" . '<' $@77 tuple_type_list '>' $@78

    '<'  shift, and go to state 365


State 268

  789 type_declaration_no_options_no_dim: "variant" . '<' $@79 variant_type_list '>' $@80

    '<'  shift, and go to state 366


State 269

  706 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 367


State 270

  735 type_declaration_no_options_no_dim: '$' . name_in_namespace '(' optional_expr_list ')'
  737                                   | '$' . name_in_namespace '<' $@56 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "::"    shift, and go to state 57
    "name"  shift, and go to state 58

    name_in_namespace  go to state 368


State 271

  703 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 703 (structure_type_declaration)


State 272

  727 type_declaration_no_options_no_dim: basic_type_declaration .

    $default  reduce using rule 727 (type_declaration_no_options_no_dim)


State 273

  730 type_declaration_no_options_no_dim: structure_type_declaration .

    $default  reduce using rule 730 (type_declaration_no_options_no_dim)


State 274

  728 type_declaration_no_options_no_dim: auto_type_declaration .

    $default  reduce using rule 728 (type_declaration_no_options_no_dim)


State 275

  729 type_declaration_no_options_no_dim: bitfield_type_declaration .

    $default  reduce using rule 729 (type_declaration_no_options_no_dim)


State 276

  738 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  739                                   | type_declaration_no_options . "explicit"
  740                                   | type_declaration_no_options . "const"
  741                                   | type_declaration_no_options . '-' "const"
  742                                   | type_declaration_no_options . '&'
  743                                   | type_declaration_no_options . '-' '&'
  744                                   | type_declaration_no_options . '#'
  745                                   | type_declaration_no_options . "implicit"
  746                                   | type_declaration_no_options . '-' '#'
  747                                   | type_declaration_no_options . "==" "const"
  748                                   | type_declaration_no_options . "==" '&'
  749                                   | type_declaration_no_options . '?'
  753                                   | type_declaration_no_options . "??"
  790 type_declaration: type_declaration_no_options .

    "const"     shift, and go to state 369
    "implicit"  shift, and go to state 370
    "explicit"  shift, and go to state 371
    "=="        shift, and go to state 372
    "??"        shift, and go to state 373
    '?'         shift, and go to state 374
    '&'         shift, and go to state 375
    '-'         shift, and go to state 376
    '#'         shift, and go to state 377

    $default  reduce using rule 790 (type_declaration)


State 277

  725 type_declaration_no_options: type_declaration_no_options_no_dim .
  726                            | type_declaration_no_options_no_dim . dim_list

    '['  shift, and go to state 378

    $default  reduce using rule 725 (type_declaration_no_options)

    dim_list  go to state 379


State 278

  627 single_alias: optional_public_or_private_alias "name" $@45 '=' type_declaration .
  791 type_declaration: type_declaration . '|' type_declaration_no_options
  792                 | type_declaration . '|' '#'

    '|'  shift, and go to state 380

    $default  reduce using rule 627 (single_alias)


State 279

   27 optional_not_required: '!' "inscope" .

    $default  reduce using rule 27 (optional_not_required)


State 280

  638 emit_commas: emit_commas "new line, comma" .

    $default  reduce using rule 638 (emit_commas)


State 281

  807 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias "name" optional_emit_commas $@90 . '{' $@91 bitfield_alias_bits optional_commas $@92 '}'

    '{'  shift, and go to state 381


State 282

  797 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 . '{' $@83 tuple_alias_type_list optional_semis $@84 '}'

    '{'  shift, and go to state 382


State 283

  802 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 . '{' $@87 variant_alias_type_list optional_semis $@88 '}'

    '{'  shift, and go to state 383


State 284

  228 function_name: "operator" "is" .
  230              | "operator" "is" . "name"

    "name"  shift, and go to state 384

    $default  reduce using rule 228 (function_name)


State 285

  229 function_name: "operator" "as" .
  231              | "operator" "as" . "name"

    "name"  shift, and go to state 385

    $default  reduce using rule 229 (function_name)


State 286

  226 function_name: "operator" "delete" .

    $default  reduce using rule 226 (function_name)


State 287

  166 function_name: "operator" "+=" .

    $default  reduce using rule 166 (function_name)


State 288

  167 function_name: "operator" "-=" .

    $default  reduce using rule 167 (function_name)


State 289

  169 function_name: "operator" "/=" .

    $default  reduce using rule 169 (function_name)


State 290

  168 function_name: "operator" "*=" .

    $default  reduce using rule 168 (function_name)


State 291

  170 function_name: "operator" "%=" .

    $default  reduce using rule 170 (function_name)


State 292

  171 function_name: "operator" "&=" .

    $default  reduce using rule 171 (function_name)


State 293

  172 function_name: "operator" "|=" .

    $default  reduce using rule 172 (function_name)


State 294

  173 function_name: "operator" "^=" .

    $default  reduce using rule 173 (function_name)


State 295

  199 function_name: "operator" "<<" .

    $default  reduce using rule 199 (function_name)


State 296

  200 function_name: "operator" ">>" .

    $default  reduce using rule 200 (function_name)


State 297

  197 function_name: "operator" "++" .

    $default  reduce using rule 197 (function_name)


State 298

  198 function_name: "operator" "--" .

    $default  reduce using rule 198 (function_name)


State 299

  190 function_name: "operator" "<=" .

    $default  reduce using rule 190 (function_name)


State 300

  201 function_name: "operator" "<<=" .

    $default  reduce using rule 201 (function_name)


State 301

  202 function_name: "operator" ">>=" .

    $default  reduce using rule 202 (function_name)


State 302

  191 function_name: "operator" ">=" .

    $default  reduce using rule 191 (function_name)


State 303

  188 function_name: "operator" "==" .

    $default  reduce using rule 188 (function_name)


State 304

  189 function_name: "operator" "!=" .

    $default  reduce using rule 189 (function_name)


State 305

  227 function_name: "operator" "??" .

    $default  reduce using rule 227 (function_name)


State 306

  210 function_name: "operator" "?." .
  224              | "operator" "?." . "name"

    "name"  shift, and go to state 386

    $default  reduce using rule 210 (function_name)


State 307

  208 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 387


State 308

  225 function_name: "operator" ":=" .

    $default  reduce using rule 225 (function_name)


State 309

  203 function_name: "operator" "<<<" .

    $default  reduce using rule 203 (function_name)


State 310

  204 function_name: "operator" ">>>" .

    $default  reduce using rule 204 (function_name)


State 311

  205 function_name: "operator" "<<<=" .

    $default  reduce using rule 205 (function_name)


State 312

  206 function_name: "operator" ">>>=" .

    $default  reduce using rule 206 (function_name)


State 313

  177 function_name: "operator" "&&" .

    $default  reduce using rule 177 (function_name)


State 314

  178 function_name: "operator" "||" .

    $default  reduce using rule 178 (function_name)


State 315

  179 function_name: "operator" "^^" .

    $default  reduce using rule 179 (function_name)


State 316

  174 function_name: "operator" "&&=" .

    $default  reduce using rule 174 (function_name)


State 317

  175 function_name: "operator" "||=" .

    $default  reduce using rule 175 (function_name)


State 318

  176 function_name: "operator" "^^=" .

    $default  reduce using rule 176 (function_name)


State 319

  187 function_name: "operator" ".." .

    $default  reduce using rule 187 (function_name)


State 320

  232 function_name: "operator" '?' . "as"
  233              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 388


State 321

  193 function_name: "operator" '|' .

    $default  reduce using rule 193 (function_name)


State 322

  194 function_name: "operator" '^' .

    $default  reduce using rule 194 (function_name)


State 323

  192 function_name: "operator" '&' .

    $default  reduce using rule 192 (function_name)


State 324

  185 function_name: "operator" '<' .

    $default  reduce using rule 185 (function_name)


State 325

  186 function_name: "operator" '>' .

    $default  reduce using rule 186 (function_name)


State 326

  181 function_name: "operator" '-' .

    $default  reduce using rule 181 (function_name)


State 327

  180 function_name: "operator" '+' .

    $default  reduce using rule 180 (function_name)


State 328

  182 function_name: "operator" '*' .

    $default  reduce using rule 182 (function_name)


State 329

  183 function_name: "operator" '/' .

    $default  reduce using rule 183 (function_name)


State 330

  184 function_name: "operator" '%' .

    $default  reduce using rule 184 (function_name)


State 331

  165 function_name: "operator" '~' .

    $default  reduce using rule 165 (function_name)


State 332

  164 function_name: "operator" '!' .

    $default  reduce using rule 164 (function_name)


State 333

  209 function_name: "operator" '.' .
  211              | "operator" '.' . "name"
  212              | "operator" '.' . "name" ":="
  213              | "operator" '.' . "name" "+="
  214              | "operator" '.' . "name" "-="
  215              | "operator" '.' . "name" "*="
  216              | "operator" '.' . "name" "/="
  217              | "operator" '.' . "name" "%="
  218              | "operator" '.' . "name" "&="
  219              | "operator" '.' . "name" "|="
  220              | "operator" '.' . "name" "^="
  221              | "operator" '.' . "name" "&&="
  222              | "operator" '.' . "name" "||="
  223              | "operator" '.' . "name" "^^="

    "name"  shift, and go to state 389

    $default  reduce using rule 209 (function_name)


State 334

  207 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 390


State 335

  195 function_name: "++" "operator" .

    $default  reduce using rule 195 (function_name)


State 336

  196 function_name: "--" "operator" .

    $default  reduce using rule 196 (function_name)


State 337

  159 optional_function_argument_list: '(' . ')'
  160                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 391
    ')'   shift, and go to state 392
    '@'   shift, and go to state 222

    $default  reduce using rule 532 (optional_field_annotation)

    metadata_argument_list                 go to state 223
    optional_field_annotation              go to state 393
    function_argument_declaration_no_type  go to state 394
    function_argument_declaration_type     go to state 395
    function_argument_list                 go to state 396


State 338

  263 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 397

    $default  reduce using rule 161 (optional_function_type)

    optional_function_type  go to state 398


State 339

  265 function_declaration: optional_public_or_private_function $@13 function_declaration_header optional_emit_semis . expression_block

    $default  reduce using rule 270 ($@16)

    expression_block  go to state 399
    $@16              go to state 400


State 340

  634 optional_enum_basic_type_declaration: ':' . enum_basic_type_declaration

    "int"     shift, and go to state 401
    "uint"    shift, and go to state 402
    "int64"   shift, and go to state 403
    "uint64"  shift, and go to state 404
    "int8"    shift, and go to state 405
    "uint8"   shift, and go to state 406
    "int16"   shift, and go to state 407
    "uint16"  shift, and go to state 408

    enum_basic_type_declaration  go to state 409


State 341

  644 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration . optional_emit_commas '{' $@47 enum_list optional_commas $@48 '}'

    "new line, comma"  shift, and go to state 179

    $default  reduce using rule 639 (optional_emit_commas)

    emit_commas           go to state 180
    optional_emit_commas  go to state 410


State 342

  648 optional_sealed: "sealed" .

    $default  reduce using rule 648 (optional_sealed)


State 343

  649 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 411


State 344

  662 structure_declaration: optional_annotation_list_with_emit_semis $@49 class_or_struct optional_public_or_private_structure $@50 structure_name . optional_emit_semis $@51 optional_struct_variable_declaration_list

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 412


State 345

  613 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}' .

    $default  reduce using rule 613 (global_let)


State 346

  610 global_variable_declaration_list: global_variable_declaration_list SEMICOLON .

    $default  reduce using rule 610 (global_variable_declaration_list)


State 347

  612 global_variable_declaration_list: global_variable_declaration_list $@43 . optional_field_annotation let_variable_declaration

    '@'  shift, and go to state 222

    $default  reduce using rule 532 (optional_field_annotation)

    metadata_argument_list     go to state 223
    optional_field_annotation  go to state 413


State 348

  137 metadata_argument_list: '@' annotation_argument . optional_emit_semis

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 414


State 349

  138 metadata_argument_list: metadata_argument_list '@' . annotation_argument optional_emit_semis

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 415


State 350

  593 global_let_variable_name_with_pos_list: "name" .

    $default  reduce using rule 593 (global_let_variable_name_with_pos_list)


State 351

  594 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list . ',' "name"
  601 global_let_variable_declaration: global_let_variable_name_with_pos_list . ':' type_declaration_no_options SEMICOLON
  602                                | global_let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  603                                | global_let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr SEMICOLON

    ','  shift, and go to state 416
    ':'  shift, and go to state 417
    '&'  shift, and go to state 418

    $default  reduce using rule 586 (optional_ref)

    optional_ref  go to state 419


State 352

  615 global_let: kwd_let optional_shared optional_public_or_private_variable $@44 optional_field_annotation global_let_variable_declaration .

    $default  reduce using rule 615 (global_let)


State 353

  123 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 123 (annotation_argument_value_list)


State 354

  733 type_declaration_no_options_no_dim: "type" '<' . $@54 type_declaration '>' $@55

    $default  reduce using rule 731 ($@54)

    $@54  go to state 420


State 355

  756 type_declaration_no_options_no_dim: "array" '<' . $@59 type_declaration '>' $@60

    $default  reduce using rule 754 ($@59)

    $@59  go to state 421


State 356

  759 type_declaration_no_options_no_dim: "table" '<' . $@61 table_type_pair '>' $@62

    $default  reduce using rule 757 ($@61)

    $@61  go to state 422


State 357

  734 type_declaration_no_options_no_dim: "typedecl" '(' . expr ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 488
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 358

  762 type_declaration_no_options_no_dim: "iterator" '<' . $@63 type_declaration '>' $@64

    $default  reduce using rule 760 ($@63)

    $@63  go to state 498


State 359

  752 type_declaration_no_options_no_dim: "smart_ptr" '<' . $@57 type_declaration '>' $@58

    $default  reduce using rule 750 ($@57)

    $@57  go to state 499


State 360

  705 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 500


State 361

  716 bitfield_type_declaration: "bitfield" '<' . $@52 bitfield_bits '>' $@53

    $default  reduce using rule 714 ($@52)

    $@52  go to state 501


State 362

  766 type_declaration_no_options_no_dim: "block" '<' . $@65 type_declaration '>' $@66
  769                                   | "block" '<' . $@67 optional_function_argument_list optional_function_type '>' $@68

    ':'       reduce using rule 767 ($@67)
    '>'       reduce using rule 767 ($@67)
    '('       reduce using rule 767 ($@67)
    $default  reduce using rule 764 ($@65)

    $@65  go to state 502
    $@67  go to state 503


State 363

  773 type_declaration_no_options_no_dim: "function" '<' . $@69 type_declaration '>' $@70
  776                                   | "function" '<' . $@71 optional_function_argument_list optional_function_type '>' $@72

    ':'       reduce using rule 774 ($@71)
    '>'       reduce using rule 774 ($@71)
    '('       reduce using rule 774 ($@71)
    $default  reduce using rule 771 ($@69)

    $@69  go to state 504
    $@71  go to state 505


State 364

  780 type_declaration_no_options_no_dim: "lambda" '<' . $@73 type_declaration '>' $@74
  783                                   | "lambda" '<' . $@75 optional_function_argument_list optional_function_type '>' $@76

    ':'       reduce using rule 781 ($@75)
    '>'       reduce using rule 781 ($@75)
    '('       reduce using rule 781 ($@75)
    $default  reduce using rule 778 ($@73)

    $@73  go to state 506
    $@75  go to state 507


State 365

  786 type_declaration_no_options_no_dim: "tuple" '<' . $@77 tuple_type_list '>' $@78

    $default  reduce using rule 784 ($@77)

    $@77  go to state 508


State 366

  789 type_declaration_no_options_no_dim: "variant" '<' . $@79 variant_type_list '>' $@80

    $default  reduce using rule 787 ($@79)

    $@79  go to state 509


State 367

  706 auto_type_declaration: "$t" '(' . expr ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 510
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 368

  735 type_declaration_no_options_no_dim: '$' name_in_namespace . '(' optional_expr_list ')'
  737                                   | '$' name_in_namespace . '<' $@56 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    '<'  shift, and go to state 511
    '('  shift, and go to state 512


State 369

  740 type_declaration_no_options_no_dim: type_declaration_no_options "const" .

    $default  reduce using rule 740 (type_declaration_no_options_no_dim)


State 370

  745 type_declaration_no_options_no_dim: type_declaration_no_options "implicit" .

    $default  reduce using rule 745 (type_declaration_no_options_no_dim)


State 371

  739 type_declaration_no_options_no_dim: type_declaration_no_options "explicit" .

    $default  reduce using rule 739 (type_declaration_no_options_no_dim)


State 372

  747 type_declaration_no_options_no_dim: type_declaration_no_options "==" . "const"
  748                                   | type_declaration_no_options "==" . '&'

    "const"  shift, and go to state 513
    '&'      shift, and go to state 514


State 373

  753 type_declaration_no_options_no_dim: type_declaration_no_options "??" .

    $default  reduce using rule 753 (type_declaration_no_options_no_dim)


State 374

  749 type_declaration_no_options_no_dim: type_declaration_no_options '?' .

    $default  reduce using rule 749 (type_declaration_no_options_no_dim)


State 375

  742 type_declaration_no_options_no_dim: type_declaration_no_options '&' .

    $default  reduce using rule 742 (type_declaration_no_options_no_dim)


State 376

  738 type_declaration_no_options_no_dim: type_declaration_no_options '-' . '[' ']'
  741                                   | type_declaration_no_options '-' . "const"
  743                                   | type_declaration_no_options '-' . '&'
  746                                   | type_declaration_no_options '-' . '#'

    "const"  shift, and go to state 515
    '&'      shift, and go to state 516
    '['      shift, and go to state 517
    '#'      shift, and go to state 518


State 377

  744 type_declaration_no_options_no_dim: type_declaration_no_options '#' .

    $default  reduce using rule 744 (type_declaration_no_options_no_dim)


State 378

  721 dim_list: '[' . expr ']'
  722         | '[' . ']'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    ']'                               shift, and go to state 519
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 520
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 379

  723 dim_list: dim_list . '[' expr ']'
  724         | dim_list . '[' ']'
  726 type_declaration_no_options: type_declaration_no_options_no_dim dim_list .

    '['  shift, and go to state 521

    $default  reduce using rule 726 (type_declaration_no_options)


State 380

  791 type_declaration: type_declaration '|' . type_declaration_no_options
  792                 | type_declaration '|' . '#'

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270
    '#'          shift, and go to state 522

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 523
    type_declaration_no_options_no_dim  go to state 277


State 381

  807 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias "name" optional_emit_commas $@90 '{' . $@91 bitfield_alias_bits optional_commas $@92 '}'

    $default  reduce using rule 805 ($@91)

    $@91  go to state 524


State 382

  797 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' . $@83 tuple_alias_type_list optional_semis $@84 '}'

    $default  reduce using rule 795 ($@83)

    $@83  go to state 525


State 383

  802 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 '{' . $@87 variant_alias_type_list optional_semis $@88 '}'

    $default  reduce using rule 800 ($@87)

    $@87  go to state 526


State 384

  230 function_name: "operator" "is" "name" .

    $default  reduce using rule 230 (function_name)


State 385

  231 function_name: "operator" "as" "name" .

    $default  reduce using rule 231 (function_name)


State 386

  224 function_name: "operator" "?." "name" .

    $default  reduce using rule 224 (function_name)


State 387

  208 function_name: "operator" "?[" ']' .

    $default  reduce using rule 208 (function_name)


State 388

  232 function_name: "operator" '?' "as" .
  233              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 527

    $default  reduce using rule 232 (function_name)


State 389

  211 function_name: "operator" '.' "name" .
  212              | "operator" '.' "name" . ":="
  213              | "operator" '.' "name" . "+="
  214              | "operator" '.' "name" . "-="
  215              | "operator" '.' "name" . "*="
  216              | "operator" '.' "name" . "/="
  217              | "operator" '.' "name" . "%="
  218              | "operator" '.' "name" . "&="
  219              | "operator" '.' "name" . "|="
  220              | "operator" '.' "name" . "^="
  221              | "operator" '.' "name" . "&&="
  222              | "operator" '.' "name" . "||="
  223              | "operator" '.' "name" . "^^="

    "+="   shift, and go to state 528
    "-="   shift, and go to state 529
    "/="   shift, and go to state 530
    "*="   shift, and go to state 531
    "%="   shift, and go to state 532
    "&="   shift, and go to state 533
    "|="   shift, and go to state 534
    "^="   shift, and go to state 535
    ":="   shift, and go to state 536
    "&&="  shift, and go to state 537
    "||="  shift, and go to state 538
    "^^="  shift, and go to state 539

    $default  reduce using rule 211 (function_name)


State 390

  207 function_name: "operator" '[' ']' .

    $default  reduce using rule 207 (function_name)


State 391

  555 function_argument_declaration_type: "$a" . '(' expr ')'

    '('  shift, and go to state 540


State 392

  159 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 159 (optional_function_argument_list)


State 393

  553 function_argument_declaration_no_type: optional_field_annotation . kwd_let_var_or_nothing variable_declaration_no_type
  554 function_argument_declaration_type: optional_field_annotation . kwd_let_var_or_nothing variable_declaration_type

    "let"  shift, and go to state 541
    "var"  shift, and go to state 542

    $default  reduce using rule 327 (kwd_let_var_or_nothing)

    kwd_let_var_or_nothing  go to state 543


State 394

  556 function_argument_list: function_argument_declaration_no_type .
  558                       | function_argument_declaration_no_type . ';' function_argument_list

    ';'  shift, and go to state 544

    $default  reduce using rule 556 (function_argument_list)


State 395

  557 function_argument_list: function_argument_declaration_type .
  559                       | function_argument_declaration_type . ';' function_argument_list
  560                       | function_argument_declaration_type . ',' function_argument_list

    ','  shift, and go to state 545
    ';'  shift, and go to state 546

    $default  reduce using rule 557 (function_argument_list)


State 396

  160 optional_function_argument_list: '(' function_argument_list . ')'

    ')'  shift, and go to state 547


State 397

  162 optional_function_type: ':' . type_declaration

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 276
    type_declaration_no_options_no_dim  go to state 277
    type_declaration                    go to state 548


State 398

  263 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 263 (function_declaration_header)


State 399

  265 function_declaration: optional_public_or_private_function $@13 function_declaration_header optional_emit_semis expression_block .

    $default  reduce using rule 265 (function_declaration)


State 400

  272 expression_block: $@16 . '{' expressions $@17 '}' expression_block_finally

    '{'  shift, and go to state 549


State 401

  695 enum_basic_type_declaration: "int" .

    $default  reduce using rule 695 (enum_basic_type_declaration)


State 402

  698 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 698 (enum_basic_type_declaration)


State 403

  701 enum_basic_type_declaration: "int64" .

    $default  reduce using rule 701 (enum_basic_type_declaration)


State 404

  702 enum_basic_type_declaration: "uint64" .

    $default  reduce using rule 702 (enum_basic_type_declaration)


State 405

  696 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 696 (enum_basic_type_declaration)


State 406

  699 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 699 (enum_basic_type_declaration)


State 407

  697 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 697 (enum_basic_type_declaration)


State 408

  700 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 700 (enum_basic_type_declaration)


State 409

  634 optional_enum_basic_type_declaration: ':' enum_basic_type_declaration .

    $default  reduce using rule 634 (optional_enum_basic_type_declaration)


State 410

  644 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas . '{' $@47 enum_list optional_commas $@48 '}'

    '{'  shift, and go to state 550


State 411

  649 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 551

    $default  reduce using rule 645 (optional_structure_parent)

    optional_structure_parent  go to state 552


State 412

  662 structure_declaration: optional_annotation_list_with_emit_semis $@49 class_or_struct optional_public_or_private_structure $@50 structure_name optional_emit_semis . $@51 optional_struct_variable_declaration_list

    $default  reduce using rule 661 ($@51)

    $@51  go to state 553


State 413

  612 global_variable_declaration_list: global_variable_declaration_list $@43 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 554
    "name"  shift, and go to state 555

    let_variable_name_with_pos_list  go to state 556
    let_variable_declaration         go to state 557


State 414

  137 metadata_argument_list: '@' annotation_argument optional_emit_semis .

    $default  reduce using rule 137 (metadata_argument_list)


State 415

  138 metadata_argument_list: metadata_argument_list '@' annotation_argument . optional_emit_semis

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 558


State 416

  594 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list ',' . "name"

    "name"  shift, and go to state 559


State 417

  601 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' . type_declaration_no_options SEMICOLON
  602                                | global_let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr SEMICOLON

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 560
    type_declaration_no_options_no_dim  go to state 277


State 418

  587 optional_ref: '&' .

    $default  reduce using rule 587 (optional_ref)


State 419

  603 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr SEMICOLON

    "<-"  shift, and go to state 561
    ":="  shift, and go to state 562
    '='   shift, and go to state 563

    copy_or_move_or_clone  go to state 564


State 420

  733 type_declaration_no_options_no_dim: "type" '<' $@54 . type_declaration '>' $@55

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 276
    type_declaration_no_options_no_dim  go to state 277
    type_declaration                    go to state 565


State 421

  756 type_declaration_no_options_no_dim: "array" '<' $@59 . type_declaration '>' $@60

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 276
    type_declaration_no_options_no_dim  go to state 277
    type_declaration                    go to state 566


State 422

  759 type_declaration_no_options_no_dim: "table" '<' $@61 . table_type_pair '>' $@62

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    table_type_pair                     go to state 567
    type_declaration_no_options         go to state 276
    type_declaration_no_options_no_dim  go to state 277
    type_declaration                    go to state 568


State 423

  834 make_struct_decl: "struct" . '<' $@93 type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 569


State 424

  837 make_struct_decl: "class" . '<' $@95 type_declaration_no_options '>' $@96 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 570


State 425

  436 expr: "true" .

    $default  reduce using rule 436 (expr)


State 426

  437 expr: "false" .

    $default  reduce using rule 437 (expr)


State 427

  311 expr_new: "new" . new_type_declaration
  312         | "new" . new_type_declaration '(' use_initializer ')'
  313         | "new" . new_type_declaration '(' expr_list ')'
  314         | "new" . new_type_declaration '(' make_struct_single ')'
  315         | "new" . new_type_declaration '(' "uninitialized" make_struct_single ')'
  316         | "new" . make_decl

    "struct"       shift, and go to state 423
    "class"        shift, and go to state 424
    "array"        shift, and go to state 430
    "table"        shift, and go to state 432
    "fixed_array"  shift, and go to state 439
    "default"      shift, and go to state 440
    "tuple"        shift, and go to state 442
    "variant"      shift, and go to state 443
    "::"           shift, and go to state 57
    "name"         shift, and go to state 58
    '<'            shift, and go to state 571
    '['            shift, and go to state 467
    '{'            shift, and go to state 471

    name_in_namespace           go to state 271
    new_type_declaration        go to state 572
    structure_type_declaration  go to state 573
    make_decl                   go to state 574
    make_struct_decl            go to state 493
    make_tuple_call             go to state 494
    make_dim_decl               go to state 495
    make_table_decl             go to state 496
    array_comprehension         go to state 497


State 428

  351 expr_type_info: "typeinfo" . name_in_namespace '(' expr ')'
  352               | "typeinfo" . name_in_namespace '<' "name" '>' '(' expr ')'
  353               | "typeinfo" . name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')'

    "::"    shift, and go to state 57
    "name"  shift, and go to state 58

    name_in_namespace  go to state 575


State 429

  350 expr_type_decl: "type" . '<' $@26 type_declaration '>' $@27

    '<'  shift, and go to state 576


State 430

  853 make_dim_decl: "array" . "struct" '<' $@103 type_declaration_no_options '>' $@104 '(' use_initializer optional_make_struct_dim_decl ')'
  856              | "array" . "tuple" '<' $@105 tuple_type_list '>' $@106 '(' use_initializer optional_make_struct_dim_decl ')'
  859              | "array" . "variant" '<' $@107 variant_type_list '>' $@108 '(' make_variant_dim ')'
  860              | "array" . '(' expr_list optional_comma ')'
  863              | "array" . '<' $@109 type_declaration_no_options '>' $@110 '(' optional_expr_list ')'

    "struct"   shift, and go to state 577
    "tuple"    shift, and go to state 578
    "variant"  shift, and go to state 579
    '<'        shift, and go to state 580
    '('        shift, and go to state 581


State 431

  430 expr: "null" .

    $default  reduce using rule 430 (expr)


State 432

  872 make_table_decl: "table" . '(' expr_map_tuple_list optional_comma ')'
  873                | "table" . '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  874                | "table" . '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    '<'  shift, and go to state 582
    '('  shift, and go to state 583


State 433

  481 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 584


State 434

  341 expr_cast: "cast" . '<' $@20 type_declaration_no_options '>' $@21 expr

    '<'  shift, and go to state 585


State 435

  344 expr_cast: "upcast" . '<' $@22 type_declaration_no_options '>' $@23 expr

    '<'  shift, and go to state 586


State 436

  482 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 587


State 437

  347 expr_cast: "reinterpret" . '<' $@24 type_declaration_no_options '>' $@25 expr

    '<'  shift, and go to state 588


State 438

  512 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 589


State 439

  864 make_dim_decl: "fixed_array" . '(' expr_list optional_comma ')'
  867              | "fixed_array" . '<' $@111 type_declaration_no_options '>' $@112 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 590
    '('  shift, and go to state 591


State 440

  843 make_struct_decl: "default" . '<' $@99 type_declaration_no_options '>' $@100 use_initializer

    '<'  shift, and go to state 592


State 441

  694 basic_type_declaration: "bitfield" .

    $default  reduce using rule 694 (basic_type_declaration)


State 442

  846 make_tuple_call: "tuple" . '(' expr_list optional_comma ')'
  849                | "tuple" . '<' $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 593
    '('  shift, and go to state 594


State 443

  840 make_struct_decl: "variant" . '<' $@97 variant_type_list '>' $@98 '(' use_initializer make_variant_dim ')'

    '<'  shift, and go to state 595


State 444

  513 expr_generator: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  514               | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  515               | "generator" . '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block

    '<'  shift, and go to state 596


State 445

  466 expr: "++" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 597
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 446

  467 expr: "--" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 598
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 447

  516 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 599


State 448

  517 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 600


State 449

  518 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 601


State 450

  519 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 602


State 451

  520 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 603


State 452

  522 expr_mtag: "$c" . '(' expr ')' '(' ')'
  523          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 604


State 453

  521 expr_mtag: "..." .

    $default  reduce using rule 521 (expr_mtag)


State 454

  374 expr_numeric_const: "integer constant" .

    $default  reduce using rule 374 (expr_numeric_const)


State 455

  376 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 376 (expr_numeric_const)


State 456

  375 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 375 (expr_numeric_const)


State 457

  377 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 377 (expr_numeric_const)


State 458

  378 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 378 (expr_numeric_const)


State 459

  379 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 379 (expr_numeric_const)


State 460

  380 expr_numeric_const: "double constant" .

    $default  reduce using rule 380 (expr_numeric_const)


State 461

   43 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 40 (string_builder_body)

    string_builder_body  go to state 605


State 462

  443 expr: '-' . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 606
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 463

  442 expr: '+' . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 607
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 464

  480 expr: '*' . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 608
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 465

  441 expr: '~' . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 609
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 466

  440 expr: '!' . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 610
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 467

  850 make_dim_decl: '[' . optional_expr_list ']'
  879 array_comprehension: '[' . "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  880                    | '[' . "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "for"                             shift, and go to state 611
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "iterator"                        shift, and go to state 612
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    $default  reduce using rule 296 (optional_expr_list)

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    optional_expr_list      go to state 613
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    expr_list               go to state 614
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 615
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 468

  470 expr: '(' . expr_list optional_comma ')'
  471     | '(' . make_struct_single ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "$f"                              shift, and go to state 616
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 617
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    expr_list               go to state 618
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 615
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_fields      go to state 619
    make_struct_single      go to state 620
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 469

  359 block_or_lambda: '$' .

    $default  reduce using rule 359 (block_or_lambda)


State 470

  360 block_or_lambda: '@' .
  361                | '@' . '@'
  406 func_addr_expr: '@' . '@' func_addr_name
  409               | '@' . '@' '<' $@28 type_declaration_no_options '>' $@29 func_addr_name
  412               | '@' . '@' '<' $@30 optional_function_argument_list optional_function_type '>' $@31 func_addr_name
  531 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 621

    $default  reduce using rule 360 (block_or_lambda)


State 471

  871 make_table_decl: '{' . $@113 optional_emit_semis optional_expr_map_tuple_list '}'
  881 array_comprehension: '{' . "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "for"  shift, and go to state 622

    $default  reduce using rule 870 ($@113)

    $@113  go to state 623


State 472

  434 expr: string_builder .

    $default  reduce using rule 434 (expr)


State 473

  433 expr: expr_reader .

    $default  reduce using rule 433 (expr)


State 474

  511 expr: expr_call_pipe .

    $default  reduce using rule 511 (expr)


State 475

  400 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  401                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  423 expr_call: name_in_namespace . '(' ')'
  424          | name_in_namespace . '(' "uninitialized" ')'
  425          | name_in_namespace . '(' make_struct_single ')'
  426          | name_in_namespace . '(' "uninitialized" make_struct_single ')'
  427          | name_in_namespace . '(' expr_list ')'
  431 expr: name_in_namespace .

    '('  shift, and go to state 624

    $default  reduce using rule 431 (expr)


State 476

  504 expr: expr_new .

    $default  reduce using rule 504 (expr)


State 477

  503 expr: expr_cast .

    $default  reduce using rule 503 (expr)


State 478

  502 expr: expr_type_decl .

    $default  reduce using rule 502 (expr)


State 479

  501 expr: expr_type_info .

    $default  reduce using rule 501 (expr)


State 480

  371 expr_full_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

    '['  shift, and go to state 625

    $default  reduce using rule 154 (optional_annotation_list)

    optional_annotation_list  go to state 626


State 481

  507 expr: expr_full_block .

    $default  reduce using rule 507 (expr)


State 482

  432 expr: expr_numeric_const .

    $default  reduce using rule 432 (expr)


State 483

  506 expr: expr_named_call .

    $default  reduce using rule 506 (expr)


State 484

  505 expr: expr_method_call .

    $default  reduce using rule 505 (expr)


State 485

  478 expr: func_addr_expr .

    $default  reduce using rule 478 (expr)


State 486

  438 expr: expr_field .

    $default  reduce using rule 438 (expr)


State 487

  273 expr_call_pipe: expr_call . expr_full_block_assumed_piped
  479 expr: expr_call .

    '$'  shift, and go to state 469
    '@'  shift, and go to state 627
    '{'  shift, and go to state 628

    $default  reduce using rule 479 (expr)

    block_or_lambda                go to state 629
    expr_full_block_assumed_piped  go to state 630


State 488

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  734 type_declaration_no_options_no_dim: "typedecl" '(' expr . ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 666


State 489

  483 expr: expr_generator .

    $default  reduce using rule 483 (expr)


State 490

  439 expr: expr_mtag .

    $default  reduce using rule 439 (expr)


State 491

  428 expr_call: basic_type_declaration . '(' ')'
  429          | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 667


State 492

  435 expr: make_decl .

    $default  reduce using rule 435 (expr)


State 493

  808 make_decl: make_struct_decl .

    $default  reduce using rule 808 (make_decl)


State 494

  812 make_decl: make_tuple_call .

    $default  reduce using rule 812 (make_decl)


State 495

  809 make_decl: make_dim_decl .

    $default  reduce using rule 809 (make_decl)


State 496

  810 make_decl: make_table_decl .

    $default  reduce using rule 810 (make_decl)


State 497

  811 make_decl: array_comprehension .

    $default  reduce using rule 811 (make_decl)


State 498

  762 type_declaration_no_options_no_dim: "iterator" '<' $@63 . type_declaration '>' $@64

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 276
    type_declaration_no_options_no_dim  go to state 277
    type_declaration                    go to state 668


State 499

  752 type_declaration_no_options_no_dim: "smart_ptr" '<' $@57 . type_declaration '>' $@58

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 276
    type_declaration_no_options_no_dim  go to state 277
    type_declaration                    go to state 669


State 500

  705 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 670


State 501

  716 bitfield_type_declaration: "bitfield" '<' $@52 . bitfield_bits '>' $@53

    "name"  shift, and go to state 671

    bitfield_bits  go to state 672


State 502

  766 type_declaration_no_options_no_dim: "block" '<' $@65 . type_declaration '>' $@66

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 276
    type_declaration_no_options_no_dim  go to state 277
    type_declaration                    go to state 673


State 503

  769 type_declaration_no_options_no_dim: "block" '<' $@67 . optional_function_argument_list optional_function_type '>' $@68

    '('  shift, and go to state 337

    $default  reduce using rule 158 (optional_function_argument_list)

    optional_function_argument_list  go to state 674


State 504

  773 type_declaration_no_options_no_dim: "function" '<' $@69 . type_declaration '>' $@70

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 276
    type_declaration_no_options_no_dim  go to state 277
    type_declaration                    go to state 675


State 505

  776 type_declaration_no_options_no_dim: "function" '<' $@71 . optional_function_argument_list optional_function_type '>' $@72

    '('  shift, and go to state 337

    $default  reduce using rule 158 (optional_function_argument_list)

    optional_function_argument_list  go to state 676


State 506

  780 type_declaration_no_options_no_dim: "lambda" '<' $@73 . type_declaration '>' $@74

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 276
    type_declaration_no_options_no_dim  go to state 277
    type_declaration                    go to state 677


State 507

  783 type_declaration_no_options_no_dim: "lambda" '<' $@75 . optional_function_argument_list optional_function_type '>' $@76

    '('  shift, and go to state 337

    $default  reduce using rule 158 (optional_function_argument_list)

    optional_function_argument_list  go to state 678


State 508

  786 type_declaration_no_options_no_dim: "tuple" '<' $@77 . tuple_type_list '>' $@78

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 679
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    tuple_type                          go to state 680
    tuple_type_list                     go to state 681
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 276
    type_declaration_no_options_no_dim  go to state 277
    type_declaration                    go to state 682


State 509

  789 type_declaration_no_options_no_dim: "variant" '<' $@79 . variant_type_list '>' $@80

    "name"  shift, and go to state 683

    variant_type       go to state 684
    variant_type_list  go to state 685


State 510

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  706 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 686


State 511

  737 type_declaration_no_options_no_dim: '$' name_in_namespace '<' . $@56 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    $default  reduce using rule 736 ($@56)

    $@56  go to state 687


State 512

  735 type_declaration_no_options_no_dim: '$' name_in_namespace '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    $default  reduce using rule 296 (optional_expr_list)

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    optional_expr_list      go to state 688
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    expr_list               go to state 614
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 615
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 513

  747 type_declaration_no_options_no_dim: type_declaration_no_options "==" "const" .

    $default  reduce using rule 747 (type_declaration_no_options_no_dim)


State 514

  748 type_declaration_no_options_no_dim: type_declaration_no_options "==" '&' .

    $default  reduce using rule 748 (type_declaration_no_options_no_dim)


State 515

  741 type_declaration_no_options_no_dim: type_declaration_no_options '-' "const" .

    $default  reduce using rule 741 (type_declaration_no_options_no_dim)


State 516

  743 type_declaration_no_options_no_dim: type_declaration_no_options '-' '&' .

    $default  reduce using rule 743 (type_declaration_no_options_no_dim)


State 517

  738 type_declaration_no_options_no_dim: type_declaration_no_options '-' '[' . ']'

    ']'  shift, and go to state 689


State 518

  746 type_declaration_no_options_no_dim: type_declaration_no_options '-' '#' .

    $default  reduce using rule 746 (type_declaration_no_options_no_dim)


State 519

  722 dim_list: '[' ']' .

    $default  reduce using rule 722 (dim_list)


State 520

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  721 dim_list: '[' expr . ']'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ']'    shift, and go to state 690


State 521

  723 dim_list: dim_list '[' . expr ']'
  724         | dim_list '[' . ']'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    ']'                               shift, and go to state 691
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 692
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 522

  792 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 792 (type_declaration)


State 523

  738 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  739                                   | type_declaration_no_options . "explicit"
  740                                   | type_declaration_no_options . "const"
  741                                   | type_declaration_no_options . '-' "const"
  742                                   | type_declaration_no_options . '&'
  743                                   | type_declaration_no_options . '-' '&'
  744                                   | type_declaration_no_options . '#'
  745                                   | type_declaration_no_options . "implicit"
  746                                   | type_declaration_no_options . '-' '#'
  747                                   | type_declaration_no_options . "==" "const"
  748                                   | type_declaration_no_options . "==" '&'
  749                                   | type_declaration_no_options . '?'
  753                                   | type_declaration_no_options . "??"
  791 type_declaration: type_declaration '|' type_declaration_no_options .

    "const"     shift, and go to state 369
    "implicit"  shift, and go to state 370
    "explicit"  shift, and go to state 371
    "=="        shift, and go to state 372
    "??"        shift, and go to state 373
    '?'         shift, and go to state 374
    '&'         shift, and go to state 375
    '-'         shift, and go to state 376
    '#'         shift, and go to state 377

    $default  reduce using rule 791 (type_declaration)


State 524

  807 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias "name" optional_emit_commas $@90 '{' $@91 . bitfield_alias_bits optional_commas $@92 '}'

    "name"  shift, and go to state 693

    $default  reduce using rule 709 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 694


State 525

  797 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 . tuple_alias_type_list optional_semis $@84 '}'

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 679
    '$'          shift, and go to state 270

    $default  reduce using rule 565 (tuple_alias_type_list)

    name_in_namespace                   go to state 271
    tuple_type                          go to state 695
    tuple_alias_type_list               go to state 696
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 276
    type_declaration_no_options_no_dim  go to state 277
    type_declaration                    go to state 682


State 526

  802 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 '{' $@87 . variant_alias_type_list optional_semis $@88 '}'

    "name"  shift, and go to state 683

    $default  reduce using rule 571 (variant_alias_type_list)

    variant_type             go to state 697
    variant_alias_type_list  go to state 698


State 527

  233 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 233 (function_name)


State 528

  213 function_name: "operator" '.' "name" "+=" .

    $default  reduce using rule 213 (function_name)


State 529

  214 function_name: "operator" '.' "name" "-=" .

    $default  reduce using rule 214 (function_name)


State 530

  216 function_name: "operator" '.' "name" "/=" .

    $default  reduce using rule 216 (function_name)


State 531

  215 function_name: "operator" '.' "name" "*=" .

    $default  reduce using rule 215 (function_name)


State 532

  217 function_name: "operator" '.' "name" "%=" .

    $default  reduce using rule 217 (function_name)


State 533

  218 function_name: "operator" '.' "name" "&=" .

    $default  reduce using rule 218 (function_name)


State 534

  219 function_name: "operator" '.' "name" "|=" .

    $default  reduce using rule 219 (function_name)


State 535

  220 function_name: "operator" '.' "name" "^=" .

    $default  reduce using rule 220 (function_name)


State 536

  212 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 212 (function_name)


State 537

  221 function_name: "operator" '.' "name" "&&=" .

    $default  reduce using rule 221 (function_name)


State 538

  222 function_name: "operator" '.' "name" "||=" .

    $default  reduce using rule 222 (function_name)


State 539

  223 function_name: "operator" '.' "name" "^^=" .

    $default  reduce using rule 223 (function_name)


State 540

  555 function_argument_declaration_type: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 699
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 541

  325 kwd_let_var_or_nothing: "let" .

    $default  reduce using rule 325 (kwd_let_var_or_nothing)


State 542

  326 kwd_let_var_or_nothing: "var" .

    $default  reduce using rule 326 (kwd_let_var_or_nothing)


State 543

  553 function_argument_declaration_no_type: optional_field_annotation kwd_let_var_or_nothing . variable_declaration_no_type
  554 function_argument_declaration_type: optional_field_annotation kwd_let_var_or_nothing . variable_declaration_type

    "$i"    shift, and go to state 700
    "name"  shift, and go to state 701

    variable_declaration_no_type  go to state 702
    variable_declaration_type     go to state 703
    variable_name_with_pos_list   go to state 704


State 544

  558 function_argument_list: function_argument_declaration_no_type ';' . function_argument_list

    "$a"  shift, and go to state 391
    '@'   shift, and go to state 222

    $default  reduce using rule 532 (optional_field_annotation)

    metadata_argument_list                 go to state 223
    optional_field_annotation              go to state 393
    function_argument_declaration_no_type  go to state 394
    function_argument_declaration_type     go to state 395
    function_argument_list                 go to state 705


State 545

  560 function_argument_list: function_argument_declaration_type ',' . function_argument_list

    "$a"  shift, and go to state 391
    '@'   shift, and go to state 222

    $default  reduce using rule 532 (optional_field_annotation)

    metadata_argument_list                 go to state 223
    optional_field_annotation              go to state 393
    function_argument_declaration_no_type  go to state 394
    function_argument_declaration_type     go to state 395
    function_argument_list                 go to state 706


State 546

  559 function_argument_list: function_argument_declaration_type ';' . function_argument_list

    "$a"  shift, and go to state 391
    '@'   shift, and go to state 222

    $default  reduce using rule 532 (optional_field_annotation)

    metadata_argument_list                 go to state 223
    optional_field_annotation              go to state 393
    function_argument_declaration_no_type  go to state 394
    function_argument_declaration_type     go to state 395
    function_argument_list                 go to state 707


State 547

  160 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 160 (optional_function_argument_list)


State 548

  162 optional_function_type: ':' type_declaration .
  791 type_declaration: type_declaration . '|' type_declaration_no_options
  792                 | type_declaration . '|' '#'

    '|'  shift, and go to state 380

    $default  reduce using rule 162 (optional_function_type)


State 549

  272 expression_block: $@16 '{' . expressions $@17 '}' expression_block_finally

    $default  reduce using rule 293 (expressions)

    expressions  go to state 708


State 550

  644 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' . $@47 enum_list optional_commas $@48 '}'

    $default  reduce using rule 642 ($@47)

    $@47  go to state 709


State 551

  646 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 57
    "name"  shift, and go to state 58

    name_in_namespace  go to state 710


State 552

  649 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 649 (structure_name)


State 553

  662 structure_declaration: optional_annotation_list_with_emit_semis $@49 class_or_struct optional_public_or_private_structure $@50 structure_name optional_emit_semis $@51 . optional_struct_variable_declaration_list

    ';'  shift, and go to state 711
    '{'  shift, and go to state 712

    optional_struct_variable_declaration_list  go to state 713


State 554

  589 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 714


State 555

  588 let_variable_name_with_pos_list: "name" .
  590                                | "name" . "aka" "name"

    "aka"  shift, and go to state 715

    $default  reduce using rule 588 (let_variable_name_with_pos_list)


State 556

  591 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  592                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  598 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options SEMICOLON
  599                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  600                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr SEMICOLON

    ','  shift, and go to state 716
    ':'  shift, and go to state 717
    '&'  shift, and go to state 418

    $default  reduce using rule 586 (optional_ref)

    optional_ref  go to state 718


State 557

  612 global_variable_declaration_list: global_variable_declaration_list $@43 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 612 (global_variable_declaration_list)


State 558

  138 metadata_argument_list: metadata_argument_list '@' annotation_argument optional_emit_semis .

    $default  reduce using rule 138 (metadata_argument_list)


State 559

  594 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list ',' "name" .

    $default  reduce using rule 594 (global_let_variable_name_with_pos_list)


State 560

  601 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options . SEMICOLON
  602                                | global_let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr SEMICOLON
  738 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  739                                   | type_declaration_no_options . "explicit"
  740                                   | type_declaration_no_options . "const"
  741                                   | type_declaration_no_options . '-' "const"
  742                                   | type_declaration_no_options . '&'
  743                                   | type_declaration_no_options . '-' '&'
  744                                   | type_declaration_no_options . '#'
  745                                   | type_declaration_no_options . "implicit"
  746                                   | type_declaration_no_options . '-' '#'
  747                                   | type_declaration_no_options . "==" "const"
  748                                   | type_declaration_no_options . "==" '&'
  749                                   | type_declaration_no_options . '?'
  753                                   | type_declaration_no_options . "??"

    "const"                shift, and go to state 369
    "implicit"             shift, and go to state 370
    "explicit"             shift, and go to state 371
    "=="                   shift, and go to state 372
    "<-"                   shift, and go to state 561
    "??"                   shift, and go to state 373
    ":="                   shift, and go to state 562
    "new line, semicolon"  shift, and go to state 13
    '='                    shift, and go to state 563
    '?'                    shift, and go to state 374
    '&'                    shift, and go to state 375
    '-'                    shift, and go to state 376
    ';'                    shift, and go to state 16
    '#'                    shift, and go to state 377

    SEMICOLON              go to state 719
    copy_or_move_or_clone  go to state 720


State 561

  584 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 584 (copy_or_move_or_clone)


State 562

  585 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 585 (copy_or_move_or_clone)


State 563

  583 copy_or_move_or_clone: '=' .

    $default  reduce using rule 583 (copy_or_move_or_clone)


State 564

  603 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 721
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 565

  733 type_declaration_no_options_no_dim: "type" '<' $@54 type_declaration . '>' $@55
  791 type_declaration: type_declaration . '|' type_declaration_no_options
  792                 | type_declaration . '|' '#'

    '|'  shift, and go to state 380
    '>'  shift, and go to state 722


State 566

  756 type_declaration_no_options_no_dim: "array" '<' $@59 type_declaration . '>' $@60
  791 type_declaration: type_declaration . '|' type_declaration_no_options
  792                 | type_declaration . '|' '#'

    '|'  shift, and go to state 380
    '>'  shift, and go to state 723


State 567

  759 type_declaration_no_options_no_dim: "table" '<' $@61 table_type_pair . '>' $@62

    '>'  shift, and go to state 724


State 568

  719 table_type_pair: type_declaration .
  720                | type_declaration . c_or_s type_declaration
  791 type_declaration: type_declaration . '|' type_declaration_no_options
  792                 | type_declaration . '|' '#'

    "new line, comma"      shift, and go to state 725
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 726
    '|'                    shift, and go to state 380
    ';'                    shift, and go to state 16

    $default  reduce using rule 719 (table_type_pair)

    COMMA      go to state 727
    SEMICOLON  go to state 728
    c_or_s     go to state 729


State 569

  834 make_struct_decl: "struct" '<' . $@93 type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 832 ($@93)

    $@93  go to state 730


State 570

  837 make_struct_decl: "class" '<' . $@95 type_declaration_no_options '>' $@96 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 835 ($@95)

    $@95  go to state 731


State 571

  309 new_type_declaration: '<' . $@18 type_declaration '>' $@19

    $default  reduce using rule 307 ($@18)

    $@18  go to state 732


State 572

  311 expr_new: "new" new_type_declaration .
  312         | "new" new_type_declaration . '(' use_initializer ')'
  313         | "new" new_type_declaration . '(' expr_list ')'
  314         | "new" new_type_declaration . '(' make_struct_single ')'
  315         | "new" new_type_declaration . '(' "uninitialized" make_struct_single ')'

    '('  shift, and go to state 733

    $default  reduce using rule 311 (expr_new)


State 573

  310 new_type_declaration: structure_type_declaration .

    $default  reduce using rule 310 (new_type_declaration)


State 574

  316 expr_new: "new" make_decl .

    $default  reduce using rule 316 (expr_new)


State 575

  351 expr_type_info: "typeinfo" name_in_namespace . '(' expr ')'
  352               | "typeinfo" name_in_namespace . '<' "name" '>' '(' expr ')'
  353               | "typeinfo" name_in_namespace . '<' "name" c_or_s "name" '>' '(' expr ')'

    '<'  shift, and go to state 734
    '('  shift, and go to state 735


State 576

  350 expr_type_decl: "type" '<' . $@26 type_declaration '>' $@27

    $default  reduce using rule 348 ($@26)

    $@26  go to state 736


State 577

  853 make_dim_decl: "array" "struct" . '<' $@103 type_declaration_no_options '>' $@104 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 737


State 578

  856 make_dim_decl: "array" "tuple" . '<' $@105 tuple_type_list '>' $@106 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 738


State 579

  859 make_dim_decl: "array" "variant" . '<' $@107 variant_type_list '>' $@108 '(' make_variant_dim ')'

    '<'  shift, and go to state 739


State 580

  863 make_dim_decl: "array" '<' . $@109 type_declaration_no_options '>' $@110 '(' optional_expr_list ')'

    $default  reduce using rule 861 ($@109)

    $@109  go to state 740


State 581

  860 make_dim_decl: "array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    expr_list               go to state 741
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 615
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 582

  873 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  874                | "table" '<' . type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 742
    type_declaration_no_options_no_dim  go to state 277


State 583

  872 make_table_decl: "table" '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 743
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_map_tuple          go to state 744
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    expr_map_tuple_list     go to state 745
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 584

  481 expr: "deref" '(' . expr ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 746
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 585

  341 expr_cast: "cast" '<' . $@20 type_declaration_no_options '>' $@21 expr

    $default  reduce using rule 339 ($@20)

    $@20  go to state 747


State 586

  344 expr_cast: "upcast" '<' . $@22 type_declaration_no_options '>' $@23 expr

    $default  reduce using rule 342 ($@22)

    $@22  go to state 748


State 587

  482 expr: "addr" '(' . expr ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 749
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 588

  347 expr_cast: "reinterpret" '<' . $@24 type_declaration_no_options '>' $@25 expr

    $default  reduce using rule 345 ($@24)

    $@24  go to state 750


State 589

  512 expr: "unsafe" '(' . expr ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 751
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 590

  867 make_dim_decl: "fixed_array" '<' . $@111 type_declaration_no_options '>' $@112 '(' expr_list optional_comma ')'

    $default  reduce using rule 865 ($@111)

    $@111  go to state 752


State 591

  864 make_dim_decl: "fixed_array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    expr_list               go to state 753
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 615
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 592

  843 make_struct_decl: "default" '<' . $@99 type_declaration_no_options '>' $@100 use_initializer

    $default  reduce using rule 841 ($@99)

    $@99  go to state 754


State 593

  849 make_tuple_call: "tuple" '<' . $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 847 ($@101)

    $@101  go to state 755


State 594

  846 make_tuple_call: "tuple" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    expr_list               go to state 756
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 615
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 595

  840 make_struct_decl: "variant" '<' . $@97 variant_type_list '>' $@98 '(' use_initializer make_variant_dim ')'

    $default  reduce using rule 838 ($@97)

    $@97  go to state 757


State 596

  513 expr_generator: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  514               | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'
  515               | "generator" '<' . type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 758
    type_declaration_no_options_no_dim  go to state 277


State 597

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  466     | "++" expr .
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 631
    "as"  shift, and go to state 632
    "++"  shift, and go to state 635
    "--"  shift, and go to state 636
    "->"  shift, and go to state 641
    "?."  shift, and go to state 643
    "?["  shift, and go to state 644
    "<|"  shift, and go to state 645
    "|>"  shift, and go to state 646
    '.'   shift, and go to state 664
    '['   shift, and go to state 665

    $default  reduce using rule 466 (expr)


State 598

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  467     | "--" expr .
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 631
    "as"  shift, and go to state 632
    "++"  shift, and go to state 635
    "--"  shift, and go to state 636
    "->"  shift, and go to state 641
    "?."  shift, and go to state 643
    "?["  shift, and go to state 644
    "<|"  shift, and go to state 645
    "|>"  shift, and go to state 646
    '.'   shift, and go to state 664
    '['   shift, and go to state 665

    $default  reduce using rule 467 (expr)


State 599

  516 expr_mtag: "$$" '(' . expr ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 759
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 600

  517 expr_mtag: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 760
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 601

  518 expr_mtag: "$v" '(' . expr ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 761
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 602

  519 expr_mtag: "$b" '(' . expr ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 762
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 603

  520 expr_mtag: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 763
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 604

  522 expr_mtag: "$c" '(' . expr ')' '(' ')'
  523          | "$c" '(' . expr ')' '(' expr_list ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 764
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 605

   41 string_builder_body: string_builder_body . character_sequence
   42                    | string_builder_body . "{" expr optional_format_string "}"
   43 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 163
    STRING_CHARACTER_ESC  shift, and go to state 164
    "end of the string"   shift, and go to state 765
    "{"                   shift, and go to state 766

    character_sequence  go to state 767


State 606

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  443 expr: '-' expr .
  444     | expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 631
    "as"  shift, and go to state 632
    "++"  shift, and go to state 635
    "--"  shift, and go to state 636
    "->"  shift, and go to state 641
    "?."  shift, and go to state 643
    "?["  shift, and go to state 644
    "<|"  shift, and go to state 645
    "|>"  shift, and go to state 646
    '.'   shift, and go to state 664
    '['   shift, and go to state 665

    $default  reduce using rule 443 (expr)


State 607

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  442 expr: '+' expr .
  444     | expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 631
    "as"  shift, and go to state 632
    "++"  shift, and go to state 635
    "--"  shift, and go to state 636
    "->"  shift, and go to state 641
    "?."  shift, and go to state 643
    "?["  shift, and go to state 644
    "<|"  shift, and go to state 645
    "|>"  shift, and go to state 646
    '.'   shift, and go to state 664
    '['   shift, and go to state 665

    $default  reduce using rule 442 (expr)


State 608

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  480     | '*' expr .
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 643
    "?["  shift, and go to state 644
    '.'   shift, and go to state 664
    '['   shift, and go to state 665

    $default  reduce using rule 480 (expr)


State 609

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  441 expr: '~' expr .
  444     | expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 631
    "as"  shift, and go to state 632
    "++"  shift, and go to state 635
    "--"  shift, and go to state 636
    "->"  shift, and go to state 641
    "?."  shift, and go to state 643
    "?["  shift, and go to state 644
    "<|"  shift, and go to state 645
    "|>"  shift, and go to state 646
    '.'   shift, and go to state 664
    '['   shift, and go to state 665

    $default  reduce using rule 441 (expr)


State 610

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  440 expr: '!' expr .
  444     | expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 631
    "as"  shift, and go to state 632
    "++"  shift, and go to state 635
    "--"  shift, and go to state 636
    "->"  shift, and go to state 641
    "?."  shift, and go to state 643
    "?["  shift, and go to state 644
    "<|"  shift, and go to state 645
    "|>"  shift, and go to state 646
    '.'   shift, and go to state 664
    '['   shift, and go to state 665

    $default  reduce using rule 440 (expr)


State 611

  879 array_comprehension: '[' "for" . '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    '('  shift, and go to state 768


State 612

  880 array_comprehension: '[' "iterator" . "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "for"  shift, and go to state 769


State 613

  850 make_dim_decl: '[' optional_expr_list . ']'

    ']'  shift, and go to state 770


State 614

  297 optional_expr_list: expr_list . optional_comma
  355 expr_list: expr_list . ',' expr

    ','  shift, and go to state 771

    $default  reduce using rule 877 (optional_comma)

    optional_comma  go to state 772


State 615

  354 expr_list: expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 354 (expr_list)


State 616

  817 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  818                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 773


State 617

  302 name_in_namespace: "name" .
  303                  | "name" . "::" "name"
  813 make_struct_fields: "name" . copy_or_move expr
  814                   | "name" . ":=" expr

    "<-"  shift, and go to state 774
    ":="  shift, and go to state 775
    "::"  shift, and go to state 96
    '='   shift, and go to state 776

    $default  reduce using rule 302 (name_in_namespace)

    copy_or_move  go to state 777


State 618

  355 expr_list: expr_list . ',' expr
  470 expr: '(' expr_list . optional_comma ')'

    ','  shift, and go to state 771

    $default  reduce using rule 877 (optional_comma)

    optional_comma  go to state 778


State 619

  815 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  816                   | make_struct_fields . ',' "name" ":=" expr
  819                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  820                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  823 make_struct_single: make_struct_fields . optional_comma

    ','  shift, and go to state 779

    $default  reduce using rule 877 (optional_comma)

    optional_comma  go to state 780


State 620

  471 expr: '(' make_struct_single . ')'

    ')'  shift, and go to state 781


State 621

  361 block_or_lambda: '@' '@' .
  406 func_addr_expr: '@' '@' . func_addr_name
  409               | '@' '@' . '<' $@28 type_declaration_no_options '>' $@29 func_addr_name
  412               | '@' '@' . '<' $@30 optional_function_argument_list optional_function_type '>' $@31 func_addr_name
  531 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 57
    "$i"    shift, and go to state 782
    "$c"    shift, and go to state 783
    "name"  shift, and go to state 58
    '<'     shift, and go to state 784

    $default  reduce using rule 361 (block_or_lambda)

    name_in_namespace  go to state 785
    func_addr_name     go to state 786


State 622

  881 array_comprehension: '{' "for" . '(' for_variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    '('  shift, and go to state 787


State 623

  871 make_table_decl: '{' $@113 . optional_emit_semis optional_expr_map_tuple_list '}'

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 788


State 624

  400 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  401                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  423 expr_call: name_in_namespace '(' . ')'
  424          | name_in_namespace '(' . "uninitialized" ')'
  425          | name_in_namespace '(' . make_struct_single ')'
  426          | name_in_namespace '(' . "uninitialized" make_struct_single ')'
  427          | name_in_namespace '(' . expr_list ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "uninitialized"                   shift, and go to state 789
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "$f"                              shift, and go to state 616
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 617
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 790
    '('                               shift, and go to state 468
    ')'                               shift, and go to state 791
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    expr_list               go to state 792
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 615
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_fields      go to state 619
    make_struct_single      go to state 793
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 625

  155 optional_annotation_list: '[' . annotation_list ']'

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 68
    annotation_list               go to state 794
    name_in_namespace             go to state 70


State 626

  371 expr_full_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

    "capture"  shift, and go to state 795

    $default  reduce using rule 369 (optional_capture_list)

    optional_capture_list  go to state 796


State 627

  360 block_or_lambda: '@' .
  361                | '@' . '@'

    '@'  shift, and go to state 797

    $default  reduce using rule 360 (block_or_lambda)


State 628

  373 expr_full_block_assumed_piped: '{' . expressions '}'

    $default  reduce using rule 293 (expressions)

    expressions  go to state 798


State 629

  372 expr_full_block_assumed_piped: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block

    '['  shift, and go to state 625

    $default  reduce using rule 154 (optional_annotation_list)

    optional_annotation_list  go to state 799


State 630

  273 expr_call_pipe: expr_call expr_full_block_assumed_piped .

    $default  reduce using rule 273 (expr_call_pipe)


State 631

  488 expr: expr "is" . "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr "is" . basic_type_declaration
  490     | expr "is" . "name"
  530 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 800
    "bool"      shift, and go to state 236
    "void"      shift, and go to state 237
    "string"    shift, and go to state 238
    "int"       shift, and go to state 240
    "int2"      shift, and go to state 241
    "int3"      shift, and go to state 242
    "int4"      shift, and go to state 243
    "uint"      shift, and go to state 244
    "bitfield"  shift, and go to state 441
    "uint2"     shift, and go to state 246
    "uint3"     shift, and go to state 247
    "uint4"     shift, and go to state 248
    "float"     shift, and go to state 249
    "float2"    shift, and go to state 250
    "float3"    shift, and go to state 251
    "float4"    shift, and go to state 252
    "range"     shift, and go to state 253
    "urange"    shift, and go to state 254
    "range64"   shift, and go to state 255
    "urange64"  shift, and go to state 256
    "int64"     shift, and go to state 258
    "uint64"    shift, and go to state 259
    "double"    shift, and go to state 260
    "int8"      shift, and go to state 263
    "uint8"     shift, and go to state 264
    "int16"     shift, and go to state 265
    "uint16"    shift, and go to state 266
    "$f"        shift, and go to state 801
    "name"      shift, and go to state 802

    basic_type_declaration  go to state 803


State 632

  491 expr: expr "as" . "name"
  494     | expr "as" . "type" '<' $@36 type_declaration '>' $@37
  495     | expr "as" . basic_type_declaration
  528 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 804
    "bool"      shift, and go to state 236
    "void"      shift, and go to state 237
    "string"    shift, and go to state 238
    "int"       shift, and go to state 240
    "int2"      shift, and go to state 241
    "int3"      shift, and go to state 242
    "int4"      shift, and go to state 243
    "uint"      shift, and go to state 244
    "bitfield"  shift, and go to state 441
    "uint2"     shift, and go to state 246
    "uint3"     shift, and go to state 247
    "uint4"     shift, and go to state 248
    "float"     shift, and go to state 249
    "float2"    shift, and go to state 250
    "float3"    shift, and go to state 251
    "float4"    shift, and go to state 252
    "range"     shift, and go to state 253
    "urange"    shift, and go to state 254
    "range64"   shift, and go to state 255
    "urange64"  shift, and go to state 256
    "int64"     shift, and go to state 258
    "uint64"    shift, and go to state 259
    "double"    shift, and go to state 260
    "int8"      shift, and go to state 263
    "uint8"     shift, and go to state 264
    "int16"     shift, and go to state 265
    "uint16"    shift, and go to state 266
    "$f"        shift, and go to state 805
    "name"      shift, and go to state 806

    basic_type_declaration  go to state 807


State 633

  444 expr: expr "<<" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 808
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 634

  445 expr: expr ">>" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 809
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 635

  468 expr: expr "++" .

    $default  reduce using rule 468 (expr)


State 636

  469 expr: expr "--" .

    $default  reduce using rule 469 (expr)


State 637

  457 expr: expr "<=" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 810
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 638

  458 expr: expr ">=" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 811
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 639

  455 expr: expr "==" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 812
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 640

  456 expr: expr "!=" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 813
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 641

  402 expr_method_call: expr "->" . "name" '(' ')'
  403                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 814


State 642

  484 expr: expr "??" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 815
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 643

  476 expr: expr "?." . "name"
  525 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 816
    "name"  shift, and go to state 817


State 644

  474 expr: expr "?[" . expr ']'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 818
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 645

  508 expr: expr "<|" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 819
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 646

  509 expr: expr "|>" . expr
  510     | expr "|>" . basic_type_declaration

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 820
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 821
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 647

  446 expr: expr "<<<" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 822
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 648

  447 expr: expr ">>>" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 823
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 649

  462 expr: expr "&&" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 824
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 650

  463 expr: expr "||" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 825
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 651

  464 expr: expr "^^" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 826
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 652

  465 expr: expr ".." . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 827
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 653

  485 expr: expr '?' . expr ':' expr
  496     | expr '?' . "as" "name"
  499     | expr '?' . "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr '?' . "as" basic_type_declaration
  529 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "as"                              shift, and go to state 828
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 829
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 654

  460 expr: expr '|' . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 830
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 655

  461 expr: expr '^' . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 831
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 656

  459 expr: expr '&' . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 832
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 657

  453 expr: expr '<' . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 833
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 658

  454 expr: expr '>' . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 834
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 659

  449 expr: expr '-' . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 835
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 660

  448 expr: expr '+' . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 836
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 661

  450 expr: expr '*' . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 837
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 662

  451 expr: expr '/' . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 838
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 663

  452 expr: expr '%' . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 839
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 664

  413 expr_field: expr '.' . "name"
  414           | expr '.' . '.' "name"
  415           | expr '.' . "name" '(' ')'
  416           | expr '.' . "name" '(' expr_list ')'
  417           | expr '.' . "name" '(' '[' make_struct_fields ']' ')'
  418           | expr '.' . basic_type_declaration '(' ')'
  419           | expr '.' . basic_type_declaration '(' expr_list ')'
  422           | expr '.' . $@32 error $@33
  473 expr: expr '.' . '[' expr ']'
  475     | expr '.' . "?[" expr ']'
  477     | expr '.' . "?." "name"
  524 expr_mtag: expr '.' . "$f" '(' expr ')'
  526          | expr '.' . '.' "$f" '(' expr ')'
  527          | expr '.' . "?." "$f" '(' expr ')'

    "bool"      shift, and go to state 236
    "void"      shift, and go to state 237
    "string"    shift, and go to state 238
    "int"       shift, and go to state 240
    "int2"      shift, and go to state 241
    "int3"      shift, and go to state 242
    "int4"      shift, and go to state 243
    "uint"      shift, and go to state 244
    "bitfield"  shift, and go to state 441
    "uint2"     shift, and go to state 246
    "uint3"     shift, and go to state 247
    "uint4"     shift, and go to state 248
    "float"     shift, and go to state 249
    "float2"    shift, and go to state 250
    "float3"    shift, and go to state 251
    "float4"    shift, and go to state 252
    "range"     shift, and go to state 253
    "urange"    shift, and go to state 254
    "range64"   shift, and go to state 255
    "urange64"  shift, and go to state 256
    "int64"     shift, and go to state 258
    "uint64"    shift, and go to state 259
    "double"    shift, and go to state 260
    "int8"      shift, and go to state 263
    "uint8"     shift, and go to state 264
    "int16"     shift, and go to state 265
    "uint16"    shift, and go to state 266
    "?."        shift, and go to state 840
    "?["        shift, and go to state 841
    "$f"        shift, and go to state 842
    "name"      shift, and go to state 843
    '.'         shift, and go to state 844
    '['         shift, and go to state 845

    $default  reduce using rule 420 ($@32)

    $@32                    go to state 846
    basic_type_declaration  go to state 847


State 665

  472 expr: expr '[' . expr ']'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 848
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 666

  734 type_declaration_no_options_no_dim: "typedecl" '(' expr ')' .

    $default  reduce using rule 734 (type_declaration_no_options_no_dim)


State 667

  428 expr_call: basic_type_declaration '(' . ')'
  429          | basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    ')'                               shift, and go to state 849
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    expr_list               go to state 850
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 615
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 668

  762 type_declaration_no_options_no_dim: "iterator" '<' $@63 type_declaration . '>' $@64
  791 type_declaration: type_declaration . '|' type_declaration_no_options
  792                 | type_declaration . '|' '#'

    '|'  shift, and go to state 380
    '>'  shift, and go to state 851


State 669

  752 type_declaration_no_options_no_dim: "smart_ptr" '<' $@57 type_declaration . '>' $@58
  791 type_declaration: type_declaration . '|' type_declaration_no_options
  792                 | type_declaration . '|' '#'

    '|'  shift, and go to state 380
    '>'  shift, and go to state 852


State 670

  705 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 705 (auto_type_declaration)


State 671

  707 bitfield_bits: "name" .

    $default  reduce using rule 707 (bitfield_bits)


State 672

  708 bitfield_bits: bitfield_bits . ';' "name"
  716 bitfield_type_declaration: "bitfield" '<' $@52 bitfield_bits . '>' $@53

    '>'  shift, and go to state 853
    ';'  shift, and go to state 854


State 673

  766 type_declaration_no_options_no_dim: "block" '<' $@65 type_declaration . '>' $@66
  791 type_declaration: type_declaration . '|' type_declaration_no_options
  792                 | type_declaration . '|' '#'

    '|'  shift, and go to state 380
    '>'  shift, and go to state 855


State 674

  769 type_declaration_no_options_no_dim: "block" '<' $@67 optional_function_argument_list . optional_function_type '>' $@68

    ':'  shift, and go to state 397

    $default  reduce using rule 161 (optional_function_type)

    optional_function_type  go to state 856


State 675

  773 type_declaration_no_options_no_dim: "function" '<' $@69 type_declaration . '>' $@70
  791 type_declaration: type_declaration . '|' type_declaration_no_options
  792                 | type_declaration . '|' '#'

    '|'  shift, and go to state 380
    '>'  shift, and go to state 857


State 676

  776 type_declaration_no_options_no_dim: "function" '<' $@71 optional_function_argument_list . optional_function_type '>' $@72

    ':'  shift, and go to state 397

    $default  reduce using rule 161 (optional_function_type)

    optional_function_type  go to state 858


State 677

  780 type_declaration_no_options_no_dim: "lambda" '<' $@73 type_declaration . '>' $@74
  791 type_declaration: type_declaration . '|' type_declaration_no_options
  792                 | type_declaration . '|' '#'

    '|'  shift, and go to state 380
    '>'  shift, and go to state 859


State 678

  783 type_declaration_no_options_no_dim: "lambda" '<' $@75 optional_function_argument_list . optional_function_type '>' $@76

    ':'  shift, and go to state 397

    $default  reduce using rule 161 (optional_function_type)

    optional_function_type  go to state 860


State 679

  302 name_in_namespace: "name" .
  303                  | "name" . "::" "name"
  562 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 96
    ':'   shift, and go to state 861

    $default  reduce using rule 302 (name_in_namespace)


State 680

  563 tuple_type_list: tuple_type .

    $default  reduce using rule 563 (tuple_type_list)


State 681

  564 tuple_type_list: tuple_type_list . c_or_s tuple_type
  786 type_declaration_no_options_no_dim: "tuple" '<' $@77 tuple_type_list . '>' $@78

    "new line, comma"      shift, and go to state 725
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 726
    '>'                    shift, and go to state 862
    ';'                    shift, and go to state 16

    COMMA      go to state 727
    SEMICOLON  go to state 728
    c_or_s     go to state 863


State 682

  561 tuple_type: type_declaration .
  791 type_declaration: type_declaration . '|' type_declaration_no_options
  792                 | type_declaration . '|' '#'

    '|'  shift, and go to state 380

    $default  reduce using rule 561 (tuple_type)


State 683

  568 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 864


State 684

  569 variant_type_list: variant_type .

    $default  reduce using rule 569 (variant_type_list)


State 685

  570 variant_type_list: variant_type_list . c_or_s variant_type
  789 type_declaration_no_options_no_dim: "variant" '<' $@79 variant_type_list . '>' $@80

    "new line, comma"      shift, and go to state 725
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 726
    '>'                    shift, and go to state 865
    ';'                    shift, and go to state 16

    COMMA      go to state 727
    SEMICOLON  go to state 728
    c_or_s     go to state 866


State 686

  706 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 706 (auto_type_declaration)


State 687

  737 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@56 . type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    type_declaration_no_options_list    go to state 867
    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 276
    type_declaration_no_options_no_dim  go to state 277
    type_declaration                    go to state 868


State 688

  735 type_declaration_no_options_no_dim: '$' name_in_namespace '(' optional_expr_list . ')'

    ')'  shift, and go to state 869


State 689

  738 type_declaration_no_options_no_dim: type_declaration_no_options '-' '[' ']' .

    $default  reduce using rule 738 (type_declaration_no_options_no_dim)


State 690

  721 dim_list: '[' expr ']' .

    $default  reduce using rule 721 (dim_list)


State 691

  724 dim_list: dim_list '[' ']' .

    $default  reduce using rule 724 (dim_list)


State 692

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  723 dim_list: dim_list '[' expr . ']'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ']'    shift, and go to state 870


State 693

  710 bitfield_alias_bits: "name" .
  711                    | "name" . '=' expr

    '='  shift, and go to state 871

    $default  reduce using rule 710 (bitfield_alias_bits)


State 694

  712 bitfield_alias_bits: bitfield_alias_bits . commas "name"
  713                    | bitfield_alias_bits . commas "name" '=' expr
  807 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias "name" optional_emit_commas $@90 '{' $@91 bitfield_alias_bits . optional_commas $@92 '}'

    "new line, comma"  shift, and go to state 725
    ','                shift, and go to state 726

    $default  reduce using rule 635 (optional_commas)

    COMMA            go to state 872
    commas           go to state 873
    optional_commas  go to state 874


State 695

  566 tuple_alias_type_list: tuple_type .

    $default  reduce using rule 566 (tuple_alias_type_list)


State 696

  567 tuple_alias_type_list: tuple_alias_type_list . semis tuple_type
  797 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 tuple_alias_type_list . optional_semis $@84 '}'

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 86 (optional_semis)

    SEMICOLON       go to state 875
    semis           go to state 876
    optional_semis  go to state 877


State 697

  572 variant_alias_type_list: variant_type .

    $default  reduce using rule 572 (variant_alias_type_list)


State 698

  573 variant_alias_type_list: variant_alias_type_list . semis variant_type
  802 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 '{' $@87 variant_alias_type_list . optional_semis $@88 '}'

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 86 (optional_semis)

    SEMICOLON       go to state 875
    semis           go to state 878
    optional_semis  go to state 879


State 699

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  555 function_argument_declaration_type: "$a" '(' expr . ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 880


State 700

  664 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 881


State 701

  663 variable_name_with_pos_list: "name" .
  665                            | "name" . "aka" "name"

    "aka"  shift, and go to state 882

    $default  reduce using rule 663 (variable_name_with_pos_list)


State 702

  553 function_argument_declaration_no_type: optional_field_annotation kwd_let_var_or_nothing variable_declaration_no_type .

    $default  reduce using rule 553 (function_argument_declaration_no_type)


State 703

  554 function_argument_declaration_type: optional_field_annotation kwd_let_var_or_nothing variable_declaration_type .

    $default  reduce using rule 554 (function_argument_declaration_type)


State 704

  576 variable_declaration_no_type: variable_name_with_pos_list .
  577                             | variable_name_with_pos_list . '&'
  578                             | variable_name_with_pos_list . copy_or_move expr
  579 variable_declaration_type: variable_name_with_pos_list . ':' type_declaration
  580                          | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  666 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  667                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 774
    ','   shift, and go to state 883
    '='   shift, and go to state 776
    ':'   shift, and go to state 884
    '&'   shift, and go to state 885

    $default  reduce using rule 576 (variable_declaration_no_type)

    copy_or_move  go to state 886


State 705

  558 function_argument_list: function_argument_declaration_no_type ';' function_argument_list .

    $default  reduce using rule 558 (function_argument_list)


State 706

  560 function_argument_list: function_argument_declaration_type ',' function_argument_list .

    $default  reduce using rule 560 (function_argument_list)


State 707

  559 function_argument_list: function_argument_declaration_type ';' function_argument_list .

    $default  reduce using rule 559 (function_argument_list)


State 708

  272 expression_block: $@16 '{' expressions . $@17 '}' expression_block_finally
  294 expressions: expressions . expression_any
  295            | expressions . error

    error                             shift, and go to state 887
    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "return"                          shift, and go to state 888
    "null"                            shift, and go to state 431
    "break"                           shift, and go to state 889
    "try"                             shift, and go to state 890
    "table"                           shift, and go to state 432
    "delete"                          shift, and go to state 891
    "deref"                           shift, and go to state 433
    "assume"                          shift, and go to state 892
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 436
    "continue"                        shift, and go to state 893
    "pass"                            shift, and go to state 894
    "reinterpret"                     shift, and go to state 437
    "label"                           shift, and go to state 895
    "goto"                            shift, and go to state 896
    "unsafe"                          shift, and go to state 897
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "yield"                           shift, and go to state 898
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 471

    "while"      reduce using rule 111 ($@11)
    "if"         reduce using rule 98 ($@9)
    "static_if"  reduce using rule 98 ($@9)
    "for"        reduce using rule 108 ($@10)
    "with"       reduce using rule 113 ($@12)
    '}'          reduce using rule 271 ($@17)

    SEMICOLON                         go to state 899
    string_builder                    go to state 472
    expr_reader                       go to state 473
    expression_label                  go to state 900
    expression_goto                   go to state 901
    expression_if_one_liner           go to state 902
    expression_if_then_else           go to state 903
    $@9                               go to state 904
    expression_if_then_else_oneliner  go to state 905
    expression_for_loop               go to state 906
    $@10                              go to state 907
    expression_unsafe                 go to state 908
    expression_while_loop             go to state 909
    $@11                              go to state 910
    expression_with                   go to state 911
    $@12                              go to state 912
    expression_with_alias             go to state 913
    $@17                              go to state 914
    expr_call_pipe                    go to state 474
    expression_any                    go to state 915
    name_in_namespace                 go to state 475
    expression_delete                 go to state 916
    expr_new                          go to state 476
    expression_break                  go to state 917
    expression_continue               go to state 918
    expression_return                 go to state 919
    expression_yield                  go to state 920
    expression_try_catch              go to state 921
    kwd_let                           go to state 922
    expression_let                    go to state 923
    expr_cast                         go to state 477
    expr_type_decl                    go to state 478
    expr_type_info                    go to state 479
    block_or_lambda                   go to state 480
    expr_full_block                   go to state 481
    expr_numeric_const                go to state 482
    expr_assign                       go to state 924
    expr_named_call                   go to state 483
    expr_method_call                  go to state 484
    func_addr_expr                    go to state 485
    expr_field                        go to state 486
    expr_call                         go to state 487
    expr                              go to state 925
    expr_generator                    go to state 489
    expr_mtag                         go to state 490
    basic_type_declaration            go to state 491
    make_decl                         go to state 492
    make_struct_decl                  go to state 493
    make_tuple_call                   go to state 494
    make_dim_decl                     go to state 495
    make_table_decl                   go to state 496
    array_comprehension               go to state 497


State 709

  644 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 . enum_list optional_commas $@48 '}'

    "name"  shift, and go to state 926

    $default  reduce using rule 620 (enum_list)

    enum_expression  go to state 927
    enum_list        go to state 928


State 710

  646 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 646 (optional_structure_parent)


State 711

  657 optional_struct_variable_declaration_list: ';' .

    $default  reduce using rule 657 (optional_struct_variable_declaration_list)


State 712

  658 optional_struct_variable_declaration_list: '{' . struct_variable_declaration_list '}'

    $default  reduce using rule 545 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 929


State 713

  662 structure_declaration: optional_annotation_list_with_emit_semis $@49 class_or_struct optional_public_or_private_structure $@50 structure_name optional_emit_semis $@51 optional_struct_variable_declaration_list .

    $default  reduce using rule 662 (structure_declaration)


State 714

  589 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 930
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 715

  590 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 931


State 716

  591 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  592                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 932


State 717

  598 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options SEMICOLON
  599                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr SEMICOLON

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 933
    type_declaration_no_options_no_dim  go to state 277


State 718

  600 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr SEMICOLON

    "<-"  shift, and go to state 561
    ":="  shift, and go to state 562
    '='   shift, and go to state 563

    copy_or_move_or_clone  go to state 934


State 719

  601 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options SEMICOLON .

    $default  reduce using rule 601 (global_let_variable_declaration)


State 720

  602 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 935
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 721

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  603 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . SEMICOLON

    "is"                   shift, and go to state 631
    "as"                   shift, and go to state 632
    "<<"                   shift, and go to state 633
    ">>"                   shift, and go to state 634
    "++"                   shift, and go to state 635
    "--"                   shift, and go to state 636
    "<="                   shift, and go to state 637
    ">="                   shift, and go to state 638
    "=="                   shift, and go to state 639
    "!="                   shift, and go to state 640
    "->"                   shift, and go to state 641
    "??"                   shift, and go to state 642
    "?."                   shift, and go to state 643
    "?["                   shift, and go to state 644
    "<|"                   shift, and go to state 645
    "|>"                   shift, and go to state 646
    "<<<"                  shift, and go to state 647
    ">>>"                  shift, and go to state 648
    "&&"                   shift, and go to state 649
    "||"                   shift, and go to state 650
    "^^"                   shift, and go to state 651
    ".."                   shift, and go to state 652
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 653
    '|'                    shift, and go to state 654
    '^'                    shift, and go to state 655
    '&'                    shift, and go to state 656
    '<'                    shift, and go to state 657
    '>'                    shift, and go to state 658
    '-'                    shift, and go to state 659
    '+'                    shift, and go to state 660
    '*'                    shift, and go to state 661
    '/'                    shift, and go to state 662
    '%'                    shift, and go to state 663
    '.'                    shift, and go to state 664
    '['                    shift, and go to state 665
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 936


State 722

  733 type_declaration_no_options_no_dim: "type" '<' $@54 type_declaration '>' . $@55

    $default  reduce using rule 732 ($@55)

    $@55  go to state 937


State 723

  756 type_declaration_no_options_no_dim: "array" '<' $@59 type_declaration '>' . $@60

    $default  reduce using rule 755 ($@60)

    $@60  go to state 938


State 724

  759 type_declaration_no_options_no_dim: "table" '<' $@61 table_type_pair '>' . $@62

    $default  reduce using rule 758 ($@62)

    $@62  go to state 939


State 725

   17 COMMA: "new line, comma" .

    $default  reduce using rule 17 (COMMA)


State 726

   16 COMMA: ',' .

    $default  reduce using rule 16 (COMMA)


State 727

  717 c_or_s: COMMA .

    $default  reduce using rule 717 (c_or_s)


State 728

  718 c_or_s: SEMICOLON .

    $default  reduce using rule 718 (c_or_s)


State 729

  720 table_type_pair: type_declaration c_or_s . type_declaration

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 276
    type_declaration_no_options_no_dim  go to state 277
    type_declaration                    go to state 940


State 730

  834 make_struct_decl: "struct" '<' $@93 . type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 941
    type_declaration_no_options_no_dim  go to state 277


State 731

  837 make_struct_decl: "class" '<' $@95 . type_declaration_no_options '>' $@96 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 942
    type_declaration_no_options_no_dim  go to state 277


State 732

  309 new_type_declaration: '<' $@18 . type_declaration '>' $@19

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 276
    type_declaration_no_options_no_dim  go to state 277
    type_declaration                    go to state 943


State 733

  312 expr_new: "new" new_type_declaration '(' . use_initializer ')'
  313         | "new" new_type_declaration '(' . expr_list ')'
  314         | "new" new_type_declaration '(' . make_struct_single ')'
  315         | "new" new_type_declaration '(' . "uninitialized" make_struct_single ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "uninitialized"                   shift, and go to state 944
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "$f"                              shift, and go to state 616
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 617
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    $default  reduce using rule 830 (use_initializer)

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    expr_list               go to state 945
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 615
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_fields      go to state 619
    make_struct_single      go to state 946
    use_initializer         go to state 947
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 734

  352 expr_type_info: "typeinfo" name_in_namespace '<' . "name" '>' '(' expr ')'
  353               | "typeinfo" name_in_namespace '<' . "name" c_or_s "name" '>' '(' expr ')'

    "name"  shift, and go to state 948


State 735

  351 expr_type_info: "typeinfo" name_in_namespace '(' . expr ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 949
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 736

  350 expr_type_decl: "type" '<' $@26 . type_declaration '>' $@27

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 276
    type_declaration_no_options_no_dim  go to state 277
    type_declaration                    go to state 950


State 737

  853 make_dim_decl: "array" "struct" '<' . $@103 type_declaration_no_options '>' $@104 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 851 ($@103)

    $@103  go to state 951


State 738

  856 make_dim_decl: "array" "tuple" '<' . $@105 tuple_type_list '>' $@106 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 854 ($@105)

    $@105  go to state 952


State 739

  859 make_dim_decl: "array" "variant" '<' . $@107 variant_type_list '>' $@108 '(' make_variant_dim ')'

    $default  reduce using rule 857 ($@107)

    $@107  go to state 953


State 740

  863 make_dim_decl: "array" '<' $@109 . type_declaration_no_options '>' $@110 '(' optional_expr_list ')'

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 954
    type_declaration_no_options_no_dim  go to state 277


State 741

  355 expr_list: expr_list . ',' expr
  860 make_dim_decl: "array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 771

    $default  reduce using rule 877 (optional_comma)

    optional_comma  go to state 955


State 742

  738 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  739                                   | type_declaration_no_options . "explicit"
  740                                   | type_declaration_no_options . "const"
  741                                   | type_declaration_no_options . '-' "const"
  742                                   | type_declaration_no_options . '&'
  743                                   | type_declaration_no_options . '-' '&'
  744                                   | type_declaration_no_options . '#'
  745                                   | type_declaration_no_options . "implicit"
  746                                   | type_declaration_no_options . '-' '#'
  747                                   | type_declaration_no_options . "==" "const"
  748                                   | type_declaration_no_options . "==" '&'
  749                                   | type_declaration_no_options . '?'
  753                                   | type_declaration_no_options . "??"
  873 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'
  874                | "table" '<' type_declaration_no_options . c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "const"                shift, and go to state 369
    "implicit"             shift, and go to state 370
    "explicit"             shift, and go to state 371
    "=="                   shift, and go to state 372
    "??"                   shift, and go to state 373
    "new line, comma"      shift, and go to state 725
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 726
    '?'                    shift, and go to state 374
    '&'                    shift, and go to state 375
    '>'                    shift, and go to state 956
    '-'                    shift, and go to state 376
    ';'                    shift, and go to state 16
    '#'                    shift, and go to state 377

    COMMA      go to state 727
    SEMICOLON  go to state 728
    c_or_s     go to state 957


State 743

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  844 make_map_tuple: expr . "=>" expr
  845               | expr .

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "=>"   shift, and go to state 958
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 845 (make_map_tuple)


State 744

  868 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 868 (expr_map_tuple_list)


State 745

  869 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  872 make_table_decl: "table" '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 959

    $default  reduce using rule 877 (optional_comma)

    optional_comma  go to state 960


State 746

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  481     | "deref" '(' expr . ')'
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 961


State 747

  341 expr_cast: "cast" '<' $@20 . type_declaration_no_options '>' $@21 expr

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 962
    type_declaration_no_options_no_dim  go to state 277


State 748

  344 expr_cast: "upcast" '<' $@22 . type_declaration_no_options '>' $@23 expr

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 963
    type_declaration_no_options_no_dim  go to state 277


State 749

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  482     | "addr" '(' expr . ')'
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 964


State 750

  347 expr_cast: "reinterpret" '<' $@24 . type_declaration_no_options '>' $@25 expr

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 965
    type_declaration_no_options_no_dim  go to state 277


State 751

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  512     | "unsafe" '(' expr . ')'
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 966


State 752

  867 make_dim_decl: "fixed_array" '<' $@111 . type_declaration_no_options '>' $@112 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 967
    type_declaration_no_options_no_dim  go to state 277


State 753

  355 expr_list: expr_list . ',' expr
  864 make_dim_decl: "fixed_array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 771

    $default  reduce using rule 877 (optional_comma)

    optional_comma  go to state 968


State 754

  843 make_struct_decl: "default" '<' $@99 . type_declaration_no_options '>' $@100 use_initializer

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 969
    type_declaration_no_options_no_dim  go to state 277


State 755

  849 make_tuple_call: "tuple" '<' $@101 . tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 679
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    tuple_type                          go to state 680
    tuple_type_list                     go to state 970
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 276
    type_declaration_no_options_no_dim  go to state 277
    type_declaration                    go to state 682


State 756

  355 expr_list: expr_list . ',' expr
  846 make_tuple_call: "tuple" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 771

    $default  reduce using rule 877 (optional_comma)

    optional_comma  go to state 971


State 757

  840 make_struct_decl: "variant" '<' $@97 . variant_type_list '>' $@98 '(' use_initializer make_variant_dim ')'

    "name"  shift, and go to state 683

    variant_type       go to state 684
    variant_type_list  go to state 972


State 758

  513 expr_generator: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  514               | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  515               | "generator" '<' type_declaration_no_options . '>' optional_capture_list optional_emit_semis expression_block
  738 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  739                                   | type_declaration_no_options . "explicit"
  740                                   | type_declaration_no_options . "const"
  741                                   | type_declaration_no_options . '-' "const"
  742                                   | type_declaration_no_options . '&'
  743                                   | type_declaration_no_options . '-' '&'
  744                                   | type_declaration_no_options . '#'
  745                                   | type_declaration_no_options . "implicit"
  746                                   | type_declaration_no_options . '-' '#'
  747                                   | type_declaration_no_options . "==" "const"
  748                                   | type_declaration_no_options . "==" '&'
  749                                   | type_declaration_no_options . '?'
  753                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 369
    "implicit"  shift, and go to state 370
    "explicit"  shift, and go to state 371
    "=="        shift, and go to state 372
    "??"        shift, and go to state 373
    '?'         shift, and go to state 374
    '&'         shift, and go to state 375
    '>'         shift, and go to state 973
    '-'         shift, and go to state 376
    '#'         shift, and go to state 377


State 759

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  516 expr_mtag: "$$" '(' expr . ')'
  524          | expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 974


State 760

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  517 expr_mtag: "$i" '(' expr . ')'
  524          | expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 975


State 761

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  518 expr_mtag: "$v" '(' expr . ')'
  524          | expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 976


State 762

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  519 expr_mtag: "$b" '(' expr . ')'
  524          | expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 977


State 763

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  520 expr_mtag: "$a" '(' expr . ')'
  524          | expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 978


State 764

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  522 expr_mtag: "$c" '(' expr . ')' '(' ')'
  523          | "$c" '(' expr . ')' '(' expr_list ')'
  524          | expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 979


State 765

   43 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 43 (string_builder)


State 766

   42 string_builder_body: string_builder_body "{" . expr optional_format_string "}"

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 980
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 767

   31 character_sequence: character_sequence . STRING_CHARACTER
   32                   | character_sequence . STRING_CHARACTER_ESC
   41 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 225
    STRING_CHARACTER_ESC  shift, and go to state 226

    $default  reduce using rule 41 (string_builder_body)


State 768

  879 array_comprehension: '[' "for" '(' . for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "$i"    shift, and go to state 981
    "name"  shift, and go to state 982
    '('     shift, and go to state 983

    for_variable_name_with_pos_list  go to state 984


State 769

  880 array_comprehension: '[' "iterator" "for" . '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    '('  shift, and go to state 985


State 770

  850 make_dim_decl: '[' optional_expr_list ']' .

    $default  reduce using rule 850 (make_dim_decl)


State 771

  355 expr_list: expr_list ',' . expr
  878 optional_comma: ',' .

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    $default  reduce using rule 878 (optional_comma)

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 986
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 772

  297 optional_expr_list: expr_list optional_comma .

    $default  reduce using rule 297 (optional_expr_list)


State 773

  817 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  818                   | "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 987
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 774

  575 copy_or_move: "<-" .

    $default  reduce using rule 575 (copy_or_move)


State 775

  814 make_struct_fields: "name" ":=" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 988
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 776

  574 copy_or_move: '=' .

    $default  reduce using rule 574 (copy_or_move)


State 777

  813 make_struct_fields: "name" copy_or_move . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 989
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 778

  470 expr: '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 990


State 779

  815 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  816                   | make_struct_fields ',' . "name" ":=" expr
  819                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  820                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr
  878 optional_comma: ',' .

    "$f"    shift, and go to state 991
    "name"  shift, and go to state 992

    $default  reduce using rule 878 (optional_comma)


State 780

  823 make_struct_single: make_struct_fields optional_comma .

    $default  reduce using rule 823 (make_struct_single)


State 781

  471 expr: '(' make_struct_single ')' .

    $default  reduce using rule 471 (expr)


State 782

  405 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 993


State 783

  531 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 994


State 784

  409 func_addr_expr: '@' '@' '<' . $@28 type_declaration_no_options '>' $@29 func_addr_name
  412               | '@' '@' '<' . $@30 optional_function_argument_list optional_function_type '>' $@31 func_addr_name

    ':'       reduce using rule 410 ($@30)
    '>'       reduce using rule 410 ($@30)
    '('       reduce using rule 410 ($@30)
    $default  reduce using rule 407 ($@28)

    $@28  go to state 995
    $@30  go to state 996


State 785

  404 func_addr_name: name_in_namespace .

    $default  reduce using rule 404 (func_addr_name)


State 786

  406 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 406 (func_addr_expr)


State 787

  881 array_comprehension: '{' "for" '(' . for_variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "$i"    shift, and go to state 981
    "name"  shift, and go to state 982
    '('     shift, and go to state 983

    for_variable_name_with_pos_list  go to state 997


State 788

  871 make_table_decl: '{' $@113 optional_emit_semis . optional_expr_map_tuple_list '}'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    $default  reduce using rule 298 (optional_expr_map_tuple_list)

    string_builder                go to state 472
    expr_reader                   go to state 473
    expr_call_pipe                go to state 474
    optional_expr_map_tuple_list  go to state 998
    name_in_namespace             go to state 475
    expr_new                      go to state 476
    expr_cast                     go to state 477
    expr_type_decl                go to state 478
    expr_type_info                go to state 479
    block_or_lambda               go to state 480
    expr_full_block               go to state 481
    expr_numeric_const            go to state 482
    expr_named_call               go to state 483
    expr_method_call              go to state 484
    func_addr_expr                go to state 485
    expr_field                    go to state 486
    expr_call                     go to state 487
    expr                          go to state 743
    expr_generator                go to state 489
    expr_mtag                     go to state 490
    basic_type_declaration        go to state 491
    make_decl                     go to state 492
    make_struct_decl              go to state 493
    make_map_tuple                go to state 744
    make_tuple_call               go to state 494
    make_dim_decl                 go to state 495
    expr_map_tuple_list           go to state 999
    make_table_decl               go to state 496
    array_comprehension           go to state 497


State 789

  424 expr_call: name_in_namespace '(' "uninitialized" . ')'
  426          | name_in_namespace '(' "uninitialized" . make_struct_single ')'

    "$f"    shift, and go to state 616
    "name"  shift, and go to state 1000
    ')'     shift, and go to state 1001

    make_struct_fields  go to state 619
    make_struct_single  go to state 1002


State 790

  400 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'
  850 make_dim_decl: '[' . optional_expr_list ']'
  879 array_comprehension: '[' . "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  880                    | '[' . "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "for"                             shift, and go to state 611
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "iterator"                        shift, and go to state 612
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "$f"                              shift, and go to state 616
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 617
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    $default  reduce using rule 296 (optional_expr_list)

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    optional_expr_list      go to state 613
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    expr_list               go to state 614
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 615
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_fields      go to state 1003
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 791

  423 expr_call: name_in_namespace '(' ')' .

    $default  reduce using rule 423 (expr_call)


State 792

  355 expr_list: expr_list . ',' expr
  401 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  427 expr_call: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 1004
    ')'  shift, and go to state 1005


State 793

  425 expr_call: name_in_namespace '(' make_struct_single . ')'

    ')'  shift, and go to state 1006


State 794

  153 annotation_list: annotation_list . ',' annotation_declaration
  155 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 105
    ']'  shift, and go to state 1007


State 795

  370 optional_capture_list: "capture" . '(' capture_list ')'

    '('  shift, and go to state 1008


State 796

  371 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

    '('  shift, and go to state 337

    $default  reduce using rule 158 (optional_function_argument_list)

    optional_function_argument_list  go to state 1009


State 797

  361 block_or_lambda: '@' '@' .

    $default  reduce using rule 361 (block_or_lambda)


State 798

  294 expressions: expressions . expression_any
  295            | expressions . error
  373 expr_full_block_assumed_piped: '{' expressions . '}'

    error                             shift, and go to state 887
    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "return"                          shift, and go to state 888
    "null"                            shift, and go to state 431
    "break"                           shift, and go to state 889
    "try"                             shift, and go to state 890
    "table"                           shift, and go to state 432
    "delete"                          shift, and go to state 891
    "deref"                           shift, and go to state 433
    "assume"                          shift, and go to state 892
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 436
    "continue"                        shift, and go to state 893
    "pass"                            shift, and go to state 894
    "reinterpret"                     shift, and go to state 437
    "label"                           shift, and go to state 895
    "goto"                            shift, and go to state 896
    "unsafe"                          shift, and go to state 897
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "yield"                           shift, and go to state 898
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 471
    '}'                               shift, and go to state 1010

    "while"      reduce using rule 111 ($@11)
    "if"         reduce using rule 98 ($@9)
    "static_if"  reduce using rule 98 ($@9)
    "for"        reduce using rule 108 ($@10)
    "with"       reduce using rule 113 ($@12)

    SEMICOLON                         go to state 899
    string_builder                    go to state 472
    expr_reader                       go to state 473
    expression_label                  go to state 900
    expression_goto                   go to state 901
    expression_if_one_liner           go to state 902
    expression_if_then_else           go to state 903
    $@9                               go to state 904
    expression_if_then_else_oneliner  go to state 905
    expression_for_loop               go to state 906
    $@10                              go to state 907
    expression_unsafe                 go to state 908
    expression_while_loop             go to state 909
    $@11                              go to state 910
    expression_with                   go to state 911
    $@12                              go to state 912
    expression_with_alias             go to state 913
    expr_call_pipe                    go to state 474
    expression_any                    go to state 915
    name_in_namespace                 go to state 475
    expression_delete                 go to state 916
    expr_new                          go to state 476
    expression_break                  go to state 917
    expression_continue               go to state 918
    expression_return                 go to state 919
    expression_yield                  go to state 920
    expression_try_catch              go to state 921
    kwd_let                           go to state 922
    expression_let                    go to state 923
    expr_cast                         go to state 477
    expr_type_decl                    go to state 478
    expr_type_info                    go to state 479
    block_or_lambda                   go to state 480
    expr_full_block                   go to state 481
    expr_numeric_const                go to state 482
    expr_assign                       go to state 924
    expr_named_call                   go to state 483
    expr_method_call                  go to state 484
    func_addr_expr                    go to state 485
    expr_field                        go to state 486
    expr_call                         go to state 487
    expr                              go to state 925
    expr_generator                    go to state 489
    expr_mtag                         go to state 490
    basic_type_declaration            go to state 491
    make_decl                         go to state 492
    make_struct_decl                  go to state 493
    make_tuple_call                   go to state 494
    make_dim_decl                     go to state 495
    make_table_decl                   go to state 496
    array_comprehension               go to state 497


State 799

  372 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block

    "capture"  shift, and go to state 795

    $default  reduce using rule 369 (optional_capture_list)

    optional_capture_list  go to state 1011


State 800

  488 expr: expr "is" "type" . '<' $@34 type_declaration_no_options '>' $@35

    '<'  shift, and go to state 1012


State 801

  530 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 1013


State 802

  490 expr: expr "is" "name" .

    $default  reduce using rule 490 (expr)


State 803

  489 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 489 (expr)


State 804

  494 expr: expr "as" "type" . '<' $@36 type_declaration '>' $@37

    '<'  shift, and go to state 1014


State 805

  528 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1015


State 806

  491 expr: expr "as" "name" .

    $default  reduce using rule 491 (expr)


State 807

  495 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 495 (expr)


State 808

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  444     | expr "<<" expr .
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 631
    "as"  shift, and go to state 632
    "++"  shift, and go to state 635
    "--"  shift, and go to state 636
    "->"  shift, and go to state 641
    "??"  shift, and go to state 642
    "?."  shift, and go to state 643
    "?["  shift, and go to state 644
    "<|"  shift, and go to state 645
    "|>"  shift, and go to state 646
    '-'   shift, and go to state 659
    '+'   shift, and go to state 660
    '*'   shift, and go to state 661
    '/'   shift, and go to state 662
    '%'   shift, and go to state 663
    '.'   shift, and go to state 664
    '['   shift, and go to state 665

    $default  reduce using rule 444 (expr)


State 809

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  445     | expr ">>" expr .
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 631
    "as"  shift, and go to state 632
    "++"  shift, and go to state 635
    "--"  shift, and go to state 636
    "->"  shift, and go to state 641
    "??"  shift, and go to state 642
    "?."  shift, and go to state 643
    "?["  shift, and go to state 644
    "<|"  shift, and go to state 645
    "|>"  shift, and go to state 646
    '-'   shift, and go to state 659
    '+'   shift, and go to state 660
    '*'   shift, and go to state 661
    '/'   shift, and go to state 662
    '%'   shift, and go to state 663
    '.'   shift, and go to state 664
    '['   shift, and go to state 665

    $default  reduce using rule 445 (expr)


State 810

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  457     | expr "<=" expr .
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 457 (expr)


State 811

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  458     | expr ">=" expr .
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 458 (expr)


State 812

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  455     | expr "==" expr .
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 455 (expr)


State 813

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  456     | expr "!=" expr .
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 456 (expr)


State 814

  402 expr_method_call: expr "->" "name" . '(' ')'
  403                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 1016


State 815

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  484     | expr "??" expr .
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 631
    "as"  shift, and go to state 632
    "++"  shift, and go to state 635
    "--"  shift, and go to state 636
    "->"  shift, and go to state 641
    "??"  shift, and go to state 642
    "?."  shift, and go to state 643
    "?["  shift, and go to state 644
    "<|"  shift, and go to state 645
    "|>"  shift, and go to state 646
    '.'   shift, and go to state 664
    '['   shift, and go to state 665

    $default  reduce using rule 484 (expr)


State 816

  525 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1017


State 817

  476 expr: expr "?." "name" .

    $default  reduce using rule 476 (expr)


State 818

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  474     | expr "?[" expr . ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ']'    shift, and go to state 1018


State 819

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  508     | expr "<|" expr .
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 641
    "?."  shift, and go to state 643
    "?["  shift, and go to state 644
    '.'   shift, and go to state 664
    '['   shift, and go to state 665

    $default  reduce using rule 508 (expr)


State 820

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  509     | expr "|>" expr .
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 641
    "?."  shift, and go to state 643
    "?["  shift, and go to state 644
    '.'   shift, and go to state 664
    '['   shift, and go to state 665

    $default  reduce using rule 509 (expr)


State 821

  428 expr_call: basic_type_declaration . '(' ')'
  429          | basic_type_declaration . '(' expr_list ')'
  510 expr: expr "|>" basic_type_declaration .

    '('  shift, and go to state 667

    $default  reduce using rule 510 (expr)


State 822

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  446     | expr "<<<" expr .
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 631
    "as"  shift, and go to state 632
    "++"  shift, and go to state 635
    "--"  shift, and go to state 636
    "->"  shift, and go to state 641
    "??"  shift, and go to state 642
    "?."  shift, and go to state 643
    "?["  shift, and go to state 644
    "<|"  shift, and go to state 645
    "|>"  shift, and go to state 646
    '-'   shift, and go to state 659
    '+'   shift, and go to state 660
    '*'   shift, and go to state 661
    '/'   shift, and go to state 662
    '%'   shift, and go to state 663
    '.'   shift, and go to state 664
    '['   shift, and go to state 665

    $default  reduce using rule 446 (expr)


State 823

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  447     | expr ">>>" expr .
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 631
    "as"  shift, and go to state 632
    "++"  shift, and go to state 635
    "--"  shift, and go to state 636
    "->"  shift, and go to state 641
    "??"  shift, and go to state 642
    "?."  shift, and go to state 643
    "?["  shift, and go to state 644
    "<|"  shift, and go to state 645
    "|>"  shift, and go to state 646
    '-'   shift, and go to state 659
    '+'   shift, and go to state 660
    '*'   shift, and go to state 661
    '/'   shift, and go to state 662
    '%'   shift, and go to state 663
    '.'   shift, and go to state 664
    '['   shift, and go to state 665

    $default  reduce using rule 447 (expr)


State 824

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  462     | expr "&&" expr .
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 462 (expr)


State 825

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  463     | expr "||" expr .
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "^^"   shift, and go to state 651
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 463 (expr)


State 826

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  464     | expr "^^" expr .
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 464 (expr)


State 827

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  465     | expr ".." expr .
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    ".."  error (nonassociative)

    $default  reduce using rule 465 (expr)


State 828

  496 expr: expr '?' "as" . "name"
  499     | expr '?' "as" . "type" '<' $@38 type_declaration '>' $@39
  500     | expr '?' "as" . basic_type_declaration
  529 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1019
    "bool"      shift, and go to state 236
    "void"      shift, and go to state 237
    "string"    shift, and go to state 238
    "int"       shift, and go to state 240
    "int2"      shift, and go to state 241
    "int3"      shift, and go to state 242
    "int4"      shift, and go to state 243
    "uint"      shift, and go to state 244
    "bitfield"  shift, and go to state 441
    "uint2"     shift, and go to state 246
    "uint3"     shift, and go to state 247
    "uint4"     shift, and go to state 248
    "float"     shift, and go to state 249
    "float2"    shift, and go to state 250
    "float3"    shift, and go to state 251
    "float4"    shift, and go to state 252
    "range"     shift, and go to state 253
    "urange"    shift, and go to state 254
    "range64"   shift, and go to state 255
    "urange64"  shift, and go to state 256
    "int64"     shift, and go to state 258
    "uint64"    shift, and go to state 259
    "double"    shift, and go to state 260
    "int8"      shift, and go to state 263
    "uint8"     shift, and go to state 264
    "int16"     shift, and go to state 265
    "uint16"    shift, and go to state 266
    "$f"        shift, and go to state 1020
    "name"      shift, and go to state 1021

    basic_type_declaration  go to state 1022


State 829

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  485     | expr '?' expr . ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    ':'    shift, and go to state 1023
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665


State 830

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  460     | expr '|' expr .
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 460 (expr)


State 831

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  461     | expr '^' expr .
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 461 (expr)


State 832

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  459     | expr '&' expr .
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 459 (expr)


State 833

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  453     | expr '<' expr .
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 453 (expr)


State 834

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  454     | expr '>' expr .
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 454 (expr)


State 835

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  449     | expr '-' expr .
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 631
    "as"  shift, and go to state 632
    "++"  shift, and go to state 635
    "--"  shift, and go to state 636
    "->"  shift, and go to state 641
    "??"  shift, and go to state 642
    "?."  shift, and go to state 643
    "?["  shift, and go to state 644
    "<|"  shift, and go to state 645
    "|>"  shift, and go to state 646
    '*'   shift, and go to state 661
    '/'   shift, and go to state 662
    '%'   shift, and go to state 663
    '.'   shift, and go to state 664
    '['   shift, and go to state 665

    $default  reduce using rule 449 (expr)


State 836

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  448     | expr '+' expr .
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 631
    "as"  shift, and go to state 632
    "++"  shift, and go to state 635
    "--"  shift, and go to state 636
    "->"  shift, and go to state 641
    "??"  shift, and go to state 642
    "?."  shift, and go to state 643
    "?["  shift, and go to state 644
    "<|"  shift, and go to state 645
    "|>"  shift, and go to state 646
    '*'   shift, and go to state 661
    '/'   shift, and go to state 662
    '%'   shift, and go to state 663
    '.'   shift, and go to state 664
    '['   shift, and go to state 665

    $default  reduce using rule 448 (expr)


State 837

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  450     | expr '*' expr .
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 631
    "as"  shift, and go to state 632
    "++"  shift, and go to state 635
    "--"  shift, and go to state 636
    "->"  shift, and go to state 641
    "??"  shift, and go to state 642
    "?."  shift, and go to state 643
    "?["  shift, and go to state 644
    "<|"  shift, and go to state 645
    "|>"  shift, and go to state 646
    '.'   shift, and go to state 664
    '['   shift, and go to state 665

    $default  reduce using rule 450 (expr)


State 838

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  451     | expr '/' expr .
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 631
    "as"  shift, and go to state 632
    "++"  shift, and go to state 635
    "--"  shift, and go to state 636
    "->"  shift, and go to state 641
    "??"  shift, and go to state 642
    "?."  shift, and go to state 643
    "?["  shift, and go to state 644
    "<|"  shift, and go to state 645
    "|>"  shift, and go to state 646
    '.'   shift, and go to state 664
    '['   shift, and go to state 665

    $default  reduce using rule 451 (expr)


State 839

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  452     | expr '%' expr .
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 631
    "as"  shift, and go to state 632
    "++"  shift, and go to state 635
    "--"  shift, and go to state 636
    "->"  shift, and go to state 641
    "??"  shift, and go to state 642
    "?."  shift, and go to state 643
    "?["  shift, and go to state 644
    "<|"  shift, and go to state 645
    "|>"  shift, and go to state 646
    '.'   shift, and go to state 664
    '['   shift, and go to state 665

    $default  reduce using rule 452 (expr)


State 840

  477 expr: expr '.' "?." . "name"
  527 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1024
    "name"  shift, and go to state 1025


State 841

  475 expr: expr '.' "?[" . expr ']'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1026
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 842

  524 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1027


State 843

  413 expr_field: expr '.' "name" .
  415           | expr '.' "name" . '(' ')'
  416           | expr '.' "name" . '(' expr_list ')'
  417           | expr '.' "name" . '(' '[' make_struct_fields ']' ')'

    '('  shift, and go to state 1028

    $default  reduce using rule 413 (expr_field)


State 844

  414 expr_field: expr '.' '.' . "name"
  526 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1029
    "name"  shift, and go to state 1030


State 845

  473 expr: expr '.' '[' . expr ']'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1031
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 846

  422 expr_field: expr '.' $@32 . error $@33

    error  shift, and go to state 1032


State 847

  418 expr_field: expr '.' basic_type_declaration . '(' ')'
  419           | expr '.' basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 1033


State 848

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  472     | expr '[' expr . ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ']'    shift, and go to state 1034


State 849

  428 expr_call: basic_type_declaration '(' ')' .

    $default  reduce using rule 428 (expr_call)


State 850

  355 expr_list: expr_list . ',' expr
  429 expr_call: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 1035
    ')'  shift, and go to state 1036


State 851

  762 type_declaration_no_options_no_dim: "iterator" '<' $@63 type_declaration '>' . $@64

    $default  reduce using rule 761 ($@64)

    $@64  go to state 1037


State 852

  752 type_declaration_no_options_no_dim: "smart_ptr" '<' $@57 type_declaration '>' . $@58

    $default  reduce using rule 751 ($@58)

    $@58  go to state 1038


State 853

  716 bitfield_type_declaration: "bitfield" '<' $@52 bitfield_bits '>' . $@53

    $default  reduce using rule 715 ($@53)

    $@53  go to state 1039


State 854

  708 bitfield_bits: bitfield_bits ';' . "name"

    "name"  shift, and go to state 1040


State 855

  766 type_declaration_no_options_no_dim: "block" '<' $@65 type_declaration '>' . $@66

    $default  reduce using rule 765 ($@66)

    $@66  go to state 1041


State 856

  769 type_declaration_no_options_no_dim: "block" '<' $@67 optional_function_argument_list optional_function_type . '>' $@68

    '>'  shift, and go to state 1042


State 857

  773 type_declaration_no_options_no_dim: "function" '<' $@69 type_declaration '>' . $@70

    $default  reduce using rule 772 ($@70)

    $@70  go to state 1043


State 858

  776 type_declaration_no_options_no_dim: "function" '<' $@71 optional_function_argument_list optional_function_type . '>' $@72

    '>'  shift, and go to state 1044


State 859

  780 type_declaration_no_options_no_dim: "lambda" '<' $@73 type_declaration '>' . $@74

    $default  reduce using rule 779 ($@74)

    $@74  go to state 1045


State 860

  783 type_declaration_no_options_no_dim: "lambda" '<' $@75 optional_function_argument_list optional_function_type . '>' $@76

    '>'  shift, and go to state 1046


State 861

  562 tuple_type: "name" ':' . type_declaration

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 276
    type_declaration_no_options_no_dim  go to state 277
    type_declaration                    go to state 1047


State 862

  786 type_declaration_no_options_no_dim: "tuple" '<' $@77 tuple_type_list '>' . $@78

    $default  reduce using rule 785 ($@78)

    $@78  go to state 1048


State 863

  564 tuple_type_list: tuple_type_list c_or_s . tuple_type

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 679
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    tuple_type                          go to state 1049
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 276
    type_declaration_no_options_no_dim  go to state 277
    type_declaration                    go to state 682


State 864

  568 variant_type: "name" ':' . type_declaration

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 276
    type_declaration_no_options_no_dim  go to state 277
    type_declaration                    go to state 1050


State 865

  789 type_declaration_no_options_no_dim: "variant" '<' $@79 variant_type_list '>' . $@80

    $default  reduce using rule 788 ($@80)

    $@80  go to state 1051


State 866

  570 variant_type_list: variant_type_list c_or_s . variant_type

    "name"  shift, and go to state 683

    variant_type  go to state 1052


State 867

  301 type_declaration_no_options_list: type_declaration_no_options_list . c_or_s type_declaration
  737 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@56 type_declaration_no_options_list . '>' '(' optional_expr_list ')'

    "new line, comma"      shift, and go to state 725
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 726
    '>'                    shift, and go to state 1053
    ';'                    shift, and go to state 16

    COMMA      go to state 727
    SEMICOLON  go to state 728
    c_or_s     go to state 1054


State 868

  300 type_declaration_no_options_list: type_declaration .
  791 type_declaration: type_declaration . '|' type_declaration_no_options
  792                 | type_declaration . '|' '#'

    '|'  shift, and go to state 380

    $default  reduce using rule 300 (type_declaration_no_options_list)


State 869

  735 type_declaration_no_options_no_dim: '$' name_in_namespace '(' optional_expr_list ')' .

    $default  reduce using rule 735 (type_declaration_no_options_no_dim)


State 870

  723 dim_list: dim_list '[' expr ']' .

    $default  reduce using rule 723 (dim_list)


State 871

  711 bitfield_alias_bits: "name" '=' . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1055
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 872

  618 commas: COMMA .

    $default  reduce using rule 618 (commas)


State 873

  619 commas: commas . COMMA
  636 optional_commas: commas .
  712 bitfield_alias_bits: bitfield_alias_bits commas . "name"
  713                    | bitfield_alias_bits commas . "name" '=' expr

    "name"             shift, and go to state 1056
    "new line, comma"  shift, and go to state 725
    ','                shift, and go to state 726

    $default  reduce using rule 636 (optional_commas)

    COMMA  go to state 1057


State 874

  807 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias "name" optional_emit_commas $@90 '{' $@91 bitfield_alias_bits optional_commas . $@92 '}'

    $default  reduce using rule 806 ($@92)

    $@92  go to state 1058


State 875

   84 semis: SEMICOLON .

    $default  reduce using rule 84 (semis)


State 876

   85 semis: semis . SEMICOLON
   87 optional_semis: semis .
  567 tuple_alias_type_list: tuple_alias_type_list semis . tuple_type

    "type"                 shift, and go to state 230
    "array"                shift, and go to state 231
    "table"                shift, and go to state 232
    "typedecl"             shift, and go to state 233
    "iterator"             shift, and go to state 234
    "smart_ptr"            shift, and go to state 235
    "bool"                 shift, and go to state 236
    "void"                 shift, and go to state 237
    "string"               shift, and go to state 238
    "auto"                 shift, and go to state 239
    "int"                  shift, and go to state 240
    "int2"                 shift, and go to state 241
    "int3"                 shift, and go to state 242
    "int4"                 shift, and go to state 243
    "uint"                 shift, and go to state 244
    "bitfield"             shift, and go to state 245
    "uint2"                shift, and go to state 246
    "uint3"                shift, and go to state 247
    "uint4"                shift, and go to state 248
    "float"                shift, and go to state 249
    "float2"               shift, and go to state 250
    "float3"               shift, and go to state 251
    "float4"               shift, and go to state 252
    "range"                shift, and go to state 253
    "urange"               shift, and go to state 254
    "range64"              shift, and go to state 255
    "urange64"             shift, and go to state 256
    "block"                shift, and go to state 257
    "int64"                shift, and go to state 258
    "uint64"               shift, and go to state 259
    "double"               shift, and go to state 260
    "function"             shift, and go to state 261
    "lambda"               shift, and go to state 262
    "int8"                 shift, and go to state 263
    "uint8"                shift, and go to state 264
    "int16"                shift, and go to state 265
    "uint16"               shift, and go to state 266
    "tuple"                shift, and go to state 267
    "variant"              shift, and go to state 268
    "::"                   shift, and go to state 57
    "$t"                   shift, and go to state 269
    "name"                 shift, and go to state 679
    "new line, semicolon"  shift, and go to state 13
    '$'                    shift, and go to state 270
    ';'                    shift, and go to state 16

    $default  reduce using rule 87 (optional_semis)

    SEMICOLON                           go to state 1059
    name_in_namespace                   go to state 271
    tuple_type                          go to state 1060
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 276
    type_declaration_no_options_no_dim  go to state 277
    type_declaration                    go to state 682


State 877

  797 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 tuple_alias_type_list optional_semis . $@84 '}'

    $default  reduce using rule 796 ($@84)

    $@84  go to state 1061


State 878

   85 semis: semis . SEMICOLON
   87 optional_semis: semis .
  573 variant_alias_type_list: variant_alias_type_list semis . variant_type

    "name"                 shift, and go to state 683
    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 87 (optional_semis)

    SEMICOLON     go to state 1059
    variant_type  go to state 1062


State 879

  802 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 '{' $@87 variant_alias_type_list optional_semis . $@88 '}'

    $default  reduce using rule 801 ($@88)

    $@88  go to state 1063


State 880

  555 function_argument_declaration_type: "$a" '(' expr ')' .

    $default  reduce using rule 555 (function_argument_declaration_type)


State 881

  664 variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1064
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 882

  665 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1065


State 883

  666 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  667                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 1066


State 884

  579 variable_declaration_type: variable_name_with_pos_list ':' . type_declaration
  580                          | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 276
    type_declaration_no_options_no_dim  go to state 277
    type_declaration                    go to state 1067


State 885

  577 variable_declaration_no_type: variable_name_with_pos_list '&' .

    $default  reduce using rule 577 (variable_declaration_no_type)


State 886

  578 variable_declaration_no_type: variable_name_with_pos_list copy_or_move . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1068
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 887

  295 expressions: expressions error .

    $default  reduce using rule 295 (expressions)


State 888

  319 expression_return: "return" .
  320                  | "return" . expr
  321                  | "return" . "<-" expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "<-"                              shift, and go to state 1069
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    $default  reduce using rule 319 (expression_return)

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1070
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 889

  317 expression_break: "break" .

    $default  reduce using rule 317 (expression_break)


State 890

  324 expression_try_catch: "try" . expression_block "recover" expression_block

    $default  reduce using rule 270 ($@16)

    expression_block  go to state 1071
    $@16              go to state 400


State 891

  305 expression_delete: "delete" . expr
  306                  | "delete" . "explicit" expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "explicit"                        shift, and go to state 1072
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1073
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 892

  115 expression_with_alias: "assume" . "name" '=' expr

    "name"  shift, and go to state 1074


State 893

  318 expression_continue: "continue" .

    $default  reduce using rule 318 (expression_continue)


State 894

  292 expression_any: "pass" . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1075


State 895

   63 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 1076


State 896

   64 expression_goto: "goto" . "label" "integer constant"
   65                | "goto" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "label"                           shift, and go to state 1077
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1078
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 897

  110 expression_unsafe: "unsafe" . optional_emit_semis expression_block
  512 expr: "unsafe" . '(' expr ')'

    "new line, semicolon"  shift, and go to state 149
    '('                    shift, and go to state 589

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1079


State 898

  322 expression_yield: "yield" . expr
  323                 | "yield" . "<-" expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "<-"                              shift, and go to state 1080
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1081
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 899

  274 expression_any: SEMICOLON .

    $default  reduce using rule 274 (expression_any)


State 900

  290 expression_any: expression_label . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1082


State 901

  291 expression_any: expression_goto . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1083


State 902

  100 expression_if_then_else_oneliner: expression_if_one_liner . "if" '(' expr ')' expression_else_one_liner SEMICOLON

    "if"  shift, and go to state 1084


State 903

  287 expression_any: expression_if_then_else .

    $default  reduce using rule 287 (expression_any)


State 904

   99 expression_if_then_else: $@9 . if_or_static_if '(' expr ')' optional_emit_semis expression_if_block expression_else

    "if"         shift, and go to state 1085
    "static_if"  shift, and go to state 1086

    if_or_static_if  go to state 1087


State 905

  288 expression_any: expression_if_then_else_oneliner .

    $default  reduce using rule 288 (expression_any)


State 906

  282 expression_any: expression_for_loop .

    $default  reduce using rule 282 (expression_any)


State 907

  109 expression_for_loop: $@10 . "for" '(' for_variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

    "for"  shift, and go to state 1088


State 908

  279 expression_any: expression_unsafe .

    $default  reduce using rule 279 (expression_any)


State 909

  278 expression_any: expression_while_loop .

    $default  reduce using rule 278 (expression_any)


State 910

  112 expression_while_loop: $@11 . "while" '(' expr ')' optional_emit_semis expression_block

    "while"  shift, and go to state 1089


State 911

  280 expression_any: expression_with .

    $default  reduce using rule 280 (expression_any)


State 912

  114 expression_with: $@12 . "with" '(' expr ')' optional_emit_semis expression_block

    "with"  shift, and go to state 1090


State 913

  281 expression_any: expression_with_alias . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1091


State 914

  272 expression_block: $@16 '{' expressions $@17 . '}' expression_block_finally

    '}'  shift, and go to state 1092


State 915

  294 expressions: expressions expression_any .

    $default  reduce using rule 294 (expressions)


State 916

  276 expression_any: expression_delete . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1093


State 917

   82 expression_if_one_liner: expression_break .
  283 expression_any: expression_break . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 82 (expression_if_one_liner)

    SEMICOLON  go to state 1094


State 918

   83 expression_if_one_liner: expression_continue .
  284 expression_any: expression_continue . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 83 (expression_if_one_liner)

    SEMICOLON  go to state 1095


State 919

   80 expression_if_one_liner: expression_return .
  285 expression_any: expression_return . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 80 (expression_if_one_liner)

    SEMICOLON  go to state 1096


State 920

   81 expression_if_one_liner: expression_yield .
  286 expression_any: expression_yield . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 81 (expression_if_one_liner)

    SEMICOLON  go to state 1097


State 921

  289 expression_any: expression_try_catch .

    $default  reduce using rule 289 (expression_any)


State 922

  336 expression_let: kwd_let . optional_in_scope let_variable_declaration
  337               | kwd_let . optional_in_scope tuple_expansion_variable_declaration
  338               | kwd_let . optional_in_scope '{' variable_declaration_list '}'

    "inscope"  shift, and go to state 1098

    $default  reduce using rule 331 (optional_in_scope)

    optional_in_scope  go to state 1099


State 923

  277 expression_any: expression_let .

    $default  reduce using rule 277 (expression_any)


State 924

  275 expression_any: expr_assign . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1100


State 925

   79 expression_if_one_liner: expr .
  381 expr_assign: expr .
  382            | expr . '=' expr
  383            | expr . "<-" expr
  384            | expr . ":=" expr
  385            | expr . "&=" expr
  386            | expr . "|=" expr
  387            | expr . "^=" expr
  388            | expr . "&&=" expr
  389            | expr . "||=" expr
  390            | expr . "^^=" expr
  391            | expr . "+=" expr
  392            | expr . "-=" expr
  393            | expr . "*=" expr
  394            | expr . "/=" expr
  395            | expr . "%=" expr
  396            | expr . "<<=" expr
  397            | expr . ">>=" expr
  398            | expr . "<<<=" expr
  399            | expr . ">>>=" expr
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 631
    "as"    shift, and go to state 632
    "+="    shift, and go to state 1101
    "-="    shift, and go to state 1102
    "/="    shift, and go to state 1103
    "*="    shift, and go to state 1104
    "%="    shift, and go to state 1105
    "&="    shift, and go to state 1106
    "|="    shift, and go to state 1107
    "^="    shift, and go to state 1108
    "<<"    shift, and go to state 633
    ">>"    shift, and go to state 634
    "++"    shift, and go to state 635
    "--"    shift, and go to state 636
    "<="    shift, and go to state 637
    "<<="   shift, and go to state 1109
    ">>="   shift, and go to state 1110
    ">="    shift, and go to state 638
    "=="    shift, and go to state 639
    "!="    shift, and go to state 640
    "->"    shift, and go to state 641
    "<-"    shift, and go to state 1111
    "??"    shift, and go to state 642
    "?."    shift, and go to state 643
    "?["    shift, and go to state 644
    "<|"    shift, and go to state 645
    "|>"    shift, and go to state 646
    ":="    shift, and go to state 1112
    "<<<"   shift, and go to state 647
    ">>>"   shift, and go to state 648
    "<<<="  shift, and go to state 1113
    ">>>="  shift, and go to state 1114
    "&&"    shift, and go to state 649
    "||"    shift, and go to state 650
    "^^"    shift, and go to state 651
    "&&="   shift, and go to state 1115
    "||="   shift, and go to state 1116
    "^^="   shift, and go to state 1117
    ".."    shift, and go to state 652
    '='     shift, and go to state 1118
    '?'     shift, and go to state 653
    '|'     shift, and go to state 654
    '^'     shift, and go to state 655
    '&'     shift, and go to state 656
    '<'     shift, and go to state 657
    '>'     shift, and go to state 658
    '-'     shift, and go to state 659
    '+'     shift, and go to state 660
    '*'     shift, and go to state 661
    '/'     shift, and go to state 662
    '%'     shift, and go to state 663
    '.'     shift, and go to state 664
    '['     shift, and go to state 665

    "if"      reduce using rule 79 (expression_if_one_liner)
    $default  reduce using rule 381 (expr_assign)


State 926

  616 enum_expression: "name" .
  617                | "name" . '=' expr

    '='  shift, and go to state 1119

    $default  reduce using rule 616 (enum_expression)


State 927

  621 enum_list: enum_expression .

    $default  reduce using rule 621 (enum_list)


State 928

  622 enum_list: enum_list . commas enum_expression
  644 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list . optional_commas $@48 '}'

    "new line, comma"  shift, and go to state 725
    ','                shift, and go to state 726

    $default  reduce using rule 635 (optional_commas)

    COMMA            go to state 872
    commas           go to state 1120
    optional_commas  go to state 1121


State 929

  546 struct_variable_declaration_list: struct_variable_declaration_list . "new line, semicolon"
  548                                 | struct_variable_declaration_list . $@40 structure_variable_declaration SEMICOLON
  550                                 | struct_variable_declaration_list . optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@41 function_declaration_header SEMICOLON
  552                                 | struct_variable_declaration_list . optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@42 function_declaration_header optional_emit_semis expression_block
  658 optional_struct_variable_declaration_list: '{' struct_variable_declaration_list . '}'

    "new line, semicolon"  shift, and go to state 1122
    '['                    shift, and go to state 15
    '}'                    shift, and go to state 1123

    "def"     reduce using rule 156 (optional_annotation_list_with_emit_semis)
    $default  reduce using rule 547 ($@40)

    optional_annotation_list_with_emit_semis  go to state 1124
    $@40                                      go to state 1125


State 930

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  589 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 1126


State 931

  590 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 590 (let_variable_name_with_pos_list)


State 932

  591 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  592                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1127

    $default  reduce using rule 591 (let_variable_name_with_pos_list)


State 933

  598 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . SEMICOLON
  599                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr SEMICOLON
  738 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  739                                   | type_declaration_no_options . "explicit"
  740                                   | type_declaration_no_options . "const"
  741                                   | type_declaration_no_options . '-' "const"
  742                                   | type_declaration_no_options . '&'
  743                                   | type_declaration_no_options . '-' '&'
  744                                   | type_declaration_no_options . '#'
  745                                   | type_declaration_no_options . "implicit"
  746                                   | type_declaration_no_options . '-' '#'
  747                                   | type_declaration_no_options . "==" "const"
  748                                   | type_declaration_no_options . "==" '&'
  749                                   | type_declaration_no_options . '?'
  753                                   | type_declaration_no_options . "??"

    "const"                shift, and go to state 369
    "implicit"             shift, and go to state 370
    "explicit"             shift, and go to state 371
    "=="                   shift, and go to state 372
    "<-"                   shift, and go to state 561
    "??"                   shift, and go to state 373
    ":="                   shift, and go to state 562
    "new line, semicolon"  shift, and go to state 13
    '='                    shift, and go to state 563
    '?'                    shift, and go to state 374
    '&'                    shift, and go to state 375
    '-'                    shift, and go to state 376
    ';'                    shift, and go to state 16
    '#'                    shift, and go to state 377

    SEMICOLON              go to state 1128
    copy_or_move_or_clone  go to state 1129


State 934

  600 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1130
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 935

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  602 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . SEMICOLON

    "is"                   shift, and go to state 631
    "as"                   shift, and go to state 632
    "<<"                   shift, and go to state 633
    ">>"                   shift, and go to state 634
    "++"                   shift, and go to state 635
    "--"                   shift, and go to state 636
    "<="                   shift, and go to state 637
    ">="                   shift, and go to state 638
    "=="                   shift, and go to state 639
    "!="                   shift, and go to state 640
    "->"                   shift, and go to state 641
    "??"                   shift, and go to state 642
    "?."                   shift, and go to state 643
    "?["                   shift, and go to state 644
    "<|"                   shift, and go to state 645
    "|>"                   shift, and go to state 646
    "<<<"                  shift, and go to state 647
    ">>>"                  shift, and go to state 648
    "&&"                   shift, and go to state 649
    "||"                   shift, and go to state 650
    "^^"                   shift, and go to state 651
    ".."                   shift, and go to state 652
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 653
    '|'                    shift, and go to state 654
    '^'                    shift, and go to state 655
    '&'                    shift, and go to state 656
    '<'                    shift, and go to state 657
    '>'                    shift, and go to state 658
    '-'                    shift, and go to state 659
    '+'                    shift, and go to state 660
    '*'                    shift, and go to state 661
    '/'                    shift, and go to state 662
    '%'                    shift, and go to state 663
    '.'                    shift, and go to state 664
    '['                    shift, and go to state 665
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1131


State 936

  603 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 603 (global_let_variable_declaration)


State 937

  733 type_declaration_no_options_no_dim: "type" '<' $@54 type_declaration '>' $@55 .

    $default  reduce using rule 733 (type_declaration_no_options_no_dim)


State 938

  756 type_declaration_no_options_no_dim: "array" '<' $@59 type_declaration '>' $@60 .

    $default  reduce using rule 756 (type_declaration_no_options_no_dim)


State 939

  759 type_declaration_no_options_no_dim: "table" '<' $@61 table_type_pair '>' $@62 .

    $default  reduce using rule 759 (type_declaration_no_options_no_dim)


State 940

  720 table_type_pair: type_declaration c_or_s type_declaration .
  791 type_declaration: type_declaration . '|' type_declaration_no_options
  792                 | type_declaration . '|' '#'

    '|'  shift, and go to state 380

    $default  reduce using rule 720 (table_type_pair)


State 941

  738 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  739                                   | type_declaration_no_options . "explicit"
  740                                   | type_declaration_no_options . "const"
  741                                   | type_declaration_no_options . '-' "const"
  742                                   | type_declaration_no_options . '&'
  743                                   | type_declaration_no_options . '-' '&'
  744                                   | type_declaration_no_options . '#'
  745                                   | type_declaration_no_options . "implicit"
  746                                   | type_declaration_no_options . '-' '#'
  747                                   | type_declaration_no_options . "==" "const"
  748                                   | type_declaration_no_options . "==" '&'
  749                                   | type_declaration_no_options . '?'
  753                                   | type_declaration_no_options . "??"
  834 make_struct_decl: "struct" '<' $@93 type_declaration_no_options . '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 369
    "implicit"  shift, and go to state 370
    "explicit"  shift, and go to state 371
    "=="        shift, and go to state 372
    "??"        shift, and go to state 373
    '?'         shift, and go to state 374
    '&'         shift, and go to state 375
    '>'         shift, and go to state 1132
    '-'         shift, and go to state 376
    '#'         shift, and go to state 377


State 942

  738 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  739                                   | type_declaration_no_options . "explicit"
  740                                   | type_declaration_no_options . "const"
  741                                   | type_declaration_no_options . '-' "const"
  742                                   | type_declaration_no_options . '&'
  743                                   | type_declaration_no_options . '-' '&'
  744                                   | type_declaration_no_options . '#'
  745                                   | type_declaration_no_options . "implicit"
  746                                   | type_declaration_no_options . '-' '#'
  747                                   | type_declaration_no_options . "==" "const"
  748                                   | type_declaration_no_options . "==" '&'
  749                                   | type_declaration_no_options . '?'
  753                                   | type_declaration_no_options . "??"
  837 make_struct_decl: "class" '<' $@95 type_declaration_no_options . '>' $@96 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 369
    "implicit"  shift, and go to state 370
    "explicit"  shift, and go to state 371
    "=="        shift, and go to state 372
    "??"        shift, and go to state 373
    '?'         shift, and go to state 374
    '&'         shift, and go to state 375
    '>'         shift, and go to state 1133
    '-'         shift, and go to state 376
    '#'         shift, and go to state 377


State 943

  309 new_type_declaration: '<' $@18 type_declaration . '>' $@19
  791 type_declaration: type_declaration . '|' type_declaration_no_options
  792                 | type_declaration . '|' '#'

    '|'  shift, and go to state 380
    '>'  shift, and go to state 1134


State 944

  315 expr_new: "new" new_type_declaration '(' "uninitialized" . make_struct_single ')'
  831 use_initializer: "uninitialized" .

    "$f"    shift, and go to state 616
    "name"  shift, and go to state 1000

    $default  reduce using rule 831 (use_initializer)

    make_struct_fields  go to state 619
    make_struct_single  go to state 1135


State 945

  313 expr_new: "new" new_type_declaration '(' expr_list . ')'
  355 expr_list: expr_list . ',' expr

    ','  shift, and go to state 1035
    ')'  shift, and go to state 1136


State 946

  314 expr_new: "new" new_type_declaration '(' make_struct_single . ')'

    ')'  shift, and go to state 1137


State 947

  312 expr_new: "new" new_type_declaration '(' use_initializer . ')'

    ')'  shift, and go to state 1138


State 948

  352 expr_type_info: "typeinfo" name_in_namespace '<' "name" . '>' '(' expr ')'
  353               | "typeinfo" name_in_namespace '<' "name" . c_or_s "name" '>' '(' expr ')'

    "new line, comma"      shift, and go to state 725
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 726
    '>'                    shift, and go to state 1139
    ';'                    shift, and go to state 16

    COMMA      go to state 727
    SEMICOLON  go to state 728
    c_or_s     go to state 1140


State 949

  351 expr_type_info: "typeinfo" name_in_namespace '(' expr . ')'
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 1141


State 950

  350 expr_type_decl: "type" '<' $@26 type_declaration . '>' $@27
  791 type_declaration: type_declaration . '|' type_declaration_no_options
  792                 | type_declaration . '|' '#'

    '|'  shift, and go to state 380
    '>'  shift, and go to state 1142


State 951

  853 make_dim_decl: "array" "struct" '<' $@103 . type_declaration_no_options '>' $@104 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 1143
    type_declaration_no_options_no_dim  go to state 277


State 952

  856 make_dim_decl: "array" "tuple" '<' $@105 . tuple_type_list '>' $@106 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 679
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    tuple_type                          go to state 680
    tuple_type_list                     go to state 1144
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 276
    type_declaration_no_options_no_dim  go to state 277
    type_declaration                    go to state 682


State 953

  859 make_dim_decl: "array" "variant" '<' $@107 . variant_type_list '>' $@108 '(' make_variant_dim ')'

    "name"  shift, and go to state 683

    variant_type       go to state 684
    variant_type_list  go to state 1145


State 954

  738 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  739                                   | type_declaration_no_options . "explicit"
  740                                   | type_declaration_no_options . "const"
  741                                   | type_declaration_no_options . '-' "const"
  742                                   | type_declaration_no_options . '&'
  743                                   | type_declaration_no_options . '-' '&'
  744                                   | type_declaration_no_options . '#'
  745                                   | type_declaration_no_options . "implicit"
  746                                   | type_declaration_no_options . '-' '#'
  747                                   | type_declaration_no_options . "==" "const"
  748                                   | type_declaration_no_options . "==" '&'
  749                                   | type_declaration_no_options . '?'
  753                                   | type_declaration_no_options . "??"
  863 make_dim_decl: "array" '<' $@109 type_declaration_no_options . '>' $@110 '(' optional_expr_list ')'

    "const"     shift, and go to state 369
    "implicit"  shift, and go to state 370
    "explicit"  shift, and go to state 371
    "=="        shift, and go to state 372
    "??"        shift, and go to state 373
    '?'         shift, and go to state 374
    '&'         shift, and go to state 375
    '>'         shift, and go to state 1146
    '-'         shift, and go to state 376
    '#'         shift, and go to state 377


State 955

  860 make_dim_decl: "array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1147


State 956

  873 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1148


State 957

  874 make_table_decl: "table" '<' type_declaration_no_options c_or_s . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 1149
    type_declaration_no_options_no_dim  go to state 277


State 958

  844 make_map_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1150
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 959

  869 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple
  878 optional_comma: ',' .

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    $default  reduce using rule 878 (optional_comma)

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 743
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_map_tuple          go to state 1151
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 960

  872 make_table_decl: "table" '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1152


State 961

  481 expr: "deref" '(' expr ')' .

    $default  reduce using rule 481 (expr)


State 962

  341 expr_cast: "cast" '<' $@20 type_declaration_no_options . '>' $@21 expr
  738 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  739                                   | type_declaration_no_options . "explicit"
  740                                   | type_declaration_no_options . "const"
  741                                   | type_declaration_no_options . '-' "const"
  742                                   | type_declaration_no_options . '&'
  743                                   | type_declaration_no_options . '-' '&'
  744                                   | type_declaration_no_options . '#'
  745                                   | type_declaration_no_options . "implicit"
  746                                   | type_declaration_no_options . '-' '#'
  747                                   | type_declaration_no_options . "==" "const"
  748                                   | type_declaration_no_options . "==" '&'
  749                                   | type_declaration_no_options . '?'
  753                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 369
    "implicit"  shift, and go to state 370
    "explicit"  shift, and go to state 371
    "=="        shift, and go to state 372
    "??"        shift, and go to state 373
    '?'         shift, and go to state 374
    '&'         shift, and go to state 375
    '>'         shift, and go to state 1153
    '-'         shift, and go to state 376
    '#'         shift, and go to state 377


State 963

  344 expr_cast: "upcast" '<' $@22 type_declaration_no_options . '>' $@23 expr
  738 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  739                                   | type_declaration_no_options . "explicit"
  740                                   | type_declaration_no_options . "const"
  741                                   | type_declaration_no_options . '-' "const"
  742                                   | type_declaration_no_options . '&'
  743                                   | type_declaration_no_options . '-' '&'
  744                                   | type_declaration_no_options . '#'
  745                                   | type_declaration_no_options . "implicit"
  746                                   | type_declaration_no_options . '-' '#'
  747                                   | type_declaration_no_options . "==" "const"
  748                                   | type_declaration_no_options . "==" '&'
  749                                   | type_declaration_no_options . '?'
  753                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 369
    "implicit"  shift, and go to state 370
    "explicit"  shift, and go to state 371
    "=="        shift, and go to state 372
    "??"        shift, and go to state 373
    '?'         shift, and go to state 374
    '&'         shift, and go to state 375
    '>'         shift, and go to state 1154
    '-'         shift, and go to state 376
    '#'         shift, and go to state 377


State 964

  482 expr: "addr" '(' expr ')' .

    $default  reduce using rule 482 (expr)


State 965

  347 expr_cast: "reinterpret" '<' $@24 type_declaration_no_options . '>' $@25 expr
  738 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  739                                   | type_declaration_no_options . "explicit"
  740                                   | type_declaration_no_options . "const"
  741                                   | type_declaration_no_options . '-' "const"
  742                                   | type_declaration_no_options . '&'
  743                                   | type_declaration_no_options . '-' '&'
  744                                   | type_declaration_no_options . '#'
  745                                   | type_declaration_no_options . "implicit"
  746                                   | type_declaration_no_options . '-' '#'
  747                                   | type_declaration_no_options . "==" "const"
  748                                   | type_declaration_no_options . "==" '&'
  749                                   | type_declaration_no_options . '?'
  753                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 369
    "implicit"  shift, and go to state 370
    "explicit"  shift, and go to state 371
    "=="        shift, and go to state 372
    "??"        shift, and go to state 373
    '?'         shift, and go to state 374
    '&'         shift, and go to state 375
    '>'         shift, and go to state 1155
    '-'         shift, and go to state 376
    '#'         shift, and go to state 377


State 966

  512 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 512 (expr)


State 967

  738 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  739                                   | type_declaration_no_options . "explicit"
  740                                   | type_declaration_no_options . "const"
  741                                   | type_declaration_no_options . '-' "const"
  742                                   | type_declaration_no_options . '&'
  743                                   | type_declaration_no_options . '-' '&'
  744                                   | type_declaration_no_options . '#'
  745                                   | type_declaration_no_options . "implicit"
  746                                   | type_declaration_no_options . '-' '#'
  747                                   | type_declaration_no_options . "==" "const"
  748                                   | type_declaration_no_options . "==" '&'
  749                                   | type_declaration_no_options . '?'
  753                                   | type_declaration_no_options . "??"
  867 make_dim_decl: "fixed_array" '<' $@111 type_declaration_no_options . '>' $@112 '(' expr_list optional_comma ')'

    "const"     shift, and go to state 369
    "implicit"  shift, and go to state 370
    "explicit"  shift, and go to state 371
    "=="        shift, and go to state 372
    "??"        shift, and go to state 373
    '?'         shift, and go to state 374
    '&'         shift, and go to state 375
    '>'         shift, and go to state 1156
    '-'         shift, and go to state 376
    '#'         shift, and go to state 377


State 968

  864 make_dim_decl: "fixed_array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1157


State 969

  738 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  739                                   | type_declaration_no_options . "explicit"
  740                                   | type_declaration_no_options . "const"
  741                                   | type_declaration_no_options . '-' "const"
  742                                   | type_declaration_no_options . '&'
  743                                   | type_declaration_no_options . '-' '&'
  744                                   | type_declaration_no_options . '#'
  745                                   | type_declaration_no_options . "implicit"
  746                                   | type_declaration_no_options . '-' '#'
  747                                   | type_declaration_no_options . "==" "const"
  748                                   | type_declaration_no_options . "==" '&'
  749                                   | type_declaration_no_options . '?'
  753                                   | type_declaration_no_options . "??"
  843 make_struct_decl: "default" '<' $@99 type_declaration_no_options . '>' $@100 use_initializer

    "const"     shift, and go to state 369
    "implicit"  shift, and go to state 370
    "explicit"  shift, and go to state 371
    "=="        shift, and go to state 372
    "??"        shift, and go to state 373
    '?'         shift, and go to state 374
    '&'         shift, and go to state 375
    '>'         shift, and go to state 1158
    '-'         shift, and go to state 376
    '#'         shift, and go to state 377


State 970

  564 tuple_type_list: tuple_type_list . c_or_s tuple_type
  849 make_tuple_call: "tuple" '<' $@101 tuple_type_list . '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    "new line, comma"      shift, and go to state 725
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 726
    '>'                    shift, and go to state 1159
    ';'                    shift, and go to state 16

    COMMA      go to state 727
    SEMICOLON  go to state 728
    c_or_s     go to state 863


State 971

  846 make_tuple_call: "tuple" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1160


State 972

  570 variant_type_list: variant_type_list . c_or_s variant_type
  840 make_struct_decl: "variant" '<' $@97 variant_type_list . '>' $@98 '(' use_initializer make_variant_dim ')'

    "new line, comma"      shift, and go to state 725
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 726
    '>'                    shift, and go to state 1161
    ';'                    shift, and go to state 16

    COMMA      go to state 727
    SEMICOLON  go to state 728
    c_or_s     go to state 866


State 973

  513 expr_generator: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  514               | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'
  515               | "generator" '<' type_declaration_no_options '>' . optional_capture_list optional_emit_semis expression_block

    "capture"  shift, and go to state 795

    $default  reduce using rule 369 (optional_capture_list)

    optional_capture_list  go to state 1162


State 974

  516 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 516 (expr_mtag)


State 975

  517 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 517 (expr_mtag)


State 976

  518 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 518 (expr_mtag)


State 977

  519 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 519 (expr_mtag)


State 978

  520 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 520 (expr_mtag)


State 979

  522 expr_mtag: "$c" '(' expr ')' . '(' ')'
  523          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1163


State 980

   42 string_builder_body: string_builder_body "{" expr . optional_format_string "}"
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    ':'    shift, and go to state 1164
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 37 (optional_format_string)

    optional_format_string  go to state 1165


State 981

  102 for_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 1166


State 982

  101 for_variable_name_with_pos_list: "name" .
  103                                | "name" . "aka" "name"

    "aka"  shift, and go to state 1167

    $default  reduce using rule 101 (for_variable_name_with_pos_list)


State 983

  104 for_variable_name_with_pos_list: '(' . tuple_expansion ')'

    "name"  shift, and go to state 1168

    tuple_expansion  go to state 1169


State 984

  105 for_variable_name_with_pos_list: for_variable_name_with_pos_list . ',' "name"
  106                                | for_variable_name_with_pos_list . ',' "name" "aka" "name"
  107                                | for_variable_name_with_pos_list . ',' '(' tuple_expansion ')'
  879 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list . "in" expr_list ')' ';' expr array_comprehension_where ']'

    "in"  shift, and go to state 1170
    ','   shift, and go to state 1171


State 985

  880 array_comprehension: '[' "iterator" "for" '(' . for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "$i"    shift, and go to state 981
    "name"  shift, and go to state 982
    '('     shift, and go to state 983

    for_variable_name_with_pos_list  go to state 1172


State 986

  355 expr_list: expr_list ',' expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 355 (expr_list)


State 987

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  817 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  818                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 1173


State 988

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  814 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 814 (make_struct_fields)


State 989

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  813 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 813 (make_struct_fields)


State 990

  470 expr: '(' expr_list optional_comma ')' .

    $default  reduce using rule 470 (expr)


State 991

  819 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  820                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1174


State 992

  815 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  816                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 774
    ":="  shift, and go to state 1175
    '='   shift, and go to state 776

    copy_or_move  go to state 1176


State 993

  405 func_addr_name: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1177
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 994

  531 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1178
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 995

  409 func_addr_expr: '@' '@' '<' $@28 . type_declaration_no_options '>' $@29 func_addr_name

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 1179
    type_declaration_no_options_no_dim  go to state 277


State 996

  412 func_addr_expr: '@' '@' '<' $@30 . optional_function_argument_list optional_function_type '>' $@31 func_addr_name

    '('  shift, and go to state 337

    $default  reduce using rule 158 (optional_function_argument_list)

    optional_function_argument_list  go to state 1180


State 997

  105 for_variable_name_with_pos_list: for_variable_name_with_pos_list . ',' "name"
  106                                | for_variable_name_with_pos_list . ',' "name" "aka" "name"
  107                                | for_variable_name_with_pos_list . ',' '(' tuple_expansion ')'
  881 array_comprehension: '{' "for" '(' for_variable_name_with_pos_list . "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "in"  shift, and go to state 1181
    ','   shift, and go to state 1171


State 998

  871 make_table_decl: '{' $@113 optional_emit_semis optional_expr_map_tuple_list . '}'

    '}'  shift, and go to state 1182


State 999

  299 optional_expr_map_tuple_list: expr_map_tuple_list . optional_comma
  869 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple

    ','  shift, and go to state 959

    $default  reduce using rule 877 (optional_comma)

    optional_comma  go to state 1183


State 1000

  813 make_struct_fields: "name" . copy_or_move expr
  814                   | "name" . ":=" expr

    "<-"  shift, and go to state 774
    ":="  shift, and go to state 775
    '='   shift, and go to state 776

    copy_or_move  go to state 777


State 1001

  424 expr_call: name_in_namespace '(' "uninitialized" ')' .

    $default  reduce using rule 424 (expr_call)


State 1002

  426 expr_call: name_in_namespace '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1184


State 1003

  400 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  815 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  816                   | make_struct_fields . ',' "name" ":=" expr
  819                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  820                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1185
    ']'  shift, and go to state 1186


State 1004

  355 expr_list: expr_list ',' . expr
  401 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 1187
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 986
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1005

  427 expr_call: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 427 (expr_call)


State 1006

  425 expr_call: name_in_namespace '(' make_struct_single ')' .

    $default  reduce using rule 425 (expr_call)


State 1007

  155 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 155 (optional_annotation_list)


State 1008

  370 optional_capture_list: "capture" '(' . capture_list ')'

    "<-"    shift, and go to state 1188
    ":="    shift, and go to state 1189
    "name"  shift, and go to state 1190
    '='     shift, and go to state 1191
    '&'     shift, and go to state 1192

    capture_entry  go to state 1193
    capture_list   go to state 1194


State 1009

  371 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type optional_emit_semis block_or_simple_block

    ':'  shift, and go to state 397

    $default  reduce using rule 161 (optional_function_type)

    optional_function_type  go to state 1195


State 1010

  373 expr_full_block_assumed_piped: '{' expressions '}' .

    $default  reduce using rule 373 (expr_full_block_assumed_piped)


State 1011

  372 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type optional_emit_semis expression_block

    '('  shift, and go to state 337

    $default  reduce using rule 158 (optional_function_argument_list)

    optional_function_argument_list  go to state 1196


State 1012

  488 expr: expr "is" "type" '<' . $@34 type_declaration_no_options '>' $@35

    $default  reduce using rule 486 ($@34)

    $@34  go to state 1197


State 1013

  530 expr_mtag: expr "is" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1198
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1014

  494 expr: expr "as" "type" '<' . $@36 type_declaration '>' $@37

    $default  reduce using rule 492 ($@36)

    $@36  go to state 1199


State 1015

  528 expr_mtag: expr "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1200
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1016

  402 expr_method_call: expr "->" "name" '(' . ')'
  403                 | expr "->" "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    ')'                               shift, and go to state 1201
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    expr_list               go to state 1202
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 615
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1017

  525 expr_mtag: expr "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1203
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1018

  474 expr: expr "?[" expr ']' .

    $default  reduce using rule 474 (expr)


State 1019

  499 expr: expr '?' "as" "type" . '<' $@38 type_declaration '>' $@39

    '<'  shift, and go to state 1204


State 1020

  529 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1205


State 1021

  496 expr: expr '?' "as" "name" .

    $default  reduce using rule 496 (expr)


State 1022

  500 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 500 (expr)


State 1023

  485 expr: expr '?' expr ':' . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1206
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1024

  527 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1207


State 1025

  477 expr: expr '.' "?." "name" .

    $default  reduce using rule 477 (expr)


State 1026

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  475     | expr '.' "?[" expr . ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ']'    shift, and go to state 1208


State 1027

  524 expr_mtag: expr '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1209
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1028

  415 expr_field: expr '.' "name" '(' . ')'
  416           | expr '.' "name" '(' . expr_list ')'
  417           | expr '.' "name" '(' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 1210
    '('                               shift, and go to state 468
    ')'                               shift, and go to state 1211
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    expr_list               go to state 1212
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 615
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1029

  526 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1213


State 1030

  414 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 414 (expr_field)


State 1031

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  473     | expr '.' '[' expr . ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ']'    shift, and go to state 1214


State 1032

  422 expr_field: expr '.' $@32 error . $@33

    $default  reduce using rule 421 ($@33)

    $@33  go to state 1215


State 1033

  418 expr_field: expr '.' basic_type_declaration '(' . ')'
  419           | expr '.' basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    ')'                               shift, and go to state 1216
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    expr_list               go to state 1217
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 615
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1034

  472 expr: expr '[' expr ']' .

    $default  reduce using rule 472 (expr)


State 1035

  355 expr_list: expr_list ',' . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 986
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1036

  429 expr_call: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 429 (expr_call)


State 1037

  762 type_declaration_no_options_no_dim: "iterator" '<' $@63 type_declaration '>' $@64 .

    $default  reduce using rule 762 (type_declaration_no_options_no_dim)


State 1038

  752 type_declaration_no_options_no_dim: "smart_ptr" '<' $@57 type_declaration '>' $@58 .

    $default  reduce using rule 752 (type_declaration_no_options_no_dim)


State 1039

  716 bitfield_type_declaration: "bitfield" '<' $@52 bitfield_bits '>' $@53 .

    $default  reduce using rule 716 (bitfield_type_declaration)


State 1040

  708 bitfield_bits: bitfield_bits ';' "name" .

    $default  reduce using rule 708 (bitfield_bits)


State 1041

  766 type_declaration_no_options_no_dim: "block" '<' $@65 type_declaration '>' $@66 .

    $default  reduce using rule 766 (type_declaration_no_options_no_dim)


State 1042

  769 type_declaration_no_options_no_dim: "block" '<' $@67 optional_function_argument_list optional_function_type '>' . $@68

    $default  reduce using rule 768 ($@68)

    $@68  go to state 1218


State 1043

  773 type_declaration_no_options_no_dim: "function" '<' $@69 type_declaration '>' $@70 .

    $default  reduce using rule 773 (type_declaration_no_options_no_dim)


State 1044

  776 type_declaration_no_options_no_dim: "function" '<' $@71 optional_function_argument_list optional_function_type '>' . $@72

    $default  reduce using rule 775 ($@72)

    $@72  go to state 1219


State 1045

  780 type_declaration_no_options_no_dim: "lambda" '<' $@73 type_declaration '>' $@74 .

    $default  reduce using rule 780 (type_declaration_no_options_no_dim)


State 1046

  783 type_declaration_no_options_no_dim: "lambda" '<' $@75 optional_function_argument_list optional_function_type '>' . $@76

    $default  reduce using rule 782 ($@76)

    $@76  go to state 1220


State 1047

  562 tuple_type: "name" ':' type_declaration .
  791 type_declaration: type_declaration . '|' type_declaration_no_options
  792                 | type_declaration . '|' '#'

    '|'  shift, and go to state 380

    $default  reduce using rule 562 (tuple_type)


State 1048

  786 type_declaration_no_options_no_dim: "tuple" '<' $@77 tuple_type_list '>' $@78 .

    $default  reduce using rule 786 (type_declaration_no_options_no_dim)


State 1049

  564 tuple_type_list: tuple_type_list c_or_s tuple_type .

    $default  reduce using rule 564 (tuple_type_list)


State 1050

  568 variant_type: "name" ':' type_declaration .
  791 type_declaration: type_declaration . '|' type_declaration_no_options
  792                 | type_declaration . '|' '#'

    '|'  shift, and go to state 380

    $default  reduce using rule 568 (variant_type)


State 1051

  789 type_declaration_no_options_no_dim: "variant" '<' $@79 variant_type_list '>' $@80 .

    $default  reduce using rule 789 (type_declaration_no_options_no_dim)


State 1052

  570 variant_type_list: variant_type_list c_or_s variant_type .

    $default  reduce using rule 570 (variant_type_list)


State 1053

  737 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@56 type_declaration_no_options_list '>' . '(' optional_expr_list ')'

    '('  shift, and go to state 1221


State 1054

  301 type_declaration_no_options_list: type_declaration_no_options_list c_or_s . type_declaration

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 276
    type_declaration_no_options_no_dim  go to state 277
    type_declaration                    go to state 1222


State 1055

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  711 bitfield_alias_bits: "name" '=' expr .

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 711 (bitfield_alias_bits)


State 1056

  712 bitfield_alias_bits: bitfield_alias_bits commas "name" .
  713                    | bitfield_alias_bits commas "name" . '=' expr

    '='  shift, and go to state 1223

    $default  reduce using rule 712 (bitfield_alias_bits)


State 1057

  619 commas: commas COMMA .

    $default  reduce using rule 619 (commas)


State 1058

  807 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias "name" optional_emit_commas $@90 '{' $@91 bitfield_alias_bits optional_commas $@92 . '}'

    '}'  shift, and go to state 1224


State 1059

   85 semis: semis SEMICOLON .

    $default  reduce using rule 85 (semis)


State 1060

  567 tuple_alias_type_list: tuple_alias_type_list semis tuple_type .

    $default  reduce using rule 567 (tuple_alias_type_list)


State 1061

  797 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 tuple_alias_type_list optional_semis $@84 . '}'

    '}'  shift, and go to state 1225


State 1062

  573 variant_alias_type_list: variant_alias_type_list semis variant_type .

    $default  reduce using rule 573 (variant_alias_type_list)


State 1063

  802 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 '{' $@87 variant_alias_type_list optional_semis $@88 . '}'

    '}'  shift, and go to state 1226


State 1064

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  664 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 1227


State 1065

  665 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 665 (variable_name_with_pos_list)


State 1066

  666 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  667                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1228

    $default  reduce using rule 666 (variable_name_with_pos_list)


State 1067

  579 variable_declaration_type: variable_name_with_pos_list ':' type_declaration .
  580                          | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  791 type_declaration: type_declaration . '|' type_declaration_no_options
  792                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 774
    '='   shift, and go to state 776
    '|'   shift, and go to state 380

    $default  reduce using rule 579 (variable_declaration_type)

    copy_or_move  go to state 1229


State 1068

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  578 variable_declaration_no_type: variable_name_with_pos_list copy_or_move expr .

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 578 (variable_declaration_no_type)


State 1069

  321 expression_return: "return" "<-" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1230
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1070

  320 expression_return: "return" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 320 (expression_return)


State 1071

  324 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 1231


State 1072

  306 expression_delete: "delete" "explicit" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1232
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1073

  305 expression_delete: "delete" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 305 (expression_delete)


State 1074

  115 expression_with_alias: "assume" "name" . '=' expr

    '='  shift, and go to state 1233


State 1075

  292 expression_any: "pass" SEMICOLON .

    $default  reduce using rule 292 (expression_any)


State 1076

   63 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 1234


State 1077

   64 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 1235


State 1078

   65 expression_goto: "goto" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 65 (expression_goto)


State 1079

  110 expression_unsafe: "unsafe" optional_emit_semis . expression_block

    $default  reduce using rule 270 ($@16)

    expression_block  go to state 1236
    $@16              go to state 400


State 1080

  323 expression_yield: "yield" "<-" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1237
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1081

  322 expression_yield: "yield" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 322 (expression_yield)


State 1082

  290 expression_any: expression_label SEMICOLON .

    $default  reduce using rule 290 (expression_any)


State 1083

  291 expression_any: expression_goto SEMICOLON .

    $default  reduce using rule 291 (expression_any)


State 1084

  100 expression_if_then_else_oneliner: expression_if_one_liner "if" . '(' expr ')' expression_else_one_liner SEMICOLON

    '('  shift, and go to state 1238


State 1085

   75 if_or_static_if: "if" .

    $default  reduce using rule 75 (if_or_static_if)


State 1086

   76 if_or_static_if: "static_if" .

    $default  reduce using rule 76 (if_or_static_if)


State 1087

   99 expression_if_then_else: $@9 if_or_static_if . '(' expr ')' optional_emit_semis expression_if_block expression_else

    '('  shift, and go to state 1239


State 1088

  109 expression_for_loop: $@10 "for" . '(' for_variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

    '('  shift, and go to state 1240


State 1089

  112 expression_while_loop: $@11 "while" . '(' expr ')' optional_emit_semis expression_block

    '('  shift, and go to state 1241


State 1090

  114 expression_with: $@12 "with" . '(' expr ')' optional_emit_semis expression_block

    '('  shift, and go to state 1242


State 1091

  281 expression_any: expression_with_alias SEMICOLON .

    $default  reduce using rule 281 (expression_any)


State 1092

  272 expression_block: $@16 '{' expressions $@17 '}' . expression_block_finally

    "finally"  shift, and go to state 1243

    $default  reduce using rule 266 (expression_block_finally)

    expression_block_finally  go to state 1244


State 1093

  276 expression_any: expression_delete SEMICOLON .

    $default  reduce using rule 276 (expression_any)


State 1094

  283 expression_any: expression_break SEMICOLON .

    $default  reduce using rule 283 (expression_any)


State 1095

  284 expression_any: expression_continue SEMICOLON .

    $default  reduce using rule 284 (expression_any)


State 1096

  285 expression_any: expression_return SEMICOLON .

    $default  reduce using rule 285 (expression_any)


State 1097

  286 expression_any: expression_yield SEMICOLON .

    $default  reduce using rule 286 (expression_any)


State 1098

  330 optional_in_scope: "inscope" .

    $default  reduce using rule 330 (optional_in_scope)


State 1099

  336 expression_let: kwd_let optional_in_scope . let_variable_declaration
  337               | kwd_let optional_in_scope . tuple_expansion_variable_declaration
  338               | kwd_let optional_in_scope . '{' variable_declaration_list '}'

    "$i"    shift, and go to state 554
    "name"  shift, and go to state 555
    '('     shift, and go to state 1245
    '{'     shift, and go to state 1246

    tuple_expansion_variable_declaration  go to state 1247
    let_variable_name_with_pos_list       go to state 556
    let_variable_declaration              go to state 1248


State 1100

  275 expression_any: expr_assign SEMICOLON .

    $default  reduce using rule 275 (expression_any)


State 1101

  391 expr_assign: expr "+=" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1249
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1102

  392 expr_assign: expr "-=" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1250
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1103

  394 expr_assign: expr "/=" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1251
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1104

  393 expr_assign: expr "*=" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1252
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1105

  395 expr_assign: expr "%=" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1253
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1106

  385 expr_assign: expr "&=" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1254
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1107

  386 expr_assign: expr "|=" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1255
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1108

  387 expr_assign: expr "^=" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1256
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1109

  396 expr_assign: expr "<<=" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1257
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1110

  397 expr_assign: expr ">>=" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1258
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1111

  383 expr_assign: expr "<-" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1259
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1112

  384 expr_assign: expr ":=" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1260
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1113

  398 expr_assign: expr "<<<=" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1261
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1114

  399 expr_assign: expr ">>>=" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1262
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1115

  388 expr_assign: expr "&&=" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1263
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1116

  389 expr_assign: expr "||=" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1264
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1117

  390 expr_assign: expr "^^=" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1265
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1118

  382 expr_assign: expr '=' . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1266
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1119

  617 enum_expression: "name" '=' . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1267
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1120

  619 commas: commas . COMMA
  622 enum_list: enum_list commas . enum_expression
  636 optional_commas: commas .

    "name"             shift, and go to state 926
    "new line, comma"  shift, and go to state 725
    ','                shift, and go to state 726

    $default  reduce using rule 636 (optional_commas)

    COMMA            go to state 1057
    enum_expression  go to state 1268


State 1121

  644 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas . $@48 '}'

    $default  reduce using rule 643 ($@48)

    $@48  go to state 1269


State 1122

  546 struct_variable_declaration_list: struct_variable_declaration_list "new line, semicolon" .

    $default  reduce using rule 546 (struct_variable_declaration_list)


State 1123

  658 optional_struct_variable_declaration_list: '{' struct_variable_declaration_list '}' .

    $default  reduce using rule 658 (optional_struct_variable_declaration_list)


State 1124

  550 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis . "def" optional_public_or_private_member_variable "abstract" optional_constant $@41 function_declaration_header SEMICOLON
  552                                 | struct_variable_declaration_list optional_annotation_list_with_emit_semis . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@42 function_declaration_header optional_emit_semis expression_block

    "def"  shift, and go to state 1270


State 1125

  548 struct_variable_declaration_list: struct_variable_declaration_list $@40 . structure_variable_declaration SEMICOLON

    '@'  shift, and go to state 222

    $default  reduce using rule 532 (optional_field_annotation)

    metadata_argument_list          go to state 223
    optional_field_annotation       go to state 1271
    structure_variable_declaration  go to state 1272


State 1126

  589 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 589 (let_variable_name_with_pos_list)


State 1127

  592 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1273


State 1128

  598 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options SEMICOLON .

    $default  reduce using rule 598 (let_variable_declaration)


State 1129

  599 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1274
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1130

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  600 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . SEMICOLON

    "is"                   shift, and go to state 631
    "as"                   shift, and go to state 632
    "<<"                   shift, and go to state 633
    ">>"                   shift, and go to state 634
    "++"                   shift, and go to state 635
    "--"                   shift, and go to state 636
    "<="                   shift, and go to state 637
    ">="                   shift, and go to state 638
    "=="                   shift, and go to state 639
    "!="                   shift, and go to state 640
    "->"                   shift, and go to state 641
    "??"                   shift, and go to state 642
    "?."                   shift, and go to state 643
    "?["                   shift, and go to state 644
    "<|"                   shift, and go to state 645
    "|>"                   shift, and go to state 646
    "<<<"                  shift, and go to state 647
    ">>>"                  shift, and go to state 648
    "&&"                   shift, and go to state 649
    "||"                   shift, and go to state 650
    "^^"                   shift, and go to state 651
    ".."                   shift, and go to state 652
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 653
    '|'                    shift, and go to state 654
    '^'                    shift, and go to state 655
    '&'                    shift, and go to state 656
    '<'                    shift, and go to state 657
    '>'                    shift, and go to state 658
    '-'                    shift, and go to state 659
    '+'                    shift, and go to state 660
    '*'                    shift, and go to state 661
    '/'                    shift, and go to state 662
    '%'                    shift, and go to state 663
    '.'                    shift, and go to state 664
    '['                    shift, and go to state 665
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1275


State 1131

  602 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 602 (global_let_variable_declaration)


State 1132

  834 make_struct_decl: "struct" '<' $@93 type_declaration_no_options '>' . $@94 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 833 ($@94)

    $@94  go to state 1276


State 1133

  837 make_struct_decl: "class" '<' $@95 type_declaration_no_options '>' . $@96 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 836 ($@96)

    $@96  go to state 1277


State 1134

  309 new_type_declaration: '<' $@18 type_declaration '>' . $@19

    $default  reduce using rule 308 ($@19)

    $@19  go to state 1278


State 1135

  315 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1279


State 1136

  313 expr_new: "new" new_type_declaration '(' expr_list ')' .

    $default  reduce using rule 313 (expr_new)


State 1137

  314 expr_new: "new" new_type_declaration '(' make_struct_single ')' .

    $default  reduce using rule 314 (expr_new)


State 1138

  312 expr_new: "new" new_type_declaration '(' use_initializer ')' .

    $default  reduce using rule 312 (expr_new)


State 1139

  352 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' . '(' expr ')'

    '('  shift, and go to state 1280


State 1140

  353 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s . "name" '>' '(' expr ')'

    "name"  shift, and go to state 1281


State 1141

  351 expr_type_info: "typeinfo" name_in_namespace '(' expr ')' .

    $default  reduce using rule 351 (expr_type_info)


State 1142

  350 expr_type_decl: "type" '<' $@26 type_declaration '>' . $@27

    $default  reduce using rule 349 ($@27)

    $@27  go to state 1282


State 1143

  738 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  739                                   | type_declaration_no_options . "explicit"
  740                                   | type_declaration_no_options . "const"
  741                                   | type_declaration_no_options . '-' "const"
  742                                   | type_declaration_no_options . '&'
  743                                   | type_declaration_no_options . '-' '&'
  744                                   | type_declaration_no_options . '#'
  745                                   | type_declaration_no_options . "implicit"
  746                                   | type_declaration_no_options . '-' '#'
  747                                   | type_declaration_no_options . "==" "const"
  748                                   | type_declaration_no_options . "==" '&'
  749                                   | type_declaration_no_options . '?'
  753                                   | type_declaration_no_options . "??"
  853 make_dim_decl: "array" "struct" '<' $@103 type_declaration_no_options . '>' $@104 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 369
    "implicit"  shift, and go to state 370
    "explicit"  shift, and go to state 371
    "=="        shift, and go to state 372
    "??"        shift, and go to state 373
    '?'         shift, and go to state 374
    '&'         shift, and go to state 375
    '>'         shift, and go to state 1283
    '-'         shift, and go to state 376
    '#'         shift, and go to state 377


State 1144

  564 tuple_type_list: tuple_type_list . c_or_s tuple_type
  856 make_dim_decl: "array" "tuple" '<' $@105 tuple_type_list . '>' $@106 '(' use_initializer optional_make_struct_dim_decl ')'

    "new line, comma"      shift, and go to state 725
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 726
    '>'                    shift, and go to state 1284
    ';'                    shift, and go to state 16

    COMMA      go to state 727
    SEMICOLON  go to state 728
    c_or_s     go to state 863


State 1145

  570 variant_type_list: variant_type_list . c_or_s variant_type
  859 make_dim_decl: "array" "variant" '<' $@107 variant_type_list . '>' $@108 '(' make_variant_dim ')'

    "new line, comma"      shift, and go to state 725
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 726
    '>'                    shift, and go to state 1285
    ';'                    shift, and go to state 16

    COMMA      go to state 727
    SEMICOLON  go to state 728
    c_or_s     go to state 866


State 1146

  863 make_dim_decl: "array" '<' $@109 type_declaration_no_options '>' . $@110 '(' optional_expr_list ')'

    $default  reduce using rule 862 ($@110)

    $@110  go to state 1286


State 1147

  860 make_dim_decl: "array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 860 (make_dim_decl)


State 1148

  873 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    $default  reduce using rule 298 (optional_expr_map_tuple_list)

    string_builder                go to state 472
    expr_reader                   go to state 473
    expr_call_pipe                go to state 474
    optional_expr_map_tuple_list  go to state 1287
    name_in_namespace             go to state 475
    expr_new                      go to state 476
    expr_cast                     go to state 477
    expr_type_decl                go to state 478
    expr_type_info                go to state 479
    block_or_lambda               go to state 480
    expr_full_block               go to state 481
    expr_numeric_const            go to state 482
    expr_named_call               go to state 483
    expr_method_call              go to state 484
    func_addr_expr                go to state 485
    expr_field                    go to state 486
    expr_call                     go to state 487
    expr                          go to state 743
    expr_generator                go to state 489
    expr_mtag                     go to state 490
    basic_type_declaration        go to state 491
    make_decl                     go to state 492
    make_struct_decl              go to state 493
    make_map_tuple                go to state 744
    make_tuple_call               go to state 494
    make_dim_decl                 go to state 495
    expr_map_tuple_list           go to state 999
    make_table_decl               go to state 496
    array_comprehension           go to state 497


State 1149

  738 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  739                                   | type_declaration_no_options . "explicit"
  740                                   | type_declaration_no_options . "const"
  741                                   | type_declaration_no_options . '-' "const"
  742                                   | type_declaration_no_options . '&'
  743                                   | type_declaration_no_options . '-' '&'
  744                                   | type_declaration_no_options . '#'
  745                                   | type_declaration_no_options . "implicit"
  746                                   | type_declaration_no_options . '-' '#'
  747                                   | type_declaration_no_options . "==" "const"
  748                                   | type_declaration_no_options . "==" '&'
  749                                   | type_declaration_no_options . '?'
  753                                   | type_declaration_no_options . "??"
  874 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'

    "const"     shift, and go to state 369
    "implicit"  shift, and go to state 370
    "explicit"  shift, and go to state 371
    "=="        shift, and go to state 372
    "??"        shift, and go to state 373
    '?'         shift, and go to state 374
    '&'         shift, and go to state 375
    '>'         shift, and go to state 1288
    '-'         shift, and go to state 376
    '#'         shift, and go to state 377


State 1150

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  844 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 844 (make_map_tuple)


State 1151

  869 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 869 (expr_map_tuple_list)


State 1152

  872 make_table_decl: "table" '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 872 (make_table_decl)


State 1153

  341 expr_cast: "cast" '<' $@20 type_declaration_no_options '>' . $@21 expr

    $default  reduce using rule 340 ($@21)

    $@21  go to state 1289


State 1154

  344 expr_cast: "upcast" '<' $@22 type_declaration_no_options '>' . $@23 expr

    $default  reduce using rule 343 ($@23)

    $@23  go to state 1290


State 1155

  347 expr_cast: "reinterpret" '<' $@24 type_declaration_no_options '>' . $@25 expr

    $default  reduce using rule 346 ($@25)

    $@25  go to state 1291


State 1156

  867 make_dim_decl: "fixed_array" '<' $@111 type_declaration_no_options '>' . $@112 '(' expr_list optional_comma ')'

    $default  reduce using rule 866 ($@112)

    $@112  go to state 1292


State 1157

  864 make_dim_decl: "fixed_array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 864 (make_dim_decl)


State 1158

  843 make_struct_decl: "default" '<' $@99 type_declaration_no_options '>' . $@100 use_initializer

    $default  reduce using rule 842 ($@100)

    $@100  go to state 1293


State 1159

  849 make_tuple_call: "tuple" '<' $@101 tuple_type_list '>' . $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 848 ($@102)

    $@102  go to state 1294


State 1160

  846 make_tuple_call: "tuple" '(' expr_list optional_comma ')' .

    $default  reduce using rule 846 (make_tuple_call)


State 1161

  840 make_struct_decl: "variant" '<' $@97 variant_type_list '>' . $@98 '(' use_initializer make_variant_dim ')'

    $default  reduce using rule 839 ($@98)

    $@98  go to state 1295


State 1162

  513 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  514               | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'
  515               | "generator" '<' type_declaration_no_options '>' optional_capture_list . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149
    '('                    shift, and go to state 1296

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1297


State 1163

  522 expr_mtag: "$c" '(' expr ')' '(' . ')'
  523          | "$c" '(' expr ')' '(' . expr_list ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    ')'                               shift, and go to state 1298
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    expr_list               go to state 1299
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 615
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1164

   39 optional_format_string: ':' . $@1 format_string

    $default  reduce using rule 38 ($@1)

    $@1  go to state 1300


State 1165

   42 string_builder_body: string_builder_body "{" expr optional_format_string . "}"

    "}"  shift, and go to state 1301


State 1166

  102 for_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1302
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1167

  103 for_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1303


State 1168

  332 tuple_expansion: "name" .

    $default  reduce using rule 332 (tuple_expansion)


State 1169

  104 for_variable_name_with_pos_list: '(' tuple_expansion . ')'
  333 tuple_expansion: tuple_expansion . ',' "name"

    ','  shift, and go to state 1304
    ')'  shift, and go to state 1305


State 1170

  879 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list "in" . expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    expr_list               go to state 1306
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 615
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1171

  105 for_variable_name_with_pos_list: for_variable_name_with_pos_list ',' . "name"
  106                                | for_variable_name_with_pos_list ',' . "name" "aka" "name"
  107                                | for_variable_name_with_pos_list ',' . '(' tuple_expansion ')'

    "name"  shift, and go to state 1307
    '('     shift, and go to state 1308


State 1172

  105 for_variable_name_with_pos_list: for_variable_name_with_pos_list . ',' "name"
  106                                | for_variable_name_with_pos_list . ',' "name" "aka" "name"
  107                                | for_variable_name_with_pos_list . ',' '(' tuple_expansion ')'
  880 array_comprehension: '[' "iterator" "for" '(' for_variable_name_with_pos_list . "in" expr_list ')' ';' expr array_comprehension_where ']'

    "in"  shift, and go to state 1309
    ','   shift, and go to state 1171


State 1173

  817 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  818                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 774
    ":="  shift, and go to state 1310
    '='   shift, and go to state 776

    copy_or_move  go to state 1311


State 1174

  819 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  820                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1312
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1175

  816 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1313
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1176

  815 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1314
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1177

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  405 func_addr_name: "$i" '(' expr . ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 1315


State 1178

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  531          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 1316


State 1179

  409 func_addr_expr: '@' '@' '<' $@28 type_declaration_no_options . '>' $@29 func_addr_name
  738 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  739                                   | type_declaration_no_options . "explicit"
  740                                   | type_declaration_no_options . "const"
  741                                   | type_declaration_no_options . '-' "const"
  742                                   | type_declaration_no_options . '&'
  743                                   | type_declaration_no_options . '-' '&'
  744                                   | type_declaration_no_options . '#'
  745                                   | type_declaration_no_options . "implicit"
  746                                   | type_declaration_no_options . '-' '#'
  747                                   | type_declaration_no_options . "==" "const"
  748                                   | type_declaration_no_options . "==" '&'
  749                                   | type_declaration_no_options . '?'
  753                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 369
    "implicit"  shift, and go to state 370
    "explicit"  shift, and go to state 371
    "=="        shift, and go to state 372
    "??"        shift, and go to state 373
    '?'         shift, and go to state 374
    '&'         shift, and go to state 375
    '>'         shift, and go to state 1317
    '-'         shift, and go to state 376
    '#'         shift, and go to state 377


State 1180

  412 func_addr_expr: '@' '@' '<' $@30 optional_function_argument_list . optional_function_type '>' $@31 func_addr_name

    ':'  shift, and go to state 397

    $default  reduce using rule 161 (optional_function_type)

    optional_function_type  go to state 1318


State 1181

  881 array_comprehension: '{' "for" '(' for_variable_name_with_pos_list "in" . expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    expr_list               go to state 1319
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 615
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1182

  871 make_table_decl: '{' $@113 optional_emit_semis optional_expr_map_tuple_list '}' .

    $default  reduce using rule 871 (make_table_decl)


State 1183

  299 optional_expr_map_tuple_list: expr_map_tuple_list optional_comma .

    $default  reduce using rule 299 (optional_expr_map_tuple_list)


State 1184

  426 expr_call: name_in_namespace '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 426 (expr_call)


State 1185

  815 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  816                   | make_struct_fields ',' . "name" ":=" expr
  819                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  820                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 991
    "name"  shift, and go to state 992


State 1186

  400 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1320


State 1187

  401 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'
  850 make_dim_decl: '[' . optional_expr_list ']'
  879 array_comprehension: '[' . "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  880                    | '[' . "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "for"                             shift, and go to state 611
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "iterator"                        shift, and go to state 612
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "$f"                              shift, and go to state 616
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 617
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    $default  reduce using rule 296 (optional_expr_list)

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    optional_expr_list      go to state 613
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    expr_list               go to state 614
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 615
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_fields      go to state 1321
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1188

  364 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1322


State 1189

  365 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1323


State 1190

  366 capture_entry: "name" . '(' "name" ')'

    '('  shift, and go to state 1324


State 1191

  363 capture_entry: '=' . "name"

    "name"  shift, and go to state 1325


State 1192

  362 capture_entry: '&' . "name"

    "name"  shift, and go to state 1326


State 1193

  367 capture_list: capture_entry .

    $default  reduce using rule 367 (capture_list)


State 1194

  368 capture_list: capture_list . ',' capture_entry
  370 optional_capture_list: "capture" '(' capture_list . ')'

    ','  shift, and go to state 1327
    ')'  shift, and go to state 1328


State 1195

  371 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . optional_emit_semis block_or_simple_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1329


State 1196

  372 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type optional_emit_semis expression_block

    ':'  shift, and go to state 397

    $default  reduce using rule 161 (optional_function_type)

    optional_function_type  go to state 1330


State 1197

  488 expr: expr "is" "type" '<' $@34 . type_declaration_no_options '>' $@35

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 1331
    type_declaration_no_options_no_dim  go to state 277


State 1198

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  530          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 1332


State 1199

  494 expr: expr "as" "type" '<' $@36 . type_declaration '>' $@37

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 276
    type_declaration_no_options_no_dim  go to state 277
    type_declaration                    go to state 1333


State 1200

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  528          | expr "as" "$f" '(' expr . ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 1334


State 1201

  402 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 402 (expr_method_call)


State 1202

  355 expr_list: expr_list . ',' expr
  403 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 1035
    ')'  shift, and go to state 1335


State 1203

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  525          | expr "?." "$f" '(' expr . ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 1336


State 1204

  499 expr: expr '?' "as" "type" '<' . $@38 type_declaration '>' $@39

    $default  reduce using rule 497 ($@38)

    $@38  go to state 1337


State 1205

  529 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1338
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1206

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  485     | expr '?' expr ':' expr .
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 485 (expr)


State 1207

  527 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1339
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1208

  475 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 475 (expr)


State 1209

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr '.' "$f" '(' expr . ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 1340


State 1210

  417 expr_field: expr '.' "name" '(' '[' . make_struct_fields ']' ')'
  850 make_dim_decl: '[' . optional_expr_list ']'
  879 array_comprehension: '[' . "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  880                    | '[' . "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "for"                             shift, and go to state 611
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "iterator"                        shift, and go to state 612
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "$f"                              shift, and go to state 616
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 617
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    $default  reduce using rule 296 (optional_expr_list)

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    optional_expr_list      go to state 613
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    expr_list               go to state 614
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 615
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_fields      go to state 1341
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1211

  415 expr_field: expr '.' "name" '(' ')' .

    $default  reduce using rule 415 (expr_field)


State 1212

  355 expr_list: expr_list . ',' expr
  416 expr_field: expr '.' "name" '(' expr_list . ')'

    ','  shift, and go to state 1035
    ')'  shift, and go to state 1342


State 1213

  526 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1343
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1214

  473 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 473 (expr)


State 1215

  422 expr_field: expr '.' $@32 error $@33 .

    $default  reduce using rule 422 (expr_field)


State 1216

  418 expr_field: expr '.' basic_type_declaration '(' ')' .

    $default  reduce using rule 418 (expr_field)


State 1217

  355 expr_list: expr_list . ',' expr
  419 expr_field: expr '.' basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 1035
    ')'  shift, and go to state 1344


State 1218

  769 type_declaration_no_options_no_dim: "block" '<' $@67 optional_function_argument_list optional_function_type '>' $@68 .

    $default  reduce using rule 769 (type_declaration_no_options_no_dim)


State 1219

  776 type_declaration_no_options_no_dim: "function" '<' $@71 optional_function_argument_list optional_function_type '>' $@72 .

    $default  reduce using rule 776 (type_declaration_no_options_no_dim)


State 1220

  783 type_declaration_no_options_no_dim: "lambda" '<' $@75 optional_function_argument_list optional_function_type '>' $@76 .

    $default  reduce using rule 783 (type_declaration_no_options_no_dim)


State 1221

  737 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@56 type_declaration_no_options_list '>' '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    $default  reduce using rule 296 (optional_expr_list)

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    optional_expr_list      go to state 1345
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    expr_list               go to state 614
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 615
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1222

  301 type_declaration_no_options_list: type_declaration_no_options_list c_or_s type_declaration .
  791 type_declaration: type_declaration . '|' type_declaration_no_options
  792                 | type_declaration . '|' '#'

    '|'  shift, and go to state 380

    $default  reduce using rule 301 (type_declaration_no_options_list)


State 1223

  713 bitfield_alias_bits: bitfield_alias_bits commas "name" '=' . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1346
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1224

  807 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias "name" optional_emit_commas $@90 '{' $@91 bitfield_alias_bits optional_commas $@92 '}' .

    $default  reduce using rule 807 (bitfield_alias_declaration)


State 1225

  797 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 tuple_alias_type_list optional_semis $@84 '}' .

    $default  reduce using rule 797 (tuple_alias_declaration)


State 1226

  802 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 '{' $@87 variant_alias_type_list optional_semis $@88 '}' .

    $default  reduce using rule 802 (variant_alias_declaration)


State 1227

  664 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 664 (variable_name_with_pos_list)


State 1228

  667 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1347


State 1229

  580 variable_declaration_type: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1348
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1230

  321 expression_return: "return" "<-" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 321 (expression_return)


State 1231

  324 expression_try_catch: "try" expression_block "recover" . expression_block

    $default  reduce using rule 270 ($@16)

    expression_block  go to state 1349
    $@16              go to state 400


State 1232

  306 expression_delete: "delete" "explicit" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 306 (expression_delete)


State 1233

  115 expression_with_alias: "assume" "name" '=' . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1350
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1234

   63 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 63 (expression_label)


State 1235

   64 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 64 (expression_goto)


State 1236

  110 expression_unsafe: "unsafe" optional_emit_semis expression_block .

    $default  reduce using rule 110 (expression_unsafe)


State 1237

  323 expression_yield: "yield" "<-" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 323 (expression_yield)


State 1238

  100 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' . expr ')' expression_else_one_liner SEMICOLON

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1351
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1239

   99 expression_if_then_else: $@9 if_or_static_if '(' . expr ')' optional_emit_semis expression_if_block expression_else

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1352
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1240

  109 expression_for_loop: $@10 "for" '(' . for_variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

    "$i"    shift, and go to state 981
    "name"  shift, and go to state 982
    '('     shift, and go to state 983

    for_variable_name_with_pos_list  go to state 1353


State 1241

  112 expression_while_loop: $@11 "while" '(' . expr ')' optional_emit_semis expression_block

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1354
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1242

  114 expression_with: $@12 "with" '(' . expr ')' optional_emit_semis expression_block

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1355
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1243

  269 expression_block_finally: "finally" . $@14 '{' expressions $@15 '}'

    $default  reduce using rule 267 ($@14)

    $@14  go to state 1356


State 1244

  272 expression_block: $@16 '{' expressions $@17 '}' expression_block_finally .

    $default  reduce using rule 272 (expression_block)


State 1245

  334 tuple_expansion_variable_declaration: '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  335                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr SEMICOLON

    "name"  shift, and go to state 1168

    tuple_expansion  go to state 1357


State 1246

  338 expression_let: kwd_let optional_in_scope '{' . variable_declaration_list '}'

    $default  reduce using rule 595 (variable_declaration_list)

    variable_declaration_list  go to state 1358


State 1247

  337 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 337 (expression_let)


State 1248

  336 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 336 (expression_let)


State 1249

  391 expr_assign: expr "+=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 391 (expr_assign)


State 1250

  392 expr_assign: expr "-=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 392 (expr_assign)


State 1251

  394 expr_assign: expr "/=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 394 (expr_assign)


State 1252

  393 expr_assign: expr "*=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 393 (expr_assign)


State 1253

  395 expr_assign: expr "%=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 395 (expr_assign)


State 1254

  385 expr_assign: expr "&=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 385 (expr_assign)


State 1255

  386 expr_assign: expr "|=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 386 (expr_assign)


State 1256

  387 expr_assign: expr "^=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 387 (expr_assign)


State 1257

  396 expr_assign: expr "<<=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 396 (expr_assign)


State 1258

  397 expr_assign: expr ">>=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 397 (expr_assign)


State 1259

  383 expr_assign: expr "<-" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 383 (expr_assign)


State 1260

  384 expr_assign: expr ":=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 384 (expr_assign)


State 1261

  398 expr_assign: expr "<<<=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 398 (expr_assign)


State 1262

  399 expr_assign: expr ">>>=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 399 (expr_assign)


State 1263

  388 expr_assign: expr "&&=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 388 (expr_assign)


State 1264

  389 expr_assign: expr "||=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 389 (expr_assign)


State 1265

  390 expr_assign: expr "^^=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 390 (expr_assign)


State 1266

  382 expr_assign: expr '=' expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 382 (expr_assign)


State 1267

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  617 enum_expression: "name" '=' expr .

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 617 (enum_expression)


State 1268

  622 enum_list: enum_list commas enum_expression .

    $default  reduce using rule 622 (enum_list)


State 1269

  644 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas $@48 . '}'

    '}'  shift, and go to state 1359


State 1270

  550 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" . optional_public_or_private_member_variable "abstract" optional_constant $@41 function_declaration_header SEMICOLON
  552                                 | struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@42 function_declaration_header optional_emit_semis expression_block

    "public"   shift, and go to state 1360
    "private"  shift, and go to state 1361

    $default  reduce using rule 539 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1362


State 1271

  544 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1363

    $default  reduce using rule 542 (optional_static_member_variable)

    optional_static_member_variable  go to state 1364


State 1272

  548 struct_variable_declaration_list: struct_variable_declaration_list $@40 structure_variable_declaration . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1365


State 1273

  592 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 592 (let_variable_name_with_pos_list)


State 1274

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  599 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . SEMICOLON

    "is"                   shift, and go to state 631
    "as"                   shift, and go to state 632
    "<<"                   shift, and go to state 633
    ">>"                   shift, and go to state 634
    "++"                   shift, and go to state 635
    "--"                   shift, and go to state 636
    "<="                   shift, and go to state 637
    ">="                   shift, and go to state 638
    "=="                   shift, and go to state 639
    "!="                   shift, and go to state 640
    "->"                   shift, and go to state 641
    "??"                   shift, and go to state 642
    "?."                   shift, and go to state 643
    "?["                   shift, and go to state 644
    "<|"                   shift, and go to state 645
    "|>"                   shift, and go to state 646
    "<<<"                  shift, and go to state 647
    ">>>"                  shift, and go to state 648
    "&&"                   shift, and go to state 649
    "||"                   shift, and go to state 650
    "^^"                   shift, and go to state 651
    ".."                   shift, and go to state 652
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 653
    '|'                    shift, and go to state 654
    '^'                    shift, and go to state 655
    '&'                    shift, and go to state 656
    '<'                    shift, and go to state 657
    '>'                    shift, and go to state 658
    '-'                    shift, and go to state 659
    '+'                    shift, and go to state 660
    '*'                    shift, and go to state 661
    '/'                    shift, and go to state 662
    '%'                    shift, and go to state 663
    '.'                    shift, and go to state 664
    '['                    shift, and go to state 665
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1366


State 1275

  600 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 600 (let_variable_declaration)


State 1276

  834 make_struct_decl: "struct" '<' $@93 type_declaration_no_options '>' $@94 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1367


State 1277

  837 make_struct_decl: "class" '<' $@95 type_declaration_no_options '>' $@96 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1368


State 1278

  309 new_type_declaration: '<' $@18 type_declaration '>' $@19 .

    $default  reduce using rule 309 (new_type_declaration)


State 1279

  315 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 315 (expr_new)


State 1280

  352 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1369
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1281

  353 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" . '>' '(' expr ')'

    '>'  shift, and go to state 1370


State 1282

  350 expr_type_decl: "type" '<' $@26 type_declaration '>' $@27 .

    $default  reduce using rule 350 (expr_type_decl)


State 1283

  853 make_dim_decl: "array" "struct" '<' $@103 type_declaration_no_options '>' . $@104 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 852 ($@104)

    $@104  go to state 1371


State 1284

  856 make_dim_decl: "array" "tuple" '<' $@105 tuple_type_list '>' . $@106 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 855 ($@106)

    $@106  go to state 1372


State 1285

  859 make_dim_decl: "array" "variant" '<' $@107 variant_type_list '>' . $@108 '(' make_variant_dim ')'

    $default  reduce using rule 858 ($@108)

    $@108  go to state 1373


State 1286

  863 make_dim_decl: "array" '<' $@109 type_declaration_no_options '>' $@110 . '(' optional_expr_list ')'

    '('  shift, and go to state 1374


State 1287

  873 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1375


State 1288

  874 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1376


State 1289

  341 expr_cast: "cast" '<' $@20 type_declaration_no_options '>' $@21 . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1377
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1290

  344 expr_cast: "upcast" '<' $@22 type_declaration_no_options '>' $@23 . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1378
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1291

  347 expr_cast: "reinterpret" '<' $@24 type_declaration_no_options '>' $@25 . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1379
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1292

  867 make_dim_decl: "fixed_array" '<' $@111 type_declaration_no_options '>' $@112 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1380


State 1293

  843 make_struct_decl: "default" '<' $@99 type_declaration_no_options '>' $@100 . use_initializer

    "uninitialized"  shift, and go to state 1381

    $default  reduce using rule 830 (use_initializer)

    use_initializer  go to state 1382


State 1294

  849 make_tuple_call: "tuple" '<' $@101 tuple_type_list '>' $@102 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1383


State 1295

  840 make_struct_decl: "variant" '<' $@97 variant_type_list '>' $@98 . '(' use_initializer make_variant_dim ')'

    '('  shift, and go to state 1384


State 1296

  513 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  514               | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    ')'                               shift, and go to state 1385
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1386
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1297

  515 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis . expression_block

    $default  reduce using rule 270 ($@16)

    expression_block  go to state 1387
    $@16              go to state 400


State 1298

  522 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 522 (expr_mtag)


State 1299

  355 expr_list: expr_list . ',' expr
  523 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 1035
    ')'  shift, and go to state 1388


State 1300

   39 optional_format_string: ':' $@1 . format_string

    $default  reduce using rule 35 (format_string)

    format_string  go to state 1389


State 1301

   42 string_builder_body: string_builder_body "{" expr optional_format_string "}" .

    $default  reduce using rule 42 (string_builder_body)


State 1302

  102 for_variable_name_with_pos_list: "$i" '(' expr . ')'
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 1390


State 1303

  103 for_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 103 (for_variable_name_with_pos_list)


State 1304

  333 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1391


State 1305

  104 for_variable_name_with_pos_list: '(' tuple_expansion ')' .

    $default  reduce using rule 104 (for_variable_name_with_pos_list)


State 1306

  355 expr_list: expr_list . ',' expr
  879 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list "in" expr_list . ')' ';' expr array_comprehension_where ']'

    ','  shift, and go to state 1035
    ')'  shift, and go to state 1392


State 1307

  105 for_variable_name_with_pos_list: for_variable_name_with_pos_list ',' "name" .
  106                                | for_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1393

    $default  reduce using rule 105 (for_variable_name_with_pos_list)


State 1308

  107 for_variable_name_with_pos_list: for_variable_name_with_pos_list ',' '(' . tuple_expansion ')'

    "name"  shift, and go to state 1168

    tuple_expansion  go to state 1394


State 1309

  880 array_comprehension: '[' "iterator" "for" '(' for_variable_name_with_pos_list "in" . expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    expr_list               go to state 1395
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 615
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1310

  818 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1396
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1311

  817 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1397
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1312

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  819 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  820                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 1398


State 1313

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  816 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 816 (make_struct_fields)


State 1314

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  815 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 815 (make_struct_fields)


State 1315

  405 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 405 (func_addr_name)


State 1316

  531 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 531 (expr_mtag)


State 1317

  409 func_addr_expr: '@' '@' '<' $@28 type_declaration_no_options '>' . $@29 func_addr_name

    $default  reduce using rule 408 ($@29)

    $@29  go to state 1399


State 1318

  412 func_addr_expr: '@' '@' '<' $@30 optional_function_argument_list optional_function_type . '>' $@31 func_addr_name

    '>'  shift, and go to state 1400


State 1319

  355 expr_list: expr_list . ',' expr
  881 array_comprehension: '{' "for" '(' for_variable_name_with_pos_list "in" expr_list . ')' ';' make_map_tuple array_comprehension_where '}'

    ','  shift, and go to state 1035
    ')'  shift, and go to state 1401


State 1320

  400 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 400 (expr_named_call)


State 1321

  401 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  815 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  816                   | make_struct_fields . ',' "name" ":=" expr
  819                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  820                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1185
    ']'  shift, and go to state 1402


State 1322

  364 capture_entry: "<-" "name" .

    $default  reduce using rule 364 (capture_entry)


State 1323

  365 capture_entry: ":=" "name" .

    $default  reduce using rule 365 (capture_entry)


State 1324

  366 capture_entry: "name" '(' . "name" ')'

    "name"  shift, and go to state 1403


State 1325

  363 capture_entry: '=' "name" .

    $default  reduce using rule 363 (capture_entry)


State 1326

  362 capture_entry: '&' "name" .

    $default  reduce using rule 362 (capture_entry)


State 1327

  368 capture_list: capture_list ',' . capture_entry

    "<-"    shift, and go to state 1188
    ":="    shift, and go to state 1189
    "name"  shift, and go to state 1190
    '='     shift, and go to state 1191
    '&'     shift, and go to state 1192

    capture_entry  go to state 1404


State 1328

  370 optional_capture_list: "capture" '(' capture_list ')' .

    $default  reduce using rule 370 (optional_capture_list)


State 1329

  371 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis . block_or_simple_block

    "=>"  shift, and go to state 1405

    $default  reduce using rule 270 ($@16)

    expression_block       go to state 1406
    $@16                   go to state 400
    block_or_simple_block  go to state 1407


State 1330

  372 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1408


State 1331

  488 expr: expr "is" "type" '<' $@34 type_declaration_no_options . '>' $@35
  738 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  739                                   | type_declaration_no_options . "explicit"
  740                                   | type_declaration_no_options . "const"
  741                                   | type_declaration_no_options . '-' "const"
  742                                   | type_declaration_no_options . '&'
  743                                   | type_declaration_no_options . '-' '&'
  744                                   | type_declaration_no_options . '#'
  745                                   | type_declaration_no_options . "implicit"
  746                                   | type_declaration_no_options . '-' '#'
  747                                   | type_declaration_no_options . "==" "const"
  748                                   | type_declaration_no_options . "==" '&'
  749                                   | type_declaration_no_options . '?'
  753                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 369
    "implicit"  shift, and go to state 370
    "explicit"  shift, and go to state 371
    "=="        shift, and go to state 372
    "??"        shift, and go to state 373
    '?'         shift, and go to state 374
    '&'         shift, and go to state 375
    '>'         shift, and go to state 1409
    '-'         shift, and go to state 376
    '#'         shift, and go to state 377


State 1332

  530 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 530 (expr_mtag)


State 1333

  494 expr: expr "as" "type" '<' $@36 type_declaration . '>' $@37
  791 type_declaration: type_declaration . '|' type_declaration_no_options
  792                 | type_declaration . '|' '#'

    '|'  shift, and go to state 380
    '>'  shift, and go to state 1410


State 1334

  528 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 528 (expr_mtag)


State 1335

  403 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 403 (expr_method_call)


State 1336

  525 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 525 (expr_mtag)


State 1337

  499 expr: expr '?' "as" "type" '<' $@38 . type_declaration '>' $@39

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 276
    type_declaration_no_options_no_dim  go to state 277
    type_declaration                    go to state 1411


State 1338

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr '?' "as" "$f" '(' expr . ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 1412


State 1339

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr '.' "?." "$f" '(' expr . ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 1413


State 1340

  524 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 524 (expr_mtag)


State 1341

  417 expr_field: expr '.' "name" '(' '[' make_struct_fields . ']' ')'
  815 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  816                   | make_struct_fields . ',' "name" ":=" expr
  819                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  820                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1185
    ']'  shift, and go to state 1414


State 1342

  416 expr_field: expr '.' "name" '(' expr_list ')' .

    $default  reduce using rule 416 (expr_field)


State 1343

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr '.' '.' "$f" '(' expr . ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 1415


State 1344

  419 expr_field: expr '.' basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 419 (expr_field)


State 1345

  737 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@56 type_declaration_no_options_list '>' '(' optional_expr_list . ')'

    ')'  shift, and go to state 1416


State 1346

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  713 bitfield_alias_bits: bitfield_alias_bits commas "name" '=' expr .

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 713 (bitfield_alias_bits)


State 1347

  667 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 667 (variable_name_with_pos_list)


State 1348

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  580 variable_declaration_type: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 580 (variable_declaration_type)


State 1349

  324 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 324 (expression_try_catch)


State 1350

  115 expression_with_alias: "assume" "name" '=' expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 115 (expression_with_alias)


State 1351

  100 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr . ')' expression_else_one_liner SEMICOLON
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 1417


State 1352

   99 expression_if_then_else: $@9 if_or_static_if '(' expr . ')' optional_emit_semis expression_if_block expression_else
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 1418


State 1353

  105 for_variable_name_with_pos_list: for_variable_name_with_pos_list . ',' "name"
  106                                | for_variable_name_with_pos_list . ',' "name" "aka" "name"
  107                                | for_variable_name_with_pos_list . ',' '(' tuple_expansion ')'
  109 expression_for_loop: $@10 "for" '(' for_variable_name_with_pos_list . "in" expr_list ')' optional_emit_semis expression_block

    "in"  shift, and go to state 1419
    ','   shift, and go to state 1171


State 1354

  112 expression_while_loop: $@11 "while" '(' expr . ')' optional_emit_semis expression_block
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 1420


State 1355

  114 expression_with: $@12 "with" '(' expr . ')' optional_emit_semis expression_block
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 1421


State 1356

  269 expression_block_finally: "finally" $@14 . '{' expressions $@15 '}'

    '{'  shift, and go to state 1422


State 1357

  333 tuple_expansion: tuple_expansion . ',' "name"
  334 tuple_expansion_variable_declaration: '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  335                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr SEMICOLON

    ','  shift, and go to state 1304
    ')'  shift, and go to state 1423


State 1358

  338 expression_let: kwd_let optional_in_scope '{' variable_declaration_list . '}'
  596 variable_declaration_list: variable_declaration_list . SEMICOLON
  597                          | variable_declaration_list . let_variable_declaration

    "$i"                   shift, and go to state 554
    "name"                 shift, and go to state 555
    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16
    '}'                    shift, and go to state 1424

    SEMICOLON                        go to state 1425
    let_variable_name_with_pos_list  go to state 556
    let_variable_declaration         go to state 1426


State 1359

  644 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas $@48 '}' .

    $default  reduce using rule 644 (enum_declaration)


State 1360

  540 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 540 (optional_public_or_private_member_variable)


State 1361

  541 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 541 (optional_public_or_private_member_variable)


State 1362

  550 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable . "abstract" optional_constant $@41 function_declaration_header SEMICOLON
  552                                 | struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@42 function_declaration_header optional_emit_semis expression_block

    "abstract"  shift, and go to state 1427
    "static"    shift, and go to state 1363

    $default  reduce using rule 542 (optional_static_member_variable)

    optional_static_member_variable  go to state 1428


State 1363

  543 optional_static_member_variable: "static" .

    $default  reduce using rule 543 (optional_static_member_variable)


State 1364

  544 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1429
    "sealed"    shift, and go to state 1430

    $default  reduce using rule 534 (optional_override)

    optional_override  go to state 1431


State 1365

  548 struct_variable_declaration_list: struct_variable_declaration_list $@40 structure_variable_declaration SEMICOLON .

    $default  reduce using rule 548 (struct_variable_declaration_list)


State 1366

  599 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 599 (let_variable_declaration)


State 1367

  834 make_struct_decl: "struct" '<' $@93 type_declaration_no_options '>' $@94 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1381

    $default  reduce using rule 830 (use_initializer)

    use_initializer  go to state 1432


State 1368

  837 make_struct_decl: "class" '<' $@95 type_declaration_no_options '>' $@96 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1381

    $default  reduce using rule 830 (use_initializer)

    use_initializer  go to state 1433


State 1369

  352 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr . ')'
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 1434


State 1370

  353 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' . '(' expr ')'

    '('  shift, and go to state 1435


State 1371

  853 make_dim_decl: "array" "struct" '<' $@103 type_declaration_no_options '>' $@104 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1436


State 1372

  856 make_dim_decl: "array" "tuple" '<' $@105 tuple_type_list '>' $@106 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1437


State 1373

  859 make_dim_decl: "array" "variant" '<' $@107 variant_type_list '>' $@108 . '(' make_variant_dim ')'

    '('  shift, and go to state 1438


State 1374

  863 make_dim_decl: "array" '<' $@109 type_declaration_no_options '>' $@110 '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    $default  reduce using rule 296 (optional_expr_list)

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    optional_expr_list      go to state 1439
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    expr_list               go to state 614
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 615
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1375

  873 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 873 (make_table_decl)


State 1376

  874 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    $default  reduce using rule 298 (optional_expr_map_tuple_list)

    string_builder                go to state 472
    expr_reader                   go to state 473
    expr_call_pipe                go to state 474
    optional_expr_map_tuple_list  go to state 1440
    name_in_namespace             go to state 475
    expr_new                      go to state 476
    expr_cast                     go to state 477
    expr_type_decl                go to state 478
    expr_type_info                go to state 479
    block_or_lambda               go to state 480
    expr_full_block               go to state 481
    expr_numeric_const            go to state 482
    expr_named_call               go to state 483
    expr_method_call              go to state 484
    func_addr_expr                go to state 485
    expr_field                    go to state 486
    expr_call                     go to state 487
    expr                          go to state 743
    expr_generator                go to state 489
    expr_mtag                     go to state 490
    basic_type_declaration        go to state 491
    make_decl                     go to state 492
    make_struct_decl              go to state 493
    make_map_tuple                go to state 744
    make_tuple_call               go to state 494
    make_dim_decl                 go to state 495
    expr_map_tuple_list           go to state 999
    make_table_decl               go to state 496
    array_comprehension           go to state 497


State 1377

  341 expr_cast: "cast" '<' $@20 type_declaration_no_options '>' $@21 expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 341 (expr_cast)


State 1378

  344 expr_cast: "upcast" '<' $@22 type_declaration_no_options '>' $@23 expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 344 (expr_cast)


State 1379

  347 expr_cast: "reinterpret" '<' $@24 type_declaration_no_options '>' $@25 expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 347 (expr_cast)


State 1380

  867 make_dim_decl: "fixed_array" '<' $@111 type_declaration_no_options '>' $@112 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    expr_list               go to state 1441
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 615
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1381

  831 use_initializer: "uninitialized" .

    $default  reduce using rule 831 (use_initializer)


State 1382

  843 make_struct_decl: "default" '<' $@99 type_declaration_no_options '>' $@100 use_initializer .

    $default  reduce using rule 843 (make_struct_decl)


State 1383

  849 make_tuple_call: "tuple" '<' $@101 tuple_type_list '>' $@102 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1381

    $default  reduce using rule 830 (use_initializer)

    use_initializer  go to state 1442


State 1384

  840 make_struct_decl: "variant" '<' $@97 variant_type_list '>' $@98 '(' . use_initializer make_variant_dim ')'

    "uninitialized"  shift, and go to state 1381

    $default  reduce using rule 830 (use_initializer)

    use_initializer  go to state 1443


State 1385

  513 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 513 (expr_generator)


State 1386

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  514 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 1444


State 1387

  515 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block .

    $default  reduce using rule 515 (expr_generator)


State 1388

  523 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 523 (expr_mtag)


State 1389

   36 format_string: format_string . STRING_CHARACTER
   39 optional_format_string: ':' $@1 format_string .

    STRING_CHARACTER  shift, and go to state 1445

    $default  reduce using rule 39 (optional_format_string)


State 1390

  102 for_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 102 (for_variable_name_with_pos_list)


State 1391

  333 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 333 (tuple_expansion)


State 1392

  879 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' . ';' expr array_comprehension_where ']'

    ';'  shift, and go to state 1446


State 1393

  106 for_variable_name_with_pos_list: for_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1447


State 1394

  107 for_variable_name_with_pos_list: for_variable_name_with_pos_list ',' '(' tuple_expansion . ')'
  333 tuple_expansion: tuple_expansion . ',' "name"

    ','  shift, and go to state 1304
    ')'  shift, and go to state 1448


State 1395

  355 expr_list: expr_list . ',' expr
  880 array_comprehension: '[' "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list . ')' ';' expr array_comprehension_where ']'

    ','  shift, and go to state 1035
    ')'  shift, and go to state 1449


State 1396

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  818 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 818 (make_struct_fields)


State 1397

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  817 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 817 (make_struct_fields)


State 1398

  819 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  820                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 774
    ":="  shift, and go to state 1450
    '='   shift, and go to state 776

    copy_or_move  go to state 1451


State 1399

  409 func_addr_expr: '@' '@' '<' $@28 type_declaration_no_options '>' $@29 . func_addr_name

    "::"    shift, and go to state 57
    "$i"    shift, and go to state 782
    "name"  shift, and go to state 58

    name_in_namespace  go to state 785
    func_addr_name     go to state 1452


State 1400

  412 func_addr_expr: '@' '@' '<' $@30 optional_function_argument_list optional_function_type '>' . $@31 func_addr_name

    $default  reduce using rule 411 ($@31)

    $@31  go to state 1453


State 1401

  881 array_comprehension: '{' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' . ';' make_map_tuple array_comprehension_where '}'

    ';'  shift, and go to state 1454


State 1402

  401 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1455


State 1403

  366 capture_entry: "name" '(' "name" . ')'

    ')'  shift, and go to state 1456


State 1404

  368 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 368 (capture_list)


State 1405

  357 block_or_simple_block: "=>" . expr
  358                      | "=>" . "<-" expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "<-"                              shift, and go to state 1457
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1458
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1406

  356 block_or_simple_block: expression_block .

    $default  reduce using rule 356 (block_or_simple_block)


State 1407

  371 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block .

    $default  reduce using rule 371 (expr_full_block)


State 1408

  372 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis . expression_block

    $default  reduce using rule 270 ($@16)

    expression_block  go to state 1459
    $@16              go to state 400


State 1409

  488 expr: expr "is" "type" '<' $@34 type_declaration_no_options '>' . $@35

    $default  reduce using rule 487 ($@35)

    $@35  go to state 1460


State 1410

  494 expr: expr "as" "type" '<' $@36 type_declaration '>' . $@37

    $default  reduce using rule 493 ($@37)

    $@37  go to state 1461


State 1411

  499 expr: expr '?' "as" "type" '<' $@38 type_declaration . '>' $@39
  791 type_declaration: type_declaration . '|' type_declaration_no_options
  792                 | type_declaration . '|' '#'

    '|'  shift, and go to state 380
    '>'  shift, and go to state 1462


State 1412

  529 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 529 (expr_mtag)


State 1413

  527 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 527 (expr_mtag)


State 1414

  417 expr_field: expr '.' "name" '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1463


State 1415

  526 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 526 (expr_mtag)


State 1416

  737 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@56 type_declaration_no_options_list '>' '(' optional_expr_list ')' .

    $default  reduce using rule 737 (type_declaration_no_options_no_dim)


State 1417

  100 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' . expression_else_one_liner SEMICOLON

    "else"  shift, and go to state 1464

    $default  reduce using rule 77 (expression_else_one_liner)

    expression_else_one_liner  go to state 1465


State 1418

   99 expression_if_then_else: $@9 if_or_static_if '(' expr ')' . optional_emit_semis expression_if_block expression_else

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1466


State 1419

  109 expression_for_loop: $@10 "for" '(' for_variable_name_with_pos_list "in" . expr_list ')' optional_emit_semis expression_block

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    expr_list               go to state 1467
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 615
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1420

  112 expression_while_loop: $@11 "while" '(' expr ')' . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1468


State 1421

  114 expression_with: $@12 "with" '(' expr ')' . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1469


State 1422

  269 expression_block_finally: "finally" $@14 '{' . expressions $@15 '}'

    $default  reduce using rule 293 (expressions)

    expressions  go to state 1470


State 1423

  334 tuple_expansion_variable_declaration: '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  335                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr SEMICOLON

    ':'  shift, and go to state 1471
    '&'  shift, and go to state 418

    $default  reduce using rule 586 (optional_ref)

    optional_ref  go to state 1472


State 1424

  338 expression_let: kwd_let optional_in_scope '{' variable_declaration_list '}' .

    $default  reduce using rule 338 (expression_let)


State 1425

  596 variable_declaration_list: variable_declaration_list SEMICOLON .

    $default  reduce using rule 596 (variable_declaration_list)


State 1426

  597 variable_declaration_list: variable_declaration_list let_variable_declaration .

    $default  reduce using rule 597 (variable_declaration_list)


State 1427

  550 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" . optional_constant $@41 function_declaration_header SEMICOLON

    "const"  shift, and go to state 1473

    $default  reduce using rule 537 (optional_constant)

    optional_constant  go to state 1474


State 1428

  552 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@42 function_declaration_header optional_emit_semis expression_block

    "override"  shift, and go to state 1429
    "sealed"    shift, and go to state 1430

    $default  reduce using rule 534 (optional_override)

    optional_override  go to state 1475


State 1429

  535 optional_override: "override" .

    $default  reduce using rule 535 (optional_override)


State 1430

  536 optional_override: "sealed" .

    $default  reduce using rule 536 (optional_override)


State 1431

  544 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1360
    "private"  shift, and go to state 1361

    $default  reduce using rule 539 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1476


State 1432

  834 make_struct_decl: "struct" '<' $@93 type_declaration_no_options '>' $@94 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 616
    "name"  shift, and go to state 1000
    '('     shift, and go to state 1477

    $default  reduce using rule 829 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1478
    make_struct_dim_list           go to state 1479
    make_struct_dim_decl           go to state 1480
    optional_make_struct_dim_decl  go to state 1481


State 1433

  837 make_struct_decl: "class" '<' $@95 type_declaration_no_options '>' $@96 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 616
    "name"  shift, and go to state 1000
    '('     shift, and go to state 1477

    $default  reduce using rule 829 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1478
    make_struct_dim_list           go to state 1479
    make_struct_dim_decl           go to state 1480
    optional_make_struct_dim_decl  go to state 1482


State 1434

  352 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')' .

    $default  reduce using rule 352 (expr_type_info)


State 1435

  353 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1483
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1436

  853 make_dim_decl: "array" "struct" '<' $@103 type_declaration_no_options '>' $@104 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1381

    $default  reduce using rule 830 (use_initializer)

    use_initializer  go to state 1484


State 1437

  856 make_dim_decl: "array" "tuple" '<' $@105 tuple_type_list '>' $@106 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1381

    $default  reduce using rule 830 (use_initializer)

    use_initializer  go to state 1485


State 1438

  859 make_dim_decl: "array" "variant" '<' $@107 variant_type_list '>' $@108 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 616
    "name"  shift, and go to state 1000

    $default  reduce using rule 821 (make_variant_dim)

    make_struct_fields  go to state 1486
    make_variant_dim    go to state 1487


State 1439

  863 make_dim_decl: "array" '<' $@109 type_declaration_no_options '>' $@110 '(' optional_expr_list . ')'

    ')'  shift, and go to state 1488


State 1440

  874 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1489


State 1441

  355 expr_list: expr_list . ',' expr
  867 make_dim_decl: "fixed_array" '<' $@111 type_declaration_no_options '>' $@112 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 771

    $default  reduce using rule 877 (optional_comma)

    optional_comma  go to state 1490


State 1442

  849 make_tuple_call: "tuple" '<' $@101 tuple_type_list '>' $@102 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 616
    "name"  shift, and go to state 1000
    '('     shift, and go to state 1477

    $default  reduce using rule 829 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1478
    make_struct_dim_list           go to state 1479
    make_struct_dim_decl           go to state 1480
    optional_make_struct_dim_decl  go to state 1491


State 1443

  840 make_struct_decl: "variant" '<' $@97 variant_type_list '>' $@98 '(' use_initializer . make_variant_dim ')'

    "$f"    shift, and go to state 616
    "name"  shift, and go to state 1000

    $default  reduce using rule 821 (make_variant_dim)

    make_struct_fields  go to state 1486
    make_variant_dim    go to state 1492


State 1444

  514 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 514 (expr_generator)


State 1445

   36 format_string: format_string STRING_CHARACTER .

    $default  reduce using rule 36 (format_string)


State 1446

  879 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1493
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1447

  106 for_variable_name_with_pos_list: for_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 106 (for_variable_name_with_pos_list)


State 1448

  107 for_variable_name_with_pos_list: for_variable_name_with_pos_list ',' '(' tuple_expansion ')' .

    $default  reduce using rule 107 (for_variable_name_with_pos_list)


State 1449

  880 array_comprehension: '[' "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' . ';' expr array_comprehension_where ']'

    ';'  shift, and go to state 1494


State 1450

  820 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1495
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1451

  819 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1496
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1452

  409 func_addr_expr: '@' '@' '<' $@28 type_declaration_no_options '>' $@29 func_addr_name .

    $default  reduce using rule 409 (func_addr_expr)


State 1453

  412 func_addr_expr: '@' '@' '<' $@30 optional_function_argument_list optional_function_type '>' $@31 . func_addr_name

    "::"    shift, and go to state 57
    "$i"    shift, and go to state 782
    "name"  shift, and go to state 58

    name_in_namespace  go to state 785
    func_addr_name     go to state 1497


State 1454

  881 array_comprehension: '{' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' . make_map_tuple array_comprehension_where '}'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 743
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_map_tuple          go to state 1498
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1455

  401 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 401 (expr_named_call)


State 1456

  366 capture_entry: "name" '(' "name" ')' .

    $default  reduce using rule 366 (capture_entry)


State 1457

  358 block_or_simple_block: "=>" "<-" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1499
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1458

  357 block_or_simple_block: "=>" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    ".."  error (nonassociative)

    $default  reduce using rule 357 (block_or_simple_block)


State 1459

  372 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block .

    $default  reduce using rule 372 (expr_full_block_assumed_piped)


State 1460

  488 expr: expr "is" "type" '<' $@34 type_declaration_no_options '>' $@35 .

    $default  reduce using rule 488 (expr)


State 1461

  494 expr: expr "as" "type" '<' $@36 type_declaration '>' $@37 .

    $default  reduce using rule 494 (expr)


State 1462

  499 expr: expr '?' "as" "type" '<' $@38 type_declaration '>' . $@39

    $default  reduce using rule 498 ($@39)

    $@39  go to state 1500


State 1463

  417 expr_field: expr '.' "name" '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 417 (expr_field)


State 1464

   78 expression_else_one_liner: "else" . expression_if_one_liner

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "return"                          shift, and go to state 888
    "null"                            shift, and go to state 431
    "break"                           shift, and go to state 889
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "continue"                        shift, and go to state 893
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "yield"                           shift, and go to state 898
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder           go to state 472
    expr_reader              go to state 473
    expression_if_one_liner  go to state 1501
    expr_call_pipe           go to state 474
    name_in_namespace        go to state 475
    expr_new                 go to state 476
    expression_break         go to state 1502
    expression_continue      go to state 1503
    expression_return        go to state 1504
    expression_yield         go to state 1505
    expr_cast                go to state 477
    expr_type_decl           go to state 478
    expr_type_info           go to state 479
    block_or_lambda          go to state 480
    expr_full_block          go to state 481
    expr_numeric_const       go to state 482
    expr_named_call          go to state 483
    expr_method_call         go to state 484
    func_addr_expr           go to state 485
    expr_field               go to state 486
    expr_call                go to state 487
    expr                     go to state 1506
    expr_generator           go to state 489
    expr_mtag                go to state 490
    basic_type_declaration   go to state 491
    make_decl                go to state 492
    make_struct_decl         go to state 493
    make_tuple_call          go to state 494
    make_dim_decl            go to state 495
    make_table_decl          go to state 496
    array_comprehension      go to state 497


State 1465

  100 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1507


State 1466

   99 expression_if_then_else: $@9 if_or_static_if '(' expr ')' optional_emit_semis . expression_if_block expression_else

    '{'       reduce using rule 88 ($@3)
    '{'       [reduce using rule 91 ($@5)]
    $default  reduce using rule 91 ($@5)

    expression_if_block  go to state 1508
    $@3                  go to state 1509
    $@5                  go to state 1510


State 1467

  109 expression_for_loop: $@10 "for" '(' for_variable_name_with_pos_list "in" expr_list . ')' optional_emit_semis expression_block
  355 expr_list: expr_list . ',' expr

    ','  shift, and go to state 1035
    ')'  shift, and go to state 1511


State 1468

  112 expression_while_loop: $@11 "while" '(' expr ')' optional_emit_semis . expression_block

    $default  reduce using rule 270 ($@16)

    expression_block  go to state 1512
    $@16              go to state 400


State 1469

  114 expression_with: $@12 "with" '(' expr ')' optional_emit_semis . expression_block

    $default  reduce using rule 270 ($@16)

    expression_block  go to state 1513
    $@16              go to state 400


State 1470

  269 expression_block_finally: "finally" $@14 '{' expressions . $@15 '}'
  294 expressions: expressions . expression_any
  295            | expressions . error

    error                             shift, and go to state 887
    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "return"                          shift, and go to state 888
    "null"                            shift, and go to state 431
    "break"                           shift, and go to state 889
    "try"                             shift, and go to state 890
    "table"                           shift, and go to state 432
    "delete"                          shift, and go to state 891
    "deref"                           shift, and go to state 433
    "assume"                          shift, and go to state 892
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 436
    "continue"                        shift, and go to state 893
    "pass"                            shift, and go to state 894
    "reinterpret"                     shift, and go to state 437
    "label"                           shift, and go to state 895
    "goto"                            shift, and go to state 896
    "unsafe"                          shift, and go to state 897
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "yield"                           shift, and go to state 898
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 471

    "while"      reduce using rule 111 ($@11)
    "if"         reduce using rule 98 ($@9)
    "static_if"  reduce using rule 98 ($@9)
    "for"        reduce using rule 108 ($@10)
    "with"       reduce using rule 113 ($@12)
    '}'          reduce using rule 268 ($@15)

    SEMICOLON                         go to state 899
    string_builder                    go to state 472
    expr_reader                       go to state 473
    expression_label                  go to state 900
    expression_goto                   go to state 901
    expression_if_one_liner           go to state 902
    expression_if_then_else           go to state 903
    $@9                               go to state 904
    expression_if_then_else_oneliner  go to state 905
    expression_for_loop               go to state 906
    $@10                              go to state 907
    expression_unsafe                 go to state 908
    expression_while_loop             go to state 909
    $@11                              go to state 910
    expression_with                   go to state 911
    $@12                              go to state 912
    expression_with_alias             go to state 913
    $@15                              go to state 1514
    expr_call_pipe                    go to state 474
    expression_any                    go to state 915
    name_in_namespace                 go to state 475
    expression_delete                 go to state 916
    expr_new                          go to state 476
    expression_break                  go to state 917
    expression_continue               go to state 918
    expression_return                 go to state 919
    expression_yield                  go to state 920
    expression_try_catch              go to state 921
    kwd_let                           go to state 922
    expression_let                    go to state 923
    expr_cast                         go to state 477
    expr_type_decl                    go to state 478
    expr_type_info                    go to state 479
    block_or_lambda                   go to state 480
    expr_full_block                   go to state 481
    expr_numeric_const                go to state 482
    expr_assign                       go to state 924
    expr_named_call                   go to state 483
    expr_method_call                  go to state 484
    func_addr_expr                    go to state 485
    expr_field                        go to state 486
    expr_call                         go to state 487
    expr                              go to state 925
    expr_generator                    go to state 489
    expr_mtag                         go to state 490
    basic_type_declaration            go to state 491
    make_decl                         go to state 492
    make_struct_decl                  go to state 493
    make_tuple_call                   go to state 494
    make_dim_decl                     go to state 495
    make_table_decl                   go to state 496
    array_comprehension               go to state 497


State 1471

  334 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr SEMICOLON

    "type"       shift, and go to state 230
    "array"      shift, and go to state 231
    "table"      shift, and go to state 232
    "typedecl"   shift, and go to state 233
    "iterator"   shift, and go to state 234
    "smart_ptr"  shift, and go to state 235
    "bool"       shift, and go to state 236
    "void"       shift, and go to state 237
    "string"     shift, and go to state 238
    "auto"       shift, and go to state 239
    "int"        shift, and go to state 240
    "int2"       shift, and go to state 241
    "int3"       shift, and go to state 242
    "int4"       shift, and go to state 243
    "uint"       shift, and go to state 244
    "bitfield"   shift, and go to state 245
    "uint2"      shift, and go to state 246
    "uint3"      shift, and go to state 247
    "uint4"      shift, and go to state 248
    "float"      shift, and go to state 249
    "float2"     shift, and go to state 250
    "float3"     shift, and go to state 251
    "float4"     shift, and go to state 252
    "range"      shift, and go to state 253
    "urange"     shift, and go to state 254
    "range64"    shift, and go to state 255
    "urange64"   shift, and go to state 256
    "block"      shift, and go to state 257
    "int64"      shift, and go to state 258
    "uint64"     shift, and go to state 259
    "double"     shift, and go to state 260
    "function"   shift, and go to state 261
    "lambda"     shift, and go to state 262
    "int8"       shift, and go to state 263
    "uint8"      shift, and go to state 264
    "int16"      shift, and go to state 265
    "uint16"     shift, and go to state 266
    "tuple"      shift, and go to state 267
    "variant"    shift, and go to state 268
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 269
    "name"       shift, and go to state 58
    '$'          shift, and go to state 270

    name_in_namespace                   go to state 271
    basic_type_declaration              go to state 272
    structure_type_declaration          go to state 273
    auto_type_declaration               go to state 274
    bitfield_type_declaration           go to state 275
    type_declaration_no_options         go to state 1515
    type_declaration_no_options_no_dim  go to state 277


State 1472

  335 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr SEMICOLON

    "<-"  shift, and go to state 561
    ":="  shift, and go to state 562
    '='   shift, and go to state 563

    copy_or_move_or_clone  go to state 1516


State 1473

  538 optional_constant: "const" .

    $default  reduce using rule 538 (optional_constant)


State 1474

  550 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant . $@41 function_declaration_header SEMICOLON

    $default  reduce using rule 549 ($@41)

    $@41  go to state 1517


State 1475

  552 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@42 function_declaration_header optional_emit_semis expression_block

    "const"  shift, and go to state 1473

    $default  reduce using rule 537 (optional_constant)

    optional_constant  go to state 1518


State 1476

  544 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 700
    "name"  shift, and go to state 701

    variable_declaration_no_type  go to state 1519
    variable_declaration_type     go to state 1520
    variable_declaration          go to state 1521
    variable_name_with_pos_list   go to state 704


State 1477

  824 make_struct_dim_list: '(' . make_struct_fields ')'

    "$f"    shift, and go to state 616
    "name"  shift, and go to state 1000

    make_struct_fields  go to state 1522


State 1478

  815 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  816                   | make_struct_fields . ',' "name" ":=" expr
  819                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  820                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  826 make_struct_dim_decl: make_struct_fields .

    ','  shift, and go to state 1185

    $default  reduce using rule 826 (make_struct_dim_decl)


State 1479

  825 make_struct_dim_list: make_struct_dim_list . ',' '(' make_struct_fields ')'
  827 make_struct_dim_decl: make_struct_dim_list . optional_comma

    ','  shift, and go to state 1523

    $default  reduce using rule 877 (optional_comma)

    optional_comma  go to state 1524


State 1480

  828 optional_make_struct_dim_decl: make_struct_dim_decl .

    $default  reduce using rule 828 (optional_make_struct_dim_decl)


State 1481

  834 make_struct_decl: "struct" '<' $@93 type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1525


State 1482

  837 make_struct_decl: "class" '<' $@95 type_declaration_no_options '>' $@96 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1526


State 1483

  353 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr . ')'
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 1527


State 1484

  853 make_dim_decl: "array" "struct" '<' $@103 type_declaration_no_options '>' $@104 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 616
    "name"  shift, and go to state 1000
    '('     shift, and go to state 1477

    $default  reduce using rule 829 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1478
    make_struct_dim_list           go to state 1479
    make_struct_dim_decl           go to state 1480
    optional_make_struct_dim_decl  go to state 1528


State 1485

  856 make_dim_decl: "array" "tuple" '<' $@105 tuple_type_list '>' $@106 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 616
    "name"  shift, and go to state 1000
    '('     shift, and go to state 1477

    $default  reduce using rule 829 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1478
    make_struct_dim_list           go to state 1479
    make_struct_dim_decl           go to state 1480
    optional_make_struct_dim_decl  go to state 1529


State 1486

  815 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  816                   | make_struct_fields . ',' "name" ":=" expr
  819                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  820                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  822 make_variant_dim: make_struct_fields .

    ','  shift, and go to state 1185

    $default  reduce using rule 822 (make_variant_dim)


State 1487

  859 make_dim_decl: "array" "variant" '<' $@107 variant_type_list '>' $@108 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1530


State 1488

  863 make_dim_decl: "array" '<' $@109 type_declaration_no_options '>' $@110 '(' optional_expr_list ')' .

    $default  reduce using rule 863 (make_dim_decl)


State 1489

  874 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 874 (make_table_decl)


State 1490

  867 make_dim_decl: "fixed_array" '<' $@111 type_declaration_no_options '>' $@112 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1531


State 1491

  849 make_tuple_call: "tuple" '<' $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1532


State 1492

  840 make_struct_decl: "variant" '<' $@97 variant_type_list '>' $@98 '(' use_initializer make_variant_dim . ')'

    ')'  shift, and go to state 1533


State 1493

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  879 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr . array_comprehension_where ']'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ';'    shift, and go to state 1534

    $default  reduce using rule 875 (array_comprehension_where)

    array_comprehension_where  go to state 1535


State 1494

  880 array_comprehension: '[' "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1536
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1495

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  820 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 820 (make_struct_fields)


State 1496

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  819 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 819 (make_struct_fields)


State 1497

  412 func_addr_expr: '@' '@' '<' $@30 optional_function_argument_list optional_function_type '>' $@31 func_addr_name .

    $default  reduce using rule 412 (func_addr_expr)


State 1498

  881 array_comprehension: '{' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple . array_comprehension_where '}'

    ';'  shift, and go to state 1534

    $default  reduce using rule 875 (array_comprehension_where)

    array_comprehension_where  go to state 1537


State 1499

  358 block_or_simple_block: "=>" "<-" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 358 (block_or_simple_block)


State 1500

  499 expr: expr '?' "as" "type" '<' $@38 type_declaration '>' $@39 .

    $default  reduce using rule 499 (expr)


State 1501

   78 expression_else_one_liner: "else" expression_if_one_liner .

    $default  reduce using rule 78 (expression_else_one_liner)


State 1502

   82 expression_if_one_liner: expression_break .

    $default  reduce using rule 82 (expression_if_one_liner)


State 1503

   83 expression_if_one_liner: expression_continue .

    $default  reduce using rule 83 (expression_if_one_liner)


State 1504

   80 expression_if_one_liner: expression_return .

    $default  reduce using rule 80 (expression_if_one_liner)


State 1505

   81 expression_if_one_liner: expression_yield .

    $default  reduce using rule 81 (expression_if_one_liner)


State 1506

   79 expression_if_one_liner: expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 79 (expression_if_one_liner)


State 1507

  100 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner SEMICOLON .

    $default  reduce using rule 100 (expression_if_then_else_oneliner)


State 1508

   99 expression_if_then_else: $@9 if_or_static_if '(' expr ')' optional_emit_semis expression_if_block . expression_else

    "else"         shift, and go to state 1538
    "elif"         shift, and go to state 1539
    "static_elif"  shift, and go to state 1540

    $default  reduce using rule 72 (expression_else)

    elif_or_static_elif  go to state 1541
    expression_else      go to state 1542


State 1509

   90 expression_if_block: $@3 . '{' expressions $@4 '}' expression_block_finally

    '{'  shift, and go to state 1543


State 1510

   92 expression_if_block: $@5 . expression_if_one_liner SEMICOLON

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "return"                          shift, and go to state 888
    "null"                            shift, and go to state 431
    "break"                           shift, and go to state 889
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "continue"                        shift, and go to state 893
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "yield"                           shift, and go to state 898
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder           go to state 472
    expr_reader              go to state 473
    expression_if_one_liner  go to state 1544
    expr_call_pipe           go to state 474
    name_in_namespace        go to state 475
    expr_new                 go to state 476
    expression_break         go to state 1502
    expression_continue      go to state 1503
    expression_return        go to state 1504
    expression_yield         go to state 1505
    expr_cast                go to state 477
    expr_type_decl           go to state 478
    expr_type_info           go to state 479
    block_or_lambda          go to state 480
    expr_full_block          go to state 481
    expr_numeric_const       go to state 482
    expr_named_call          go to state 483
    expr_method_call         go to state 484
    func_addr_expr           go to state 485
    expr_field               go to state 486
    expr_call                go to state 487
    expr                     go to state 1506
    expr_generator           go to state 489
    expr_mtag                go to state 490
    basic_type_declaration   go to state 491
    make_decl                go to state 492
    make_struct_decl         go to state 493
    make_tuple_call          go to state 494
    make_dim_decl            go to state 495
    make_table_decl          go to state 496
    array_comprehension      go to state 497


State 1511

  109 expression_for_loop: $@10 "for" '(' for_variable_name_with_pos_list "in" expr_list ')' . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1545


State 1512

  112 expression_while_loop: $@11 "while" '(' expr ')' optional_emit_semis expression_block .

    $default  reduce using rule 112 (expression_while_loop)


State 1513

  114 expression_with: $@12 "with" '(' expr ')' optional_emit_semis expression_block .

    $default  reduce using rule 114 (expression_with)


State 1514

  269 expression_block_finally: "finally" $@14 '{' expressions $@15 . '}'

    '}'  shift, and go to state 1546


State 1515

  334 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr SEMICOLON
  738 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  739                                   | type_declaration_no_options . "explicit"
  740                                   | type_declaration_no_options . "const"
  741                                   | type_declaration_no_options . '-' "const"
  742                                   | type_declaration_no_options . '&'
  743                                   | type_declaration_no_options . '-' '&'
  744                                   | type_declaration_no_options . '#'
  745                                   | type_declaration_no_options . "implicit"
  746                                   | type_declaration_no_options . '-' '#'
  747                                   | type_declaration_no_options . "==" "const"
  748                                   | type_declaration_no_options . "==" '&'
  749                                   | type_declaration_no_options . '?'
  753                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 369
    "implicit"  shift, and go to state 370
    "explicit"  shift, and go to state 371
    "=="        shift, and go to state 372
    "<-"        shift, and go to state 561
    "??"        shift, and go to state 373
    ":="        shift, and go to state 562
    '='         shift, and go to state 563
    '?'         shift, and go to state 374
    '&'         shift, and go to state 375
    '-'         shift, and go to state 376
    '#'         shift, and go to state 377

    copy_or_move_or_clone  go to state 1547


State 1516

  335 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1548
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1517

  550 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@41 . function_declaration_header SEMICOLON

    "operator"  shift, and go to state 187
    "bool"      shift, and go to state 188
    "string"    shift, and go to state 189
    "int"       shift, and go to state 190
    "int2"      shift, and go to state 191
    "int3"      shift, and go to state 192
    "int4"      shift, and go to state 193
    "uint"      shift, and go to state 194
    "uint2"     shift, and go to state 195
    "uint3"     shift, and go to state 196
    "uint4"     shift, and go to state 197
    "float"     shift, and go to state 198
    "float2"    shift, and go to state 199
    "float3"    shift, and go to state 200
    "float4"    shift, and go to state 201
    "range"     shift, and go to state 202
    "urange"    shift, and go to state 203
    "range64"   shift, and go to state 204
    "urange64"  shift, and go to state 205
    "int64"     shift, and go to state 206
    "uint64"    shift, and go to state 207
    "double"    shift, and go to state 208
    "int8"      shift, and go to state 209
    "uint8"     shift, and go to state 210
    "int16"     shift, and go to state 211
    "uint16"    shift, and go to state 212
    "++"        shift, and go to state 213
    "--"        shift, and go to state 214
    "name"      shift, and go to state 215

    function_name                go to state 216
    function_declaration_header  go to state 1549


State 1518

  552 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@42 function_declaration_header optional_emit_semis expression_block

    $default  reduce using rule 551 ($@42)

    $@42  go to state 1550


State 1519

  582 variable_declaration: variable_declaration_no_type .

    $default  reduce using rule 582 (variable_declaration)


State 1520

  581 variable_declaration: variable_declaration_type .

    $default  reduce using rule 581 (variable_declaration)


State 1521

  544 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 544 (structure_variable_declaration)


State 1522

  815 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  816                   | make_struct_fields . ',' "name" ":=" expr
  819                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  820                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  824 make_struct_dim_list: '(' make_struct_fields . ')'

    ','  shift, and go to state 1185
    ')'  shift, and go to state 1551


State 1523

  825 make_struct_dim_list: make_struct_dim_list ',' . '(' make_struct_fields ')'
  878 optional_comma: ',' .

    '('  shift, and go to state 1552

    $default  reduce using rule 878 (optional_comma)


State 1524

  827 make_struct_dim_decl: make_struct_dim_list optional_comma .

    $default  reduce using rule 827 (make_struct_dim_decl)


State 1525

  834 make_struct_decl: "struct" '<' $@93 type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 834 (make_struct_decl)


State 1526

  837 make_struct_decl: "class" '<' $@95 type_declaration_no_options '>' $@96 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 837 (make_struct_decl)


State 1527

  353 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')' .

    $default  reduce using rule 353 (expr_type_info)


State 1528

  853 make_dim_decl: "array" "struct" '<' $@103 type_declaration_no_options '>' $@104 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1553


State 1529

  856 make_dim_decl: "array" "tuple" '<' $@105 tuple_type_list '>' $@106 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1554


State 1530

  859 make_dim_decl: "array" "variant" '<' $@107 variant_type_list '>' $@108 '(' make_variant_dim ')' .

    $default  reduce using rule 859 (make_dim_decl)


State 1531

  867 make_dim_decl: "fixed_array" '<' $@111 type_declaration_no_options '>' $@112 '(' expr_list optional_comma ')' .

    $default  reduce using rule 867 (make_dim_decl)


State 1532

  849 make_tuple_call: "tuple" '<' $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 849 (make_tuple_call)


State 1533

  840 make_struct_decl: "variant" '<' $@97 variant_type_list '>' $@98 '(' use_initializer make_variant_dim ')' .

    $default  reduce using rule 840 (make_struct_decl)


State 1534

  876 array_comprehension_where: ';' . "where" expr

    "where"  shift, and go to state 1555


State 1535

  879 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where . ']'

    ']'  shift, and go to state 1556


State 1536

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  880 array_comprehension: '[' "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr . array_comprehension_where ']'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ';'    shift, and go to state 1534

    $default  reduce using rule 875 (array_comprehension_where)

    array_comprehension_where  go to state 1557


State 1537

  881 array_comprehension: '{' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where . '}'

    '}'  shift, and go to state 1558


State 1538

   73 expression_else: "else" . optional_emit_semis expression_else_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1559


State 1539

   66 elif_or_static_elif: "elif" .

    $default  reduce using rule 66 (elif_or_static_elif)


State 1540

   67 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 67 (elif_or_static_elif)


State 1541

   74 expression_else: elif_or_static_elif . '(' expr ')' optional_emit_semis expression_else_block expression_else

    '('  shift, and go to state 1560


State 1542

   99 expression_if_then_else: $@9 if_or_static_if '(' expr ')' optional_emit_semis expression_if_block expression_else .

    $default  reduce using rule 99 (expression_if_then_else)


State 1543

   90 expression_if_block: $@3 '{' . expressions $@4 '}' expression_block_finally

    $default  reduce using rule 293 (expressions)

    expressions  go to state 1561


State 1544

   92 expression_if_block: $@5 expression_if_one_liner . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1562


State 1545

  109 expression_for_loop: $@10 "for" '(' for_variable_name_with_pos_list "in" expr_list ')' optional_emit_semis . expression_block

    $default  reduce using rule 270 ($@16)

    expression_block  go to state 1563
    $@16              go to state 400


State 1546

  269 expression_block_finally: "finally" $@14 '{' expressions $@15 '}' .

    $default  reduce using rule 269 (expression_block_finally)


State 1547

  334 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1564
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1548

  335 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr . SEMICOLON
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 631
    "as"                   shift, and go to state 632
    "<<"                   shift, and go to state 633
    ">>"                   shift, and go to state 634
    "++"                   shift, and go to state 635
    "--"                   shift, and go to state 636
    "<="                   shift, and go to state 637
    ">="                   shift, and go to state 638
    "=="                   shift, and go to state 639
    "!="                   shift, and go to state 640
    "->"                   shift, and go to state 641
    "??"                   shift, and go to state 642
    "?."                   shift, and go to state 643
    "?["                   shift, and go to state 644
    "<|"                   shift, and go to state 645
    "|>"                   shift, and go to state 646
    "<<<"                  shift, and go to state 647
    ">>>"                  shift, and go to state 648
    "&&"                   shift, and go to state 649
    "||"                   shift, and go to state 650
    "^^"                   shift, and go to state 651
    ".."                   shift, and go to state 652
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 653
    '|'                    shift, and go to state 654
    '^'                    shift, and go to state 655
    '&'                    shift, and go to state 656
    '<'                    shift, and go to state 657
    '>'                    shift, and go to state 658
    '-'                    shift, and go to state 659
    '+'                    shift, and go to state 660
    '*'                    shift, and go to state 661
    '/'                    shift, and go to state 662
    '%'                    shift, and go to state 663
    '.'                    shift, and go to state 664
    '['                    shift, and go to state 665
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1565


State 1549

  550 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@41 function_declaration_header . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1566


State 1550

  552 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@42 . function_declaration_header optional_emit_semis expression_block

    "operator"  shift, and go to state 187
    "bool"      shift, and go to state 188
    "string"    shift, and go to state 189
    "int"       shift, and go to state 190
    "int2"      shift, and go to state 191
    "int3"      shift, and go to state 192
    "int4"      shift, and go to state 193
    "uint"      shift, and go to state 194
    "uint2"     shift, and go to state 195
    "uint3"     shift, and go to state 196
    "uint4"     shift, and go to state 197
    "float"     shift, and go to state 198
    "float2"    shift, and go to state 199
    "float3"    shift, and go to state 200
    "float4"    shift, and go to state 201
    "range"     shift, and go to state 202
    "urange"    shift, and go to state 203
    "range64"   shift, and go to state 204
    "urange64"  shift, and go to state 205
    "int64"     shift, and go to state 206
    "uint64"    shift, and go to state 207
    "double"    shift, and go to state 208
    "int8"      shift, and go to state 209
    "uint8"     shift, and go to state 210
    "int16"     shift, and go to state 211
    "uint16"    shift, and go to state 212
    "++"        shift, and go to state 213
    "--"        shift, and go to state 214
    "name"      shift, and go to state 215

    function_name                go to state 216
    function_declaration_header  go to state 1567


State 1551

  824 make_struct_dim_list: '(' make_struct_fields ')' .

    $default  reduce using rule 824 (make_struct_dim_list)


State 1552

  825 make_struct_dim_list: make_struct_dim_list ',' '(' . make_struct_fields ')'

    "$f"    shift, and go to state 616
    "name"  shift, and go to state 1000

    make_struct_fields  go to state 1568


State 1553

  853 make_dim_decl: "array" "struct" '<' $@103 type_declaration_no_options '>' $@104 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 853 (make_dim_decl)


State 1554

  856 make_dim_decl: "array" "tuple" '<' $@105 tuple_type_list '>' $@106 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 856 (make_dim_decl)


State 1555

  876 array_comprehension_where: ';' "where" . expr

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1569
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1556

  879 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']' .

    $default  reduce using rule 879 (array_comprehension)


State 1557

  880 array_comprehension: '[' "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where . ']'

    ']'  shift, and go to state 1570


State 1558

  881 array_comprehension: '{' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}' .

    $default  reduce using rule 881 (array_comprehension)


State 1559

   73 expression_else: "else" optional_emit_semis . expression_else_block

    '{'       reduce using rule 93 ($@6)
    '{'       [reduce using rule 96 ($@8)]
    $default  reduce using rule 96 ($@8)

    expression_else_block  go to state 1571
    $@6                    go to state 1572
    $@8                    go to state 1573


State 1560

   74 expression_else: elif_or_static_elif '(' . expr ')' optional_emit_semis expression_else_block expression_else

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "null"                            shift, and go to state 431
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder          go to state 472
    expr_reader             go to state 473
    expr_call_pipe          go to state 474
    name_in_namespace       go to state 475
    expr_new                go to state 476
    expr_cast               go to state 477
    expr_type_decl          go to state 478
    expr_type_info          go to state 479
    block_or_lambda         go to state 480
    expr_full_block         go to state 481
    expr_numeric_const      go to state 482
    expr_named_call         go to state 483
    expr_method_call        go to state 484
    func_addr_expr          go to state 485
    expr_field              go to state 486
    expr_call               go to state 487
    expr                    go to state 1574
    expr_generator          go to state 489
    expr_mtag               go to state 490
    basic_type_declaration  go to state 491
    make_decl               go to state 492
    make_struct_decl        go to state 493
    make_tuple_call         go to state 494
    make_dim_decl           go to state 495
    make_table_decl         go to state 496
    array_comprehension     go to state 497


State 1561

   90 expression_if_block: $@3 '{' expressions . $@4 '}' expression_block_finally
  294 expressions: expressions . expression_any
  295            | expressions . error

    error                             shift, and go to state 887
    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "return"                          shift, and go to state 888
    "null"                            shift, and go to state 431
    "break"                           shift, and go to state 889
    "try"                             shift, and go to state 890
    "table"                           shift, and go to state 432
    "delete"                          shift, and go to state 891
    "deref"                           shift, and go to state 433
    "assume"                          shift, and go to state 892
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 436
    "continue"                        shift, and go to state 893
    "pass"                            shift, and go to state 894
    "reinterpret"                     shift, and go to state 437
    "label"                           shift, and go to state 895
    "goto"                            shift, and go to state 896
    "unsafe"                          shift, and go to state 897
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "yield"                           shift, and go to state 898
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 471

    "while"      reduce using rule 111 ($@11)
    "if"         reduce using rule 98 ($@9)
    "static_if"  reduce using rule 98 ($@9)
    "for"        reduce using rule 108 ($@10)
    "with"       reduce using rule 113 ($@12)
    '}'          reduce using rule 89 ($@4)

    SEMICOLON                         go to state 899
    string_builder                    go to state 472
    expr_reader                       go to state 473
    expression_label                  go to state 900
    expression_goto                   go to state 901
    expression_if_one_liner           go to state 902
    $@4                               go to state 1575
    expression_if_then_else           go to state 903
    $@9                               go to state 904
    expression_if_then_else_oneliner  go to state 905
    expression_for_loop               go to state 906
    $@10                              go to state 907
    expression_unsafe                 go to state 908
    expression_while_loop             go to state 909
    $@11                              go to state 910
    expression_with                   go to state 911
    $@12                              go to state 912
    expression_with_alias             go to state 913
    expr_call_pipe                    go to state 474
    expression_any                    go to state 915
    name_in_namespace                 go to state 475
    expression_delete                 go to state 916
    expr_new                          go to state 476
    expression_break                  go to state 917
    expression_continue               go to state 918
    expression_return                 go to state 919
    expression_yield                  go to state 920
    expression_try_catch              go to state 921
    kwd_let                           go to state 922
    expression_let                    go to state 923
    expr_cast                         go to state 477
    expr_type_decl                    go to state 478
    expr_type_info                    go to state 479
    block_or_lambda                   go to state 480
    expr_full_block                   go to state 481
    expr_numeric_const                go to state 482
    expr_assign                       go to state 924
    expr_named_call                   go to state 483
    expr_method_call                  go to state 484
    func_addr_expr                    go to state 485
    expr_field                        go to state 486
    expr_call                         go to state 487
    expr                              go to state 925
    expr_generator                    go to state 489
    expr_mtag                         go to state 490
    basic_type_declaration            go to state 491
    make_decl                         go to state 492
    make_struct_decl                  go to state 493
    make_tuple_call                   go to state 494
    make_dim_decl                     go to state 495
    make_table_decl                   go to state 496
    array_comprehension               go to state 497


State 1562

   92 expression_if_block: $@5 expression_if_one_liner SEMICOLON .

    $default  reduce using rule 92 (expression_if_block)


State 1563

  109 expression_for_loop: $@10 "for" '(' for_variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block .

    $default  reduce using rule 109 (expression_for_loop)


State 1564

  334 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr . SEMICOLON
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 631
    "as"                   shift, and go to state 632
    "<<"                   shift, and go to state 633
    ">>"                   shift, and go to state 634
    "++"                   shift, and go to state 635
    "--"                   shift, and go to state 636
    "<="                   shift, and go to state 637
    ">="                   shift, and go to state 638
    "=="                   shift, and go to state 639
    "!="                   shift, and go to state 640
    "->"                   shift, and go to state 641
    "??"                   shift, and go to state 642
    "?."                   shift, and go to state 643
    "?["                   shift, and go to state 644
    "<|"                   shift, and go to state 645
    "|>"                   shift, and go to state 646
    "<<<"                  shift, and go to state 647
    ">>>"                  shift, and go to state 648
    "&&"                   shift, and go to state 649
    "||"                   shift, and go to state 650
    "^^"                   shift, and go to state 651
    ".."                   shift, and go to state 652
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 653
    '|'                    shift, and go to state 654
    '^'                    shift, and go to state 655
    '&'                    shift, and go to state 656
    '<'                    shift, and go to state 657
    '>'                    shift, and go to state 658
    '-'                    shift, and go to state 659
    '+'                    shift, and go to state 660
    '*'                    shift, and go to state 661
    '/'                    shift, and go to state 662
    '%'                    shift, and go to state 663
    '.'                    shift, and go to state 664
    '['                    shift, and go to state 665
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1576


State 1565

  335 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 335 (tuple_expansion_variable_declaration)


State 1566

  550 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@41 function_declaration_header SEMICOLON .

    $default  reduce using rule 550 (struct_variable_declaration_list)


State 1567

  552 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@42 function_declaration_header . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1577


State 1568

  815 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  816                   | make_struct_fields . ',' "name" ":=" expr
  819                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  820                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  825 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields . ')'

    ','  shift, and go to state 1185
    ')'  shift, and go to state 1578


State 1569

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  876 array_comprehension_where: ';' "where" expr .

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 876 (array_comprehension_where)


State 1570

  880 array_comprehension: '[' "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']' .

    $default  reduce using rule 880 (array_comprehension)


State 1571

   73 expression_else: "else" optional_emit_semis expression_else_block .

    $default  reduce using rule 73 (expression_else)


State 1572

   95 expression_else_block: $@6 . '{' expressions $@7 '}' expression_block_finally

    '{'  shift, and go to state 1579


State 1573

   97 expression_else_block: $@8 . expression_if_one_liner SEMICOLON

    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "return"                          shift, and go to state 888
    "null"                            shift, and go to state 431
    "break"                           shift, and go to state 889
    "table"                           shift, and go to state 432
    "deref"                           shift, and go to state 433
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "addr"                            shift, and go to state 436
    "continue"                        shift, and go to state 893
    "reinterpret"                     shift, and go to state 437
    "unsafe"                          shift, and go to state 438
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "yield"                           shift, and go to state 898
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    '{'                               shift, and go to state 471

    string_builder           go to state 472
    expr_reader              go to state 473
    expression_if_one_liner  go to state 1580
    expr_call_pipe           go to state 474
    name_in_namespace        go to state 475
    expr_new                 go to state 476
    expression_break         go to state 1502
    expression_continue      go to state 1503
    expression_return        go to state 1504
    expression_yield         go to state 1505
    expr_cast                go to state 477
    expr_type_decl           go to state 478
    expr_type_info           go to state 479
    block_or_lambda          go to state 480
    expr_full_block          go to state 481
    expr_numeric_const       go to state 482
    expr_named_call          go to state 483
    expr_method_call         go to state 484
    func_addr_expr           go to state 485
    expr_field               go to state 486
    expr_call                go to state 487
    expr                     go to state 1506
    expr_generator           go to state 489
    expr_mtag                go to state 490
    basic_type_declaration   go to state 491
    make_decl                go to state 492
    make_struct_decl         go to state 493
    make_tuple_call          go to state 494
    make_dim_decl            go to state 495
    make_table_decl          go to state 496
    array_comprehension      go to state 497


State 1574

   74 expression_else: elif_or_static_elif '(' expr . ')' optional_emit_semis expression_else_block expression_else
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 1581


State 1575

   90 expression_if_block: $@3 '{' expressions $@4 . '}' expression_block_finally

    '}'  shift, and go to state 1582


State 1576

  334 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 334 (tuple_expansion_variable_declaration)


State 1577

  552 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@42 function_declaration_header optional_emit_semis . expression_block

    $default  reduce using rule 270 ($@16)

    expression_block  go to state 1583
    $@16              go to state 400


State 1578

  825 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields ')' .

    $default  reduce using rule 825 (make_struct_dim_list)


State 1579

   95 expression_else_block: $@6 '{' . expressions $@7 '}' expression_block_finally

    $default  reduce using rule 293 (expressions)

    expressions  go to state 1584


State 1580

   97 expression_else_block: $@8 expression_if_one_liner . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1585


State 1581

   74 expression_else: elif_or_static_elif '(' expr ')' . optional_emit_semis expression_else_block expression_else

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1586


State 1582

   90 expression_if_block: $@3 '{' expressions $@4 '}' . expression_block_finally

    "finally"  shift, and go to state 1243

    $default  reduce using rule 266 (expression_block_finally)

    expression_block_finally  go to state 1587


State 1583

  552 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@42 function_declaration_header optional_emit_semis expression_block .

    $default  reduce using rule 552 (struct_variable_declaration_list)


State 1584

   95 expression_else_block: $@6 '{' expressions . $@7 '}' expression_block_finally
  294 expressions: expressions . expression_any
  295            | expressions . error

    error                             shift, and go to state 887
    "struct"                          shift, and go to state 423
    "class"                           shift, and go to state 424
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 425
    "false"                           shift, and go to state 426
    "new"                             shift, and go to state 427
    "typeinfo"                        shift, and go to state 428
    "type"                            shift, and go to state 429
    "array"                           shift, and go to state 430
    "return"                          shift, and go to state 888
    "null"                            shift, and go to state 431
    "break"                           shift, and go to state 889
    "try"                             shift, and go to state 890
    "table"                           shift, and go to state 432
    "delete"                          shift, and go to state 891
    "deref"                           shift, and go to state 433
    "assume"                          shift, and go to state 892
    "cast"                            shift, and go to state 434
    "upcast"                          shift, and go to state 435
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 436
    "continue"                        shift, and go to state 893
    "pass"                            shift, and go to state 894
    "reinterpret"                     shift, and go to state 437
    "label"                           shift, and go to state 895
    "goto"                            shift, and go to state 896
    "unsafe"                          shift, and go to state 897
    "fixed_array"                     shift, and go to state 439
    "default"                         shift, and go to state 440
    "bool"                            shift, and go to state 236
    "void"                            shift, and go to state 237
    "string"                          shift, and go to state 238
    "int"                             shift, and go to state 240
    "int2"                            shift, and go to state 241
    "int3"                            shift, and go to state 242
    "int4"                            shift, and go to state 243
    "uint"                            shift, and go to state 244
    "bitfield"                        shift, and go to state 441
    "uint2"                           shift, and go to state 246
    "uint3"                           shift, and go to state 247
    "uint4"                           shift, and go to state 248
    "float"                           shift, and go to state 249
    "float2"                          shift, and go to state 250
    "float3"                          shift, and go to state 251
    "float4"                          shift, and go to state 252
    "range"                           shift, and go to state 253
    "urange"                          shift, and go to state 254
    "range64"                         shift, and go to state 255
    "urange64"                        shift, and go to state 256
    "int64"                           shift, and go to state 258
    "uint64"                          shift, and go to state 259
    "double"                          shift, and go to state 260
    "int8"                            shift, and go to state 263
    "uint8"                           shift, and go to state 264
    "int16"                           shift, and go to state 265
    "uint16"                          shift, and go to state 266
    "tuple"                           shift, and go to state 442
    "variant"                         shift, and go to state 443
    "generator"                       shift, and go to state 444
    "yield"                           shift, and go to state 898
    "++"                              shift, and go to state 445
    "--"                              shift, and go to state 446
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 447
    "$i"                              shift, and go to state 448
    "$v"                              shift, and go to state 449
    "$b"                              shift, and go to state 450
    "$a"                              shift, and go to state 451
    "$c"                              shift, and go to state 452
    "..."                             shift, and go to state 453
    "integer constant"                shift, and go to state 454
    "long integer constant"           shift, and go to state 455
    "unsigned integer constant"       shift, and go to state 456
    "unsigned long integer constant"  shift, and go to state 457
    "unsigned int8 constant"          shift, and go to state 458
    "floating point constant"         shift, and go to state 459
    "double constant"                 shift, and go to state 460
    "name"                            shift, and go to state 58
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 461
    '-'                               shift, and go to state 462
    '+'                               shift, and go to state 463
    '*'                               shift, and go to state 464
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 465
    '!'                               shift, and go to state 466
    '['                               shift, and go to state 467
    '('                               shift, and go to state 468
    '$'                               shift, and go to state 469
    '@'                               shift, and go to state 470
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 471

    "while"      reduce using rule 111 ($@11)
    "if"         reduce using rule 98 ($@9)
    "static_if"  reduce using rule 98 ($@9)
    "for"        reduce using rule 108 ($@10)
    "with"       reduce using rule 113 ($@12)
    '}'          reduce using rule 94 ($@7)

    SEMICOLON                         go to state 899
    string_builder                    go to state 472
    expr_reader                       go to state 473
    expression_label                  go to state 900
    expression_goto                   go to state 901
    expression_if_one_liner           go to state 902
    $@7                               go to state 1588
    expression_if_then_else           go to state 903
    $@9                               go to state 904
    expression_if_then_else_oneliner  go to state 905
    expression_for_loop               go to state 906
    $@10                              go to state 907
    expression_unsafe                 go to state 908
    expression_while_loop             go to state 909
    $@11                              go to state 910
    expression_with                   go to state 911
    $@12                              go to state 912
    expression_with_alias             go to state 913
    expr_call_pipe                    go to state 474
    expression_any                    go to state 915
    name_in_namespace                 go to state 475
    expression_delete                 go to state 916
    expr_new                          go to state 476
    expression_break                  go to state 917
    expression_continue               go to state 918
    expression_return                 go to state 919
    expression_yield                  go to state 920
    expression_try_catch              go to state 921
    kwd_let                           go to state 922
    expression_let                    go to state 923
    expr_cast                         go to state 477
    expr_type_decl                    go to state 478
    expr_type_info                    go to state 479
    block_or_lambda                   go to state 480
    expr_full_block                   go to state 481
    expr_numeric_const                go to state 482
    expr_assign                       go to state 924
    expr_named_call                   go to state 483
    expr_method_call                  go to state 484
    func_addr_expr                    go to state 485
    expr_field                        go to state 486
    expr_call                         go to state 487
    expr                              go to state 925
    expr_generator                    go to state 489
    expr_mtag                         go to state 490
    basic_type_declaration            go to state 491
    make_decl                         go to state 492
    make_struct_decl                  go to state 493
    make_tuple_call                   go to state 494
    make_dim_decl                     go to state 495
    make_table_decl                   go to state 496
    array_comprehension               go to state 497


State 1585

   97 expression_else_block: $@8 expression_if_one_liner SEMICOLON .

    $default  reduce using rule 97 (expression_else_block)


State 1586

   74 expression_else: elif_or_static_elif '(' expr ')' optional_emit_semis . expression_else_block expression_else

    '{'       reduce using rule 93 ($@6)
    '{'       [reduce using rule 96 ($@8)]
    $default  reduce using rule 96 ($@8)

    expression_else_block  go to state 1589
    $@6                    go to state 1572
    $@8                    go to state 1573


State 1587

   90 expression_if_block: $@3 '{' expressions $@4 '}' expression_block_finally .

    $default  reduce using rule 90 (expression_if_block)


State 1588

   95 expression_else_block: $@6 '{' expressions $@7 . '}' expression_block_finally

    '}'  shift, and go to state 1590


State 1589

   74 expression_else: elif_or_static_elif '(' expr ')' optional_emit_semis expression_else_block . expression_else

    "else"         shift, and go to state 1538
    "elif"         shift, and go to state 1539
    "static_elif"  shift, and go to state 1540

    $default  reduce using rule 72 (expression_else)

    elif_or_static_elif  go to state 1541
    expression_else      go to state 1591


State 1590

   95 expression_else_block: $@6 '{' expressions $@7 '}' . expression_block_finally

    "finally"  shift, and go to state 1243

    $default  reduce using rule 266 (expression_block_finally)

    expression_block_finally  go to state 1592


State 1591

   74 expression_else: elif_or_static_elif '(' expr ')' optional_emit_semis expression_else_block expression_else .

    $default  reduce using rule 74 (expression_else)


State 1592

   95 expression_else_block: $@6 '{' expressions $@7 '}' expression_block_finally .

    $default  reduce using rule 95 (expression_else_block)
