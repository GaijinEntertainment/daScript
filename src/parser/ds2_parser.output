Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"
    LLPIPE


State 1428 conflicts: 1 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration SEMICOLON
    9        | program options_declaration SEMICOLON
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program tuple_alias_declaration
   13        | program bitfield_alias_declaration
   14        | program top_level_reader_macro
   15        | program SEMICOLON

   16 COMMA: ','
   17      | "new line, comma"

   18 SEMICOLON: ';'
   19          | "new line, semicolon"

   20 top_level_reader_macro: expr_reader SEMICOLON

   21 optional_public_or_private_module: %empty
   22                                  | "public"
   23                                  | "private"

   24 module_name: '$'
   25            | "name"

   26 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   27 character_sequence: STRING_CHARACTER
   28                   | STRING_CHARACTER_ESC
   29                   | character_sequence STRING_CHARACTER
   30                   | character_sequence STRING_CHARACTER_ESC

   31 string_constant: "start of the string" character_sequence "end of the string"
   32                | "start of the string" "end of the string"

   33 format_string: %empty
   34              | format_string STRING_CHARACTER

   35 optional_format_string: %empty

   36 $@1: %empty

   37 optional_format_string: ':' $@1 format_string

   38 string_builder_body: %empty
   39                    | string_builder_body character_sequence
   40                    | string_builder_body "{" expr optional_format_string "}"

   41 string_builder: "start of the string" string_builder_body "end of the string"

   42 reader_character_sequence: STRING_CHARACTER
   43                          | reader_character_sequence STRING_CHARACTER

   44 $@2: %empty

   45 expr_reader: '%' name_in_namespace $@2 reader_character_sequence

   46 options_declaration: "options" annotation_argument_list

   47 require_declaration: "require" require_module

   48 require_module_name: "name"
   49                    | '%' require_module_name
   50                    | require_module_name '.' "name"
   51                    | require_module_name '/' "name"

   52 require_module: require_module_name is_public_module
   53               | require_module_name "as" "name" is_public_module

   54 is_public_module: %empty
   55                 | "public"

   56 expect_declaration: "expect" expect_list

   57 expect_list: expect_error
   58            | expect_list ',' expect_error

   59 expect_error: "integer constant"
   60             | "integer constant" ':' "integer constant"

   61 expression_label: "label" "integer constant" ':'

   62 expression_goto: "goto" "label" "integer constant"
   63                | "goto" expr

   64 elif_or_static_elif: "elif"
   65                    | "static_elif"

   66 emit_semis: "new line, semicolon"
   67           | emit_semis "new line, semicolon"

   68 optional_emit_semis: %empty
   69                    | emit_semis

   70 expression_else: %empty
   71                | "else" optional_emit_semis expression_block
   72                | elif_or_static_elif '(' expr ')' optional_emit_semis expression_block expression_else

   73 if_or_static_if: "if"
   74                | "static_if"

   75 expression_else_one_liner: %empty
   76                          | "else" expression_if_one_liner

   77 expression_if_one_liner: expr
   78                        | expression_return
   79                        | expression_yield
   80                        | expression_break
   81                        | expression_continue

   82 semis: SEMICOLON
   83      | semis SEMICOLON

   84 optional_semis: %empty
   85               | semis

   86 $@3: %empty

   87 $@4: %empty

   88 expression_if_block: $@3 '{' expressions $@4 '}' expression_block_finally

   89 $@5: %empty

   90 expression_if_block: $@5 expression_if_one_liner SEMICOLON

   91 $@6: %empty

   92 expression_if_then_else: $@6 if_or_static_if '(' expr ')' optional_emit_semis expression_if_block expression_else

   93 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner SEMICOLON

   94 $@7: %empty

   95 expression_for_loop: $@7 "for" '(' variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

   96 expression_unsafe: "unsafe" optional_emit_semis expression_block

   97 $@8: %empty

   98 expression_while_loop: $@8 "while" '(' expr ')' optional_emit_semis expression_block

   99 $@9: %empty

  100 expression_with: $@9 "with" '(' expr ')' optional_emit_semis expression_block

  101 expression_with_alias: "assume" "name" '=' expr

  102 annotation_argument_value: string_constant
  103                          | "name"
  104                          | "integer constant"
  105                          | "floating point constant"
  106                          | "true"
  107                          | "false"

  108 annotation_argument_value_list: annotation_argument_value
  109                               | annotation_argument_value_list ',' annotation_argument_value

  110 annotation_argument_name: "name"
  111                         | "type"
  112                         | "in"

  113 annotation_argument: annotation_argument_name '=' string_constant
  114                    | annotation_argument_name '=' "name"
  115                    | annotation_argument_name '=' "integer constant"
  116                    | annotation_argument_name '=' "floating point constant"
  117                    | annotation_argument_name '=' "true"
  118                    | annotation_argument_name '=' "false"
  119                    | annotation_argument_name
  120                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

  121 annotation_argument_list: annotation_argument
  122                         | annotation_argument_list ',' annotation_argument

  123 metadata_argument_list: '@' annotation_argument optional_emit_semis
  124                       | metadata_argument_list '@' annotation_argument optional_emit_semis

  125 annotation_declaration_name: name_in_namespace
  126                            | "require"
  127                            | "private"
  128                            | "template"

  129 annotation_declaration_basic: annotation_declaration_name
  130                             | annotation_declaration_name '(' annotation_argument_list ')'

  131 annotation_declaration: annotation_declaration_basic
  132                       | '!' annotation_declaration
  133                       | annotation_declaration "&&" annotation_declaration
  134                       | annotation_declaration "||" annotation_declaration
  135                       | annotation_declaration "^^" annotation_declaration
  136                       | '(' annotation_declaration ')'
  137                       | "|>" annotation_declaration

  138 annotation_list: annotation_declaration
  139                | annotation_list ',' annotation_declaration

  140 optional_annotation_list: %empty
  141                         | '[' annotation_list ']'

  142 optional_annotation_list_with_emit_semis: %empty
  143                                         | '[' annotation_list ']' optional_emit_semis

  144 optional_function_argument_list: %empty
  145                                | '(' ')'
  146                                | '(' function_argument_list ')'

  147 optional_function_type: %empty
  148                       | ':' type_declaration

  149 function_name: "name"
  150              | "operator" '!'
  151              | "operator" '~'
  152              | "operator" "+="
  153              | "operator" "-="
  154              | "operator" "*="
  155              | "operator" "/="
  156              | "operator" "%="
  157              | "operator" "&="
  158              | "operator" "|="
  159              | "operator" "^="
  160              | "operator" "&&="
  161              | "operator" "||="
  162              | "operator" "^^="
  163              | "operator" "&&"
  164              | "operator" "||"
  165              | "operator" "^^"
  166              | "operator" '+'
  167              | "operator" '-'
  168              | "operator" '*'
  169              | "operator" '/'
  170              | "operator" '%'
  171              | "operator" '<'
  172              | "operator" '>'
  173              | "operator" ".."
  174              | "operator" "=="
  175              | "operator" "!="
  176              | "operator" "<="
  177              | "operator" ">="
  178              | "operator" '&'
  179              | "operator" '|'
  180              | "operator" '^'
  181              | "++" "operator"
  182              | "--" "operator"
  183              | "operator" "++"
  184              | "operator" "--"
  185              | "operator" "<<"
  186              | "operator" ">>"
  187              | "operator" "<<="
  188              | "operator" ">>="
  189              | "operator" "<<<"
  190              | "operator" ">>>"
  191              | "operator" "<<<="
  192              | "operator" ">>>="
  193              | "operator" '[' ']'
  194              | "operator" "?[" ']'
  195              | "operator" '.'
  196              | "operator" "?."
  197              | "operator" '.' "name"
  198              | "operator" '.' "name" ":="
  199              | "operator" "?." "name"
  200              | "operator" ":="
  201              | "operator" "delete"
  202              | "operator" "??"
  203              | "operator" "is"
  204              | "operator" "as"
  205              | "operator" "is" "name"
  206              | "operator" "as" "name"
  207              | "operator" '?' "as"
  208              | "operator" '?' "as" "name"
  209              | "bool"
  210              | "string"
  211              | "int"
  212              | "int2"
  213              | "int3"
  214              | "int4"
  215              | "uint"
  216              | "uint2"
  217              | "uint3"
  218              | "uint4"
  219              | "float"
  220              | "float2"
  221              | "float3"
  222              | "float4"
  223              | "range"
  224              | "urange"
  225              | "range64"
  226              | "urange64"
  227              | "int64"
  228              | "uint64"
  229              | "double"
  230              | "int8"
  231              | "uint8"
  232              | "int16"
  233              | "uint16"

  234 global_function_declaration: optional_annotation_list_with_emit_semis "def" function_declaration

  235 optional_public_or_private_function: %empty
  236                                    | "private"
  237                                    | "public"

  238 function_declaration_header: function_name optional_function_argument_list optional_function_type

  239 $@10: %empty

  240 function_declaration: optional_public_or_private_function $@10 function_declaration_header optional_emit_semis expression_block

  241 expression_block_finally: %empty

  242 $@11: %empty

  243 $@12: %empty

  244 expression_block_finally: "finally" $@11 '{' expressions $@12 '}'

  245 $@13: %empty

  246 $@14: %empty

  247 expression_block: $@13 '{' expressions $@14 '}' expression_block_finally

  248 expr_call_pipe: expr_call expr_full_block_assumed_piped

  249 expression_any: SEMICOLON
  250               | expr_assign SEMICOLON
  251               | expression_delete SEMICOLON
  252               | expression_let
  253               | expression_while_loop
  254               | expression_unsafe
  255               | expression_with
  256               | expression_with_alias SEMICOLON
  257               | expression_for_loop
  258               | expression_break SEMICOLON
  259               | expression_continue SEMICOLON
  260               | expression_return SEMICOLON
  261               | expression_yield SEMICOLON
  262               | expression_if_then_else
  263               | expression_if_then_else_oneliner
  264               | expression_try_catch
  265               | expression_label SEMICOLON
  266               | expression_goto SEMICOLON
  267               | "pass" SEMICOLON

  268 expressions: %empty
  269            | expressions expression_any
  270            | expressions error

  271 optional_expr_list: %empty
  272                   | expr_list optional_comma

  273 optional_expr_map_tuple_list: %empty
  274                             | expr_map_tuple_list optional_comma

  275 type_declaration_no_options_list: type_declaration
  276                                 | type_declaration_no_options_list c_or_s type_declaration

  277 name_in_namespace: "name"
  278                  | "name" "::" "name"
  279                  | "::" "name"

  280 expression_delete: "delete" expr
  281                  | "delete" "explicit" expr

  282 $@15: %empty

  283 $@16: %empty

  284 new_type_declaration: '<' $@15 type_declaration '>' $@16
  285                     | structure_type_declaration

  286 expr_new: "new" new_type_declaration
  287         | "new" new_type_declaration '(' use_initializer ')'
  288         | "new" new_type_declaration '(' expr_list ')'
  289         | "new" new_type_declaration '(' make_struct_single ')'
  290         | "new" new_type_declaration '(' "uninitialized" make_struct_single ')'
  291         | "new" make_decl

  292 expression_break: "break"

  293 expression_continue: "continue"

  294 expression_return: "return"
  295                  | "return" expr
  296                  | "return" "<-" expr

  297 expression_yield: "yield" expr
  298                 | "yield" "<-" expr

  299 expression_try_catch: "try" expression_block "recover" expression_block

  300 kwd_let_var_or_nothing: "let"
  301                       | "var"
  302                       | %empty

  303 kwd_let: "let"
  304        | "var"

  305 optional_in_scope: "inscope"
  306                  | %empty

  307 tuple_expansion: "name"
  308                | tuple_expansion ',' "name"

  309 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  310                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr SEMICOLON

  311 expression_let: kwd_let optional_in_scope let_variable_declaration
  312               | kwd_let optional_in_scope tuple_expansion_variable_declaration
  313               | kwd_let optional_in_scope '{' variable_declaration_list '}'

  314 $@17: %empty

  315 $@18: %empty

  316 expr_cast: "cast" '<' $@17 type_declaration_no_options '>' $@18 expr

  317 $@19: %empty

  318 $@20: %empty

  319 expr_cast: "upcast" '<' $@19 type_declaration_no_options '>' $@20 expr

  320 $@21: %empty

  321 $@22: %empty

  322 expr_cast: "reinterpret" '<' $@21 type_declaration_no_options '>' $@22 expr

  323 $@23: %empty

  324 $@24: %empty

  325 expr_type_decl: "type" '<' $@23 type_declaration '>' $@24

  326 expr_type_info: "typeinfo" name_in_namespace '(' expr ')'
  327               | "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')'
  328               | "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')'

  329 expr_list: expr
  330          | expr_list ',' expr

  331 block_or_simple_block: expression_block
  332                      | "=>" expr
  333                      | "=>" "<-" expr

  334 block_or_lambda: '$'
  335                | '@'
  336                | '@' '@'

  337 capture_entry: '&' "name"
  338              | '=' "name"
  339              | "<-" "name"
  340              | ":=" "name"
  341              | "name" '(' "name" ')'

  342 capture_list: capture_entry
  343             | capture_list ',' capture_entry

  344 optional_capture_list: %empty
  345                      | "capture" '(' capture_list ')'

  346 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

  347 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block
  348                              | '{' expressions '}'

  349 expr_numeric_const: "integer constant"
  350                   | "unsigned integer constant"
  351                   | "long integer constant"
  352                   | "unsigned long integer constant"
  353                   | "unsigned int8 constant"
  354                   | "floating point constant"
  355                   | "double constant"

  356 expr_assign: expr
  357            | expr '=' expr
  358            | expr "<-" expr
  359            | expr ":=" expr
  360            | expr "&=" expr
  361            | expr "|=" expr
  362            | expr "^=" expr
  363            | expr "&&=" expr
  364            | expr "||=" expr
  365            | expr "^^=" expr
  366            | expr "+=" expr
  367            | expr "-=" expr
  368            | expr "*=" expr
  369            | expr "/=" expr
  370            | expr "%=" expr
  371            | expr "<<=" expr
  372            | expr ">>=" expr
  373            | expr "<<<=" expr
  374            | expr ">>>=" expr

  375 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  376                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  377 expr_method_call: expr "->" "name" '(' ')'
  378                 | expr "->" "name" '(' expr_list ')'

  379 func_addr_name: name_in_namespace
  380               | "$i" '(' expr ')'

  381 func_addr_expr: '@' '@' func_addr_name

  382 $@25: %empty

  383 $@26: %empty

  384 func_addr_expr: '@' '@' '<' $@25 type_declaration_no_options '>' $@26 func_addr_name

  385 $@27: %empty

  386 $@28: %empty

  387 func_addr_expr: '@' '@' '<' $@27 optional_function_argument_list optional_function_type '>' $@28 func_addr_name

  388 expr_field: expr '.' "name"
  389           | expr '.' '.' "name"
  390           | expr '.' "name" '(' ')'
  391           | expr '.' "name" '(' expr_list ')'
  392           | expr '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr '.' basic_type_declaration '(' ')'
  394           | expr '.' basic_type_declaration '(' expr_list ')'

  395 $@29: %empty

  396 $@30: %empty

  397 expr_field: expr '.' $@29 error $@30

  398 expr_call: name_in_namespace '(' ')'
  399          | name_in_namespace '(' "uninitialized" ')'
  400          | name_in_namespace '(' make_struct_single ')'
  401          | name_in_namespace '(' "uninitialized" make_struct_single ')'
  402          | name_in_namespace '(' expr_list ')'
  403          | basic_type_declaration '(' ')'
  404          | basic_type_declaration '(' expr_list ')'

  405 expr: "null"
  406     | name_in_namespace
  407     | expr_numeric_const
  408     | expr_reader
  409     | string_builder
  410     | make_decl
  411     | "true"
  412     | "false"
  413     | expr_field
  414     | expr_mtag
  415     | '!' expr
  416     | '~' expr
  417     | '+' expr
  418     | '-' expr
  419     | expr "<<" expr
  420     | expr ">>" expr
  421     | expr "<<<" expr
  422     | expr ">>>" expr
  423     | expr '+' expr
  424     | expr '-' expr
  425     | expr '*' expr
  426     | expr '/' expr
  427     | expr '%' expr
  428     | expr '<' expr
  429     | expr '>' expr
  430     | expr "==" expr
  431     | expr "!=" expr
  432     | expr "<=" expr
  433     | expr ">=" expr
  434     | expr '&' expr
  435     | expr '|' expr
  436     | expr '^' expr
  437     | expr "&&" expr
  438     | expr "||" expr
  439     | expr "^^" expr
  440     | expr ".." expr
  441     | "++" expr
  442     | "--" expr
  443     | expr "++"
  444     | expr "--"
  445     | '(' expr_list optional_comma ')'
  446     | '(' make_struct_single ')'
  447     | expr '[' expr ']'
  448     | expr '.' '[' expr ']'
  449     | expr "?[" expr ']'
  450     | expr '.' "?[" expr ']'
  451     | expr "?." "name"
  452     | expr '.' "?." "name"
  453     | func_addr_expr
  454     | expr_call
  455     | '*' expr
  456     | "deref" '(' expr ')'
  457     | "addr" '(' expr ')'
  458     | expr_generator
  459     | expr "??" expr
  460     | expr '?' expr ':' expr

  461 $@31: %empty

  462 $@32: %empty

  463 expr: expr "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr "is" basic_type_declaration
  465     | expr "is" "name"
  466     | expr "as" "name"

  467 $@33: %empty

  468 $@34: %empty

  469 expr: expr "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr "as" basic_type_declaration
  471     | expr '?' "as" "name"

  472 $@35: %empty

  473 $@36: %empty

  474 expr: expr '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr '?' "as" basic_type_declaration
  476     | expr_type_info
  477     | expr_type_decl
  478     | expr_cast
  479     | expr_new
  480     | expr_method_call
  481     | expr_named_call
  482     | expr_full_block
  483     | expr "<|" expr
  484     | expr "|>" expr
  485     | expr "|>" basic_type_declaration
  486     | expr_call_pipe
  487     | "unsafe" '(' expr ')'

  488 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  489               | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  490               | "generator" '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block

  491 expr_mtag: "$$" '(' expr ')'
  492          | "$i" '(' expr ')'
  493          | "$v" '(' expr ')'
  494          | "$b" '(' expr ')'
  495          | "$a" '(' expr ')'
  496          | "..."
  497          | "$c" '(' expr ')' '(' ')'
  498          | "$c" '(' expr ')' '(' expr_list ')'
  499          | expr '.' "$f" '(' expr ')'
  500          | expr "?." "$f" '(' expr ')'
  501          | expr '.' '.' "$f" '(' expr ')'
  502          | expr '.' "?." "$f" '(' expr ')'
  503          | expr "as" "$f" '(' expr ')'
  504          | expr '?' "as" "$f" '(' expr ')'
  505          | expr "is" "$f" '(' expr ')'
  506          | '@' '@' "$c" '(' expr ')'

  507 optional_field_annotation: %empty
  508                          | metadata_argument_list

  509 optional_override: %empty
  510                  | "override"
  511                  | "sealed"

  512 optional_constant: %empty
  513                  | "const"

  514 optional_public_or_private_member_variable: %empty
  515                                           | "public"
  516                                           | "private"

  517 optional_static_member_variable: %empty
  518                                | "static"

  519 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  520 struct_variable_declaration_list: %empty
  521                                 | struct_variable_declaration_list "new line, semicolon"

  522 $@37: %empty

  523 struct_variable_declaration_list: struct_variable_declaration_list $@37 structure_variable_declaration SEMICOLON

  524 $@38: %empty

  525 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@38 function_declaration_header SEMICOLON

  526 $@39: %empty

  527 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@39 function_declaration_header optional_emit_semis expression_block

  528 function_argument_declaration_no_type: optional_field_annotation kwd_let_var_or_nothing variable_declaration_no_type

  529 function_argument_declaration_type: optional_field_annotation kwd_let_var_or_nothing variable_declaration_type
  530                                   | "$a" '(' expr ')'

  531 function_argument_list: function_argument_declaration_no_type
  532                       | function_argument_declaration_type
  533                       | function_argument_declaration_no_type ';' function_argument_list
  534                       | function_argument_declaration_type ';' function_argument_list
  535                       | function_argument_declaration_type ',' function_argument_list

  536 tuple_type: type_declaration
  537           | "name" ':' type_declaration

  538 tuple_type_list: tuple_type
  539                | tuple_type_list c_or_s tuple_type

  540 tuple_alias_type_list: %empty
  541                      | tuple_type
  542                      | tuple_alias_type_list semis tuple_type

  543 variant_type: "name" ':' type_declaration

  544 variant_type_list: variant_type
  545                  | variant_type_list c_or_s variant_type

  546 variant_alias_type_list: %empty
  547                        | variant_type
  548                        | variant_alias_type_list semis variant_type

  549 copy_or_move: '='
  550             | "<-"

  551 variable_declaration_no_type: variable_name_with_pos_list
  552                             | variable_name_with_pos_list '&'
  553                             | variable_name_with_pos_list copy_or_move expr

  554 variable_declaration_type: variable_name_with_pos_list ':' type_declaration
  555                          | variable_name_with_pos_list ':' type_declaration copy_or_move expr

  556 variable_declaration: variable_declaration_type
  557                     | variable_declaration_no_type

  558 copy_or_move_or_clone: '='
  559                      | "<-"
  560                      | ":="

  561 optional_ref: %empty
  562             | '&'

  563 let_variable_name_with_pos_list: "name"
  564                                | "$i" '(' expr ')'
  565                                | "name" "aka" "name"
  566                                | let_variable_name_with_pos_list ',' "name"
  567                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  568 global_let_variable_name_with_pos_list: "name"
  569                                       | global_let_variable_name_with_pos_list ',' "name"

  570 variable_declaration_list: %empty
  571                          | variable_declaration_list SEMICOLON
  572                          | variable_declaration_list let_variable_declaration

  573 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options SEMICOLON
  574                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  575                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr SEMICOLON

  576 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options SEMICOLON
  577                                | global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  578                                | global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr SEMICOLON

  579 optional_shared: %empty
  580                | "shared"

  581 optional_public_or_private_variable: %empty
  582                                    | "private"
  583                                    | "public"

  584 global_variable_declaration_list: %empty
  585                                 | global_variable_declaration_list SEMICOLON

  586 $@40: %empty

  587 global_variable_declaration_list: global_variable_declaration_list $@40 optional_field_annotation let_variable_declaration

  588 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'

  589 $@41: %empty

  590 global_let: kwd_let optional_shared optional_public_or_private_variable $@41 optional_field_annotation global_let_variable_declaration

  591 enum_expression: "name"
  592                | "name" '=' expr

  593 commas: COMMA
  594       | commas COMMA

  595 enum_list: %empty
  596          | enum_expression
  597          | enum_list commas enum_expression

  598 optional_public_or_private_alias: %empty
  599                                 | "private"
  600                                 | "public"

  601 $@42: %empty

  602 single_alias: optional_public_or_private_alias "name" $@42 '=' type_declaration

  603 alias_declaration: "typedef" single_alias SEMICOLON

  604 optional_public_or_private_enum: %empty
  605                                | "private"
  606                                | "public"

  607 enum_name: "name"

  608 optional_enum_basic_type_declaration: %empty
  609                                     | ':' enum_basic_type_declaration

  610 optional_commas: %empty
  611                | commas

  612 emit_commas: "new line, comma"
  613            | emit_commas "new line, comma"

  614 optional_emit_commas: %empty
  615                     | emit_commas

  616 $@43: %empty

  617 $@44: %empty

  618 $@45: %empty

  619 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@43 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@44 enum_list optional_commas $@45 '}'

  620 optional_structure_parent: %empty
  621                          | ':' name_in_namespace

  622 optional_sealed: %empty
  623                | "sealed"

  624 structure_name: optional_sealed "name" optional_structure_parent

  625 class_or_struct: "class"
  626                | "struct"
  627                | "template" "class"
  628                | "template" "struct"

  629 optional_public_or_private_structure: %empty
  630                                     | "private"
  631                                     | "public"

  632 optional_struct_variable_declaration_list: ';'
  633                                          | '{' struct_variable_declaration_list '}'

  634 $@46: %empty

  635 $@47: %empty

  636 $@48: %empty

  637 structure_declaration: optional_annotation_list_with_emit_semis $@46 class_or_struct optional_public_or_private_structure $@47 structure_name optional_emit_semis $@48 optional_struct_variable_declaration_list

  638 variable_name_with_pos_list: "name"
  639                            | "$i" '(' expr ')'
  640                            | "name" "aka" "name"
  641                            | variable_name_with_pos_list ',' "name"
  642                            | variable_name_with_pos_list ',' "name" "aka" "name"

  643 basic_type_declaration: "bool"
  644                       | "string"
  645                       | "int"
  646                       | "int8"
  647                       | "int16"
  648                       | "int64"
  649                       | "int2"
  650                       | "int3"
  651                       | "int4"
  652                       | "uint"
  653                       | "uint8"
  654                       | "uint16"
  655                       | "uint64"
  656                       | "uint2"
  657                       | "uint3"
  658                       | "uint4"
  659                       | "float"
  660                       | "float2"
  661                       | "float3"
  662                       | "float4"
  663                       | "void"
  664                       | "range"
  665                       | "urange"
  666                       | "range64"
  667                       | "urange64"
  668                       | "double"
  669                       | "bitfield"

  670 enum_basic_type_declaration: "int"
  671                            | "int8"
  672                            | "int16"
  673                            | "uint"
  674                            | "uint8"
  675                            | "uint16"
  676                            | "int64"
  677                            | "uint64"

  678 structure_type_declaration: name_in_namespace

  679 auto_type_declaration: "auto"
  680                      | "auto" '(' "name" ')'
  681                      | "$t" '(' expr ')'

  682 bitfield_bits: "name"
  683              | bitfield_bits ';' "name"

  684 bitfield_alias_bits: %empty
  685                    | "name"
  686                    | bitfield_alias_bits commas "name"

  687 $@49: %empty

  688 $@50: %empty

  689 bitfield_type_declaration: "bitfield" '<' $@49 bitfield_bits '>' $@50

  690 c_or_s: COMMA
  691       | SEMICOLON

  692 table_type_pair: type_declaration
  693                | type_declaration c_or_s type_declaration

  694 dim_list: '[' expr ']'
  695         | '[' ']'
  696         | dim_list '[' expr ']'
  697         | dim_list '[' ']'

  698 type_declaration_no_options: type_declaration_no_options_no_dim
  699                            | type_declaration_no_options_no_dim dim_list

  700 type_declaration_no_options_no_dim: basic_type_declaration
  701                                   | auto_type_declaration
  702                                   | bitfield_type_declaration
  703                                   | structure_type_declaration

  704 $@51: %empty

  705 $@52: %empty

  706 type_declaration_no_options_no_dim: "type" '<' $@51 type_declaration '>' $@52
  707                                   | "typedecl" '(' expr ')'
  708                                   | '$' name_in_namespace '(' optional_expr_list ')'

  709 $@53: %empty

  710 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@53 type_declaration_no_options_list '>' '(' optional_expr_list ')'
  711                                   | type_declaration_no_options '-' '[' ']'
  712                                   | type_declaration_no_options "explicit"
  713                                   | type_declaration_no_options "const"
  714                                   | type_declaration_no_options '-' "const"
  715                                   | type_declaration_no_options '&'
  716                                   | type_declaration_no_options '-' '&'
  717                                   | type_declaration_no_options '#'
  718                                   | type_declaration_no_options "implicit"
  719                                   | type_declaration_no_options '-' '#'
  720                                   | type_declaration_no_options "==" "const"
  721                                   | type_declaration_no_options "==" '&'
  722                                   | type_declaration_no_options '?'

  723 $@54: %empty

  724 $@55: %empty

  725 type_declaration_no_options_no_dim: "smart_ptr" '<' $@54 type_declaration '>' $@55
  726                                   | type_declaration_no_options "??"

  727 $@56: %empty

  728 $@57: %empty

  729 type_declaration_no_options_no_dim: "array" '<' $@56 type_declaration '>' $@57

  730 $@58: %empty

  731 $@59: %empty

  732 type_declaration_no_options_no_dim: "table" '<' $@58 table_type_pair '>' $@59

  733 $@60: %empty

  734 $@61: %empty

  735 type_declaration_no_options_no_dim: "iterator" '<' $@60 type_declaration '>' $@61
  736                                   | "block"

  737 $@62: %empty

  738 $@63: %empty

  739 type_declaration_no_options_no_dim: "block" '<' $@62 type_declaration '>' $@63

  740 $@64: %empty

  741 $@65: %empty

  742 type_declaration_no_options_no_dim: "block" '<' $@64 optional_function_argument_list optional_function_type '>' $@65
  743                                   | "function"

  744 $@66: %empty

  745 $@67: %empty

  746 type_declaration_no_options_no_dim: "function" '<' $@66 type_declaration '>' $@67

  747 $@68: %empty

  748 $@69: %empty

  749 type_declaration_no_options_no_dim: "function" '<' $@68 optional_function_argument_list optional_function_type '>' $@69
  750                                   | "lambda"

  751 $@70: %empty

  752 $@71: %empty

  753 type_declaration_no_options_no_dim: "lambda" '<' $@70 type_declaration '>' $@71

  754 $@72: %empty

  755 $@73: %empty

  756 type_declaration_no_options_no_dim: "lambda" '<' $@72 optional_function_argument_list optional_function_type '>' $@73

  757 $@74: %empty

  758 $@75: %empty

  759 type_declaration_no_options_no_dim: "tuple" '<' $@74 tuple_type_list '>' $@75

  760 $@76: %empty

  761 $@77: %empty

  762 type_declaration_no_options_no_dim: "variant" '<' $@76 variant_type_list '>' $@77

  763 type_declaration: type_declaration_no_options
  764                 | type_declaration '|' type_declaration_no_options
  765                 | type_declaration '|' '#'

  766 $@78: %empty

  767 $@79: %empty

  768 $@80: %empty

  769 $@81: %empty

  770 tuple_alias_declaration: "tuple" $@78 optional_public_or_private_alias "name" optional_emit_semis $@79 '{' $@80 tuple_alias_type_list optional_semis $@81 '}'

  771 $@82: %empty

  772 $@83: %empty

  773 $@84: %empty

  774 $@85: %empty

  775 variant_alias_declaration: "variant" $@82 optional_public_or_private_alias "name" optional_emit_semis $@83 '{' $@84 variant_alias_type_list optional_semis $@85 '}'

  776 $@86: %empty

  777 $@87: %empty

  778 $@88: %empty

  779 $@89: %empty

  780 bitfield_alias_declaration: "bitfield" $@86 optional_public_or_private_alias "name" optional_emit_commas $@87 '{' $@88 bitfield_alias_bits optional_commas $@89 '}'

  781 make_decl: make_struct_decl
  782          | make_dim_decl
  783          | make_table_decl
  784          | array_comprehension
  785          | make_tuple_call

  786 make_struct_fields: "name" copy_or_move expr
  787                   | "name" ":=" expr
  788                   | make_struct_fields ',' "name" copy_or_move expr
  789                   | make_struct_fields ',' "name" ":=" expr
  790                   | "$f" '(' expr ')' copy_or_move expr
  791                   | "$f" '(' expr ')' ":=" expr
  792                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  793                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  794 make_variant_dim: %empty
  795                 | make_struct_fields

  796 make_struct_single: make_struct_fields

  797 make_struct_dim_list: '(' make_struct_fields ')'
  798                     | make_struct_dim_list ',' '(' make_struct_fields ')'

  799 make_struct_dim_decl: make_struct_fields
  800                     | make_struct_dim_list optional_comma

  801 optional_make_struct_dim_decl: make_struct_dim_decl
  802                              | %empty

  803 use_initializer: %empty
  804                | "uninitialized"

  805 $@90: %empty

  806 $@91: %empty

  807 make_struct_decl: "struct" '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer optional_make_struct_dim_decl ')'

  808 $@92: %empty

  809 $@93: %empty

  810 make_struct_decl: "class" '<' $@92 type_declaration_no_options '>' $@93 '(' use_initializer optional_make_struct_dim_decl ')'

  811 $@94: %empty

  812 $@95: %empty

  813 make_struct_decl: "variant" '<' $@94 variant_type_list '>' $@95 '(' use_initializer make_variant_dim ')'

  814 $@96: %empty

  815 $@97: %empty

  816 make_struct_decl: "default" '<' $@96 type_declaration_no_options '>' $@97 use_initializer

  817 make_map_tuple: expr "=>" expr
  818               | expr

  819 make_tuple_call: "tuple" '(' expr_list optional_comma ')'

  820 $@98: %empty

  821 $@99: %empty

  822 make_tuple_call: "tuple" '<' $@98 tuple_type_list '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')'

  823 make_dim_decl: '[' optional_expr_list ']'

  824 $@100: %empty

  825 $@101: %empty

  826 make_dim_decl: "array" "struct" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')'

  827 $@102: %empty

  828 $@103: %empty

  829 make_dim_decl: "array" "tuple" '<' $@102 tuple_type_list '>' $@103 '(' use_initializer optional_make_struct_dim_decl ')'

  830 $@104: %empty

  831 $@105: %empty

  832 make_dim_decl: "array" "variant" '<' $@104 variant_type_list '>' $@105 '(' make_variant_dim ')'
  833              | "array" '(' expr_list optional_comma ')'

  834 $@106: %empty

  835 $@107: %empty

  836 make_dim_decl: "array" '<' $@106 type_declaration_no_options '>' $@107 '(' optional_expr_list ')'
  837              | "fixed_array" '(' expr_list optional_comma ')'

  838 $@108: %empty

  839 $@109: %empty

  840 make_dim_decl: "fixed_array" '<' $@108 type_declaration_no_options '>' $@109 '(' expr_list optional_comma ')'

  841 expr_map_tuple_list: make_map_tuple
  842                    | expr_map_tuple_list ',' make_map_tuple

  843 $@110: %empty

  844 make_table_decl: '{' $@110 optional_emit_semis optional_expr_map_tuple_list '}'
  845                | "table" '(' expr_map_tuple_list optional_comma ')'
  846                | "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  847                | "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

  848 array_comprehension_where: %empty
  849                          | ';' "where" expr

  850 optional_comma: %empty
  851               | ','

  852 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  853                    | '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  854                    | '{' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 132 150 415
    '#' (35) 717 719 765
    '$' (36) 24 334 708 710
    '%' (37) 45 49 170 427
    '&' (38) 178 337 434 552 562 715 716 721
    '(' (40) 72 92 93 95 98 100 120 130 136 145 146 287 288 289 290 309 310 326 327 328 341 345 375 376 377 378 380 390 391 392 393 394 398 399 400 401 402 403 404 445 446 456 457 487 488 489 491 492 493 494 495 497 498 499 500 501 502 503 504 505 506 530 564 639 680 681 707 708 710 790 791 792 793 797 798 807 810 813 819 822 826 829 832 833 836 837 840 845 846 847 852 853 854
    ')' (41) 72 92 93 95 98 100 120 130 136 145 146 287 288 289 290 309 310 326 327 328 341 345 375 376 377 378 380 390 391 392 393 394 398 399 400 401 402 403 404 445 446 456 457 487 488 489 491 492 493 494 495 497 498 499 500 501 502 503 504 505 506 530 564 639 680 681 707 708 710 790 791 792 793 797 798 807 810 813 819 822 826 829 832 833 836 837 840 845 846 847 852 853 854
    '*' (42) 168 425 455
    '+' (43) 166 417 423
    ',' (44) 16 58 109 122 139 308 330 343 376 535 566 567 569 641 642 788 789 792 793 798 842 851
    '-' (45) 167 418 424 711 714 716 719
    '.' (46) 50 195 197 198 388 389 390 391 392 393 394 397 448 450 452 499 501 502
    '/' (47) 51 169 426
    ':' (58) 37 60 61 148 309 460 537 543 554 555 573 574 576 577 609 621
    ';' (59) 18 533 534 632 683 849 852 853 854
    '<' (60) 171 284 316 319 322 325 327 328 384 387 428 463 469 474 488 489 490 689 706 710 725 729 732 735 739 742 746 749 753 756 759 762 807 810 813 816 822 826 829 832 836 840 846 847
    '=' (61) 101 113 114 115 116 117 118 120 338 357 549 558 592 602
    '>' (62) 172 284 316 319 322 325 327 328 384 387 429 463 469 474 488 489 490 689 706 710 725 729 732 735 739 742 746 749 753 756 759 762 807 810 813 816 822 826 829 832 836 840 846 847
    '?' (63) 207 208 460 471 474 475 504 722
    '@' (64) 123 124 335 336 381 384 387 506
    '[' (91) 141 143 193 375 376 392 447 448 694 695 696 697 711 823 852 853
    ']' (93) 141 143 193 194 375 376 392 447 448 449 450 694 695 696 697 711 823 852 853
    '^' (94) 180 436
    '{' (123) 88 244 247 313 348 588 619 633 770 775 780 844 854
    '|' (124) 179 435 764 765
    '}' (125) 88 244 247 313 348 588 619 633 770 775 780 844 854
    '~' (126) 151 416
    error (256) 270 397
    "lexer error" (258)
    "capture" (259) 345
    "struct" (260) 626 628 807 826
    "class" (261) 625 627 810
    "let" (262) 300 303
    "def" (263) 234 525 527
    "while" (264) 98
    "if" (265) 73 93
    "static_if" (266) 74
    "else" (267) 71 76
    "for" (268) 95 852 853 854
    "recover" (269) 299
    "true" (270) 106 117 411
    "false" (271) 107 118 412
    "new" (272) 286 287 288 289 290 291
    "typeinfo" (273) 326 327 328
    "type" (274) 111 325 463 469 474 706
    "in" (275) 95 112 852 853 854
    "is" (276) 203 205 463 464 465 505
    "as" (277) 53 204 206 207 208 466 469 470 471 474 475 503 504
    "elif" (278) 64
    "static_elif" (279) 65
    "array" (280) 729 826 829 832 833 836
    "return" (281) 294 295 296
    "null" (282) 405
    "break" (283) 292
    "try" (284) 299
    "options" (285) 46
    "table" (286) 732 845 846 847
    "expect" (287) 56
    "const" (288) 513 713 714 720
    "require" (289) 47 126
    "operator" (290) 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208
    "enum" (291) 619
    "finally" (292) 244
    "delete" (293) 201 280 281
    "deref" (294) 456
    "typedef" (295) 603
    "typedecl" (296) 707
    "with" (297) 100
    "aka" (298) 565 567 640 642
    "assume" (299) 101
    "cast" (300) 316
    "override" (301) 510
    "abstract" (302) 525
    "upcast" (303) 319
    "iterator" (304) 735 853
    "var" (305) 301 304
    "addr" (306) 457
    "continue" (307) 293
    "where" (308) 849
    "pass" (309) 267
    "reinterpret" (310) 322
    "module" (311) 26
    "public" (312) 22 55 237 515 583 600 606 631
    "label" (313) 61 62
    "goto" (314) 62 63
    "implicit" (315) 718
    "explicit" (316) 281 712
    "shared" (317) 580
    "private" (318) 23 127 236 516 582 599 605 630
    "smart_ptr" (319) 725
    "unsafe" (320) 96 487
    "inscope" (321) 305
    "static" (322) 518
    "fixed_array" (323) 837 840
    "default" (324) 816
    "uninitialized" (325) 290 399 401 804
    "bool" (326) 209 643
    "void" (327) 663
    "string" (328) 210 644
    "auto" (329) 679 680
    "int" (330) 211 645 670
    "int2" (331) 212 649
    "int3" (332) 213 650
    "int4" (333) 214 651
    "uint" (334) 215 652 673
    "bitfield" (335) 669 689 780
    "uint2" (336) 216 656
    "uint3" (337) 217 657
    "uint4" (338) 218 658
    "float" (339) 219 659
    "float2" (340) 220 660
    "float3" (341) 221 661
    "float4" (342) 222 662
    "range" (343) 223 664
    "urange" (344) 224 665
    "range64" (345) 225 666
    "urange64" (346) 226 667
    "block" (347) 736 739 742
    "int64" (348) 227 648 676
    "uint64" (349) 228 655 677
    "double" (350) 229 668
    "function" (351) 743 746 749
    "lambda" (352) 750 753 756
    "int8" (353) 230 646 671
    "uint8" (354) 231 653 674
    "int16" (355) 232 647 672
    "uint16" (356) 233 654 675
    "tuple" (357) 759 770 819 822 829
    "variant" (358) 762 775 813 832
    "generator" (359) 488 489 490
    "yield" (360) 297 298
    "sealed" (361) 511 623
    "template" (362) 128 627 628
    "+=" (363) 152 366
    "-=" (364) 153 367
    "/=" (365) 155 369
    "*=" (366) 154 368
    "%=" (367) 156 370
    "&=" (368) 157 360
    "|=" (369) 158 361
    "^=" (370) 159 362
    "<<" (371) 185 419
    ">>" (372) 186 420
    "++" (373) 181 183 441 443
    "--" (374) 182 184 442 444
    "<=" (375) 176 432
    "<<=" (376) 187 371
    ">>=" (377) 188 372
    ">=" (378) 177 433
    "==" (379) 174 430 720 721
    "!=" (380) 175 431
    "->" (381) 377 378
    "<-" (382) 296 298 333 339 358 550 559
    "??" (383) 202 459 726
    "?." (384) 196 199 451 452 500 502
    "?[" (385) 194 449 450
    "<|" (386) 483
    "|>" (387) 137 484 485
    ":=" (388) 198 200 340 359 560 787 789 791 793
    "<<<" (389) 189 421
    ">>>" (390) 190 422
    "<<<=" (391) 191 373
    ">>>=" (392) 192 374
    "=>" (393) 332 333 817
    "::" (394) 278 279
    "&&" (395) 133 163 437
    "||" (396) 134 164 438
    "^^" (397) 135 165 439
    "&&=" (398) 160 363
    "||=" (399) 161 364
    "^^=" (400) 162 365
    ".." (401) 173 440
    "$$" (402) 491
    "$i" (403) 380 492 564 639
    "$v" (404) 493
    "$b" (405) 494
    "$a" (406) 495 530
    "$t" (407) 681
    "$c" (408) 497 498 506
    "$f" (409) 499 500 501 502 503 504 505 790 791 792 793
    "..." (410) 496
    "integer constant" <i> (411) 59 60 61 62 104 115 349
    "long integer constant" <i64> (412) 351
    "unsigned integer constant" <ui> (413) 350
    "unsigned long integer constant" <ui64> (414) 352
    "unsigned int8 constant" <ui> (415) 353
    "floating point constant" <fd> (416) 105 116 354
    "double constant" <d> (417) 355
    "name" <s> (418) 25 48 50 51 53 101 103 110 114 149 197 198 199 205 206 208 277 278 279 307 308 327 328 337 338 339 340 341 377 378 388 389 390 391 392 451 452 465 466 471 537 543 563 565 566 567 568 569 591 592 602 607 624 638 640 641 642 680 682 683 685 686 770 775 780 786 787 788 789
    "new line, comma" (419) 17 612 613
    "new line, semicolon" (420) 19 66 67 521
    "start of the string" (421) 31 32 41
    STRING_CHARACTER <ch> (422) 27 29 34 42 43
    STRING_CHARACTER_ESC (423) 28 30
    "end of the string" (424) 31 32 41
    "{" (425) 40
    "}" (426) 40
    "end of failed eader macro" (427)
    UNARY_MINUS (428)
    UNARY_PLUS (429)
    PRE_INC (430)
    PRE_DEC (431)
    LLPIPE (432)
    POST_INC (433)
    POST_DEC (434)
    DEREF (435)


Nonterminals, with rules where they appear

    $accept (208)
        on left: 0
    program (209)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    COMMA (210)
        on left: 16 17
        on right: 593 594 690
    SEMICOLON (211)
        on left: 18 19
        on right: 8 9 15 20 82 83 90 93 249 250 251 256 258 259 260 261 265 266 267 309 310 523 525 571 573 574 575 576 577 578 585 603 691
    top_level_reader_macro (212)
        on left: 20
        on right: 14
    optional_public_or_private_module <b> (213)
        on left: 21 22 23
        on right: 26
    module_name <s> (214)
        on left: 24 25
        on right: 26
    module_declaration (215)
        on left: 26
        on right: 2
    character_sequence <s> (216)
        on left: 27 28 29 30
        on right: 29 30 31 39
    string_constant <s> (217)
        on left: 31 32
        on right: 102 113
    format_string <s> (218)
        on left: 33 34
        on right: 34 37
    optional_format_string <s> (219)
        on left: 35 37
        on right: 40
    $@1 (220)
        on left: 36
        on right: 37
    string_builder_body <pExpression> (221)
        on left: 38 39 40
        on right: 39 40 41
    string_builder <pExpression> (222)
        on left: 41
        on right: 409
    reader_character_sequence (223)
        on left: 42 43
        on right: 43 45
    expr_reader <pExpression> (224)
        on left: 45
        on right: 20 408
    $@2 (225)
        on left: 44
        on right: 45
    options_declaration (226)
        on left: 46
        on right: 9
    require_declaration (227)
        on left: 47
        on right: 8
    require_module_name <s> (228)
        on left: 48 49 50 51
        on right: 49 50 51 52 53
    require_module (229)
        on left: 52 53
        on right: 47
    is_public_module <b> (230)
        on left: 54 55
        on right: 52 53
    expect_declaration (231)
        on left: 56
        on right: 7
    expect_list (232)
        on left: 57 58
        on right: 56 58
    expect_error (233)
        on left: 59 60
        on right: 57 58
    expression_label <pExpression> (234)
        on left: 61
        on right: 265
    expression_goto <pExpression> (235)
        on left: 62 63
        on right: 266
    elif_or_static_elif <b> (236)
        on left: 64 65
        on right: 72
    emit_semis (237)
        on left: 66 67
        on right: 67 69
    optional_emit_semis (238)
        on left: 68 69
        on right: 71 72 92 95 96 98 100 123 124 143 240 346 347 490 527 637 770 775 844
    expression_else <pExpression> (239)
        on left: 70 71 72
        on right: 72 92
    if_or_static_if <b> (240)
        on left: 73 74
        on right: 92
    expression_else_one_liner <pExpression> (241)
        on left: 75 76
        on right: 93
    expression_if_one_liner <pExpression> (242)
        on left: 77 78 79 80 81
        on right: 76 90 93
    semis (243)
        on left: 82 83
        on right: 83 85 542 548
    optional_semis (244)
        on left: 84 85
        on right: 770 775
    expression_if_block <pExpression> (245)
        on left: 88 90
        on right: 92
    $@3 (246)
        on left: 86
        on right: 88
    $@4 (247)
        on left: 87
        on right: 88
    $@5 (248)
        on left: 89
        on right: 90
    expression_if_then_else <pExpression> (249)
        on left: 92
        on right: 262
    $@6 (250)
        on left: 91
        on right: 92
    expression_if_then_else_oneliner <pExpression> (251)
        on left: 93
        on right: 263
    expression_for_loop <pExpression> (252)
        on left: 95
        on right: 257
    $@7 (253)
        on left: 94
        on right: 95
    expression_unsafe <pExpression> (254)
        on left: 96
        on right: 254
    expression_while_loop <pExpression> (255)
        on left: 98
        on right: 253
    $@8 (256)
        on left: 97
        on right: 98
    expression_with <pExpression> (257)
        on left: 100
        on right: 255
    $@9 (258)
        on left: 99
        on right: 100
    expression_with_alias <pExpression> (259)
        on left: 101
        on right: 256
    annotation_argument_value <aa> (260)
        on left: 102 103 104 105 106 107
        on right: 108 109
    annotation_argument_value_list <aaList> (261)
        on left: 108 109
        on right: 109 120
    annotation_argument_name <s> (262)
        on left: 110 111 112
        on right: 113 114 115 116 117 118 119 120
    annotation_argument <aa> (263)
        on left: 113 114 115 116 117 118 119 120
        on right: 121 122 123 124
    annotation_argument_list <aaList> (264)
        on left: 121 122
        on right: 46 122 130
    metadata_argument_list <aaList> (265)
        on left: 123 124
        on right: 124 508
    annotation_declaration_name <s> (266)
        on left: 125 126 127 128
        on right: 129 130
    annotation_declaration_basic <fa> (267)
        on left: 129 130
        on right: 131
    annotation_declaration <fa> (268)
        on left: 131 132 133 134 135 136 137
        on right: 132 133 134 135 136 137 138 139
    annotation_list <faList> (269)
        on left: 138 139
        on right: 139 141 143
    optional_annotation_list <faList> (270)
        on left: 140 141
        on right: 346 347
    optional_annotation_list_with_emit_semis <faList> (271)
        on left: 142 143
        on right: 234 525 527 619 637
    optional_function_argument_list <pVarDeclList> (272)
        on left: 144 145 146
        on right: 238 346 347 387 742 749 756
    optional_function_type <pTypeDecl> (273)
        on left: 147 148
        on right: 238 346 347 387 742 749 756
    function_name <s> (274)
        on left: 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233
        on right: 238
    global_function_declaration (275)
        on left: 234
        on right: 6
    optional_public_or_private_function <b> (276)
        on left: 235 236 237
        on right: 240
    function_declaration_header <pFuncDecl> (277)
        on left: 238
        on right: 240 525 527
    function_declaration <pFuncDecl> (278)
        on left: 240
        on right: 234
    $@10 (279)
        on left: 239
        on right: 240
    expression_block_finally <pExpression> (280)
        on left: 241 244
        on right: 88 247
    $@11 (281)
        on left: 242
        on right: 244
    $@12 (282)
        on left: 243
        on right: 244
    expression_block <pExpression> (283)
        on left: 247
        on right: 71 72 95 96 98 100 240 299 331 347 490 527
    $@13 (284)
        on left: 245
        on right: 247
    $@14 (285)
        on left: 246
        on right: 247
    expr_call_pipe <pExpression> (286)
        on left: 248
        on right: 486
    expression_any <pExpression> (287)
        on left: 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267
        on right: 269
    expressions <pExpression> (288)
        on left: 268 269 270
        on right: 88 244 247 269 270 348
    optional_expr_list <pExpression> (289)
        on left: 271 272
        on right: 708 710 823 836
    optional_expr_map_tuple_list <pExpression> (290)
        on left: 273 274
        on right: 844 846 847
    type_declaration_no_options_list <pTypeDeclList> (291)
        on left: 275 276
        on right: 276 710
    name_in_namespace <s> (292)
        on left: 277 278 279
        on right: 45 125 326 327 328 375 376 379 398 399 400 401 402 406 621 678 708 710
    expression_delete <pExpression> (293)
        on left: 280 281
        on right: 251
    new_type_declaration <pTypeDecl> (294)
        on left: 284 285
        on right: 286 287 288 289 290
    $@15 (295)
        on left: 282
        on right: 284
    $@16 (296)
        on left: 283
        on right: 284
    expr_new <pExpression> (297)
        on left: 286 287 288 289 290 291
        on right: 479
    expression_break <pExpression> (298)
        on left: 292
        on right: 80 258
    expression_continue <pExpression> (299)
        on left: 293
        on right: 81 259
    expression_return <pExpression> (300)
        on left: 294 295 296
        on right: 78 260
    expression_yield <pExpression> (301)
        on left: 297 298
        on right: 79 261
    expression_try_catch <pExpression> (302)
        on left: 299
        on right: 264
    kwd_let_var_or_nothing <b> (303)
        on left: 300 301 302
        on right: 528 529
    kwd_let <b> (304)
        on left: 303 304
        on right: 311 312 313 588 590
    optional_in_scope <b> (305)
        on left: 305 306
        on right: 311 312 313
    tuple_expansion <pNameList> (306)
        on left: 307 308
        on right: 308 309 310
    tuple_expansion_variable_declaration <pVarDecl> (307)
        on left: 309 310
        on right: 312
    expression_let <pExpression> (308)
        on left: 311 312 313
        on right: 252
    expr_cast <pExpression> (309)
        on left: 316 319 322
        on right: 478
    $@17 (310)
        on left: 314
        on right: 316
    $@18 (311)
        on left: 315
        on right: 316
    $@19 (312)
        on left: 317
        on right: 319
    $@20 (313)
        on left: 318
        on right: 319
    $@21 (314)
        on left: 320
        on right: 322
    $@22 (315)
        on left: 321
        on right: 322
    expr_type_decl <pExpression> (316)
        on left: 325
        on right: 477
    $@23 (317)
        on left: 323
        on right: 325
    $@24 (318)
        on left: 324
        on right: 325
    expr_type_info <pExpression> (319)
        on left: 326 327 328
        on right: 476
    expr_list <pExpression> (320)
        on left: 329 330
        on right: 95 272 288 330 376 378 391 394 402 404 445 498 819 833 837 840 852 853 854
    block_or_simple_block <pExpression> (321)
        on left: 331 332 333
        on right: 346
    block_or_lambda <i> (322)
        on left: 334 335 336
        on right: 346 347
    capture_entry <pCapt> (323)
        on left: 337 338 339 340 341
        on right: 342 343
    capture_list <pCaptList> (324)
        on left: 342 343
        on right: 343 345
    optional_capture_list <pCaptList> (325)
        on left: 344 345
        on right: 346 347 488 489 490
    expr_full_block <pExpression> (326)
        on left: 346
        on right: 482
    expr_full_block_assumed_piped <pExpression> (327)
        on left: 347 348
        on right: 248
    expr_numeric_const <pExpression> (328)
        on left: 349 350 351 352 353 354 355
        on right: 407
    expr_assign <pExpression> (329)
        on left: 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374
        on right: 250
    expr_named_call <pExpression> (330)
        on left: 375 376
        on right: 481
    expr_method_call <pExpression> (331)
        on left: 377 378
        on right: 480
    func_addr_name <pExpression> (332)
        on left: 379 380
        on right: 381 384 387
    func_addr_expr <pExpression> (333)
        on left: 381 384 387
        on right: 453
    $@25 (334)
        on left: 382
        on right: 384
    $@26 (335)
        on left: 383
        on right: 384
    $@27 (336)
        on left: 385
        on right: 387
    $@28 (337)
        on left: 386
        on right: 387
    expr_field <pExpression> (338)
        on left: 388 389 390 391 392 393 394 397
        on right: 413
    $@29 (339)
        on left: 395
        on right: 397
    $@30 (340)
        on left: 396
        on right: 397
    expr_call <pExpression> (341)
        on left: 398 399 400 401 402 403 404
        on right: 248 454
    expr <pExpression> (342)
        on left: 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 463 464 465 466 469 470 471 474 475 476 477 478 479 480 481 482 483 484 485 486 487
        on right
    $@31 (343)
        on left: 461
        on right: 463
    $@32 (344)
        on left: 462
        on right: 463
    $@33 (345)
        on left: 467
        on right: 469
    $@34 (346)
        on left: 468
        on right: 469
    $@35 (347)
        on left: 472
        on right: 474
    $@36 (348)
        on left: 473
        on right: 474
    expr_generator <pExpression> (349)
        on left: 488 489 490
        on right: 458
    expr_mtag <pExpression> (350)
        on left: 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506
        on right: 414
    optional_field_annotation <aaList> (351)
        on left: 507 508
        on right: 519 528 529 587 590
    optional_override <i> (352)
        on left: 509 510 511
        on right: 519 527
    optional_constant <b> (353)
        on left: 512 513
        on right: 525 527
    optional_public_or_private_member_variable <b> (354)
        on left: 514 515 516
        on right: 519 525 527
    optional_static_member_variable <b> (355)
        on left: 517 518
        on right: 519 527
    structure_variable_declaration <pVarDecl> (356)
        on left: 519
        on right: 523
    struct_variable_declaration_list <pVarDeclList> (357)
        on left: 520 521 523 525 527
        on right: 521 523 525 527 633
    $@37 (358)
        on left: 522
        on right: 523
    $@38 (359)
        on left: 524
        on right: 525
    $@39 (360)
        on left: 526
        on right: 527
    function_argument_declaration_no_type <pVarDecl> (361)
        on left: 528
        on right: 531 533
    function_argument_declaration_type <pVarDecl> (362)
        on left: 529 530
        on right: 532 534 535
    function_argument_list <pVarDeclList> (363)
        on left: 531 532 533 534 535
        on right: 146 533 534 535
    tuple_type <pVarDecl> (364)
        on left: 536 537
        on right: 538 539 541 542
    tuple_type_list <pVarDeclList> (365)
        on left: 538 539
        on right: 539 759 822 829
    tuple_alias_type_list <pVarDeclList> (366)
        on left: 540 541 542
        on right: 542 770
    variant_type <pVarDecl> (367)
        on left: 543
        on right: 544 545 547 548
    variant_type_list <pVarDeclList> (368)
        on left: 544 545
        on right: 545 762 813 832
    variant_alias_type_list <pVarDeclList> (369)
        on left: 546 547 548
        on right: 548 775
    copy_or_move <b> (370)
        on left: 549 550
        on right: 553 555 786 788 790 792
    variable_declaration_no_type <pVarDecl> (371)
        on left: 551 552 553
        on right: 528 557
    variable_declaration_type <pVarDecl> (372)
        on left: 554 555
        on right: 529 556
    variable_declaration <pVarDecl> (373)
        on left: 556 557
        on right: 519
    copy_or_move_or_clone <i> (374)
        on left: 558 559 560
        on right: 309 310 574 575 577 578
    optional_ref <b> (375)
        on left: 561 562
        on right: 310 575 578
    let_variable_name_with_pos_list <pNameWithPosList> (376)
        on left: 563 564 565 566 567
        on right: 566 567 573 574 575
    global_let_variable_name_with_pos_list <pNameWithPosList> (377)
        on left: 568 569
        on right: 569 576 577 578
    variable_declaration_list <pVarDeclList> (378)
        on left: 570 571 572
        on right: 313 571 572
    let_variable_declaration <pVarDecl> (379)
        on left: 573 574 575
        on right: 311 572 587
    global_let_variable_declaration <pVarDecl> (380)
        on left: 576 577 578
        on right: 590
    optional_shared <b> (381)
        on left: 579 580
        on right: 26 588 590
    optional_public_or_private_variable <b> (382)
        on left: 581 582 583
        on right: 588 590
    global_variable_declaration_list <pVarDeclList> (383)
        on left: 584 585 587
        on right: 585 587 588
    $@40 (384)
        on left: 586
        on right: 587
    global_let (385)
        on left: 588 590
        on right: 5
    $@41 (386)
        on left: 589
        on right: 590
    enum_expression <pEnumPair> (387)
        on left: 591 592
        on right: 596 597
    commas (388)
        on left: 593 594
        on right: 594 597 611 686
    enum_list <pEnum> (389)
        on left: 595 596 597
        on right: 597 619
    optional_public_or_private_alias <b> (390)
        on left: 598 599 600
        on right: 602 770 775 780
    single_alias (391)
        on left: 602
        on right: 603
    $@42 (392)
        on left: 601
        on right: 602
    alias_declaration (393)
        on left: 603
        on right: 10
    optional_public_or_private_enum <b> (394)
        on left: 604 605 606
        on right: 619
    enum_name <pEnum> (395)
        on left: 607
        on right: 619
    optional_enum_basic_type_declaration <type> (396)
        on left: 608 609
        on right: 619
    optional_commas (397)
        on left: 610 611
        on right: 619 780
    emit_commas (398)
        on left: 612 613
        on right: 613 615
    optional_emit_commas (399)
        on left: 614 615
        on right: 619 780
    enum_declaration (400)
        on left: 619
        on right: 4
    $@43 (401)
        on left: 616
        on right: 619
    $@44 (402)
        on left: 617
        on right: 619
    $@45 (403)
        on left: 618
        on right: 619
    optional_structure_parent <s> (404)
        on left: 620 621
        on right: 624
    optional_sealed <b> (405)
        on left: 622 623
        on right: 624
    structure_name <pStructure> (406)
        on left: 624
        on right: 637
    class_or_struct <i> (407)
        on left: 625 626 627 628
        on right: 637
    optional_public_or_private_structure <b> (408)
        on left: 629 630 631
        on right: 637
    optional_struct_variable_declaration_list <pVarDeclList> (409)
        on left: 632 633
        on right: 637
    structure_declaration (410)
        on left: 637
        on right: 3
    $@46 (411)
        on left: 634
        on right: 637
    $@47 (412)
        on left: 635
        on right: 637
    $@48 (413)
        on left: 636
        on right: 637
    variable_name_with_pos_list <pNameWithPosList> (414)
        on left: 638 639 640 641 642
        on right: 95 551 552 553 554 555 641 642 852 853 854
    basic_type_declaration <type> (415)
        on left: 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669
        on right: 393 394 403 404 464 470 475 485 700
    enum_basic_type_declaration <type> (416)
        on left: 670 671 672 673 674 675 676 677
        on right: 609
    structure_type_declaration <pTypeDecl> (417)
        on left: 678
        on right: 285 703
    auto_type_declaration <pTypeDecl> (418)
        on left: 679 680 681
        on right: 701
    bitfield_bits <pNameList> (419)
        on left: 682 683
        on right: 683 689
    bitfield_alias_bits <pNameList> (420)
        on left: 684 685 686
        on right: 686 780
    bitfield_type_declaration <pTypeDecl> (421)
        on left: 689
        on right: 702
    $@49 (422)
        on left: 687
        on right: 689
    $@50 (423)
        on left: 688
        on right: 689
    c_or_s (424)
        on left: 690 691
        on right: 276 328 539 545 693 847
    table_type_pair <aTypePair> (425)
        on left: 692 693
        on right: 732
    dim_list <pTypeDecl> (426)
        on left: 694 695 696 697
        on right: 696 697 699
    type_declaration_no_options <pTypeDecl> (427)
        on left: 698 699
        on right: 309 316 319 322 384 463 488 489 490 573 574 576 577 711 712 713 714 715 716 717 718 719 720 721 722 726 763 764 807 810 816 826 836 840 846 847
    type_declaration_no_options_no_dim <pTypeDecl> (428)
        on left: 700 701 702 703 706 707 708 710 711 712 713 714 715 716 717 718 719 720 721 722 725 726 729 732 735 736 739 742 743 746 749 750 753 756 759 762
        on right: 698 699
    $@51 (429)
        on left: 704
        on right: 706
    $@52 (430)
        on left: 705
        on right: 706
    $@53 (431)
        on left: 709
        on right: 710
    $@54 (432)
        on left: 723
        on right: 725
    $@55 (433)
        on left: 724
        on right: 725
    $@56 (434)
        on left: 727
        on right: 729
    $@57 (435)
        on left: 728
        on right: 729
    $@58 (436)
        on left: 730
        on right: 732
    $@59 (437)
        on left: 731
        on right: 732
    $@60 (438)
        on left: 733
        on right: 735
    $@61 (439)
        on left: 734
        on right: 735
    $@62 (440)
        on left: 737
        on right: 739
    $@63 (441)
        on left: 738
        on right: 739
    $@64 (442)
        on left: 740
        on right: 742
    $@65 (443)
        on left: 741
        on right: 742
    $@66 (444)
        on left: 744
        on right: 746
    $@67 (445)
        on left: 745
        on right: 746
    $@68 (446)
        on left: 747
        on right: 749
    $@69 (447)
        on left: 748
        on right: 749
    $@70 (448)
        on left: 751
        on right: 753
    $@71 (449)
        on left: 752
        on right: 753
    $@72 (450)
        on left: 754
        on right: 756
    $@73 (451)
        on left: 755
        on right: 756
    $@74 (452)
        on left: 757
        on right: 759
    $@75 (453)
        on left: 758
        on right: 759
    $@76 (454)
        on left: 760
        on right: 762
    $@77 (455)
        on left: 761
        on right: 762
    type_declaration <pTypeDecl> (456)
        on left: 763 764 765
        on right: 148 275 276 284 325 469 474 536 537 543 554 555 602 692 693 706 725 729 735 739 746 753 764 765
    tuple_alias_declaration (457)
        on left: 770
        on right: 12
    $@78 (458)
        on left: 766
        on right: 770
    $@79 (459)
        on left: 767
        on right: 770
    $@80 (460)
        on left: 768
        on right: 770
    $@81 (461)
        on left: 769
        on right: 770
    variant_alias_declaration (462)
        on left: 775
        on right: 11
    $@82 (463)
        on left: 771
        on right: 775
    $@83 (464)
        on left: 772
        on right: 775
    $@84 (465)
        on left: 773
        on right: 775
    $@85 (466)
        on left: 774
        on right: 775
    bitfield_alias_declaration (467)
        on left: 780
        on right: 13
    $@86 (468)
        on left: 776
        on right: 780
    $@87 (469)
        on left: 777
        on right: 780
    $@88 (470)
        on left: 778
        on right: 780
    $@89 (471)
        on left: 779
        on right: 780
    make_decl <pExpression> (472)
        on left: 781 782 783 784 785
        on right: 291 410
    make_struct_fields <pMakeStruct> (473)
        on left: 786 787 788 789 790 791 792 793
        on right: 375 376 392 788 789 792 793 795 796 797 798 799
    make_variant_dim <pExpression> (474)
        on left: 794 795
        on right: 813 832
    make_struct_single <pExpression> (475)
        on left: 796
        on right: 289 290 400 401 446
    make_struct_dim_list <pExpression> (476)
        on left: 797 798
        on right: 798 800
    make_struct_dim_decl <pExpression> (477)
        on left: 799 800
        on right: 801
    optional_make_struct_dim_decl <pExpression> (478)
        on left: 801 802
        on right: 807 810 822 826 829
    use_initializer <b> (479)
        on left: 803 804
        on right: 287 807 810 813 816 822 826 829
    make_struct_decl <pExpression> (480)
        on left: 807 810 813 816
        on right: 781
    $@90 (481)
        on left: 805
        on right: 807
    $@91 (482)
        on left: 806
        on right: 807
    $@92 (483)
        on left: 808
        on right: 810
    $@93 (484)
        on left: 809
        on right: 810
    $@94 (485)
        on left: 811
        on right: 813
    $@95 (486)
        on left: 812
        on right: 813
    $@96 (487)
        on left: 814
        on right: 816
    $@97 (488)
        on left: 815
        on right: 816
    make_map_tuple <pExpression> (489)
        on left: 817 818
        on right: 841 842 854
    make_tuple_call <pExpression> (490)
        on left: 819 822
        on right: 785
    $@98 (491)
        on left: 820
        on right: 822
    $@99 (492)
        on left: 821
        on right: 822
    make_dim_decl <pExpression> (493)
        on left: 823 826 829 832 833 836 837 840
        on right: 782
    $@100 (494)
        on left: 824
        on right: 826
    $@101 (495)
        on left: 825
        on right: 826
    $@102 (496)
        on left: 827
        on right: 829
    $@103 (497)
        on left: 828
        on right: 829
    $@104 (498)
        on left: 830
        on right: 832
    $@105 (499)
        on left: 831
        on right: 832
    $@106 (500)
        on left: 834
        on right: 836
    $@107 (501)
        on left: 835
        on right: 836
    $@108 (502)
        on left: 838
        on right: 840
    $@109 (503)
        on left: 839
        on right: 840
    expr_map_tuple_list <pExpression> (504)
        on left: 841 842
        on right: 274 842 845
    make_table_decl <pExpression> (505)
        on left: 844 845 846 847
        on right: 783
    $@110 (506)
        on left: 843
        on right: 844
    array_comprehension_where <pExpression> (507)
        on left: 848 849
        on right: 852 853 854
    optional_comma <b> (508)
        on left: 850 851
        on right: 272 274 445 800 819 833 837 840 845
    array_comprehension <pExpression> (509)
        on left: 852 853 854
        on right: 784


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration SEMICOLON
    9        | program . options_declaration SEMICOLON
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . tuple_alias_declaration
   13        | program . bitfield_alias_declaration
   14        | program . top_level_reader_macro
   15        | program . SEMICOLON

    $end                   shift, and go to state 2
    "let"                  shift, and go to state 3
    "options"              shift, and go to state 4
    "expect"               shift, and go to state 5
    "require"              shift, and go to state 6
    "typedef"              shift, and go to state 7
    "var"                  shift, and go to state 8
    "module"               shift, and go to state 9
    "bitfield"             shift, and go to state 10
    "tuple"                shift, and go to state 11
    "variant"              shift, and go to state 12
    "new line, semicolon"  shift, and go to state 13
    '%'                    shift, and go to state 14
    '['                    shift, and go to state 15
    ';'                    shift, and go to state 16

    $default  reduce using rule 142 (optional_annotation_list_with_emit_semis)

    SEMICOLON                                 go to state 17
    top_level_reader_macro                    go to state 18
    module_declaration                        go to state 19
    expr_reader                               go to state 20
    options_declaration                       go to state 21
    require_declaration                       go to state 22
    expect_declaration                        go to state 23
    optional_annotation_list_with_emit_semis  go to state 24
    global_function_declaration               go to state 25
    kwd_let                                   go to state 26
    global_let                                go to state 27
    alias_declaration                         go to state 28
    enum_declaration                          go to state 29
    structure_declaration                     go to state 30
    tuple_alias_declaration                   go to state 31
    variant_alias_declaration                 go to state 32
    bitfield_alias_declaration                go to state 33


State 2

    0 $accept: program $end .

    $default  accept


State 3

  303 kwd_let: "let" .

    $default  reduce using rule 303 (kwd_let)


State 4

   46 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 38
    annotation_argument_list  go to state 39


State 5

   56 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 40

    expect_list   go to state 41
    expect_error  go to state 42


State 6

   47 require_declaration: "require" . require_module

    "name"  shift, and go to state 43
    '%'     shift, and go to state 44

    require_module_name  go to state 45
    require_module       go to state 46


State 7

  603 alias_declaration: "typedef" . single_alias SEMICOLON

    "public"   shift, and go to state 47
    "private"  shift, and go to state 48

    $default  reduce using rule 598 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 49
    single_alias                      go to state 50


State 8

  304 kwd_let: "var" .

    $default  reduce using rule 304 (kwd_let)


State 9

   26 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 51
    '$'     shift, and go to state 52

    module_name  go to state 53


State 10

  780 bitfield_alias_declaration: "bitfield" . $@86 optional_public_or_private_alias "name" optional_emit_commas $@87 '{' $@88 bitfield_alias_bits optional_commas $@89 '}'

    $default  reduce using rule 776 ($@86)

    $@86  go to state 54


State 11

  770 tuple_alias_declaration: "tuple" . $@78 optional_public_or_private_alias "name" optional_emit_semis $@79 '{' $@80 tuple_alias_type_list optional_semis $@81 '}'

    $default  reduce using rule 766 ($@78)

    $@78  go to state 55


State 12

  775 variant_alias_declaration: "variant" . $@82 optional_public_or_private_alias "name" optional_emit_semis $@83 '{' $@84 variant_alias_type_list optional_semis $@85 '}'

    $default  reduce using rule 771 ($@82)

    $@82  go to state 56


State 13

   19 SEMICOLON: "new line, semicolon" .

    $default  reduce using rule 19 (SEMICOLON)


State 14

   45 expr_reader: '%' . name_in_namespace $@2 reader_character_sequence

    "::"    shift, and go to state 57
    "name"  shift, and go to state 58

    name_in_namespace  go to state 59


State 15

  143 optional_annotation_list_with_emit_semis: '[' . annotation_list ']' optional_emit_semis

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 68
    annotation_list               go to state 69
    name_in_namespace             go to state 70


State 16

   18 SEMICOLON: ';' .

    $default  reduce using rule 18 (SEMICOLON)


State 17

   15 program: program SEMICOLON .

    $default  reduce using rule 15 (program)


State 18

   14 program: program top_level_reader_macro .

    $default  reduce using rule 14 (program)


State 19

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 20

   20 top_level_reader_macro: expr_reader . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 71


State 21

    9 program: program options_declaration . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 72


State 22

    8 program: program require_declaration . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 73


State 23

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 24

  234 global_function_declaration: optional_annotation_list_with_emit_semis . "def" function_declaration
  619 enum_declaration: optional_annotation_list_with_emit_semis . "enum" $@43 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@44 enum_list optional_commas $@45 '}'
  637 structure_declaration: optional_annotation_list_with_emit_semis . $@46 class_or_struct optional_public_or_private_structure $@47 structure_name optional_emit_semis $@48 optional_struct_variable_declaration_list

    "def"   shift, and go to state 74
    "enum"  shift, and go to state 75

    $default  reduce using rule 634 ($@46)

    $@46  go to state 76


State 25

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 26

  588 global_let: kwd_let . optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'
  590           | kwd_let . optional_shared optional_public_or_private_variable $@41 optional_field_annotation global_let_variable_declaration

    "shared"  shift, and go to state 77

    $default  reduce using rule 579 (optional_shared)

    optional_shared  go to state 78


State 27

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 28

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 29

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 30

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 31

   12 program: program tuple_alias_declaration .

    $default  reduce using rule 12 (program)


State 32

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 33

   13 program: program bitfield_alias_declaration .

    $default  reduce using rule 13 (program)


State 34

  111 annotation_argument_name: "type" .

    $default  reduce using rule 111 (annotation_argument_name)


State 35

  112 annotation_argument_name: "in" .

    $default  reduce using rule 112 (annotation_argument_name)


State 36

  110 annotation_argument_name: "name" .

    $default  reduce using rule 110 (annotation_argument_name)


State 37

  113 annotation_argument: annotation_argument_name . '=' string_constant
  114                    | annotation_argument_name . '=' "name"
  115                    | annotation_argument_name . '=' "integer constant"
  116                    | annotation_argument_name . '=' "floating point constant"
  117                    | annotation_argument_name . '=' "true"
  118                    | annotation_argument_name . '=' "false"
  119                    | annotation_argument_name .
  120                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 79

    $default  reduce using rule 119 (annotation_argument)


State 38

  121 annotation_argument_list: annotation_argument .

    $default  reduce using rule 121 (annotation_argument_list)


State 39

   46 options_declaration: "options" annotation_argument_list .
  122 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 80

    $default  reduce using rule 46 (options_declaration)


State 40

   59 expect_error: "integer constant" .
   60             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 81

    $default  reduce using rule 59 (expect_error)


State 41

   56 expect_declaration: "expect" expect_list .
   58 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 82

    $default  reduce using rule 56 (expect_declaration)


State 42

   57 expect_list: expect_error .

    $default  reduce using rule 57 (expect_list)


State 43

   48 require_module_name: "name" .

    $default  reduce using rule 48 (require_module_name)


State 44

   49 require_module_name: '%' . require_module_name

    "name"  shift, and go to state 43
    '%'     shift, and go to state 44

    require_module_name  go to state 83


State 45

   50 require_module_name: require_module_name . '.' "name"
   51                    | require_module_name . '/' "name"
   52 require_module: require_module_name . is_public_module
   53               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 84
    "public"  shift, and go to state 85
    '/'       shift, and go to state 86
    '.'       shift, and go to state 87

    $default  reduce using rule 54 (is_public_module)

    is_public_module  go to state 88


State 46

   47 require_declaration: "require" require_module .

    $default  reduce using rule 47 (require_declaration)


State 47

  600 optional_public_or_private_alias: "public" .

    $default  reduce using rule 600 (optional_public_or_private_alias)


State 48

  599 optional_public_or_private_alias: "private" .

    $default  reduce using rule 599 (optional_public_or_private_alias)


State 49

  602 single_alias: optional_public_or_private_alias . "name" $@42 '=' type_declaration

    "name"  shift, and go to state 89


State 50

  603 alias_declaration: "typedef" single_alias . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 90


State 51

   25 module_name: "name" .

    $default  reduce using rule 25 (module_name)


State 52

   24 module_name: '$' .

    $default  reduce using rule 24 (module_name)


State 53

   26 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 77

    $default  reduce using rule 579 (optional_shared)

    optional_shared  go to state 91


State 54

  780 bitfield_alias_declaration: "bitfield" $@86 . optional_public_or_private_alias "name" optional_emit_commas $@87 '{' $@88 bitfield_alias_bits optional_commas $@89 '}'

    "public"   shift, and go to state 47
    "private"  shift, and go to state 48

    $default  reduce using rule 598 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 92


State 55

  770 tuple_alias_declaration: "tuple" $@78 . optional_public_or_private_alias "name" optional_emit_semis $@79 '{' $@80 tuple_alias_type_list optional_semis $@81 '}'

    "public"   shift, and go to state 47
    "private"  shift, and go to state 48

    $default  reduce using rule 598 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 93


State 56

  775 variant_alias_declaration: "variant" $@82 . optional_public_or_private_alias "name" optional_emit_semis $@83 '{' $@84 variant_alias_type_list optional_semis $@85 '}'

    "public"   shift, and go to state 47
    "private"  shift, and go to state 48

    $default  reduce using rule 598 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 94


State 57

  279 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 95


State 58

  277 name_in_namespace: "name" .
  278                  | "name" . "::" "name"

    "::"  shift, and go to state 96

    $default  reduce using rule 277 (name_in_namespace)


State 59

   45 expr_reader: '%' name_in_namespace . $@2 reader_character_sequence

    $default  reduce using rule 44 ($@2)

    $@2  go to state 97


State 60

  126 annotation_declaration_name: "require" .

    $default  reduce using rule 126 (annotation_declaration_name)


State 61

  127 annotation_declaration_name: "private" .

    $default  reduce using rule 127 (annotation_declaration_name)


State 62

  128 annotation_declaration_name: "template" .

    $default  reduce using rule 128 (annotation_declaration_name)


State 63

  137 annotation_declaration: "|>" . annotation_declaration

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 98
    name_in_namespace             go to state 70


State 64

  132 annotation_declaration: '!' . annotation_declaration

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 99
    name_in_namespace             go to state 70


State 65

  136 annotation_declaration: '(' . annotation_declaration ')'

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 100
    name_in_namespace             go to state 70


State 66

  129 annotation_declaration_basic: annotation_declaration_name .
  130                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 101

    $default  reduce using rule 129 (annotation_declaration_basic)


State 67

  131 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 131 (annotation_declaration)


State 68

  133 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  134                       | annotation_declaration . "||" annotation_declaration
  135                       | annotation_declaration . "^^" annotation_declaration
  138 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 102
    "||"  shift, and go to state 103
    "^^"  shift, and go to state 104

    $default  reduce using rule 138 (annotation_list)


State 69

  139 annotation_list: annotation_list . ',' annotation_declaration
  143 optional_annotation_list_with_emit_semis: '[' annotation_list . ']' optional_emit_semis

    ','  shift, and go to state 105
    ']'  shift, and go to state 106


State 70

  125 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 125 (annotation_declaration_name)


State 71

   20 top_level_reader_macro: expr_reader SEMICOLON .

    $default  reduce using rule 20 (top_level_reader_macro)


State 72

    9 program: program options_declaration SEMICOLON .

    $default  reduce using rule 9 (program)


State 73

    8 program: program require_declaration SEMICOLON .

    $default  reduce using rule 8 (program)


State 74

  234 global_function_declaration: optional_annotation_list_with_emit_semis "def" . function_declaration

    "public"   shift, and go to state 107
    "private"  shift, and go to state 108

    $default  reduce using rule 235 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 109
    function_declaration                 go to state 110


State 75

  619 enum_declaration: optional_annotation_list_with_emit_semis "enum" . $@43 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@44 enum_list optional_commas $@45 '}'

    $default  reduce using rule 616 ($@43)

    $@43  go to state 111


State 76

  637 structure_declaration: optional_annotation_list_with_emit_semis $@46 . class_or_struct optional_public_or_private_structure $@47 structure_name optional_emit_semis $@48 optional_struct_variable_declaration_list

    "struct"    shift, and go to state 112
    "class"     shift, and go to state 113
    "template"  shift, and go to state 114

    class_or_struct  go to state 115


State 77

  580 optional_shared: "shared" .

    $default  reduce using rule 580 (optional_shared)


State 78

  588 global_let: kwd_let optional_shared . optional_public_or_private_variable '{' global_variable_declaration_list '}'
  590           | kwd_let optional_shared . optional_public_or_private_variable $@41 optional_field_annotation global_let_variable_declaration

    "public"   shift, and go to state 116
    "private"  shift, and go to state 117

    $default  reduce using rule 581 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 118


State 79

  113 annotation_argument: annotation_argument_name '=' . string_constant
  114                    | annotation_argument_name '=' . "name"
  115                    | annotation_argument_name '=' . "integer constant"
  116                    | annotation_argument_name '=' . "floating point constant"
  117                    | annotation_argument_name '=' . "true"
  118                    | annotation_argument_name '=' . "false"
  120                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 119
    "false"                    shift, and go to state 120
    "integer constant"         shift, and go to state 121
    "floating point constant"  shift, and go to state 122
    "name"                     shift, and go to state 123
    "start of the string"      shift, and go to state 124
    '('                        shift, and go to state 125

    string_constant  go to state 126


State 80

  122 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 127


State 81

   60 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 128


State 82

   58 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 40

    expect_error  go to state 129


State 83

   49 require_module_name: '%' require_module_name .
   50                    | require_module_name . '.' "name"
   51                    | require_module_name . '/' "name"

    '.'  shift, and go to state 87

    $default  reduce using rule 49 (require_module_name)


State 84

   53 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 130


State 85

   55 is_public_module: "public" .

    $default  reduce using rule 55 (is_public_module)


State 86

   51 require_module_name: require_module_name '/' . "name"

    "name"  shift, and go to state 131


State 87

   50 require_module_name: require_module_name '.' . "name"

    "name"  shift, and go to state 132


State 88

   52 require_module: require_module_name is_public_module .

    $default  reduce using rule 52 (require_module)


State 89

  602 single_alias: optional_public_or_private_alias "name" . $@42 '=' type_declaration

    $default  reduce using rule 601 ($@42)

    $@42  go to state 133


State 90

  603 alias_declaration: "typedef" single_alias SEMICOLON .

    $default  reduce using rule 603 (alias_declaration)


State 91

   26 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 134
    "private"  shift, and go to state 135

    $default  reduce using rule 21 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 136


State 92

  780 bitfield_alias_declaration: "bitfield" $@86 optional_public_or_private_alias . "name" optional_emit_commas $@87 '{' $@88 bitfield_alias_bits optional_commas $@89 '}'

    "name"  shift, and go to state 137


State 93

  770 tuple_alias_declaration: "tuple" $@78 optional_public_or_private_alias . "name" optional_emit_semis $@79 '{' $@80 tuple_alias_type_list optional_semis $@81 '}'

    "name"  shift, and go to state 138


State 94

  775 variant_alias_declaration: "variant" $@82 optional_public_or_private_alias . "name" optional_emit_semis $@83 '{' $@84 variant_alias_type_list optional_semis $@85 '}'

    "name"  shift, and go to state 139


State 95

  279 name_in_namespace: "::" "name" .

    $default  reduce using rule 279 (name_in_namespace)


State 96

  278 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 140


State 97

   45 expr_reader: '%' name_in_namespace $@2 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 141

    reader_character_sequence  go to state 142


State 98

  133 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  134                       | annotation_declaration . "||" annotation_declaration
  135                       | annotation_declaration . "^^" annotation_declaration
  137                       | "|>" annotation_declaration .

    $default  reduce using rule 137 (annotation_declaration)


State 99

  132 annotation_declaration: '!' annotation_declaration .
  133                       | annotation_declaration . "&&" annotation_declaration
  134                       | annotation_declaration . "||" annotation_declaration
  135                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 132 (annotation_declaration)


State 100

  133 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  134                       | annotation_declaration . "||" annotation_declaration
  135                       | annotation_declaration . "^^" annotation_declaration
  136                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 102
    "||"  shift, and go to state 103
    "^^"  shift, and go to state 104
    ')'   shift, and go to state 143


State 101

  130 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 38
    annotation_argument_list  go to state 144


State 102

  133 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 145
    name_in_namespace             go to state 70


State 103

  134 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 146
    name_in_namespace             go to state 70


State 104

  135 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 147
    name_in_namespace             go to state 70


State 105

  139 annotation_list: annotation_list ',' . annotation_declaration

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 148
    name_in_namespace             go to state 70


State 106

  143 optional_annotation_list_with_emit_semis: '[' annotation_list ']' . optional_emit_semis

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 151


State 107

  237 optional_public_or_private_function: "public" .

    $default  reduce using rule 237 (optional_public_or_private_function)


State 108

  236 optional_public_or_private_function: "private" .

    $default  reduce using rule 236 (optional_public_or_private_function)


State 109

  240 function_declaration: optional_public_or_private_function . $@10 function_declaration_header optional_emit_semis expression_block

    $default  reduce using rule 239 ($@10)

    $@10  go to state 152


State 110

  234 global_function_declaration: optional_annotation_list_with_emit_semis "def" function_declaration .

    $default  reduce using rule 234 (global_function_declaration)


State 111

  619 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@43 . optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@44 enum_list optional_commas $@45 '}'

    "public"   shift, and go to state 153
    "private"  shift, and go to state 154

    $default  reduce using rule 604 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 155


State 112

  626 class_or_struct: "struct" .

    $default  reduce using rule 626 (class_or_struct)


State 113

  625 class_or_struct: "class" .

    $default  reduce using rule 625 (class_or_struct)


State 114

  627 class_or_struct: "template" . "class"
  628                | "template" . "struct"

    "struct"  shift, and go to state 156
    "class"   shift, and go to state 157


State 115

  637 structure_declaration: optional_annotation_list_with_emit_semis $@46 class_or_struct . optional_public_or_private_structure $@47 structure_name optional_emit_semis $@48 optional_struct_variable_declaration_list

    "public"   shift, and go to state 158
    "private"  shift, and go to state 159

    $default  reduce using rule 629 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 160


State 116

  583 optional_public_or_private_variable: "public" .

    $default  reduce using rule 583 (optional_public_or_private_variable)


State 117

  582 optional_public_or_private_variable: "private" .

    $default  reduce using rule 582 (optional_public_or_private_variable)


State 118

  588 global_let: kwd_let optional_shared optional_public_or_private_variable . '{' global_variable_declaration_list '}'
  590           | kwd_let optional_shared optional_public_or_private_variable . $@41 optional_field_annotation global_let_variable_declaration

    '{'  shift, and go to state 161

    $default  reduce using rule 589 ($@41)

    $@41  go to state 162


State 119

  117 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 117 (annotation_argument)


State 120

  118 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 118 (annotation_argument)


State 121

  115 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 115 (annotation_argument)


State 122

  116 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 116 (annotation_argument)


State 123

  114 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 114 (annotation_argument)


State 124

   31 string_constant: "start of the string" . character_sequence "end of the string"
   32                | "start of the string" . "end of the string"

    STRING_CHARACTER      shift, and go to state 163
    STRING_CHARACTER_ESC  shift, and go to state 164
    "end of the string"   shift, and go to state 165

    character_sequence  go to state 166


State 125

  120 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 167
    "false"                    shift, and go to state 168
    "integer constant"         shift, and go to state 169
    "floating point constant"  shift, and go to state 170
    "name"                     shift, and go to state 171
    "start of the string"      shift, and go to state 124

    string_constant                 go to state 172
    annotation_argument_value       go to state 173
    annotation_argument_value_list  go to state 174


State 126

  113 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 113 (annotation_argument)


State 127

  122 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 122 (annotation_argument_list)


State 128

   60 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 60 (expect_error)


State 129

   58 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 58 (expect_list)


State 130

   53 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 85

    $default  reduce using rule 54 (is_public_module)

    is_public_module  go to state 175


State 131

   51 require_module_name: require_module_name '/' "name" .

    $default  reduce using rule 51 (require_module_name)


State 132

   50 require_module_name: require_module_name '.' "name" .

    $default  reduce using rule 50 (require_module_name)


State 133

  602 single_alias: optional_public_or_private_alias "name" $@42 . '=' type_declaration

    '='  shift, and go to state 176


State 134

   22 optional_public_or_private_module: "public" .

    $default  reduce using rule 22 (optional_public_or_private_module)


State 135

   23 optional_public_or_private_module: "private" .

    $default  reduce using rule 23 (optional_public_or_private_module)


State 136

   26 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 26 (module_declaration)


State 137

  780 bitfield_alias_declaration: "bitfield" $@86 optional_public_or_private_alias "name" . optional_emit_commas $@87 '{' $@88 bitfield_alias_bits optional_commas $@89 '}'

    "new line, comma"  shift, and go to state 177

    $default  reduce using rule 614 (optional_emit_commas)

    emit_commas           go to state 178
    optional_emit_commas  go to state 179


State 138

  770 tuple_alias_declaration: "tuple" $@78 optional_public_or_private_alias "name" . optional_emit_semis $@79 '{' $@80 tuple_alias_type_list optional_semis $@81 '}'

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 180


State 139

  775 variant_alias_declaration: "variant" $@82 optional_public_or_private_alias "name" . optional_emit_semis $@83 '{' $@84 variant_alias_type_list optional_semis $@85 '}'

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 181


State 140

  278 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 278 (name_in_namespace)


State 141

   42 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 42 (reader_character_sequence)


State 142

   43 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   45 expr_reader: '%' name_in_namespace $@2 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 182

    $default  reduce using rule 45 (expr_reader)


State 143

  136 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 136 (annotation_declaration)


State 144

  122 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  130 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 80
    ')'  shift, and go to state 183


State 145

  133 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  133                       | annotation_declaration "&&" annotation_declaration .
  134                       | annotation_declaration . "||" annotation_declaration
  135                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 133 (annotation_declaration)


State 146

  133 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  134                       | annotation_declaration . "||" annotation_declaration
  134                       | annotation_declaration "||" annotation_declaration .
  135                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 102
    "^^"  shift, and go to state 104

    $default  reduce using rule 134 (annotation_declaration)


State 147

  133 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  134                       | annotation_declaration . "||" annotation_declaration
  135                       | annotation_declaration . "^^" annotation_declaration
  135                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 102

    $default  reduce using rule 135 (annotation_declaration)


State 148

  133 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  134                       | annotation_declaration . "||" annotation_declaration
  135                       | annotation_declaration . "^^" annotation_declaration
  139 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 102
    "||"  shift, and go to state 103
    "^^"  shift, and go to state 104

    $default  reduce using rule 139 (annotation_list)


State 149

   66 emit_semis: "new line, semicolon" .

    $default  reduce using rule 66 (emit_semis)


State 150

   67 emit_semis: emit_semis . "new line, semicolon"
   69 optional_emit_semis: emit_semis .

    "new line, semicolon"  shift, and go to state 184

    $default  reduce using rule 69 (optional_emit_semis)


State 151

  143 optional_annotation_list_with_emit_semis: '[' annotation_list ']' optional_emit_semis .

    $default  reduce using rule 143 (optional_annotation_list_with_emit_semis)


State 152

  240 function_declaration: optional_public_or_private_function $@10 . function_declaration_header optional_emit_semis expression_block

    "operator"  shift, and go to state 185
    "bool"      shift, and go to state 186
    "string"    shift, and go to state 187
    "int"       shift, and go to state 188
    "int2"      shift, and go to state 189
    "int3"      shift, and go to state 190
    "int4"      shift, and go to state 191
    "uint"      shift, and go to state 192
    "uint2"     shift, and go to state 193
    "uint3"     shift, and go to state 194
    "uint4"     shift, and go to state 195
    "float"     shift, and go to state 196
    "float2"    shift, and go to state 197
    "float3"    shift, and go to state 198
    "float4"    shift, and go to state 199
    "range"     shift, and go to state 200
    "urange"    shift, and go to state 201
    "range64"   shift, and go to state 202
    "urange64"  shift, and go to state 203
    "int64"     shift, and go to state 204
    "uint64"    shift, and go to state 205
    "double"    shift, and go to state 206
    "int8"      shift, and go to state 207
    "uint8"     shift, and go to state 208
    "int16"     shift, and go to state 209
    "uint16"    shift, and go to state 210
    "++"        shift, and go to state 211
    "--"        shift, and go to state 212
    "name"      shift, and go to state 213

    function_name                go to state 214
    function_declaration_header  go to state 215


State 153

  606 optional_public_or_private_enum: "public" .

    $default  reduce using rule 606 (optional_public_or_private_enum)


State 154

  605 optional_public_or_private_enum: "private" .

    $default  reduce using rule 605 (optional_public_or_private_enum)


State 155

  619 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@43 optional_public_or_private_enum . enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@44 enum_list optional_commas $@45 '}'

    "name"  shift, and go to state 216

    enum_name  go to state 217


State 156

  628 class_or_struct: "template" "struct" .

    $default  reduce using rule 628 (class_or_struct)


State 157

  627 class_or_struct: "template" "class" .

    $default  reduce using rule 627 (class_or_struct)


State 158

  631 optional_public_or_private_structure: "public" .

    $default  reduce using rule 631 (optional_public_or_private_structure)


State 159

  630 optional_public_or_private_structure: "private" .

    $default  reduce using rule 630 (optional_public_or_private_structure)


State 160

  637 structure_declaration: optional_annotation_list_with_emit_semis $@46 class_or_struct optional_public_or_private_structure . $@47 structure_name optional_emit_semis $@48 optional_struct_variable_declaration_list

    $default  reduce using rule 635 ($@47)

    $@47  go to state 218


State 161

  588 global_let: kwd_let optional_shared optional_public_or_private_variable '{' . global_variable_declaration_list '}'

    $default  reduce using rule 584 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 219


State 162

  590 global_let: kwd_let optional_shared optional_public_or_private_variable $@41 . optional_field_annotation global_let_variable_declaration

    '@'  shift, and go to state 220

    $default  reduce using rule 507 (optional_field_annotation)

    metadata_argument_list     go to state 221
    optional_field_annotation  go to state 222


State 163

   27 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 27 (character_sequence)


State 164

   28 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 28 (character_sequence)


State 165

   32 string_constant: "start of the string" "end of the string" .

    $default  reduce using rule 32 (string_constant)


State 166

   29 character_sequence: character_sequence . STRING_CHARACTER
   30                   | character_sequence . STRING_CHARACTER_ESC
   31 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 223
    STRING_CHARACTER_ESC  shift, and go to state 224
    "end of the string"   shift, and go to state 225


State 167

  106 annotation_argument_value: "true" .

    $default  reduce using rule 106 (annotation_argument_value)


State 168

  107 annotation_argument_value: "false" .

    $default  reduce using rule 107 (annotation_argument_value)


State 169

  104 annotation_argument_value: "integer constant" .

    $default  reduce using rule 104 (annotation_argument_value)


State 170

  105 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 105 (annotation_argument_value)


State 171

  103 annotation_argument_value: "name" .

    $default  reduce using rule 103 (annotation_argument_value)


State 172

  102 annotation_argument_value: string_constant .

    $default  reduce using rule 102 (annotation_argument_value)


State 173

  108 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 108 (annotation_argument_value_list)


State 174

  109 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
  120 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 226
    ')'  shift, and go to state 227


State 175

   53 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 53 (require_module)


State 176

  602 single_alias: optional_public_or_private_alias "name" $@42 '=' . type_declaration

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 276


State 177

  612 emit_commas: "new line, comma" .

    $default  reduce using rule 612 (emit_commas)


State 178

  613 emit_commas: emit_commas . "new line, comma"
  615 optional_emit_commas: emit_commas .

    "new line, comma"  shift, and go to state 277

    $default  reduce using rule 615 (optional_emit_commas)


State 179

  780 bitfield_alias_declaration: "bitfield" $@86 optional_public_or_private_alias "name" optional_emit_commas . $@87 '{' $@88 bitfield_alias_bits optional_commas $@89 '}'

    $default  reduce using rule 777 ($@87)

    $@87  go to state 278


State 180

  770 tuple_alias_declaration: "tuple" $@78 optional_public_or_private_alias "name" optional_emit_semis . $@79 '{' $@80 tuple_alias_type_list optional_semis $@81 '}'

    $default  reduce using rule 767 ($@79)

    $@79  go to state 279


State 181

  775 variant_alias_declaration: "variant" $@82 optional_public_or_private_alias "name" optional_emit_semis . $@83 '{' $@84 variant_alias_type_list optional_semis $@85 '}'

    $default  reduce using rule 772 ($@83)

    $@83  go to state 280


State 182

   43 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 43 (reader_character_sequence)


State 183

  130 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 130 (annotation_declaration_basic)


State 184

   67 emit_semis: emit_semis "new line, semicolon" .

    $default  reduce using rule 67 (emit_semis)


State 185

  150 function_name: "operator" . '!'
  151              | "operator" . '~'
  152              | "operator" . "+="
  153              | "operator" . "-="
  154              | "operator" . "*="
  155              | "operator" . "/="
  156              | "operator" . "%="
  157              | "operator" . "&="
  158              | "operator" . "|="
  159              | "operator" . "^="
  160              | "operator" . "&&="
  161              | "operator" . "||="
  162              | "operator" . "^^="
  163              | "operator" . "&&"
  164              | "operator" . "||"
  165              | "operator" . "^^"
  166              | "operator" . '+'
  167              | "operator" . '-'
  168              | "operator" . '*'
  169              | "operator" . '/'
  170              | "operator" . '%'
  171              | "operator" . '<'
  172              | "operator" . '>'
  173              | "operator" . ".."
  174              | "operator" . "=="
  175              | "operator" . "!="
  176              | "operator" . "<="
  177              | "operator" . ">="
  178              | "operator" . '&'
  179              | "operator" . '|'
  180              | "operator" . '^'
  183              | "operator" . "++"
  184              | "operator" . "--"
  185              | "operator" . "<<"
  186              | "operator" . ">>"
  187              | "operator" . "<<="
  188              | "operator" . ">>="
  189              | "operator" . "<<<"
  190              | "operator" . ">>>"
  191              | "operator" . "<<<="
  192              | "operator" . ">>>="
  193              | "operator" . '[' ']'
  194              | "operator" . "?[" ']'
  195              | "operator" . '.'
  196              | "operator" . "?."
  197              | "operator" . '.' "name"
  198              | "operator" . '.' "name" ":="
  199              | "operator" . "?." "name"
  200              | "operator" . ":="
  201              | "operator" . "delete"
  202              | "operator" . "??"
  203              | "operator" . "is"
  204              | "operator" . "as"
  205              | "operator" . "is" "name"
  206              | "operator" . "as" "name"
  207              | "operator" . '?' "as"
  208              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 281
    "as"      shift, and go to state 282
    "delete"  shift, and go to state 283
    "+="      shift, and go to state 284
    "-="      shift, and go to state 285
    "/="      shift, and go to state 286
    "*="      shift, and go to state 287
    "%="      shift, and go to state 288
    "&="      shift, and go to state 289
    "|="      shift, and go to state 290
    "^="      shift, and go to state 291
    "<<"      shift, and go to state 292
    ">>"      shift, and go to state 293
    "++"      shift, and go to state 294
    "--"      shift, and go to state 295
    "<="      shift, and go to state 296
    "<<="     shift, and go to state 297
    ">>="     shift, and go to state 298
    ">="      shift, and go to state 299
    "=="      shift, and go to state 300
    "!="      shift, and go to state 301
    "??"      shift, and go to state 302
    "?."      shift, and go to state 303
    "?["      shift, and go to state 304
    ":="      shift, and go to state 305
    "<<<"     shift, and go to state 306
    ">>>"     shift, and go to state 307
    "<<<="    shift, and go to state 308
    ">>>="    shift, and go to state 309
    "&&"      shift, and go to state 310
    "||"      shift, and go to state 311
    "^^"      shift, and go to state 312
    "&&="     shift, and go to state 313
    "||="     shift, and go to state 314
    "^^="     shift, and go to state 315
    ".."      shift, and go to state 316
    '?'       shift, and go to state 317
    '|'       shift, and go to state 318
    '^'       shift, and go to state 319
    '&'       shift, and go to state 320
    '<'       shift, and go to state 321
    '>'       shift, and go to state 322
    '-'       shift, and go to state 323
    '+'       shift, and go to state 324
    '*'       shift, and go to state 325
    '/'       shift, and go to state 326
    '%'       shift, and go to state 327
    '~'       shift, and go to state 328
    '!'       shift, and go to state 329
    '.'       shift, and go to state 330
    '['       shift, and go to state 331


State 186

  209 function_name: "bool" .

    $default  reduce using rule 209 (function_name)


State 187

  210 function_name: "string" .

    $default  reduce using rule 210 (function_name)


State 188

  211 function_name: "int" .

    $default  reduce using rule 211 (function_name)


State 189

  212 function_name: "int2" .

    $default  reduce using rule 212 (function_name)


State 190

  213 function_name: "int3" .

    $default  reduce using rule 213 (function_name)


State 191

  214 function_name: "int4" .

    $default  reduce using rule 214 (function_name)


State 192

  215 function_name: "uint" .

    $default  reduce using rule 215 (function_name)


State 193

  216 function_name: "uint2" .

    $default  reduce using rule 216 (function_name)


State 194

  217 function_name: "uint3" .

    $default  reduce using rule 217 (function_name)


State 195

  218 function_name: "uint4" .

    $default  reduce using rule 218 (function_name)


State 196

  219 function_name: "float" .

    $default  reduce using rule 219 (function_name)


State 197

  220 function_name: "float2" .

    $default  reduce using rule 220 (function_name)


State 198

  221 function_name: "float3" .

    $default  reduce using rule 221 (function_name)


State 199

  222 function_name: "float4" .

    $default  reduce using rule 222 (function_name)


State 200

  223 function_name: "range" .

    $default  reduce using rule 223 (function_name)


State 201

  224 function_name: "urange" .

    $default  reduce using rule 224 (function_name)


State 202

  225 function_name: "range64" .

    $default  reduce using rule 225 (function_name)


State 203

  226 function_name: "urange64" .

    $default  reduce using rule 226 (function_name)


State 204

  227 function_name: "int64" .

    $default  reduce using rule 227 (function_name)


State 205

  228 function_name: "uint64" .

    $default  reduce using rule 228 (function_name)


State 206

  229 function_name: "double" .

    $default  reduce using rule 229 (function_name)


State 207

  230 function_name: "int8" .

    $default  reduce using rule 230 (function_name)


State 208

  231 function_name: "uint8" .

    $default  reduce using rule 231 (function_name)


State 209

  232 function_name: "int16" .

    $default  reduce using rule 232 (function_name)


State 210

  233 function_name: "uint16" .

    $default  reduce using rule 233 (function_name)


State 211

  181 function_name: "++" . "operator"

    "operator"  shift, and go to state 332


State 212

  182 function_name: "--" . "operator"

    "operator"  shift, and go to state 333


State 213

  149 function_name: "name" .

    $default  reduce using rule 149 (function_name)


State 214

  238 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 334

    $default  reduce using rule 144 (optional_function_argument_list)

    optional_function_argument_list  go to state 335


State 215

  240 function_declaration: optional_public_or_private_function $@10 function_declaration_header . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 336


State 216

  607 enum_name: "name" .

    $default  reduce using rule 607 (enum_name)


State 217

  619 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@43 optional_public_or_private_enum enum_name . optional_enum_basic_type_declaration optional_emit_commas '{' $@44 enum_list optional_commas $@45 '}'

    ':'  shift, and go to state 337

    $default  reduce using rule 608 (optional_enum_basic_type_declaration)

    optional_enum_basic_type_declaration  go to state 338


State 218

  637 structure_declaration: optional_annotation_list_with_emit_semis $@46 class_or_struct optional_public_or_private_structure $@47 . structure_name optional_emit_semis $@48 optional_struct_variable_declaration_list

    "sealed"  shift, and go to state 339

    $default  reduce using rule 622 (optional_sealed)

    optional_sealed  go to state 340
    structure_name   go to state 341


State 219

  585 global_variable_declaration_list: global_variable_declaration_list . SEMICOLON
  587                                 | global_variable_declaration_list . $@40 optional_field_annotation let_variable_declaration
  588 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list . '}'

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16
    '}'                    shift, and go to state 342

    $default  reduce using rule 586 ($@40)

    SEMICOLON  go to state 343
    $@40       go to state 344


State 220

  123 metadata_argument_list: '@' . annotation_argument optional_emit_semis

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 345


State 221

  124 metadata_argument_list: metadata_argument_list . '@' annotation_argument optional_emit_semis
  508 optional_field_annotation: metadata_argument_list .

    '@'  shift, and go to state 346

    $default  reduce using rule 508 (optional_field_annotation)


State 222

  590 global_let: kwd_let optional_shared optional_public_or_private_variable $@41 optional_field_annotation . global_let_variable_declaration

    "name"  shift, and go to state 347

    global_let_variable_name_with_pos_list  go to state 348
    global_let_variable_declaration         go to state 349


State 223

   29 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 29 (character_sequence)


State 224

   30 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 30 (character_sequence)


State 225

   31 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 31 (string_constant)


State 226

  109 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 167
    "false"                    shift, and go to state 168
    "integer constant"         shift, and go to state 169
    "floating point constant"  shift, and go to state 170
    "name"                     shift, and go to state 171
    "start of the string"      shift, and go to state 124

    string_constant            go to state 172
    annotation_argument_value  go to state 350


State 227

  120 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 120 (annotation_argument)


State 228

  706 type_declaration_no_options_no_dim: "type" . '<' $@51 type_declaration '>' $@52

    '<'  shift, and go to state 351


State 229

  729 type_declaration_no_options_no_dim: "array" . '<' $@56 type_declaration '>' $@57

    '<'  shift, and go to state 352


State 230

  732 type_declaration_no_options_no_dim: "table" . '<' $@58 table_type_pair '>' $@59

    '<'  shift, and go to state 353


State 231

  707 type_declaration_no_options_no_dim: "typedecl" . '(' expr ')'

    '('  shift, and go to state 354


State 232

  735 type_declaration_no_options_no_dim: "iterator" . '<' $@60 type_declaration '>' $@61

    '<'  shift, and go to state 355


State 233

  725 type_declaration_no_options_no_dim: "smart_ptr" . '<' $@54 type_declaration '>' $@55

    '<'  shift, and go to state 356


State 234

  643 basic_type_declaration: "bool" .

    $default  reduce using rule 643 (basic_type_declaration)


State 235

  663 basic_type_declaration: "void" .

    $default  reduce using rule 663 (basic_type_declaration)


State 236

  644 basic_type_declaration: "string" .

    $default  reduce using rule 644 (basic_type_declaration)


State 237

  679 auto_type_declaration: "auto" .
  680                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 357

    $default  reduce using rule 679 (auto_type_declaration)


State 238

  645 basic_type_declaration: "int" .

    $default  reduce using rule 645 (basic_type_declaration)


State 239

  649 basic_type_declaration: "int2" .

    $default  reduce using rule 649 (basic_type_declaration)


State 240

  650 basic_type_declaration: "int3" .

    $default  reduce using rule 650 (basic_type_declaration)


State 241

  651 basic_type_declaration: "int4" .

    $default  reduce using rule 651 (basic_type_declaration)


State 242

  652 basic_type_declaration: "uint" .

    $default  reduce using rule 652 (basic_type_declaration)


State 243

  669 basic_type_declaration: "bitfield" .
  689 bitfield_type_declaration: "bitfield" . '<' $@49 bitfield_bits '>' $@50

    '<'  shift, and go to state 358

    $default  reduce using rule 669 (basic_type_declaration)


State 244

  656 basic_type_declaration: "uint2" .

    $default  reduce using rule 656 (basic_type_declaration)


State 245

  657 basic_type_declaration: "uint3" .

    $default  reduce using rule 657 (basic_type_declaration)


State 246

  658 basic_type_declaration: "uint4" .

    $default  reduce using rule 658 (basic_type_declaration)


State 247

  659 basic_type_declaration: "float" .

    $default  reduce using rule 659 (basic_type_declaration)


State 248

  660 basic_type_declaration: "float2" .

    $default  reduce using rule 660 (basic_type_declaration)


State 249

  661 basic_type_declaration: "float3" .

    $default  reduce using rule 661 (basic_type_declaration)


State 250

  662 basic_type_declaration: "float4" .

    $default  reduce using rule 662 (basic_type_declaration)


State 251

  664 basic_type_declaration: "range" .

    $default  reduce using rule 664 (basic_type_declaration)


State 252

  665 basic_type_declaration: "urange" .

    $default  reduce using rule 665 (basic_type_declaration)


State 253

  666 basic_type_declaration: "range64" .

    $default  reduce using rule 666 (basic_type_declaration)


State 254

  667 basic_type_declaration: "urange64" .

    $default  reduce using rule 667 (basic_type_declaration)


State 255

  736 type_declaration_no_options_no_dim: "block" .
  739                                   | "block" . '<' $@62 type_declaration '>' $@63
  742                                   | "block" . '<' $@64 optional_function_argument_list optional_function_type '>' $@65

    '<'  shift, and go to state 359

    $default  reduce using rule 736 (type_declaration_no_options_no_dim)


State 256

  648 basic_type_declaration: "int64" .

    $default  reduce using rule 648 (basic_type_declaration)


State 257

  655 basic_type_declaration: "uint64" .

    $default  reduce using rule 655 (basic_type_declaration)


State 258

  668 basic_type_declaration: "double" .

    $default  reduce using rule 668 (basic_type_declaration)


State 259

  743 type_declaration_no_options_no_dim: "function" .
  746                                   | "function" . '<' $@66 type_declaration '>' $@67
  749                                   | "function" . '<' $@68 optional_function_argument_list optional_function_type '>' $@69

    '<'  shift, and go to state 360

    $default  reduce using rule 743 (type_declaration_no_options_no_dim)


State 260

  750 type_declaration_no_options_no_dim: "lambda" .
  753                                   | "lambda" . '<' $@70 type_declaration '>' $@71
  756                                   | "lambda" . '<' $@72 optional_function_argument_list optional_function_type '>' $@73

    '<'  shift, and go to state 361

    $default  reduce using rule 750 (type_declaration_no_options_no_dim)


State 261

  646 basic_type_declaration: "int8" .

    $default  reduce using rule 646 (basic_type_declaration)


State 262

  653 basic_type_declaration: "uint8" .

    $default  reduce using rule 653 (basic_type_declaration)


State 263

  647 basic_type_declaration: "int16" .

    $default  reduce using rule 647 (basic_type_declaration)


State 264

  654 basic_type_declaration: "uint16" .

    $default  reduce using rule 654 (basic_type_declaration)


State 265

  759 type_declaration_no_options_no_dim: "tuple" . '<' $@74 tuple_type_list '>' $@75

    '<'  shift, and go to state 362


State 266

  762 type_declaration_no_options_no_dim: "variant" . '<' $@76 variant_type_list '>' $@77

    '<'  shift, and go to state 363


State 267

  681 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 364


State 268

  708 type_declaration_no_options_no_dim: '$' . name_in_namespace '(' optional_expr_list ')'
  710                                   | '$' . name_in_namespace '<' $@53 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "::"    shift, and go to state 57
    "name"  shift, and go to state 58

    name_in_namespace  go to state 365


State 269

  678 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 678 (structure_type_declaration)


State 270

  700 type_declaration_no_options_no_dim: basic_type_declaration .

    $default  reduce using rule 700 (type_declaration_no_options_no_dim)


State 271

  703 type_declaration_no_options_no_dim: structure_type_declaration .

    $default  reduce using rule 703 (type_declaration_no_options_no_dim)


State 272

  701 type_declaration_no_options_no_dim: auto_type_declaration .

    $default  reduce using rule 701 (type_declaration_no_options_no_dim)


State 273

  702 type_declaration_no_options_no_dim: bitfield_type_declaration .

    $default  reduce using rule 702 (type_declaration_no_options_no_dim)


State 274

  711 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  712                                   | type_declaration_no_options . "explicit"
  713                                   | type_declaration_no_options . "const"
  714                                   | type_declaration_no_options . '-' "const"
  715                                   | type_declaration_no_options . '&'
  716                                   | type_declaration_no_options . '-' '&'
  717                                   | type_declaration_no_options . '#'
  718                                   | type_declaration_no_options . "implicit"
  719                                   | type_declaration_no_options . '-' '#'
  720                                   | type_declaration_no_options . "==" "const"
  721                                   | type_declaration_no_options . "==" '&'
  722                                   | type_declaration_no_options . '?'
  726                                   | type_declaration_no_options . "??"
  763 type_declaration: type_declaration_no_options .

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374

    $default  reduce using rule 763 (type_declaration)


State 275

  698 type_declaration_no_options: type_declaration_no_options_no_dim .
  699                            | type_declaration_no_options_no_dim . dim_list

    '['  shift, and go to state 375

    $default  reduce using rule 698 (type_declaration_no_options)

    dim_list  go to state 376


State 276

  602 single_alias: optional_public_or_private_alias "name" $@42 '=' type_declaration .
  764 type_declaration: type_declaration . '|' type_declaration_no_options
  765                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 602 (single_alias)


State 277

  613 emit_commas: emit_commas "new line, comma" .

    $default  reduce using rule 613 (emit_commas)


State 278

  780 bitfield_alias_declaration: "bitfield" $@86 optional_public_or_private_alias "name" optional_emit_commas $@87 . '{' $@88 bitfield_alias_bits optional_commas $@89 '}'

    '{'  shift, and go to state 378


State 279

  770 tuple_alias_declaration: "tuple" $@78 optional_public_or_private_alias "name" optional_emit_semis $@79 . '{' $@80 tuple_alias_type_list optional_semis $@81 '}'

    '{'  shift, and go to state 379


State 280

  775 variant_alias_declaration: "variant" $@82 optional_public_or_private_alias "name" optional_emit_semis $@83 . '{' $@84 variant_alias_type_list optional_semis $@85 '}'

    '{'  shift, and go to state 380


State 281

  203 function_name: "operator" "is" .
  205              | "operator" "is" . "name"

    "name"  shift, and go to state 381

    $default  reduce using rule 203 (function_name)


State 282

  204 function_name: "operator" "as" .
  206              | "operator" "as" . "name"

    "name"  shift, and go to state 382

    $default  reduce using rule 204 (function_name)


State 283

  201 function_name: "operator" "delete" .

    $default  reduce using rule 201 (function_name)


State 284

  152 function_name: "operator" "+=" .

    $default  reduce using rule 152 (function_name)


State 285

  153 function_name: "operator" "-=" .

    $default  reduce using rule 153 (function_name)


State 286

  155 function_name: "operator" "/=" .

    $default  reduce using rule 155 (function_name)


State 287

  154 function_name: "operator" "*=" .

    $default  reduce using rule 154 (function_name)


State 288

  156 function_name: "operator" "%=" .

    $default  reduce using rule 156 (function_name)


State 289

  157 function_name: "operator" "&=" .

    $default  reduce using rule 157 (function_name)


State 290

  158 function_name: "operator" "|=" .

    $default  reduce using rule 158 (function_name)


State 291

  159 function_name: "operator" "^=" .

    $default  reduce using rule 159 (function_name)


State 292

  185 function_name: "operator" "<<" .

    $default  reduce using rule 185 (function_name)


State 293

  186 function_name: "operator" ">>" .

    $default  reduce using rule 186 (function_name)


State 294

  183 function_name: "operator" "++" .

    $default  reduce using rule 183 (function_name)


State 295

  184 function_name: "operator" "--" .

    $default  reduce using rule 184 (function_name)


State 296

  176 function_name: "operator" "<=" .

    $default  reduce using rule 176 (function_name)


State 297

  187 function_name: "operator" "<<=" .

    $default  reduce using rule 187 (function_name)


State 298

  188 function_name: "operator" ">>=" .

    $default  reduce using rule 188 (function_name)


State 299

  177 function_name: "operator" ">=" .

    $default  reduce using rule 177 (function_name)


State 300

  174 function_name: "operator" "==" .

    $default  reduce using rule 174 (function_name)


State 301

  175 function_name: "operator" "!=" .

    $default  reduce using rule 175 (function_name)


State 302

  202 function_name: "operator" "??" .

    $default  reduce using rule 202 (function_name)


State 303

  196 function_name: "operator" "?." .
  199              | "operator" "?." . "name"

    "name"  shift, and go to state 383

    $default  reduce using rule 196 (function_name)


State 304

  194 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 384


State 305

  200 function_name: "operator" ":=" .

    $default  reduce using rule 200 (function_name)


State 306

  189 function_name: "operator" "<<<" .

    $default  reduce using rule 189 (function_name)


State 307

  190 function_name: "operator" ">>>" .

    $default  reduce using rule 190 (function_name)


State 308

  191 function_name: "operator" "<<<=" .

    $default  reduce using rule 191 (function_name)


State 309

  192 function_name: "operator" ">>>=" .

    $default  reduce using rule 192 (function_name)


State 310

  163 function_name: "operator" "&&" .

    $default  reduce using rule 163 (function_name)


State 311

  164 function_name: "operator" "||" .

    $default  reduce using rule 164 (function_name)


State 312

  165 function_name: "operator" "^^" .

    $default  reduce using rule 165 (function_name)


State 313

  160 function_name: "operator" "&&=" .

    $default  reduce using rule 160 (function_name)


State 314

  161 function_name: "operator" "||=" .

    $default  reduce using rule 161 (function_name)


State 315

  162 function_name: "operator" "^^=" .

    $default  reduce using rule 162 (function_name)


State 316

  173 function_name: "operator" ".." .

    $default  reduce using rule 173 (function_name)


State 317

  207 function_name: "operator" '?' . "as"
  208              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 385


State 318

  179 function_name: "operator" '|' .

    $default  reduce using rule 179 (function_name)


State 319

  180 function_name: "operator" '^' .

    $default  reduce using rule 180 (function_name)


State 320

  178 function_name: "operator" '&' .

    $default  reduce using rule 178 (function_name)


State 321

  171 function_name: "operator" '<' .

    $default  reduce using rule 171 (function_name)


State 322

  172 function_name: "operator" '>' .

    $default  reduce using rule 172 (function_name)


State 323

  167 function_name: "operator" '-' .

    $default  reduce using rule 167 (function_name)


State 324

  166 function_name: "operator" '+' .

    $default  reduce using rule 166 (function_name)


State 325

  168 function_name: "operator" '*' .

    $default  reduce using rule 168 (function_name)


State 326

  169 function_name: "operator" '/' .

    $default  reduce using rule 169 (function_name)


State 327

  170 function_name: "operator" '%' .

    $default  reduce using rule 170 (function_name)


State 328

  151 function_name: "operator" '~' .

    $default  reduce using rule 151 (function_name)


State 329

  150 function_name: "operator" '!' .

    $default  reduce using rule 150 (function_name)


State 330

  195 function_name: "operator" '.' .
  197              | "operator" '.' . "name"
  198              | "operator" '.' . "name" ":="

    "name"  shift, and go to state 386

    $default  reduce using rule 195 (function_name)


State 331

  193 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 387


State 332

  181 function_name: "++" "operator" .

    $default  reduce using rule 181 (function_name)


State 333

  182 function_name: "--" "operator" .

    $default  reduce using rule 182 (function_name)


State 334

  145 optional_function_argument_list: '(' . ')'
  146                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 388
    ')'   shift, and go to state 389
    '@'   shift, and go to state 220

    $default  reduce using rule 507 (optional_field_annotation)

    metadata_argument_list                 go to state 221
    optional_field_annotation              go to state 390
    function_argument_declaration_no_type  go to state 391
    function_argument_declaration_type     go to state 392
    function_argument_list                 go to state 393


State 335

  238 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 394

    $default  reduce using rule 147 (optional_function_type)

    optional_function_type  go to state 395


State 336

  240 function_declaration: optional_public_or_private_function $@10 function_declaration_header optional_emit_semis . expression_block

    $default  reduce using rule 245 ($@13)

    expression_block  go to state 396
    $@13              go to state 397


State 337

  609 optional_enum_basic_type_declaration: ':' . enum_basic_type_declaration

    "int"     shift, and go to state 398
    "uint"    shift, and go to state 399
    "int64"   shift, and go to state 400
    "uint64"  shift, and go to state 401
    "int8"    shift, and go to state 402
    "uint8"   shift, and go to state 403
    "int16"   shift, and go to state 404
    "uint16"  shift, and go to state 405

    enum_basic_type_declaration  go to state 406


State 338

  619 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@43 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration . optional_emit_commas '{' $@44 enum_list optional_commas $@45 '}'

    "new line, comma"  shift, and go to state 177

    $default  reduce using rule 614 (optional_emit_commas)

    emit_commas           go to state 178
    optional_emit_commas  go to state 407


State 339

  623 optional_sealed: "sealed" .

    $default  reduce using rule 623 (optional_sealed)


State 340

  624 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 408


State 341

  637 structure_declaration: optional_annotation_list_with_emit_semis $@46 class_or_struct optional_public_or_private_structure $@47 structure_name . optional_emit_semis $@48 optional_struct_variable_declaration_list

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 409


State 342

  588 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}' .

    $default  reduce using rule 588 (global_let)


State 343

  585 global_variable_declaration_list: global_variable_declaration_list SEMICOLON .

    $default  reduce using rule 585 (global_variable_declaration_list)


State 344

  587 global_variable_declaration_list: global_variable_declaration_list $@40 . optional_field_annotation let_variable_declaration

    '@'  shift, and go to state 220

    $default  reduce using rule 507 (optional_field_annotation)

    metadata_argument_list     go to state 221
    optional_field_annotation  go to state 410


State 345

  123 metadata_argument_list: '@' annotation_argument . optional_emit_semis

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 411


State 346

  124 metadata_argument_list: metadata_argument_list '@' . annotation_argument optional_emit_semis

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 412


State 347

  568 global_let_variable_name_with_pos_list: "name" .

    $default  reduce using rule 568 (global_let_variable_name_with_pos_list)


State 348

  569 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list . ',' "name"
  576 global_let_variable_declaration: global_let_variable_name_with_pos_list . ':' type_declaration_no_options SEMICOLON
  577                                | global_let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  578                                | global_let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr SEMICOLON

    ','  shift, and go to state 413
    ':'  shift, and go to state 414
    '&'  shift, and go to state 415

    $default  reduce using rule 561 (optional_ref)

    optional_ref  go to state 416


State 349

  590 global_let: kwd_let optional_shared optional_public_or_private_variable $@41 optional_field_annotation global_let_variable_declaration .

    $default  reduce using rule 590 (global_let)


State 350

  109 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 109 (annotation_argument_value_list)


State 351

  706 type_declaration_no_options_no_dim: "type" '<' . $@51 type_declaration '>' $@52

    $default  reduce using rule 704 ($@51)

    $@51  go to state 417


State 352

  729 type_declaration_no_options_no_dim: "array" '<' . $@56 type_declaration '>' $@57

    $default  reduce using rule 727 ($@56)

    $@56  go to state 418


State 353

  732 type_declaration_no_options_no_dim: "table" '<' . $@58 table_type_pair '>' $@59

    $default  reduce using rule 730 ($@58)

    $@58  go to state 419


State 354

  707 type_declaration_no_options_no_dim: "typedecl" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 485
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 355

  735 type_declaration_no_options_no_dim: "iterator" '<' . $@60 type_declaration '>' $@61

    $default  reduce using rule 733 ($@60)

    $@60  go to state 495


State 356

  725 type_declaration_no_options_no_dim: "smart_ptr" '<' . $@54 type_declaration '>' $@55

    $default  reduce using rule 723 ($@54)

    $@54  go to state 496


State 357

  680 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 497


State 358

  689 bitfield_type_declaration: "bitfield" '<' . $@49 bitfield_bits '>' $@50

    $default  reduce using rule 687 ($@49)

    $@49  go to state 498


State 359

  739 type_declaration_no_options_no_dim: "block" '<' . $@62 type_declaration '>' $@63
  742                                   | "block" '<' . $@64 optional_function_argument_list optional_function_type '>' $@65

    ':'       reduce using rule 740 ($@64)
    '>'       reduce using rule 740 ($@64)
    '('       reduce using rule 740 ($@64)
    $default  reduce using rule 737 ($@62)

    $@62  go to state 499
    $@64  go to state 500


State 360

  746 type_declaration_no_options_no_dim: "function" '<' . $@66 type_declaration '>' $@67
  749                                   | "function" '<' . $@68 optional_function_argument_list optional_function_type '>' $@69

    ':'       reduce using rule 747 ($@68)
    '>'       reduce using rule 747 ($@68)
    '('       reduce using rule 747 ($@68)
    $default  reduce using rule 744 ($@66)

    $@66  go to state 501
    $@68  go to state 502


State 361

  753 type_declaration_no_options_no_dim: "lambda" '<' . $@70 type_declaration '>' $@71
  756                                   | "lambda" '<' . $@72 optional_function_argument_list optional_function_type '>' $@73

    ':'       reduce using rule 754 ($@72)
    '>'       reduce using rule 754 ($@72)
    '('       reduce using rule 754 ($@72)
    $default  reduce using rule 751 ($@70)

    $@70  go to state 503
    $@72  go to state 504


State 362

  759 type_declaration_no_options_no_dim: "tuple" '<' . $@74 tuple_type_list '>' $@75

    $default  reduce using rule 757 ($@74)

    $@74  go to state 505


State 363

  762 type_declaration_no_options_no_dim: "variant" '<' . $@76 variant_type_list '>' $@77

    $default  reduce using rule 760 ($@76)

    $@76  go to state 506


State 364

  681 auto_type_declaration: "$t" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 507
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 365

  708 type_declaration_no_options_no_dim: '$' name_in_namespace . '(' optional_expr_list ')'
  710                                   | '$' name_in_namespace . '<' $@53 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    '<'  shift, and go to state 508
    '('  shift, and go to state 509


State 366

  713 type_declaration_no_options_no_dim: type_declaration_no_options "const" .

    $default  reduce using rule 713 (type_declaration_no_options_no_dim)


State 367

  718 type_declaration_no_options_no_dim: type_declaration_no_options "implicit" .

    $default  reduce using rule 718 (type_declaration_no_options_no_dim)


State 368

  712 type_declaration_no_options_no_dim: type_declaration_no_options "explicit" .

    $default  reduce using rule 712 (type_declaration_no_options_no_dim)


State 369

  720 type_declaration_no_options_no_dim: type_declaration_no_options "==" . "const"
  721                                   | type_declaration_no_options "==" . '&'

    "const"  shift, and go to state 510
    '&'      shift, and go to state 511


State 370

  726 type_declaration_no_options_no_dim: type_declaration_no_options "??" .

    $default  reduce using rule 726 (type_declaration_no_options_no_dim)


State 371

  722 type_declaration_no_options_no_dim: type_declaration_no_options '?' .

    $default  reduce using rule 722 (type_declaration_no_options_no_dim)


State 372

  715 type_declaration_no_options_no_dim: type_declaration_no_options '&' .

    $default  reduce using rule 715 (type_declaration_no_options_no_dim)


State 373

  711 type_declaration_no_options_no_dim: type_declaration_no_options '-' . '[' ']'
  714                                   | type_declaration_no_options '-' . "const"
  716                                   | type_declaration_no_options '-' . '&'
  719                                   | type_declaration_no_options '-' . '#'

    "const"  shift, and go to state 512
    '&'      shift, and go to state 513
    '['      shift, and go to state 514
    '#'      shift, and go to state 515


State 374

  717 type_declaration_no_options_no_dim: type_declaration_no_options '#' .

    $default  reduce using rule 717 (type_declaration_no_options_no_dim)


State 375

  694 dim_list: '[' . expr ']'
  695         | '[' . ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    ']'                               shift, and go to state 516
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 517
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 376

  696 dim_list: dim_list . '[' expr ']'
  697         | dim_list . '[' ']'
  699 type_declaration_no_options: type_declaration_no_options_no_dim dim_list .

    '['  shift, and go to state 518

    $default  reduce using rule 699 (type_declaration_no_options)


State 377

  764 type_declaration: type_declaration '|' . type_declaration_no_options
  765                 | type_declaration '|' . '#'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268
    '#'          shift, and go to state 519

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 520
    type_declaration_no_options_no_dim  go to state 275


State 378

  780 bitfield_alias_declaration: "bitfield" $@86 optional_public_or_private_alias "name" optional_emit_commas $@87 '{' . $@88 bitfield_alias_bits optional_commas $@89 '}'

    $default  reduce using rule 778 ($@88)

    $@88  go to state 521


State 379

  770 tuple_alias_declaration: "tuple" $@78 optional_public_or_private_alias "name" optional_emit_semis $@79 '{' . $@80 tuple_alias_type_list optional_semis $@81 '}'

    $default  reduce using rule 768 ($@80)

    $@80  go to state 522


State 380

  775 variant_alias_declaration: "variant" $@82 optional_public_or_private_alias "name" optional_emit_semis $@83 '{' . $@84 variant_alias_type_list optional_semis $@85 '}'

    $default  reduce using rule 773 ($@84)

    $@84  go to state 523


State 381

  205 function_name: "operator" "is" "name" .

    $default  reduce using rule 205 (function_name)


State 382

  206 function_name: "operator" "as" "name" .

    $default  reduce using rule 206 (function_name)


State 383

  199 function_name: "operator" "?." "name" .

    $default  reduce using rule 199 (function_name)


State 384

  194 function_name: "operator" "?[" ']' .

    $default  reduce using rule 194 (function_name)


State 385

  207 function_name: "operator" '?' "as" .
  208              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 524

    $default  reduce using rule 207 (function_name)


State 386

  197 function_name: "operator" '.' "name" .
  198              | "operator" '.' "name" . ":="

    ":="  shift, and go to state 525

    $default  reduce using rule 197 (function_name)


State 387

  193 function_name: "operator" '[' ']' .

    $default  reduce using rule 193 (function_name)


State 388

  530 function_argument_declaration_type: "$a" . '(' expr ')'

    '('  shift, and go to state 526


State 389

  145 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 145 (optional_function_argument_list)


State 390

  528 function_argument_declaration_no_type: optional_field_annotation . kwd_let_var_or_nothing variable_declaration_no_type
  529 function_argument_declaration_type: optional_field_annotation . kwd_let_var_or_nothing variable_declaration_type

    "let"  shift, and go to state 527
    "var"  shift, and go to state 528

    $default  reduce using rule 302 (kwd_let_var_or_nothing)

    kwd_let_var_or_nothing  go to state 529


State 391

  531 function_argument_list: function_argument_declaration_no_type .
  533                       | function_argument_declaration_no_type . ';' function_argument_list

    ';'  shift, and go to state 530

    $default  reduce using rule 531 (function_argument_list)


State 392

  532 function_argument_list: function_argument_declaration_type .
  534                       | function_argument_declaration_type . ';' function_argument_list
  535                       | function_argument_declaration_type . ',' function_argument_list

    ','  shift, and go to state 531
    ';'  shift, and go to state 532

    $default  reduce using rule 532 (function_argument_list)


State 393

  146 optional_function_argument_list: '(' function_argument_list . ')'

    ')'  shift, and go to state 533


State 394

  148 optional_function_type: ':' . type_declaration

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 534


State 395

  238 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 238 (function_declaration_header)


State 396

  240 function_declaration: optional_public_or_private_function $@10 function_declaration_header optional_emit_semis expression_block .

    $default  reduce using rule 240 (function_declaration)


State 397

  247 expression_block: $@13 . '{' expressions $@14 '}' expression_block_finally

    '{'  shift, and go to state 535


State 398

  670 enum_basic_type_declaration: "int" .

    $default  reduce using rule 670 (enum_basic_type_declaration)


State 399

  673 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 673 (enum_basic_type_declaration)


State 400

  676 enum_basic_type_declaration: "int64" .

    $default  reduce using rule 676 (enum_basic_type_declaration)


State 401

  677 enum_basic_type_declaration: "uint64" .

    $default  reduce using rule 677 (enum_basic_type_declaration)


State 402

  671 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 671 (enum_basic_type_declaration)


State 403

  674 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 674 (enum_basic_type_declaration)


State 404

  672 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 672 (enum_basic_type_declaration)


State 405

  675 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 675 (enum_basic_type_declaration)


State 406

  609 optional_enum_basic_type_declaration: ':' enum_basic_type_declaration .

    $default  reduce using rule 609 (optional_enum_basic_type_declaration)


State 407

  619 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@43 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas . '{' $@44 enum_list optional_commas $@45 '}'

    '{'  shift, and go to state 536


State 408

  624 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 537

    $default  reduce using rule 620 (optional_structure_parent)

    optional_structure_parent  go to state 538


State 409

  637 structure_declaration: optional_annotation_list_with_emit_semis $@46 class_or_struct optional_public_or_private_structure $@47 structure_name optional_emit_semis . $@48 optional_struct_variable_declaration_list

    $default  reduce using rule 636 ($@48)

    $@48  go to state 539


State 410

  587 global_variable_declaration_list: global_variable_declaration_list $@40 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 540
    "name"  shift, and go to state 541

    let_variable_name_with_pos_list  go to state 542
    let_variable_declaration         go to state 543


State 411

  123 metadata_argument_list: '@' annotation_argument optional_emit_semis .

    $default  reduce using rule 123 (metadata_argument_list)


State 412

  124 metadata_argument_list: metadata_argument_list '@' annotation_argument . optional_emit_semis

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 544


State 413

  569 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list ',' . "name"

    "name"  shift, and go to state 545


State 414

  576 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' . type_declaration_no_options SEMICOLON
  577                                | global_let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr SEMICOLON

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 546
    type_declaration_no_options_no_dim  go to state 275


State 415

  562 optional_ref: '&' .

    $default  reduce using rule 562 (optional_ref)


State 416

  578 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr SEMICOLON

    "<-"  shift, and go to state 547
    ":="  shift, and go to state 548
    '='   shift, and go to state 549

    copy_or_move_or_clone  go to state 550


State 417

  706 type_declaration_no_options_no_dim: "type" '<' $@51 . type_declaration '>' $@52

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 551


State 418

  729 type_declaration_no_options_no_dim: "array" '<' $@56 . type_declaration '>' $@57

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 552


State 419

  732 type_declaration_no_options_no_dim: "table" '<' $@58 . table_type_pair '>' $@59

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    table_type_pair                     go to state 553
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 554


State 420

  807 make_struct_decl: "struct" . '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 555


State 421

  810 make_struct_decl: "class" . '<' $@92 type_declaration_no_options '>' $@93 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 556


State 422

  411 expr: "true" .

    $default  reduce using rule 411 (expr)


State 423

  412 expr: "false" .

    $default  reduce using rule 412 (expr)


State 424

  286 expr_new: "new" . new_type_declaration
  287         | "new" . new_type_declaration '(' use_initializer ')'
  288         | "new" . new_type_declaration '(' expr_list ')'
  289         | "new" . new_type_declaration '(' make_struct_single ')'
  290         | "new" . new_type_declaration '(' "uninitialized" make_struct_single ')'
  291         | "new" . make_decl

    "struct"       shift, and go to state 420
    "class"        shift, and go to state 421
    "array"        shift, and go to state 427
    "table"        shift, and go to state 429
    "fixed_array"  shift, and go to state 436
    "default"      shift, and go to state 437
    "tuple"        shift, and go to state 439
    "variant"      shift, and go to state 440
    "::"           shift, and go to state 57
    "name"         shift, and go to state 58
    '<'            shift, and go to state 557
    '['            shift, and go to state 464
    '{'            shift, and go to state 468

    name_in_namespace           go to state 269
    new_type_declaration        go to state 558
    structure_type_declaration  go to state 559
    make_decl                   go to state 560
    make_struct_decl            go to state 490
    make_tuple_call             go to state 491
    make_dim_decl               go to state 492
    make_table_decl             go to state 493
    array_comprehension         go to state 494


State 425

  326 expr_type_info: "typeinfo" . name_in_namespace '(' expr ')'
  327               | "typeinfo" . name_in_namespace '<' "name" '>' '(' expr ')'
  328               | "typeinfo" . name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')'

    "::"    shift, and go to state 57
    "name"  shift, and go to state 58

    name_in_namespace  go to state 561


State 426

  325 expr_type_decl: "type" . '<' $@23 type_declaration '>' $@24

    '<'  shift, and go to state 562


State 427

  826 make_dim_decl: "array" . "struct" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')'
  829              | "array" . "tuple" '<' $@102 tuple_type_list '>' $@103 '(' use_initializer optional_make_struct_dim_decl ')'
  832              | "array" . "variant" '<' $@104 variant_type_list '>' $@105 '(' make_variant_dim ')'
  833              | "array" . '(' expr_list optional_comma ')'
  836              | "array" . '<' $@106 type_declaration_no_options '>' $@107 '(' optional_expr_list ')'

    "struct"   shift, and go to state 563
    "tuple"    shift, and go to state 564
    "variant"  shift, and go to state 565
    '<'        shift, and go to state 566
    '('        shift, and go to state 567


State 428

  405 expr: "null" .

    $default  reduce using rule 405 (expr)


State 429

  845 make_table_decl: "table" . '(' expr_map_tuple_list optional_comma ')'
  846                | "table" . '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  847                | "table" . '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    '<'  shift, and go to state 568
    '('  shift, and go to state 569


State 430

  456 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 570


State 431

  316 expr_cast: "cast" . '<' $@17 type_declaration_no_options '>' $@18 expr

    '<'  shift, and go to state 571


State 432

  319 expr_cast: "upcast" . '<' $@19 type_declaration_no_options '>' $@20 expr

    '<'  shift, and go to state 572


State 433

  457 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 573


State 434

  322 expr_cast: "reinterpret" . '<' $@21 type_declaration_no_options '>' $@22 expr

    '<'  shift, and go to state 574


State 435

  487 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 575


State 436

  837 make_dim_decl: "fixed_array" . '(' expr_list optional_comma ')'
  840              | "fixed_array" . '<' $@108 type_declaration_no_options '>' $@109 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 576
    '('  shift, and go to state 577


State 437

  816 make_struct_decl: "default" . '<' $@96 type_declaration_no_options '>' $@97 use_initializer

    '<'  shift, and go to state 578


State 438

  669 basic_type_declaration: "bitfield" .

    $default  reduce using rule 669 (basic_type_declaration)


State 439

  819 make_tuple_call: "tuple" . '(' expr_list optional_comma ')'
  822                | "tuple" . '<' $@98 tuple_type_list '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 579
    '('  shift, and go to state 580


State 440

  813 make_struct_decl: "variant" . '<' $@94 variant_type_list '>' $@95 '(' use_initializer make_variant_dim ')'

    '<'  shift, and go to state 581


State 441

  488 expr_generator: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  489               | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  490               | "generator" . '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block

    '<'  shift, and go to state 582


State 442

  441 expr: "++" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 583
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 443

  442 expr: "--" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 584
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 444

  491 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 585


State 445

  492 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 586


State 446

  493 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 587


State 447

  494 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 588


State 448

  495 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 589


State 449

  497 expr_mtag: "$c" . '(' expr ')' '(' ')'
  498          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 590


State 450

  496 expr_mtag: "..." .

    $default  reduce using rule 496 (expr_mtag)


State 451

  349 expr_numeric_const: "integer constant" .

    $default  reduce using rule 349 (expr_numeric_const)


State 452

  351 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 351 (expr_numeric_const)


State 453

  350 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 350 (expr_numeric_const)


State 454

  352 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 352 (expr_numeric_const)


State 455

  353 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 353 (expr_numeric_const)


State 456

  354 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 354 (expr_numeric_const)


State 457

  355 expr_numeric_const: "double constant" .

    $default  reduce using rule 355 (expr_numeric_const)


State 458

   41 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 38 (string_builder_body)

    string_builder_body  go to state 591


State 459

  418 expr: '-' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 592
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 460

  417 expr: '+' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 593
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 461

  455 expr: '*' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 594
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 462

  416 expr: '~' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 595
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 463

  415 expr: '!' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 596
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 464

  823 make_dim_decl: '[' . optional_expr_list ']'
  852 array_comprehension: '[' . "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  853                    | '[' . "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "for"                             shift, and go to state 597
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "iterator"                        shift, and go to state 598
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 271 (optional_expr_list)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    optional_expr_list      go to state 599
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 600
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 465

  445 expr: '(' . expr_list optional_comma ')'
  446     | '(' . make_struct_single ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "$f"                              shift, and go to state 602
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 603
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 604
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_fields      go to state 605
    make_struct_single      go to state 606
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 466

  334 block_or_lambda: '$' .

    $default  reduce using rule 334 (block_or_lambda)


State 467

  335 block_or_lambda: '@' .
  336                | '@' . '@'
  381 func_addr_expr: '@' . '@' func_addr_name
  384               | '@' . '@' '<' $@25 type_declaration_no_options '>' $@26 func_addr_name
  387               | '@' . '@' '<' $@27 optional_function_argument_list optional_function_type '>' $@28 func_addr_name
  506 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 607

    $default  reduce using rule 335 (block_or_lambda)


State 468

  844 make_table_decl: '{' . $@110 optional_emit_semis optional_expr_map_tuple_list '}'
  854 array_comprehension: '{' . "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "for"  shift, and go to state 608

    $default  reduce using rule 843 ($@110)

    $@110  go to state 609


State 469

  409 expr: string_builder .

    $default  reduce using rule 409 (expr)


State 470

  408 expr: expr_reader .

    $default  reduce using rule 408 (expr)


State 471

  486 expr: expr_call_pipe .

    $default  reduce using rule 486 (expr)


State 472

  375 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  376                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  398 expr_call: name_in_namespace . '(' ')'
  399          | name_in_namespace . '(' "uninitialized" ')'
  400          | name_in_namespace . '(' make_struct_single ')'
  401          | name_in_namespace . '(' "uninitialized" make_struct_single ')'
  402          | name_in_namespace . '(' expr_list ')'
  406 expr: name_in_namespace .

    '('  shift, and go to state 610

    $default  reduce using rule 406 (expr)


State 473

  479 expr: expr_new .

    $default  reduce using rule 479 (expr)


State 474

  478 expr: expr_cast .

    $default  reduce using rule 478 (expr)


State 475

  477 expr: expr_type_decl .

    $default  reduce using rule 477 (expr)


State 476

  476 expr: expr_type_info .

    $default  reduce using rule 476 (expr)


State 477

  346 expr_full_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

    '['  shift, and go to state 611

    $default  reduce using rule 140 (optional_annotation_list)

    optional_annotation_list  go to state 612


State 478

  482 expr: expr_full_block .

    $default  reduce using rule 482 (expr)


State 479

  407 expr: expr_numeric_const .

    $default  reduce using rule 407 (expr)


State 480

  481 expr: expr_named_call .

    $default  reduce using rule 481 (expr)


State 481

  480 expr: expr_method_call .

    $default  reduce using rule 480 (expr)


State 482

  453 expr: func_addr_expr .

    $default  reduce using rule 453 (expr)


State 483

  413 expr: expr_field .

    $default  reduce using rule 413 (expr)


State 484

  248 expr_call_pipe: expr_call . expr_full_block_assumed_piped
  454 expr: expr_call .

    '$'  shift, and go to state 466
    '@'  shift, and go to state 613
    '{'  shift, and go to state 614

    $default  reduce using rule 454 (expr)

    block_or_lambda                go to state 615
    expr_full_block_assumed_piped  go to state 616


State 485

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  707 type_declaration_no_options_no_dim: "typedecl" '(' expr . ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 652


State 486

  458 expr: expr_generator .

    $default  reduce using rule 458 (expr)


State 487

  414 expr: expr_mtag .

    $default  reduce using rule 414 (expr)


State 488

  403 expr_call: basic_type_declaration . '(' ')'
  404          | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 653


State 489

  410 expr: make_decl .

    $default  reduce using rule 410 (expr)


State 490

  781 make_decl: make_struct_decl .

    $default  reduce using rule 781 (make_decl)


State 491

  785 make_decl: make_tuple_call .

    $default  reduce using rule 785 (make_decl)


State 492

  782 make_decl: make_dim_decl .

    $default  reduce using rule 782 (make_decl)


State 493

  783 make_decl: make_table_decl .

    $default  reduce using rule 783 (make_decl)


State 494

  784 make_decl: array_comprehension .

    $default  reduce using rule 784 (make_decl)


State 495

  735 type_declaration_no_options_no_dim: "iterator" '<' $@60 . type_declaration '>' $@61

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 654


State 496

  725 type_declaration_no_options_no_dim: "smart_ptr" '<' $@54 . type_declaration '>' $@55

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 655


State 497

  680 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 656


State 498

  689 bitfield_type_declaration: "bitfield" '<' $@49 . bitfield_bits '>' $@50

    "name"  shift, and go to state 657

    bitfield_bits  go to state 658


State 499

  739 type_declaration_no_options_no_dim: "block" '<' $@62 . type_declaration '>' $@63

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 659


State 500

  742 type_declaration_no_options_no_dim: "block" '<' $@64 . optional_function_argument_list optional_function_type '>' $@65

    '('  shift, and go to state 334

    $default  reduce using rule 144 (optional_function_argument_list)

    optional_function_argument_list  go to state 660


State 501

  746 type_declaration_no_options_no_dim: "function" '<' $@66 . type_declaration '>' $@67

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 661


State 502

  749 type_declaration_no_options_no_dim: "function" '<' $@68 . optional_function_argument_list optional_function_type '>' $@69

    '('  shift, and go to state 334

    $default  reduce using rule 144 (optional_function_argument_list)

    optional_function_argument_list  go to state 662


State 503

  753 type_declaration_no_options_no_dim: "lambda" '<' $@70 . type_declaration '>' $@71

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 663


State 504

  756 type_declaration_no_options_no_dim: "lambda" '<' $@72 . optional_function_argument_list optional_function_type '>' $@73

    '('  shift, and go to state 334

    $default  reduce using rule 144 (optional_function_argument_list)

    optional_function_argument_list  go to state 664


State 505

  759 type_declaration_no_options_no_dim: "tuple" '<' $@74 . tuple_type_list '>' $@75

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 665
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    tuple_type                          go to state 666
    tuple_type_list                     go to state 667
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 668


State 506

  762 type_declaration_no_options_no_dim: "variant" '<' $@76 . variant_type_list '>' $@77

    "name"  shift, and go to state 669

    variant_type       go to state 670
    variant_type_list  go to state 671


State 507

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  681 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 672


State 508

  710 type_declaration_no_options_no_dim: '$' name_in_namespace '<' . $@53 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    $default  reduce using rule 709 ($@53)

    $@53  go to state 673


State 509

  708 type_declaration_no_options_no_dim: '$' name_in_namespace '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 271 (optional_expr_list)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    optional_expr_list      go to state 674
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 600
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 510

  720 type_declaration_no_options_no_dim: type_declaration_no_options "==" "const" .

    $default  reduce using rule 720 (type_declaration_no_options_no_dim)


State 511

  721 type_declaration_no_options_no_dim: type_declaration_no_options "==" '&' .

    $default  reduce using rule 721 (type_declaration_no_options_no_dim)


State 512

  714 type_declaration_no_options_no_dim: type_declaration_no_options '-' "const" .

    $default  reduce using rule 714 (type_declaration_no_options_no_dim)


State 513

  716 type_declaration_no_options_no_dim: type_declaration_no_options '-' '&' .

    $default  reduce using rule 716 (type_declaration_no_options_no_dim)


State 514

  711 type_declaration_no_options_no_dim: type_declaration_no_options '-' '[' . ']'

    ']'  shift, and go to state 675


State 515

  719 type_declaration_no_options_no_dim: type_declaration_no_options '-' '#' .

    $default  reduce using rule 719 (type_declaration_no_options_no_dim)


State 516

  695 dim_list: '[' ']' .

    $default  reduce using rule 695 (dim_list)


State 517

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  694 dim_list: '[' expr . ']'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ']'    shift, and go to state 676


State 518

  696 dim_list: dim_list '[' . expr ']'
  697         | dim_list '[' . ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    ']'                               shift, and go to state 677
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 678
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 519

  765 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 765 (type_declaration)


State 520

  711 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  712                                   | type_declaration_no_options . "explicit"
  713                                   | type_declaration_no_options . "const"
  714                                   | type_declaration_no_options . '-' "const"
  715                                   | type_declaration_no_options . '&'
  716                                   | type_declaration_no_options . '-' '&'
  717                                   | type_declaration_no_options . '#'
  718                                   | type_declaration_no_options . "implicit"
  719                                   | type_declaration_no_options . '-' '#'
  720                                   | type_declaration_no_options . "==" "const"
  721                                   | type_declaration_no_options . "==" '&'
  722                                   | type_declaration_no_options . '?'
  726                                   | type_declaration_no_options . "??"
  764 type_declaration: type_declaration '|' type_declaration_no_options .

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374

    $default  reduce using rule 764 (type_declaration)


State 521

  780 bitfield_alias_declaration: "bitfield" $@86 optional_public_or_private_alias "name" optional_emit_commas $@87 '{' $@88 . bitfield_alias_bits optional_commas $@89 '}'

    "name"  shift, and go to state 679

    $default  reduce using rule 684 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 680


State 522

  770 tuple_alias_declaration: "tuple" $@78 optional_public_or_private_alias "name" optional_emit_semis $@79 '{' $@80 . tuple_alias_type_list optional_semis $@81 '}'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 665
    '$'          shift, and go to state 268

    $default  reduce using rule 540 (tuple_alias_type_list)

    name_in_namespace                   go to state 269
    tuple_type                          go to state 681
    tuple_alias_type_list               go to state 682
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 668


State 523

  775 variant_alias_declaration: "variant" $@82 optional_public_or_private_alias "name" optional_emit_semis $@83 '{' $@84 . variant_alias_type_list optional_semis $@85 '}'

    "name"  shift, and go to state 669

    $default  reduce using rule 546 (variant_alias_type_list)

    variant_type             go to state 683
    variant_alias_type_list  go to state 684


State 524

  208 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 208 (function_name)


State 525

  198 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 198 (function_name)


State 526

  530 function_argument_declaration_type: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 685
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 527

  300 kwd_let_var_or_nothing: "let" .

    $default  reduce using rule 300 (kwd_let_var_or_nothing)


State 528

  301 kwd_let_var_or_nothing: "var" .

    $default  reduce using rule 301 (kwd_let_var_or_nothing)


State 529

  528 function_argument_declaration_no_type: optional_field_annotation kwd_let_var_or_nothing . variable_declaration_no_type
  529 function_argument_declaration_type: optional_field_annotation kwd_let_var_or_nothing . variable_declaration_type

    "$i"    shift, and go to state 686
    "name"  shift, and go to state 687

    variable_declaration_no_type  go to state 688
    variable_declaration_type     go to state 689
    variable_name_with_pos_list   go to state 690


State 530

  533 function_argument_list: function_argument_declaration_no_type ';' . function_argument_list

    "$a"  shift, and go to state 388
    '@'   shift, and go to state 220

    $default  reduce using rule 507 (optional_field_annotation)

    metadata_argument_list                 go to state 221
    optional_field_annotation              go to state 390
    function_argument_declaration_no_type  go to state 391
    function_argument_declaration_type     go to state 392
    function_argument_list                 go to state 691


State 531

  535 function_argument_list: function_argument_declaration_type ',' . function_argument_list

    "$a"  shift, and go to state 388
    '@'   shift, and go to state 220

    $default  reduce using rule 507 (optional_field_annotation)

    metadata_argument_list                 go to state 221
    optional_field_annotation              go to state 390
    function_argument_declaration_no_type  go to state 391
    function_argument_declaration_type     go to state 392
    function_argument_list                 go to state 692


State 532

  534 function_argument_list: function_argument_declaration_type ';' . function_argument_list

    "$a"  shift, and go to state 388
    '@'   shift, and go to state 220

    $default  reduce using rule 507 (optional_field_annotation)

    metadata_argument_list                 go to state 221
    optional_field_annotation              go to state 390
    function_argument_declaration_no_type  go to state 391
    function_argument_declaration_type     go to state 392
    function_argument_list                 go to state 693


State 533

  146 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 146 (optional_function_argument_list)


State 534

  148 optional_function_type: ':' type_declaration .
  764 type_declaration: type_declaration . '|' type_declaration_no_options
  765                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 148 (optional_function_type)


State 535

  247 expression_block: $@13 '{' . expressions $@14 '}' expression_block_finally

    $default  reduce using rule 268 (expressions)

    expressions  go to state 694


State 536

  619 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@43 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' . $@44 enum_list optional_commas $@45 '}'

    $default  reduce using rule 617 ($@44)

    $@44  go to state 695


State 537

  621 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 57
    "name"  shift, and go to state 58

    name_in_namespace  go to state 696


State 538

  624 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 624 (structure_name)


State 539

  637 structure_declaration: optional_annotation_list_with_emit_semis $@46 class_or_struct optional_public_or_private_structure $@47 structure_name optional_emit_semis $@48 . optional_struct_variable_declaration_list

    ';'  shift, and go to state 697
    '{'  shift, and go to state 698

    optional_struct_variable_declaration_list  go to state 699


State 540

  564 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 700


State 541

  563 let_variable_name_with_pos_list: "name" .
  565                                | "name" . "aka" "name"

    "aka"  shift, and go to state 701

    $default  reduce using rule 563 (let_variable_name_with_pos_list)


State 542

  566 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  567                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  573 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options SEMICOLON
  574                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  575                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr SEMICOLON

    ','  shift, and go to state 702
    ':'  shift, and go to state 703
    '&'  shift, and go to state 415

    $default  reduce using rule 561 (optional_ref)

    optional_ref  go to state 704


State 543

  587 global_variable_declaration_list: global_variable_declaration_list $@40 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 587 (global_variable_declaration_list)


State 544

  124 metadata_argument_list: metadata_argument_list '@' annotation_argument optional_emit_semis .

    $default  reduce using rule 124 (metadata_argument_list)


State 545

  569 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list ',' "name" .

    $default  reduce using rule 569 (global_let_variable_name_with_pos_list)


State 546

  576 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options . SEMICOLON
  577                                | global_let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr SEMICOLON
  711 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  712                                   | type_declaration_no_options . "explicit"
  713                                   | type_declaration_no_options . "const"
  714                                   | type_declaration_no_options . '-' "const"
  715                                   | type_declaration_no_options . '&'
  716                                   | type_declaration_no_options . '-' '&'
  717                                   | type_declaration_no_options . '#'
  718                                   | type_declaration_no_options . "implicit"
  719                                   | type_declaration_no_options . '-' '#'
  720                                   | type_declaration_no_options . "==" "const"
  721                                   | type_declaration_no_options . "==" '&'
  722                                   | type_declaration_no_options . '?'
  726                                   | type_declaration_no_options . "??"

    "const"                shift, and go to state 366
    "implicit"             shift, and go to state 367
    "explicit"             shift, and go to state 368
    "=="                   shift, and go to state 369
    "<-"                   shift, and go to state 547
    "??"                   shift, and go to state 370
    ":="                   shift, and go to state 548
    "new line, semicolon"  shift, and go to state 13
    '='                    shift, and go to state 549
    '?'                    shift, and go to state 371
    '&'                    shift, and go to state 372
    '-'                    shift, and go to state 373
    ';'                    shift, and go to state 16
    '#'                    shift, and go to state 374

    SEMICOLON              go to state 705
    copy_or_move_or_clone  go to state 706


State 547

  559 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 559 (copy_or_move_or_clone)


State 548

  560 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 560 (copy_or_move_or_clone)


State 549

  558 copy_or_move_or_clone: '=' .

    $default  reduce using rule 558 (copy_or_move_or_clone)


State 550

  578 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 707
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 551

  706 type_declaration_no_options_no_dim: "type" '<' $@51 type_declaration . '>' $@52
  764 type_declaration: type_declaration . '|' type_declaration_no_options
  765                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 708


State 552

  729 type_declaration_no_options_no_dim: "array" '<' $@56 type_declaration . '>' $@57
  764 type_declaration: type_declaration . '|' type_declaration_no_options
  765                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 709


State 553

  732 type_declaration_no_options_no_dim: "table" '<' $@58 table_type_pair . '>' $@59

    '>'  shift, and go to state 710


State 554

  692 table_type_pair: type_declaration .
  693                | type_declaration . c_or_s type_declaration
  764 type_declaration: type_declaration . '|' type_declaration_no_options
  765                 | type_declaration . '|' '#'

    "new line, comma"      shift, and go to state 711
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 712
    '|'                    shift, and go to state 377
    ';'                    shift, and go to state 16

    $default  reduce using rule 692 (table_type_pair)

    COMMA      go to state 713
    SEMICOLON  go to state 714
    c_or_s     go to state 715


State 555

  807 make_struct_decl: "struct" '<' . $@90 type_declaration_no_options '>' $@91 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 805 ($@90)

    $@90  go to state 716


State 556

  810 make_struct_decl: "class" '<' . $@92 type_declaration_no_options '>' $@93 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 808 ($@92)

    $@92  go to state 717


State 557

  284 new_type_declaration: '<' . $@15 type_declaration '>' $@16

    $default  reduce using rule 282 ($@15)

    $@15  go to state 718


State 558

  286 expr_new: "new" new_type_declaration .
  287         | "new" new_type_declaration . '(' use_initializer ')'
  288         | "new" new_type_declaration . '(' expr_list ')'
  289         | "new" new_type_declaration . '(' make_struct_single ')'
  290         | "new" new_type_declaration . '(' "uninitialized" make_struct_single ')'

    '('  shift, and go to state 719

    $default  reduce using rule 286 (expr_new)


State 559

  285 new_type_declaration: structure_type_declaration .

    $default  reduce using rule 285 (new_type_declaration)


State 560

  291 expr_new: "new" make_decl .

    $default  reduce using rule 291 (expr_new)


State 561

  326 expr_type_info: "typeinfo" name_in_namespace . '(' expr ')'
  327               | "typeinfo" name_in_namespace . '<' "name" '>' '(' expr ')'
  328               | "typeinfo" name_in_namespace . '<' "name" c_or_s "name" '>' '(' expr ')'

    '<'  shift, and go to state 720
    '('  shift, and go to state 721


State 562

  325 expr_type_decl: "type" '<' . $@23 type_declaration '>' $@24

    $default  reduce using rule 323 ($@23)

    $@23  go to state 722


State 563

  826 make_dim_decl: "array" "struct" . '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 723


State 564

  829 make_dim_decl: "array" "tuple" . '<' $@102 tuple_type_list '>' $@103 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 724


State 565

  832 make_dim_decl: "array" "variant" . '<' $@104 variant_type_list '>' $@105 '(' make_variant_dim ')'

    '<'  shift, and go to state 725


State 566

  836 make_dim_decl: "array" '<' . $@106 type_declaration_no_options '>' $@107 '(' optional_expr_list ')'

    $default  reduce using rule 834 ($@106)

    $@106  go to state 726


State 567

  833 make_dim_decl: "array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 727
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 568

  846 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  847                | "table" '<' . type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 728
    type_declaration_no_options_no_dim  go to state 275


State 569

  845 make_table_decl: "table" '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 729
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_map_tuple          go to state 730
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    expr_map_tuple_list     go to state 731
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 570

  456 expr: "deref" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 732
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 571

  316 expr_cast: "cast" '<' . $@17 type_declaration_no_options '>' $@18 expr

    $default  reduce using rule 314 ($@17)

    $@17  go to state 733


State 572

  319 expr_cast: "upcast" '<' . $@19 type_declaration_no_options '>' $@20 expr

    $default  reduce using rule 317 ($@19)

    $@19  go to state 734


State 573

  457 expr: "addr" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 735
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 574

  322 expr_cast: "reinterpret" '<' . $@21 type_declaration_no_options '>' $@22 expr

    $default  reduce using rule 320 ($@21)

    $@21  go to state 736


State 575

  487 expr: "unsafe" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 737
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 576

  840 make_dim_decl: "fixed_array" '<' . $@108 type_declaration_no_options '>' $@109 '(' expr_list optional_comma ')'

    $default  reduce using rule 838 ($@108)

    $@108  go to state 738


State 577

  837 make_dim_decl: "fixed_array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 739
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 578

  816 make_struct_decl: "default" '<' . $@96 type_declaration_no_options '>' $@97 use_initializer

    $default  reduce using rule 814 ($@96)

    $@96  go to state 740


State 579

  822 make_tuple_call: "tuple" '<' . $@98 tuple_type_list '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 820 ($@98)

    $@98  go to state 741


State 580

  819 make_tuple_call: "tuple" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 742
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 581

  813 make_struct_decl: "variant" '<' . $@94 variant_type_list '>' $@95 '(' use_initializer make_variant_dim ')'

    $default  reduce using rule 811 ($@94)

    $@94  go to state 743


State 582

  488 expr_generator: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  489               | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'
  490               | "generator" '<' . type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 744
    type_declaration_no_options_no_dim  go to state 275


State 583

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  441     | "++" expr .
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 441 (expr)


State 584

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  442     | "--" expr .
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 442 (expr)


State 585

  491 expr_mtag: "$$" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 745
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 586

  492 expr_mtag: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 746
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 587

  493 expr_mtag: "$v" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 747
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 588

  494 expr_mtag: "$b" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 748
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 589

  495 expr_mtag: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 749
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 590

  497 expr_mtag: "$c" '(' . expr ')' '(' ')'
  498          | "$c" '(' . expr ')' '(' expr_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 750
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 591

   39 string_builder_body: string_builder_body . character_sequence
   40                    | string_builder_body . "{" expr optional_format_string "}"
   41 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 163
    STRING_CHARACTER_ESC  shift, and go to state 164
    "end of the string"   shift, and go to state 751
    "{"                   shift, and go to state 752

    character_sequence  go to state 753


State 592

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  418 expr: '-' expr .
  419     | expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 418 (expr)


State 593

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  417 expr: '+' expr .
  419     | expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 417 (expr)


State 594

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  455     | '*' expr .
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 455 (expr)


State 595

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  416 expr: '~' expr .
  419     | expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 416 (expr)


State 596

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  415 expr: '!' expr .
  419     | expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 415 (expr)


State 597

  852 array_comprehension: '[' "for" . '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    '('  shift, and go to state 754


State 598

  853 array_comprehension: '[' "iterator" . "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "for"  shift, and go to state 755


State 599

  823 make_dim_decl: '[' optional_expr_list . ']'

    ']'  shift, and go to state 756


State 600

  272 optional_expr_list: expr_list . optional_comma
  330 expr_list: expr_list . ',' expr

    ','  shift, and go to state 757

    $default  reduce using rule 850 (optional_comma)

    optional_comma  go to state 758


State 601

  329 expr_list: expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 329 (expr_list)


State 602

  790 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  791                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 759


State 603

  277 name_in_namespace: "name" .
  278                  | "name" . "::" "name"
  786 make_struct_fields: "name" . copy_or_move expr
  787                   | "name" . ":=" expr

    "<-"  shift, and go to state 760
    ":="  shift, and go to state 761
    "::"  shift, and go to state 96
    '='   shift, and go to state 762

    $default  reduce using rule 277 (name_in_namespace)

    copy_or_move  go to state 763


State 604

  330 expr_list: expr_list . ',' expr
  445 expr: '(' expr_list . optional_comma ')'

    ','  shift, and go to state 757

    $default  reduce using rule 850 (optional_comma)

    optional_comma  go to state 764


State 605

  788 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  789                   | make_struct_fields . ',' "name" ":=" expr
  792                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  793                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  796 make_struct_single: make_struct_fields .

    ','  shift, and go to state 765

    $default  reduce using rule 796 (make_struct_single)


State 606

  446 expr: '(' make_struct_single . ')'

    ')'  shift, and go to state 766


State 607

  336 block_or_lambda: '@' '@' .
  381 func_addr_expr: '@' '@' . func_addr_name
  384               | '@' '@' . '<' $@25 type_declaration_no_options '>' $@26 func_addr_name
  387               | '@' '@' . '<' $@27 optional_function_argument_list optional_function_type '>' $@28 func_addr_name
  506 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 57
    "$i"    shift, and go to state 767
    "$c"    shift, and go to state 768
    "name"  shift, and go to state 58
    '<'     shift, and go to state 769

    $default  reduce using rule 336 (block_or_lambda)

    name_in_namespace  go to state 770
    func_addr_name     go to state 771


State 608

  854 array_comprehension: '{' "for" . '(' variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    '('  shift, and go to state 772


State 609

  844 make_table_decl: '{' $@110 . optional_emit_semis optional_expr_map_tuple_list '}'

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 773


State 610

  375 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  376                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  398 expr_call: name_in_namespace '(' . ')'
  399          | name_in_namespace '(' . "uninitialized" ')'
  400          | name_in_namespace '(' . make_struct_single ')'
  401          | name_in_namespace '(' . "uninitialized" make_struct_single ')'
  402          | name_in_namespace '(' . expr_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "uninitialized"                   shift, and go to state 774
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "$f"                              shift, and go to state 602
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 603
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 775
    '('                               shift, and go to state 465
    ')'                               shift, and go to state 776
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 777
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_fields      go to state 605
    make_struct_single      go to state 778
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 611

  141 optional_annotation_list: '[' . annotation_list ']'

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 68
    annotation_list               go to state 779
    name_in_namespace             go to state 70


State 612

  346 expr_full_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

    "capture"  shift, and go to state 780

    $default  reduce using rule 344 (optional_capture_list)

    optional_capture_list  go to state 781


State 613

  335 block_or_lambda: '@' .
  336                | '@' . '@'

    '@'  shift, and go to state 782

    $default  reduce using rule 335 (block_or_lambda)


State 614

  348 expr_full_block_assumed_piped: '{' . expressions '}'

    $default  reduce using rule 268 (expressions)

    expressions  go to state 783


State 615

  347 expr_full_block_assumed_piped: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block

    '['  shift, and go to state 611

    $default  reduce using rule 140 (optional_annotation_list)

    optional_annotation_list  go to state 784


State 616

  248 expr_call_pipe: expr_call expr_full_block_assumed_piped .

    $default  reduce using rule 248 (expr_call_pipe)


State 617

  463 expr: expr "is" . "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr "is" . basic_type_declaration
  465     | expr "is" . "name"
  505 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 785
    "bool"      shift, and go to state 234
    "void"      shift, and go to state 235
    "string"    shift, and go to state 236
    "int"       shift, and go to state 238
    "int2"      shift, and go to state 239
    "int3"      shift, and go to state 240
    "int4"      shift, and go to state 241
    "uint"      shift, and go to state 242
    "bitfield"  shift, and go to state 438
    "uint2"     shift, and go to state 244
    "uint3"     shift, and go to state 245
    "uint4"     shift, and go to state 246
    "float"     shift, and go to state 247
    "float2"    shift, and go to state 248
    "float3"    shift, and go to state 249
    "float4"    shift, and go to state 250
    "range"     shift, and go to state 251
    "urange"    shift, and go to state 252
    "range64"   shift, and go to state 253
    "urange64"  shift, and go to state 254
    "int64"     shift, and go to state 256
    "uint64"    shift, and go to state 257
    "double"    shift, and go to state 258
    "int8"      shift, and go to state 261
    "uint8"     shift, and go to state 262
    "int16"     shift, and go to state 263
    "uint16"    shift, and go to state 264
    "$f"        shift, and go to state 786
    "name"      shift, and go to state 787

    basic_type_declaration  go to state 788


State 618

  466 expr: expr "as" . "name"
  469     | expr "as" . "type" '<' $@33 type_declaration '>' $@34
  470     | expr "as" . basic_type_declaration
  503 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 789
    "bool"      shift, and go to state 234
    "void"      shift, and go to state 235
    "string"    shift, and go to state 236
    "int"       shift, and go to state 238
    "int2"      shift, and go to state 239
    "int3"      shift, and go to state 240
    "int4"      shift, and go to state 241
    "uint"      shift, and go to state 242
    "bitfield"  shift, and go to state 438
    "uint2"     shift, and go to state 244
    "uint3"     shift, and go to state 245
    "uint4"     shift, and go to state 246
    "float"     shift, and go to state 247
    "float2"    shift, and go to state 248
    "float3"    shift, and go to state 249
    "float4"    shift, and go to state 250
    "range"     shift, and go to state 251
    "urange"    shift, and go to state 252
    "range64"   shift, and go to state 253
    "urange64"  shift, and go to state 254
    "int64"     shift, and go to state 256
    "uint64"    shift, and go to state 257
    "double"    shift, and go to state 258
    "int8"      shift, and go to state 261
    "uint8"     shift, and go to state 262
    "int16"     shift, and go to state 263
    "uint16"    shift, and go to state 264
    "$f"        shift, and go to state 790
    "name"      shift, and go to state 791

    basic_type_declaration  go to state 792


State 619

  419 expr: expr "<<" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 793
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 620

  420 expr: expr ">>" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 794
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 621

  443 expr: expr "++" .

    $default  reduce using rule 443 (expr)


State 622

  444 expr: expr "--" .

    $default  reduce using rule 444 (expr)


State 623

  432 expr: expr "<=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 795
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 624

  433 expr: expr ">=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 796
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 625

  430 expr: expr "==" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 797
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 626

  431 expr: expr "!=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 798
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 627

  377 expr_method_call: expr "->" . "name" '(' ')'
  378                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 799


State 628

  459 expr: expr "??" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 800
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 629

  451 expr: expr "?." . "name"
  500 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 801
    "name"  shift, and go to state 802


State 630

  449 expr: expr "?[" . expr ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 803
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 631

  483 expr: expr "<|" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 804
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 632

  484 expr: expr "|>" . expr
  485     | expr "|>" . basic_type_declaration

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 805
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 806
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 633

  421 expr: expr "<<<" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 807
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 634

  422 expr: expr ">>>" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 808
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 635

  437 expr: expr "&&" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 809
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 636

  438 expr: expr "||" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 810
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 637

  439 expr: expr "^^" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 811
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 638

  440 expr: expr ".." . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 812
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 639

  460 expr: expr '?' . expr ':' expr
  471     | expr '?' . "as" "name"
  474     | expr '?' . "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr '?' . "as" basic_type_declaration
  504 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "as"                              shift, and go to state 813
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 814
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 640

  435 expr: expr '|' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 815
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 641

  436 expr: expr '^' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 816
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 642

  434 expr: expr '&' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 817
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 643

  428 expr: expr '<' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 818
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 644

  429 expr: expr '>' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 819
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 645

  424 expr: expr '-' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 820
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 646

  423 expr: expr '+' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 821
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 647

  425 expr: expr '*' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 822
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 648

  426 expr: expr '/' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 823
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 649

  427 expr: expr '%' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 824
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 650

  388 expr_field: expr '.' . "name"
  389           | expr '.' . '.' "name"
  390           | expr '.' . "name" '(' ')'
  391           | expr '.' . "name" '(' expr_list ')'
  392           | expr '.' . "name" '(' '[' make_struct_fields ']' ')'
  393           | expr '.' . basic_type_declaration '(' ')'
  394           | expr '.' . basic_type_declaration '(' expr_list ')'
  397           | expr '.' . $@29 error $@30
  448 expr: expr '.' . '[' expr ']'
  450     | expr '.' . "?[" expr ']'
  452     | expr '.' . "?." "name"
  499 expr_mtag: expr '.' . "$f" '(' expr ')'
  501          | expr '.' . '.' "$f" '(' expr ')'
  502          | expr '.' . "?." "$f" '(' expr ')'

    "bool"      shift, and go to state 234
    "void"      shift, and go to state 235
    "string"    shift, and go to state 236
    "int"       shift, and go to state 238
    "int2"      shift, and go to state 239
    "int3"      shift, and go to state 240
    "int4"      shift, and go to state 241
    "uint"      shift, and go to state 242
    "bitfield"  shift, and go to state 438
    "uint2"     shift, and go to state 244
    "uint3"     shift, and go to state 245
    "uint4"     shift, and go to state 246
    "float"     shift, and go to state 247
    "float2"    shift, and go to state 248
    "float3"    shift, and go to state 249
    "float4"    shift, and go to state 250
    "range"     shift, and go to state 251
    "urange"    shift, and go to state 252
    "range64"   shift, and go to state 253
    "urange64"  shift, and go to state 254
    "int64"     shift, and go to state 256
    "uint64"    shift, and go to state 257
    "double"    shift, and go to state 258
    "int8"      shift, and go to state 261
    "uint8"     shift, and go to state 262
    "int16"     shift, and go to state 263
    "uint16"    shift, and go to state 264
    "?."        shift, and go to state 825
    "?["        shift, and go to state 826
    "$f"        shift, and go to state 827
    "name"      shift, and go to state 828
    '.'         shift, and go to state 829
    '['         shift, and go to state 830

    $default  reduce using rule 395 ($@29)

    $@29                    go to state 831
    basic_type_declaration  go to state 832


State 651

  447 expr: expr '[' . expr ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 833
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 652

  707 type_declaration_no_options_no_dim: "typedecl" '(' expr ')' .

    $default  reduce using rule 707 (type_declaration_no_options_no_dim)


State 653

  403 expr_call: basic_type_declaration '(' . ')'
  404          | basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    ')'                               shift, and go to state 834
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 835
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 654

  735 type_declaration_no_options_no_dim: "iterator" '<' $@60 type_declaration . '>' $@61
  764 type_declaration: type_declaration . '|' type_declaration_no_options
  765                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 836


State 655

  725 type_declaration_no_options_no_dim: "smart_ptr" '<' $@54 type_declaration . '>' $@55
  764 type_declaration: type_declaration . '|' type_declaration_no_options
  765                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 837


State 656

  680 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 680 (auto_type_declaration)


State 657

  682 bitfield_bits: "name" .

    $default  reduce using rule 682 (bitfield_bits)


State 658

  683 bitfield_bits: bitfield_bits . ';' "name"
  689 bitfield_type_declaration: "bitfield" '<' $@49 bitfield_bits . '>' $@50

    '>'  shift, and go to state 838
    ';'  shift, and go to state 839


State 659

  739 type_declaration_no_options_no_dim: "block" '<' $@62 type_declaration . '>' $@63
  764 type_declaration: type_declaration . '|' type_declaration_no_options
  765                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 840


State 660

  742 type_declaration_no_options_no_dim: "block" '<' $@64 optional_function_argument_list . optional_function_type '>' $@65

    ':'  shift, and go to state 394

    $default  reduce using rule 147 (optional_function_type)

    optional_function_type  go to state 841


State 661

  746 type_declaration_no_options_no_dim: "function" '<' $@66 type_declaration . '>' $@67
  764 type_declaration: type_declaration . '|' type_declaration_no_options
  765                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 842


State 662

  749 type_declaration_no_options_no_dim: "function" '<' $@68 optional_function_argument_list . optional_function_type '>' $@69

    ':'  shift, and go to state 394

    $default  reduce using rule 147 (optional_function_type)

    optional_function_type  go to state 843


State 663

  753 type_declaration_no_options_no_dim: "lambda" '<' $@70 type_declaration . '>' $@71
  764 type_declaration: type_declaration . '|' type_declaration_no_options
  765                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 844


State 664

  756 type_declaration_no_options_no_dim: "lambda" '<' $@72 optional_function_argument_list . optional_function_type '>' $@73

    ':'  shift, and go to state 394

    $default  reduce using rule 147 (optional_function_type)

    optional_function_type  go to state 845


State 665

  277 name_in_namespace: "name" .
  278                  | "name" . "::" "name"
  537 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 96
    ':'   shift, and go to state 846

    $default  reduce using rule 277 (name_in_namespace)


State 666

  538 tuple_type_list: tuple_type .

    $default  reduce using rule 538 (tuple_type_list)


State 667

  539 tuple_type_list: tuple_type_list . c_or_s tuple_type
  759 type_declaration_no_options_no_dim: "tuple" '<' $@74 tuple_type_list . '>' $@75

    "new line, comma"      shift, and go to state 711
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 712
    '>'                    shift, and go to state 847
    ';'                    shift, and go to state 16

    COMMA      go to state 713
    SEMICOLON  go to state 714
    c_or_s     go to state 848


State 668

  536 tuple_type: type_declaration .
  764 type_declaration: type_declaration . '|' type_declaration_no_options
  765                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 536 (tuple_type)


State 669

  543 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 849


State 670

  544 variant_type_list: variant_type .

    $default  reduce using rule 544 (variant_type_list)


State 671

  545 variant_type_list: variant_type_list . c_or_s variant_type
  762 type_declaration_no_options_no_dim: "variant" '<' $@76 variant_type_list . '>' $@77

    "new line, comma"      shift, and go to state 711
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 712
    '>'                    shift, and go to state 850
    ';'                    shift, and go to state 16

    COMMA      go to state 713
    SEMICOLON  go to state 714
    c_or_s     go to state 851


State 672

  681 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 681 (auto_type_declaration)


State 673

  710 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@53 . type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    type_declaration_no_options_list    go to state 852
    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 853


State 674

  708 type_declaration_no_options_no_dim: '$' name_in_namespace '(' optional_expr_list . ')'

    ')'  shift, and go to state 854


State 675

  711 type_declaration_no_options_no_dim: type_declaration_no_options '-' '[' ']' .

    $default  reduce using rule 711 (type_declaration_no_options_no_dim)


State 676

  694 dim_list: '[' expr ']' .

    $default  reduce using rule 694 (dim_list)


State 677

  697 dim_list: dim_list '[' ']' .

    $default  reduce using rule 697 (dim_list)


State 678

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  696 dim_list: dim_list '[' expr . ']'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ']'    shift, and go to state 855


State 679

  685 bitfield_alias_bits: "name" .

    $default  reduce using rule 685 (bitfield_alias_bits)


State 680

  686 bitfield_alias_bits: bitfield_alias_bits . commas "name"
  780 bitfield_alias_declaration: "bitfield" $@86 optional_public_or_private_alias "name" optional_emit_commas $@87 '{' $@88 bitfield_alias_bits . optional_commas $@89 '}'

    "new line, comma"  shift, and go to state 711
    ','                shift, and go to state 712

    $default  reduce using rule 610 (optional_commas)

    COMMA            go to state 856
    commas           go to state 857
    optional_commas  go to state 858


State 681

  541 tuple_alias_type_list: tuple_type .

    $default  reduce using rule 541 (tuple_alias_type_list)


State 682

  542 tuple_alias_type_list: tuple_alias_type_list . semis tuple_type
  770 tuple_alias_declaration: "tuple" $@78 optional_public_or_private_alias "name" optional_emit_semis $@79 '{' $@80 tuple_alias_type_list . optional_semis $@81 '}'

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 84 (optional_semis)

    SEMICOLON       go to state 859
    semis           go to state 860
    optional_semis  go to state 861


State 683

  547 variant_alias_type_list: variant_type .

    $default  reduce using rule 547 (variant_alias_type_list)


State 684

  548 variant_alias_type_list: variant_alias_type_list . semis variant_type
  775 variant_alias_declaration: "variant" $@82 optional_public_or_private_alias "name" optional_emit_semis $@83 '{' $@84 variant_alias_type_list . optional_semis $@85 '}'

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 84 (optional_semis)

    SEMICOLON       go to state 859
    semis           go to state 862
    optional_semis  go to state 863


State 685

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  530 function_argument_declaration_type: "$a" '(' expr . ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 864


State 686

  639 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 865


State 687

  638 variable_name_with_pos_list: "name" .
  640                            | "name" . "aka" "name"

    "aka"  shift, and go to state 866

    $default  reduce using rule 638 (variable_name_with_pos_list)


State 688

  528 function_argument_declaration_no_type: optional_field_annotation kwd_let_var_or_nothing variable_declaration_no_type .

    $default  reduce using rule 528 (function_argument_declaration_no_type)


State 689

  529 function_argument_declaration_type: optional_field_annotation kwd_let_var_or_nothing variable_declaration_type .

    $default  reduce using rule 529 (function_argument_declaration_type)


State 690

  551 variable_declaration_no_type: variable_name_with_pos_list .
  552                             | variable_name_with_pos_list . '&'
  553                             | variable_name_with_pos_list . copy_or_move expr
  554 variable_declaration_type: variable_name_with_pos_list . ':' type_declaration
  555                          | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  641 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  642                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 760
    ','   shift, and go to state 867
    '='   shift, and go to state 762
    ':'   shift, and go to state 868
    '&'   shift, and go to state 869

    $default  reduce using rule 551 (variable_declaration_no_type)

    copy_or_move  go to state 870


State 691

  533 function_argument_list: function_argument_declaration_no_type ';' function_argument_list .

    $default  reduce using rule 533 (function_argument_list)


State 692

  535 function_argument_list: function_argument_declaration_type ',' function_argument_list .

    $default  reduce using rule 535 (function_argument_list)


State 693

  534 function_argument_list: function_argument_declaration_type ';' function_argument_list .

    $default  reduce using rule 534 (function_argument_list)


State 694

  247 expression_block: $@13 '{' expressions . $@14 '}' expression_block_finally
  269 expressions: expressions . expression_any
  270            | expressions . error

    error                             shift, and go to state 871
    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "return"                          shift, and go to state 872
    "null"                            shift, and go to state 428
    "break"                           shift, and go to state 873
    "try"                             shift, and go to state 874
    "table"                           shift, and go to state 429
    "delete"                          shift, and go to state 875
    "deref"                           shift, and go to state 430
    "assume"                          shift, and go to state 876
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 433
    "continue"                        shift, and go to state 877
    "pass"                            shift, and go to state 878
    "reinterpret"                     shift, and go to state 434
    "label"                           shift, and go to state 879
    "goto"                            shift, and go to state 880
    "unsafe"                          shift, and go to state 881
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "yield"                           shift, and go to state 882
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 468

    "while"      reduce using rule 97 ($@8)
    "if"         reduce using rule 91 ($@6)
    "static_if"  reduce using rule 91 ($@6)
    "for"        reduce using rule 94 ($@7)
    "with"       reduce using rule 99 ($@9)
    '}'          reduce using rule 246 ($@14)

    SEMICOLON                         go to state 883
    string_builder                    go to state 469
    expr_reader                       go to state 470
    expression_label                  go to state 884
    expression_goto                   go to state 885
    expression_if_one_liner           go to state 886
    expression_if_then_else           go to state 887
    $@6                               go to state 888
    expression_if_then_else_oneliner  go to state 889
    expression_for_loop               go to state 890
    $@7                               go to state 891
    expression_unsafe                 go to state 892
    expression_while_loop             go to state 893
    $@8                               go to state 894
    expression_with                   go to state 895
    $@9                               go to state 896
    expression_with_alias             go to state 897
    $@14                              go to state 898
    expr_call_pipe                    go to state 471
    expression_any                    go to state 899
    name_in_namespace                 go to state 472
    expression_delete                 go to state 900
    expr_new                          go to state 473
    expression_break                  go to state 901
    expression_continue               go to state 902
    expression_return                 go to state 903
    expression_yield                  go to state 904
    expression_try_catch              go to state 905
    kwd_let                           go to state 906
    expression_let                    go to state 907
    expr_cast                         go to state 474
    expr_type_decl                    go to state 475
    expr_type_info                    go to state 476
    block_or_lambda                   go to state 477
    expr_full_block                   go to state 478
    expr_numeric_const                go to state 479
    expr_assign                       go to state 908
    expr_named_call                   go to state 480
    expr_method_call                  go to state 481
    func_addr_expr                    go to state 482
    expr_field                        go to state 483
    expr_call                         go to state 484
    expr                              go to state 909
    expr_generator                    go to state 486
    expr_mtag                         go to state 487
    basic_type_declaration            go to state 488
    make_decl                         go to state 489
    make_struct_decl                  go to state 490
    make_tuple_call                   go to state 491
    make_dim_decl                     go to state 492
    make_table_decl                   go to state 493
    array_comprehension               go to state 494


State 695

  619 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@43 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@44 . enum_list optional_commas $@45 '}'

    "name"  shift, and go to state 910

    $default  reduce using rule 595 (enum_list)

    enum_expression  go to state 911
    enum_list        go to state 912


State 696

  621 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 621 (optional_structure_parent)


State 697

  632 optional_struct_variable_declaration_list: ';' .

    $default  reduce using rule 632 (optional_struct_variable_declaration_list)


State 698

  633 optional_struct_variable_declaration_list: '{' . struct_variable_declaration_list '}'

    $default  reduce using rule 520 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 913


State 699

  637 structure_declaration: optional_annotation_list_with_emit_semis $@46 class_or_struct optional_public_or_private_structure $@47 structure_name optional_emit_semis $@48 optional_struct_variable_declaration_list .

    $default  reduce using rule 637 (structure_declaration)


State 700

  564 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 914
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 701

  565 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 915


State 702

  566 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  567                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 916


State 703

  573 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options SEMICOLON
  574                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr SEMICOLON

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 917
    type_declaration_no_options_no_dim  go to state 275


State 704

  575 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr SEMICOLON

    "<-"  shift, and go to state 547
    ":="  shift, and go to state 548
    '='   shift, and go to state 549

    copy_or_move_or_clone  go to state 918


State 705

  576 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options SEMICOLON .

    $default  reduce using rule 576 (global_let_variable_declaration)


State 706

  577 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 919
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 707

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  578 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . SEMICOLON

    "is"                   shift, and go to state 617
    "as"                   shift, and go to state 618
    "<<"                   shift, and go to state 619
    ">>"                   shift, and go to state 620
    "++"                   shift, and go to state 621
    "--"                   shift, and go to state 622
    "<="                   shift, and go to state 623
    ">="                   shift, and go to state 624
    "=="                   shift, and go to state 625
    "!="                   shift, and go to state 626
    "->"                   shift, and go to state 627
    "??"                   shift, and go to state 628
    "?."                   shift, and go to state 629
    "?["                   shift, and go to state 630
    "<|"                   shift, and go to state 631
    "|>"                   shift, and go to state 632
    "<<<"                  shift, and go to state 633
    ">>>"                  shift, and go to state 634
    "&&"                   shift, and go to state 635
    "||"                   shift, and go to state 636
    "^^"                   shift, and go to state 637
    ".."                   shift, and go to state 638
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 639
    '|'                    shift, and go to state 640
    '^'                    shift, and go to state 641
    '&'                    shift, and go to state 642
    '<'                    shift, and go to state 643
    '>'                    shift, and go to state 644
    '-'                    shift, and go to state 645
    '+'                    shift, and go to state 646
    '*'                    shift, and go to state 647
    '/'                    shift, and go to state 648
    '%'                    shift, and go to state 649
    '.'                    shift, and go to state 650
    '['                    shift, and go to state 651
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 920


State 708

  706 type_declaration_no_options_no_dim: "type" '<' $@51 type_declaration '>' . $@52

    $default  reduce using rule 705 ($@52)

    $@52  go to state 921


State 709

  729 type_declaration_no_options_no_dim: "array" '<' $@56 type_declaration '>' . $@57

    $default  reduce using rule 728 ($@57)

    $@57  go to state 922


State 710

  732 type_declaration_no_options_no_dim: "table" '<' $@58 table_type_pair '>' . $@59

    $default  reduce using rule 731 ($@59)

    $@59  go to state 923


State 711

   17 COMMA: "new line, comma" .

    $default  reduce using rule 17 (COMMA)


State 712

   16 COMMA: ',' .

    $default  reduce using rule 16 (COMMA)


State 713

  690 c_or_s: COMMA .

    $default  reduce using rule 690 (c_or_s)


State 714

  691 c_or_s: SEMICOLON .

    $default  reduce using rule 691 (c_or_s)


State 715

  693 table_type_pair: type_declaration c_or_s . type_declaration

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 924


State 716

  807 make_struct_decl: "struct" '<' $@90 . type_declaration_no_options '>' $@91 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 925
    type_declaration_no_options_no_dim  go to state 275


State 717

  810 make_struct_decl: "class" '<' $@92 . type_declaration_no_options '>' $@93 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 926
    type_declaration_no_options_no_dim  go to state 275


State 718

  284 new_type_declaration: '<' $@15 . type_declaration '>' $@16

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 927


State 719

  287 expr_new: "new" new_type_declaration '(' . use_initializer ')'
  288         | "new" new_type_declaration '(' . expr_list ')'
  289         | "new" new_type_declaration '(' . make_struct_single ')'
  290         | "new" new_type_declaration '(' . "uninitialized" make_struct_single ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "uninitialized"                   shift, and go to state 928
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "$f"                              shift, and go to state 602
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 603
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 803 (use_initializer)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 929
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_fields      go to state 605
    make_struct_single      go to state 930
    use_initializer         go to state 931
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 720

  327 expr_type_info: "typeinfo" name_in_namespace '<' . "name" '>' '(' expr ')'
  328               | "typeinfo" name_in_namespace '<' . "name" c_or_s "name" '>' '(' expr ')'

    "name"  shift, and go to state 932


State 721

  326 expr_type_info: "typeinfo" name_in_namespace '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 933
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 722

  325 expr_type_decl: "type" '<' $@23 . type_declaration '>' $@24

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 934


State 723

  826 make_dim_decl: "array" "struct" '<' . $@100 type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 824 ($@100)

    $@100  go to state 935


State 724

  829 make_dim_decl: "array" "tuple" '<' . $@102 tuple_type_list '>' $@103 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 827 ($@102)

    $@102  go to state 936


State 725

  832 make_dim_decl: "array" "variant" '<' . $@104 variant_type_list '>' $@105 '(' make_variant_dim ')'

    $default  reduce using rule 830 ($@104)

    $@104  go to state 937


State 726

  836 make_dim_decl: "array" '<' $@106 . type_declaration_no_options '>' $@107 '(' optional_expr_list ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 938
    type_declaration_no_options_no_dim  go to state 275


State 727

  330 expr_list: expr_list . ',' expr
  833 make_dim_decl: "array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 757

    $default  reduce using rule 850 (optional_comma)

    optional_comma  go to state 939


State 728

  711 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  712                                   | type_declaration_no_options . "explicit"
  713                                   | type_declaration_no_options . "const"
  714                                   | type_declaration_no_options . '-' "const"
  715                                   | type_declaration_no_options . '&'
  716                                   | type_declaration_no_options . '-' '&'
  717                                   | type_declaration_no_options . '#'
  718                                   | type_declaration_no_options . "implicit"
  719                                   | type_declaration_no_options . '-' '#'
  720                                   | type_declaration_no_options . "==" "const"
  721                                   | type_declaration_no_options . "==" '&'
  722                                   | type_declaration_no_options . '?'
  726                                   | type_declaration_no_options . "??"
  846 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'
  847                | "table" '<' type_declaration_no_options . c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "const"                shift, and go to state 366
    "implicit"             shift, and go to state 367
    "explicit"             shift, and go to state 368
    "=="                   shift, and go to state 369
    "??"                   shift, and go to state 370
    "new line, comma"      shift, and go to state 711
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 712
    '?'                    shift, and go to state 371
    '&'                    shift, and go to state 372
    '>'                    shift, and go to state 940
    '-'                    shift, and go to state 373
    ';'                    shift, and go to state 16
    '#'                    shift, and go to state 374

    COMMA      go to state 713
    SEMICOLON  go to state 714
    c_or_s     go to state 941


State 729

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  817 make_map_tuple: expr . "=>" expr
  818               | expr .

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "=>"   shift, and go to state 942
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 818 (make_map_tuple)


State 730

  841 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 841 (expr_map_tuple_list)


State 731

  842 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  845 make_table_decl: "table" '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 943

    $default  reduce using rule 850 (optional_comma)

    optional_comma  go to state 944


State 732

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  456     | "deref" '(' expr . ')'
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 945


State 733

  316 expr_cast: "cast" '<' $@17 . type_declaration_no_options '>' $@18 expr

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 946
    type_declaration_no_options_no_dim  go to state 275


State 734

  319 expr_cast: "upcast" '<' $@19 . type_declaration_no_options '>' $@20 expr

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 947
    type_declaration_no_options_no_dim  go to state 275


State 735

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  457     | "addr" '(' expr . ')'
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 948


State 736

  322 expr_cast: "reinterpret" '<' $@21 . type_declaration_no_options '>' $@22 expr

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 949
    type_declaration_no_options_no_dim  go to state 275


State 737

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  487     | "unsafe" '(' expr . ')'
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 950


State 738

  840 make_dim_decl: "fixed_array" '<' $@108 . type_declaration_no_options '>' $@109 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 951
    type_declaration_no_options_no_dim  go to state 275


State 739

  330 expr_list: expr_list . ',' expr
  837 make_dim_decl: "fixed_array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 757

    $default  reduce using rule 850 (optional_comma)

    optional_comma  go to state 952


State 740

  816 make_struct_decl: "default" '<' $@96 . type_declaration_no_options '>' $@97 use_initializer

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 953
    type_declaration_no_options_no_dim  go to state 275


State 741

  822 make_tuple_call: "tuple" '<' $@98 . tuple_type_list '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 665
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    tuple_type                          go to state 666
    tuple_type_list                     go to state 954
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 668


State 742

  330 expr_list: expr_list . ',' expr
  819 make_tuple_call: "tuple" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 757

    $default  reduce using rule 850 (optional_comma)

    optional_comma  go to state 955


State 743

  813 make_struct_decl: "variant" '<' $@94 . variant_type_list '>' $@95 '(' use_initializer make_variant_dim ')'

    "name"  shift, and go to state 669

    variant_type       go to state 670
    variant_type_list  go to state 956


State 744

  488 expr_generator: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  489               | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  490               | "generator" '<' type_declaration_no_options . '>' optional_capture_list optional_emit_semis expression_block
  711 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  712                                   | type_declaration_no_options . "explicit"
  713                                   | type_declaration_no_options . "const"
  714                                   | type_declaration_no_options . '-' "const"
  715                                   | type_declaration_no_options . '&'
  716                                   | type_declaration_no_options . '-' '&'
  717                                   | type_declaration_no_options . '#'
  718                                   | type_declaration_no_options . "implicit"
  719                                   | type_declaration_no_options . '-' '#'
  720                                   | type_declaration_no_options . "==" "const"
  721                                   | type_declaration_no_options . "==" '&'
  722                                   | type_declaration_no_options . '?'
  726                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 957
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 745

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  491 expr_mtag: "$$" '(' expr . ')'
  499          | expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 958


State 746

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  492 expr_mtag: "$i" '(' expr . ')'
  499          | expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 959


State 747

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  493 expr_mtag: "$v" '(' expr . ')'
  499          | expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 960


State 748

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  494 expr_mtag: "$b" '(' expr . ')'
  499          | expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 961


State 749

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  495 expr_mtag: "$a" '(' expr . ')'
  499          | expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 962


State 750

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  497 expr_mtag: "$c" '(' expr . ')' '(' ')'
  498          | "$c" '(' expr . ')' '(' expr_list ')'
  499          | expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 963


State 751

   41 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 41 (string_builder)


State 752

   40 string_builder_body: string_builder_body "{" . expr optional_format_string "}"

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 964
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 753

   29 character_sequence: character_sequence . STRING_CHARACTER
   30                   | character_sequence . STRING_CHARACTER_ESC
   39 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 223
    STRING_CHARACTER_ESC  shift, and go to state 224

    $default  reduce using rule 39 (string_builder_body)


State 754

  852 array_comprehension: '[' "for" '(' . variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "$i"    shift, and go to state 686
    "name"  shift, and go to state 687

    variable_name_with_pos_list  go to state 965


State 755

  853 array_comprehension: '[' "iterator" "for" . '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    '('  shift, and go to state 966


State 756

  823 make_dim_decl: '[' optional_expr_list ']' .

    $default  reduce using rule 823 (make_dim_decl)


State 757

  330 expr_list: expr_list ',' . expr
  851 optional_comma: ',' .

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 851 (optional_comma)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 967
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 758

  272 optional_expr_list: expr_list optional_comma .

    $default  reduce using rule 272 (optional_expr_list)


State 759

  790 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  791                   | "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 968
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 760

  550 copy_or_move: "<-" .

    $default  reduce using rule 550 (copy_or_move)


State 761

  787 make_struct_fields: "name" ":=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 969
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 762

  549 copy_or_move: '=' .

    $default  reduce using rule 549 (copy_or_move)


State 763

  786 make_struct_fields: "name" copy_or_move . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 970
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 764

  445 expr: '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 971


State 765

  788 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  789                   | make_struct_fields ',' . "name" ":=" expr
  792                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  793                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 972
    "name"  shift, and go to state 973


State 766

  446 expr: '(' make_struct_single ')' .

    $default  reduce using rule 446 (expr)


State 767

  380 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 974


State 768

  506 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 975


State 769

  384 func_addr_expr: '@' '@' '<' . $@25 type_declaration_no_options '>' $@26 func_addr_name
  387               | '@' '@' '<' . $@27 optional_function_argument_list optional_function_type '>' $@28 func_addr_name

    ':'       reduce using rule 385 ($@27)
    '>'       reduce using rule 385 ($@27)
    '('       reduce using rule 385 ($@27)
    $default  reduce using rule 382 ($@25)

    $@25  go to state 976
    $@27  go to state 977


State 770

  379 func_addr_name: name_in_namespace .

    $default  reduce using rule 379 (func_addr_name)


State 771

  381 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 381 (func_addr_expr)


State 772

  854 array_comprehension: '{' "for" '(' . variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "$i"    shift, and go to state 686
    "name"  shift, and go to state 687

    variable_name_with_pos_list  go to state 978


State 773

  844 make_table_decl: '{' $@110 optional_emit_semis . optional_expr_map_tuple_list '}'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 273 (optional_expr_map_tuple_list)

    string_builder                go to state 469
    expr_reader                   go to state 470
    expr_call_pipe                go to state 471
    optional_expr_map_tuple_list  go to state 979
    name_in_namespace             go to state 472
    expr_new                      go to state 473
    expr_cast                     go to state 474
    expr_type_decl                go to state 475
    expr_type_info                go to state 476
    block_or_lambda               go to state 477
    expr_full_block               go to state 478
    expr_numeric_const            go to state 479
    expr_named_call               go to state 480
    expr_method_call              go to state 481
    func_addr_expr                go to state 482
    expr_field                    go to state 483
    expr_call                     go to state 484
    expr                          go to state 729
    expr_generator                go to state 486
    expr_mtag                     go to state 487
    basic_type_declaration        go to state 488
    make_decl                     go to state 489
    make_struct_decl              go to state 490
    make_map_tuple                go to state 730
    make_tuple_call               go to state 491
    make_dim_decl                 go to state 492
    expr_map_tuple_list           go to state 980
    make_table_decl               go to state 493
    array_comprehension           go to state 494


State 774

  399 expr_call: name_in_namespace '(' "uninitialized" . ')'
  401          | name_in_namespace '(' "uninitialized" . make_struct_single ')'

    "$f"    shift, and go to state 602
    "name"  shift, and go to state 981
    ')'     shift, and go to state 982

    make_struct_fields  go to state 605
    make_struct_single  go to state 983


State 775

  375 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'
  823 make_dim_decl: '[' . optional_expr_list ']'
  852 array_comprehension: '[' . "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  853                    | '[' . "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "for"                             shift, and go to state 597
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "iterator"                        shift, and go to state 598
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "$f"                              shift, and go to state 602
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 603
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 271 (optional_expr_list)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    optional_expr_list      go to state 599
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 600
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_fields      go to state 984
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 776

  398 expr_call: name_in_namespace '(' ')' .

    $default  reduce using rule 398 (expr_call)


State 777

  330 expr_list: expr_list . ',' expr
  376 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  402 expr_call: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 985
    ')'  shift, and go to state 986


State 778

  400 expr_call: name_in_namespace '(' make_struct_single . ')'

    ')'  shift, and go to state 987


State 779

  139 annotation_list: annotation_list . ',' annotation_declaration
  141 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 105
    ']'  shift, and go to state 988


State 780

  345 optional_capture_list: "capture" . '(' capture_list ')'

    '('  shift, and go to state 989


State 781

  346 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

    '('  shift, and go to state 334

    $default  reduce using rule 144 (optional_function_argument_list)

    optional_function_argument_list  go to state 990


State 782

  336 block_or_lambda: '@' '@' .

    $default  reduce using rule 336 (block_or_lambda)


State 783

  269 expressions: expressions . expression_any
  270            | expressions . error
  348 expr_full_block_assumed_piped: '{' expressions . '}'

    error                             shift, and go to state 871
    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "return"                          shift, and go to state 872
    "null"                            shift, and go to state 428
    "break"                           shift, and go to state 873
    "try"                             shift, and go to state 874
    "table"                           shift, and go to state 429
    "delete"                          shift, and go to state 875
    "deref"                           shift, and go to state 430
    "assume"                          shift, and go to state 876
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 433
    "continue"                        shift, and go to state 877
    "pass"                            shift, and go to state 878
    "reinterpret"                     shift, and go to state 434
    "label"                           shift, and go to state 879
    "goto"                            shift, and go to state 880
    "unsafe"                          shift, and go to state 881
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "yield"                           shift, and go to state 882
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 468
    '}'                               shift, and go to state 991

    "while"      reduce using rule 97 ($@8)
    "if"         reduce using rule 91 ($@6)
    "static_if"  reduce using rule 91 ($@6)
    "for"        reduce using rule 94 ($@7)
    "with"       reduce using rule 99 ($@9)

    SEMICOLON                         go to state 883
    string_builder                    go to state 469
    expr_reader                       go to state 470
    expression_label                  go to state 884
    expression_goto                   go to state 885
    expression_if_one_liner           go to state 886
    expression_if_then_else           go to state 887
    $@6                               go to state 888
    expression_if_then_else_oneliner  go to state 889
    expression_for_loop               go to state 890
    $@7                               go to state 891
    expression_unsafe                 go to state 892
    expression_while_loop             go to state 893
    $@8                               go to state 894
    expression_with                   go to state 895
    $@9                               go to state 896
    expression_with_alias             go to state 897
    expr_call_pipe                    go to state 471
    expression_any                    go to state 899
    name_in_namespace                 go to state 472
    expression_delete                 go to state 900
    expr_new                          go to state 473
    expression_break                  go to state 901
    expression_continue               go to state 902
    expression_return                 go to state 903
    expression_yield                  go to state 904
    expression_try_catch              go to state 905
    kwd_let                           go to state 906
    expression_let                    go to state 907
    expr_cast                         go to state 474
    expr_type_decl                    go to state 475
    expr_type_info                    go to state 476
    block_or_lambda                   go to state 477
    expr_full_block                   go to state 478
    expr_numeric_const                go to state 479
    expr_assign                       go to state 908
    expr_named_call                   go to state 480
    expr_method_call                  go to state 481
    func_addr_expr                    go to state 482
    expr_field                        go to state 483
    expr_call                         go to state 484
    expr                              go to state 909
    expr_generator                    go to state 486
    expr_mtag                         go to state 487
    basic_type_declaration            go to state 488
    make_decl                         go to state 489
    make_struct_decl                  go to state 490
    make_tuple_call                   go to state 491
    make_dim_decl                     go to state 492
    make_table_decl                   go to state 493
    array_comprehension               go to state 494


State 784

  347 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block

    "capture"  shift, and go to state 780

    $default  reduce using rule 344 (optional_capture_list)

    optional_capture_list  go to state 992


State 785

  463 expr: expr "is" "type" . '<' $@31 type_declaration_no_options '>' $@32

    '<'  shift, and go to state 993


State 786

  505 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 994


State 787

  465 expr: expr "is" "name" .

    $default  reduce using rule 465 (expr)


State 788

  464 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 464 (expr)


State 789

  469 expr: expr "as" "type" . '<' $@33 type_declaration '>' $@34

    '<'  shift, and go to state 995


State 790

  503 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 996


State 791

  466 expr: expr "as" "name" .

    $default  reduce using rule 466 (expr)


State 792

  470 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 470 (expr)


State 793

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  419     | expr "<<" expr .
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "??"  shift, and go to state 628
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '-'   shift, and go to state 645
    '+'   shift, and go to state 646
    '*'   shift, and go to state 647
    '/'   shift, and go to state 648
    '%'   shift, and go to state 649
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 419 (expr)


State 794

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  420     | expr ">>" expr .
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "??"  shift, and go to state 628
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '-'   shift, and go to state 645
    '+'   shift, and go to state 646
    '*'   shift, and go to state 647
    '/'   shift, and go to state 648
    '%'   shift, and go to state 649
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 420 (expr)


State 795

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  432     | expr "<=" expr .
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 432 (expr)


State 796

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  433     | expr ">=" expr .
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 433 (expr)


State 797

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  430     | expr "==" expr .
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 430 (expr)


State 798

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  431     | expr "!=" expr .
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 431 (expr)


State 799

  377 expr_method_call: expr "->" "name" . '(' ')'
  378                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 997


State 800

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  459     | expr "??" expr .
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "??"  shift, and go to state 628
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 459 (expr)


State 801

  500 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 998


State 802

  451 expr: expr "?." "name" .

    $default  reduce using rule 451 (expr)


State 803

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  449     | expr "?[" expr . ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ']'    shift, and go to state 999


State 804

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  483     | expr "<|" expr .
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 627
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 483 (expr)


State 805

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  484     | expr "|>" expr .
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 627
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 484 (expr)


State 806

  403 expr_call: basic_type_declaration . '(' ')'
  404          | basic_type_declaration . '(' expr_list ')'
  485 expr: expr "|>" basic_type_declaration .

    '('  shift, and go to state 653

    $default  reduce using rule 485 (expr)


State 807

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  421     | expr "<<<" expr .
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "??"  shift, and go to state 628
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '-'   shift, and go to state 645
    '+'   shift, and go to state 646
    '*'   shift, and go to state 647
    '/'   shift, and go to state 648
    '%'   shift, and go to state 649
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 421 (expr)


State 808

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  422     | expr ">>>" expr .
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "??"  shift, and go to state 628
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '-'   shift, and go to state 645
    '+'   shift, and go to state 646
    '*'   shift, and go to state 647
    '/'   shift, and go to state 648
    '%'   shift, and go to state 649
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 422 (expr)


State 809

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  437     | expr "&&" expr .
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 437 (expr)


State 810

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  438     | expr "||" expr .
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "^^"   shift, and go to state 637
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 438 (expr)


State 811

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  439     | expr "^^" expr .
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 439 (expr)


State 812

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  440     | expr ".." expr .
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    ".."  error (nonassociative)

    $default  reduce using rule 440 (expr)


State 813

  471 expr: expr '?' "as" . "name"
  474     | expr '?' "as" . "type" '<' $@35 type_declaration '>' $@36
  475     | expr '?' "as" . basic_type_declaration
  504 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1000
    "bool"      shift, and go to state 234
    "void"      shift, and go to state 235
    "string"    shift, and go to state 236
    "int"       shift, and go to state 238
    "int2"      shift, and go to state 239
    "int3"      shift, and go to state 240
    "int4"      shift, and go to state 241
    "uint"      shift, and go to state 242
    "bitfield"  shift, and go to state 438
    "uint2"     shift, and go to state 244
    "uint3"     shift, and go to state 245
    "uint4"     shift, and go to state 246
    "float"     shift, and go to state 247
    "float2"    shift, and go to state 248
    "float3"    shift, and go to state 249
    "float4"    shift, and go to state 250
    "range"     shift, and go to state 251
    "urange"    shift, and go to state 252
    "range64"   shift, and go to state 253
    "urange64"  shift, and go to state 254
    "int64"     shift, and go to state 256
    "uint64"    shift, and go to state 257
    "double"    shift, and go to state 258
    "int8"      shift, and go to state 261
    "uint8"     shift, and go to state 262
    "int16"     shift, and go to state 263
    "uint16"    shift, and go to state 264
    "$f"        shift, and go to state 1001
    "name"      shift, and go to state 1002

    basic_type_declaration  go to state 1003


State 814

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  460     | expr '?' expr . ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    ':'    shift, and go to state 1004
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651


State 815

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  435     | expr '|' expr .
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 435 (expr)


State 816

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  436     | expr '^' expr .
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 436 (expr)


State 817

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  434     | expr '&' expr .
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 434 (expr)


State 818

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  428     | expr '<' expr .
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 428 (expr)


State 819

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  429     | expr '>' expr .
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 429 (expr)


State 820

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  424     | expr '-' expr .
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "??"  shift, and go to state 628
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '*'   shift, and go to state 647
    '/'   shift, and go to state 648
    '%'   shift, and go to state 649
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 424 (expr)


State 821

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  423     | expr '+' expr .
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "??"  shift, and go to state 628
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '*'   shift, and go to state 647
    '/'   shift, and go to state 648
    '%'   shift, and go to state 649
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 423 (expr)


State 822

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  425     | expr '*' expr .
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "??"  shift, and go to state 628
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 425 (expr)


State 823

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  426     | expr '/' expr .
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "??"  shift, and go to state 628
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 426 (expr)


State 824

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  427     | expr '%' expr .
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "??"  shift, and go to state 628
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 427 (expr)


State 825

  452 expr: expr '.' "?." . "name"
  502 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1005
    "name"  shift, and go to state 1006


State 826

  450 expr: expr '.' "?[" . expr ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1007
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 827

  499 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1008


State 828

  388 expr_field: expr '.' "name" .
  390           | expr '.' "name" . '(' ')'
  391           | expr '.' "name" . '(' expr_list ')'
  392           | expr '.' "name" . '(' '[' make_struct_fields ']' ')'

    '('  shift, and go to state 1009

    $default  reduce using rule 388 (expr_field)


State 829

  389 expr_field: expr '.' '.' . "name"
  501 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1010
    "name"  shift, and go to state 1011


State 830

  448 expr: expr '.' '[' . expr ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1012
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 831

  397 expr_field: expr '.' $@29 . error $@30

    error  shift, and go to state 1013


State 832

  393 expr_field: expr '.' basic_type_declaration . '(' ')'
  394           | expr '.' basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 1014


State 833

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  447     | expr '[' expr . ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ']'    shift, and go to state 1015


State 834

  403 expr_call: basic_type_declaration '(' ')' .

    $default  reduce using rule 403 (expr_call)


State 835

  330 expr_list: expr_list . ',' expr
  404 expr_call: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 1016
    ')'  shift, and go to state 1017


State 836

  735 type_declaration_no_options_no_dim: "iterator" '<' $@60 type_declaration '>' . $@61

    $default  reduce using rule 734 ($@61)

    $@61  go to state 1018


State 837

  725 type_declaration_no_options_no_dim: "smart_ptr" '<' $@54 type_declaration '>' . $@55

    $default  reduce using rule 724 ($@55)

    $@55  go to state 1019


State 838

  689 bitfield_type_declaration: "bitfield" '<' $@49 bitfield_bits '>' . $@50

    $default  reduce using rule 688 ($@50)

    $@50  go to state 1020


State 839

  683 bitfield_bits: bitfield_bits ';' . "name"

    "name"  shift, and go to state 1021


State 840

  739 type_declaration_no_options_no_dim: "block" '<' $@62 type_declaration '>' . $@63

    $default  reduce using rule 738 ($@63)

    $@63  go to state 1022


State 841

  742 type_declaration_no_options_no_dim: "block" '<' $@64 optional_function_argument_list optional_function_type . '>' $@65

    '>'  shift, and go to state 1023


State 842

  746 type_declaration_no_options_no_dim: "function" '<' $@66 type_declaration '>' . $@67

    $default  reduce using rule 745 ($@67)

    $@67  go to state 1024


State 843

  749 type_declaration_no_options_no_dim: "function" '<' $@68 optional_function_argument_list optional_function_type . '>' $@69

    '>'  shift, and go to state 1025


State 844

  753 type_declaration_no_options_no_dim: "lambda" '<' $@70 type_declaration '>' . $@71

    $default  reduce using rule 752 ($@71)

    $@71  go to state 1026


State 845

  756 type_declaration_no_options_no_dim: "lambda" '<' $@72 optional_function_argument_list optional_function_type . '>' $@73

    '>'  shift, and go to state 1027


State 846

  537 tuple_type: "name" ':' . type_declaration

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 1028


State 847

  759 type_declaration_no_options_no_dim: "tuple" '<' $@74 tuple_type_list '>' . $@75

    $default  reduce using rule 758 ($@75)

    $@75  go to state 1029


State 848

  539 tuple_type_list: tuple_type_list c_or_s . tuple_type

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 665
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    tuple_type                          go to state 1030
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 668


State 849

  543 variant_type: "name" ':' . type_declaration

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 1031


State 850

  762 type_declaration_no_options_no_dim: "variant" '<' $@76 variant_type_list '>' . $@77

    $default  reduce using rule 761 ($@77)

    $@77  go to state 1032


State 851

  545 variant_type_list: variant_type_list c_or_s . variant_type

    "name"  shift, and go to state 669

    variant_type  go to state 1033


State 852

  276 type_declaration_no_options_list: type_declaration_no_options_list . c_or_s type_declaration
  710 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@53 type_declaration_no_options_list . '>' '(' optional_expr_list ')'

    "new line, comma"      shift, and go to state 711
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 712
    '>'                    shift, and go to state 1034
    ';'                    shift, and go to state 16

    COMMA      go to state 713
    SEMICOLON  go to state 714
    c_or_s     go to state 1035


State 853

  275 type_declaration_no_options_list: type_declaration .
  764 type_declaration: type_declaration . '|' type_declaration_no_options
  765                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 275 (type_declaration_no_options_list)


State 854

  708 type_declaration_no_options_no_dim: '$' name_in_namespace '(' optional_expr_list ')' .

    $default  reduce using rule 708 (type_declaration_no_options_no_dim)


State 855

  696 dim_list: dim_list '[' expr ']' .

    $default  reduce using rule 696 (dim_list)


State 856

  593 commas: COMMA .

    $default  reduce using rule 593 (commas)


State 857

  594 commas: commas . COMMA
  611 optional_commas: commas .
  686 bitfield_alias_bits: bitfield_alias_bits commas . "name"

    "name"             shift, and go to state 1036
    "new line, comma"  shift, and go to state 711
    ','                shift, and go to state 712

    $default  reduce using rule 611 (optional_commas)

    COMMA  go to state 1037


State 858

  780 bitfield_alias_declaration: "bitfield" $@86 optional_public_or_private_alias "name" optional_emit_commas $@87 '{' $@88 bitfield_alias_bits optional_commas . $@89 '}'

    $default  reduce using rule 779 ($@89)

    $@89  go to state 1038


State 859

   82 semis: SEMICOLON .

    $default  reduce using rule 82 (semis)


State 860

   83 semis: semis . SEMICOLON
   85 optional_semis: semis .
  542 tuple_alias_type_list: tuple_alias_type_list semis . tuple_type

    "type"                 shift, and go to state 228
    "array"                shift, and go to state 229
    "table"                shift, and go to state 230
    "typedecl"             shift, and go to state 231
    "iterator"             shift, and go to state 232
    "smart_ptr"            shift, and go to state 233
    "bool"                 shift, and go to state 234
    "void"                 shift, and go to state 235
    "string"               shift, and go to state 236
    "auto"                 shift, and go to state 237
    "int"                  shift, and go to state 238
    "int2"                 shift, and go to state 239
    "int3"                 shift, and go to state 240
    "int4"                 shift, and go to state 241
    "uint"                 shift, and go to state 242
    "bitfield"             shift, and go to state 243
    "uint2"                shift, and go to state 244
    "uint3"                shift, and go to state 245
    "uint4"                shift, and go to state 246
    "float"                shift, and go to state 247
    "float2"               shift, and go to state 248
    "float3"               shift, and go to state 249
    "float4"               shift, and go to state 250
    "range"                shift, and go to state 251
    "urange"               shift, and go to state 252
    "range64"              shift, and go to state 253
    "urange64"             shift, and go to state 254
    "block"                shift, and go to state 255
    "int64"                shift, and go to state 256
    "uint64"               shift, and go to state 257
    "double"               shift, and go to state 258
    "function"             shift, and go to state 259
    "lambda"               shift, and go to state 260
    "int8"                 shift, and go to state 261
    "uint8"                shift, and go to state 262
    "int16"                shift, and go to state 263
    "uint16"               shift, and go to state 264
    "tuple"                shift, and go to state 265
    "variant"              shift, and go to state 266
    "::"                   shift, and go to state 57
    "$t"                   shift, and go to state 267
    "name"                 shift, and go to state 665
    "new line, semicolon"  shift, and go to state 13
    '$'                    shift, and go to state 268
    ';'                    shift, and go to state 16

    $default  reduce using rule 85 (optional_semis)

    SEMICOLON                           go to state 1039
    name_in_namespace                   go to state 269
    tuple_type                          go to state 1040
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 668


State 861

  770 tuple_alias_declaration: "tuple" $@78 optional_public_or_private_alias "name" optional_emit_semis $@79 '{' $@80 tuple_alias_type_list optional_semis . $@81 '}'

    $default  reduce using rule 769 ($@81)

    $@81  go to state 1041


State 862

   83 semis: semis . SEMICOLON
   85 optional_semis: semis .
  548 variant_alias_type_list: variant_alias_type_list semis . variant_type

    "name"                 shift, and go to state 669
    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 85 (optional_semis)

    SEMICOLON     go to state 1039
    variant_type  go to state 1042


State 863

  775 variant_alias_declaration: "variant" $@82 optional_public_or_private_alias "name" optional_emit_semis $@83 '{' $@84 variant_alias_type_list optional_semis . $@85 '}'

    $default  reduce using rule 774 ($@85)

    $@85  go to state 1043


State 864

  530 function_argument_declaration_type: "$a" '(' expr ')' .

    $default  reduce using rule 530 (function_argument_declaration_type)


State 865

  639 variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1044
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 866

  640 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1045


State 867

  641 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  642                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 1046


State 868

  554 variable_declaration_type: variable_name_with_pos_list ':' . type_declaration
  555                          | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 1047


State 869

  552 variable_declaration_no_type: variable_name_with_pos_list '&' .

    $default  reduce using rule 552 (variable_declaration_no_type)


State 870

  553 variable_declaration_no_type: variable_name_with_pos_list copy_or_move . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1048
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 871

  270 expressions: expressions error .

    $default  reduce using rule 270 (expressions)


State 872

  294 expression_return: "return" .
  295                  | "return" . expr
  296                  | "return" . "<-" expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "<-"                              shift, and go to state 1049
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 294 (expression_return)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1050
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 873

  292 expression_break: "break" .

    $default  reduce using rule 292 (expression_break)


State 874

  299 expression_try_catch: "try" . expression_block "recover" expression_block

    $default  reduce using rule 245 ($@13)

    expression_block  go to state 1051
    $@13              go to state 397


State 875

  280 expression_delete: "delete" . expr
  281                  | "delete" . "explicit" expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "explicit"                        shift, and go to state 1052
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1053
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 876

  101 expression_with_alias: "assume" . "name" '=' expr

    "name"  shift, and go to state 1054


State 877

  293 expression_continue: "continue" .

    $default  reduce using rule 293 (expression_continue)


State 878

  267 expression_any: "pass" . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1055


State 879

   61 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 1056


State 880

   62 expression_goto: "goto" . "label" "integer constant"
   63                | "goto" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "label"                           shift, and go to state 1057
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1058
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 881

   96 expression_unsafe: "unsafe" . optional_emit_semis expression_block
  487 expr: "unsafe" . '(' expr ')'

    "new line, semicolon"  shift, and go to state 149
    '('                    shift, and go to state 575

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1059


State 882

  297 expression_yield: "yield" . expr
  298                 | "yield" . "<-" expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "<-"                              shift, and go to state 1060
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1061
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 883

  249 expression_any: SEMICOLON .

    $default  reduce using rule 249 (expression_any)


State 884

  265 expression_any: expression_label . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1062


State 885

  266 expression_any: expression_goto . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1063


State 886

   93 expression_if_then_else_oneliner: expression_if_one_liner . "if" '(' expr ')' expression_else_one_liner SEMICOLON

    "if"  shift, and go to state 1064


State 887

  262 expression_any: expression_if_then_else .

    $default  reduce using rule 262 (expression_any)


State 888

   92 expression_if_then_else: $@6 . if_or_static_if '(' expr ')' optional_emit_semis expression_if_block expression_else

    "if"         shift, and go to state 1065
    "static_if"  shift, and go to state 1066

    if_or_static_if  go to state 1067


State 889

  263 expression_any: expression_if_then_else_oneliner .

    $default  reduce using rule 263 (expression_any)


State 890

  257 expression_any: expression_for_loop .

    $default  reduce using rule 257 (expression_any)


State 891

   95 expression_for_loop: $@7 . "for" '(' variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

    "for"  shift, and go to state 1068


State 892

  254 expression_any: expression_unsafe .

    $default  reduce using rule 254 (expression_any)


State 893

  253 expression_any: expression_while_loop .

    $default  reduce using rule 253 (expression_any)


State 894

   98 expression_while_loop: $@8 . "while" '(' expr ')' optional_emit_semis expression_block

    "while"  shift, and go to state 1069


State 895

  255 expression_any: expression_with .

    $default  reduce using rule 255 (expression_any)


State 896

  100 expression_with: $@9 . "with" '(' expr ')' optional_emit_semis expression_block

    "with"  shift, and go to state 1070


State 897

  256 expression_any: expression_with_alias . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1071


State 898

  247 expression_block: $@13 '{' expressions $@14 . '}' expression_block_finally

    '}'  shift, and go to state 1072


State 899

  269 expressions: expressions expression_any .

    $default  reduce using rule 269 (expressions)


State 900

  251 expression_any: expression_delete . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1073


State 901

   80 expression_if_one_liner: expression_break .
  258 expression_any: expression_break . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 80 (expression_if_one_liner)

    SEMICOLON  go to state 1074


State 902

   81 expression_if_one_liner: expression_continue .
  259 expression_any: expression_continue . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 81 (expression_if_one_liner)

    SEMICOLON  go to state 1075


State 903

   78 expression_if_one_liner: expression_return .
  260 expression_any: expression_return . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 78 (expression_if_one_liner)

    SEMICOLON  go to state 1076


State 904

   79 expression_if_one_liner: expression_yield .
  261 expression_any: expression_yield . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 79 (expression_if_one_liner)

    SEMICOLON  go to state 1077


State 905

  264 expression_any: expression_try_catch .

    $default  reduce using rule 264 (expression_any)


State 906

  311 expression_let: kwd_let . optional_in_scope let_variable_declaration
  312               | kwd_let . optional_in_scope tuple_expansion_variable_declaration
  313               | kwd_let . optional_in_scope '{' variable_declaration_list '}'

    "inscope"  shift, and go to state 1078

    $default  reduce using rule 306 (optional_in_scope)

    optional_in_scope  go to state 1079


State 907

  252 expression_any: expression_let .

    $default  reduce using rule 252 (expression_any)


State 908

  250 expression_any: expr_assign . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1080


State 909

   77 expression_if_one_liner: expr .
  356 expr_assign: expr .
  357            | expr . '=' expr
  358            | expr . "<-" expr
  359            | expr . ":=" expr
  360            | expr . "&=" expr
  361            | expr . "|=" expr
  362            | expr . "^=" expr
  363            | expr . "&&=" expr
  364            | expr . "||=" expr
  365            | expr . "^^=" expr
  366            | expr . "+=" expr
  367            | expr . "-=" expr
  368            | expr . "*=" expr
  369            | expr . "/=" expr
  370            | expr . "%=" expr
  371            | expr . "<<=" expr
  372            | expr . ">>=" expr
  373            | expr . "<<<=" expr
  374            | expr . ">>>=" expr
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 617
    "as"    shift, and go to state 618
    "+="    shift, and go to state 1081
    "-="    shift, and go to state 1082
    "/="    shift, and go to state 1083
    "*="    shift, and go to state 1084
    "%="    shift, and go to state 1085
    "&="    shift, and go to state 1086
    "|="    shift, and go to state 1087
    "^="    shift, and go to state 1088
    "<<"    shift, and go to state 619
    ">>"    shift, and go to state 620
    "++"    shift, and go to state 621
    "--"    shift, and go to state 622
    "<="    shift, and go to state 623
    "<<="   shift, and go to state 1089
    ">>="   shift, and go to state 1090
    ">="    shift, and go to state 624
    "=="    shift, and go to state 625
    "!="    shift, and go to state 626
    "->"    shift, and go to state 627
    "<-"    shift, and go to state 1091
    "??"    shift, and go to state 628
    "?."    shift, and go to state 629
    "?["    shift, and go to state 630
    "<|"    shift, and go to state 631
    "|>"    shift, and go to state 632
    ":="    shift, and go to state 1092
    "<<<"   shift, and go to state 633
    ">>>"   shift, and go to state 634
    "<<<="  shift, and go to state 1093
    ">>>="  shift, and go to state 1094
    "&&"    shift, and go to state 635
    "||"    shift, and go to state 636
    "^^"    shift, and go to state 637
    "&&="   shift, and go to state 1095
    "||="   shift, and go to state 1096
    "^^="   shift, and go to state 1097
    ".."    shift, and go to state 638
    '='     shift, and go to state 1098
    '?'     shift, and go to state 639
    '|'     shift, and go to state 640
    '^'     shift, and go to state 641
    '&'     shift, and go to state 642
    '<'     shift, and go to state 643
    '>'     shift, and go to state 644
    '-'     shift, and go to state 645
    '+'     shift, and go to state 646
    '*'     shift, and go to state 647
    '/'     shift, and go to state 648
    '%'     shift, and go to state 649
    '.'     shift, and go to state 650
    '['     shift, and go to state 651

    "if"      reduce using rule 77 (expression_if_one_liner)
    $default  reduce using rule 356 (expr_assign)


State 910

  591 enum_expression: "name" .
  592                | "name" . '=' expr

    '='  shift, and go to state 1099

    $default  reduce using rule 591 (enum_expression)


State 911

  596 enum_list: enum_expression .

    $default  reduce using rule 596 (enum_list)


State 912

  597 enum_list: enum_list . commas enum_expression
  619 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@43 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@44 enum_list . optional_commas $@45 '}'

    "new line, comma"  shift, and go to state 711
    ','                shift, and go to state 712

    $default  reduce using rule 610 (optional_commas)

    COMMA            go to state 856
    commas           go to state 1100
    optional_commas  go to state 1101


State 913

  521 struct_variable_declaration_list: struct_variable_declaration_list . "new line, semicolon"
  523                                 | struct_variable_declaration_list . $@37 structure_variable_declaration SEMICOLON
  525                                 | struct_variable_declaration_list . optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@38 function_declaration_header SEMICOLON
  527                                 | struct_variable_declaration_list . optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@39 function_declaration_header optional_emit_semis expression_block
  633 optional_struct_variable_declaration_list: '{' struct_variable_declaration_list . '}'

    "new line, semicolon"  shift, and go to state 1102
    '['                    shift, and go to state 15
    '}'                    shift, and go to state 1103

    "def"     reduce using rule 142 (optional_annotation_list_with_emit_semis)
    $default  reduce using rule 522 ($@37)

    optional_annotation_list_with_emit_semis  go to state 1104
    $@37                                      go to state 1105


State 914

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  564 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1106


State 915

  565 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 565 (let_variable_name_with_pos_list)


State 916

  566 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  567                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1107

    $default  reduce using rule 566 (let_variable_name_with_pos_list)


State 917

  573 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . SEMICOLON
  574                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr SEMICOLON
  711 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  712                                   | type_declaration_no_options . "explicit"
  713                                   | type_declaration_no_options . "const"
  714                                   | type_declaration_no_options . '-' "const"
  715                                   | type_declaration_no_options . '&'
  716                                   | type_declaration_no_options . '-' '&'
  717                                   | type_declaration_no_options . '#'
  718                                   | type_declaration_no_options . "implicit"
  719                                   | type_declaration_no_options . '-' '#'
  720                                   | type_declaration_no_options . "==" "const"
  721                                   | type_declaration_no_options . "==" '&'
  722                                   | type_declaration_no_options . '?'
  726                                   | type_declaration_no_options . "??"

    "const"                shift, and go to state 366
    "implicit"             shift, and go to state 367
    "explicit"             shift, and go to state 368
    "=="                   shift, and go to state 369
    "<-"                   shift, and go to state 547
    "??"                   shift, and go to state 370
    ":="                   shift, and go to state 548
    "new line, semicolon"  shift, and go to state 13
    '='                    shift, and go to state 549
    '?'                    shift, and go to state 371
    '&'                    shift, and go to state 372
    '-'                    shift, and go to state 373
    ';'                    shift, and go to state 16
    '#'                    shift, and go to state 374

    SEMICOLON              go to state 1108
    copy_or_move_or_clone  go to state 1109


State 918

  575 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1110
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 919

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  577 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . SEMICOLON

    "is"                   shift, and go to state 617
    "as"                   shift, and go to state 618
    "<<"                   shift, and go to state 619
    ">>"                   shift, and go to state 620
    "++"                   shift, and go to state 621
    "--"                   shift, and go to state 622
    "<="                   shift, and go to state 623
    ">="                   shift, and go to state 624
    "=="                   shift, and go to state 625
    "!="                   shift, and go to state 626
    "->"                   shift, and go to state 627
    "??"                   shift, and go to state 628
    "?."                   shift, and go to state 629
    "?["                   shift, and go to state 630
    "<|"                   shift, and go to state 631
    "|>"                   shift, and go to state 632
    "<<<"                  shift, and go to state 633
    ">>>"                  shift, and go to state 634
    "&&"                   shift, and go to state 635
    "||"                   shift, and go to state 636
    "^^"                   shift, and go to state 637
    ".."                   shift, and go to state 638
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 639
    '|'                    shift, and go to state 640
    '^'                    shift, and go to state 641
    '&'                    shift, and go to state 642
    '<'                    shift, and go to state 643
    '>'                    shift, and go to state 644
    '-'                    shift, and go to state 645
    '+'                    shift, and go to state 646
    '*'                    shift, and go to state 647
    '/'                    shift, and go to state 648
    '%'                    shift, and go to state 649
    '.'                    shift, and go to state 650
    '['                    shift, and go to state 651
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1111


State 920

  578 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 578 (global_let_variable_declaration)


State 921

  706 type_declaration_no_options_no_dim: "type" '<' $@51 type_declaration '>' $@52 .

    $default  reduce using rule 706 (type_declaration_no_options_no_dim)


State 922

  729 type_declaration_no_options_no_dim: "array" '<' $@56 type_declaration '>' $@57 .

    $default  reduce using rule 729 (type_declaration_no_options_no_dim)


State 923

  732 type_declaration_no_options_no_dim: "table" '<' $@58 table_type_pair '>' $@59 .

    $default  reduce using rule 732 (type_declaration_no_options_no_dim)


State 924

  693 table_type_pair: type_declaration c_or_s type_declaration .
  764 type_declaration: type_declaration . '|' type_declaration_no_options
  765                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 693 (table_type_pair)


State 925

  711 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  712                                   | type_declaration_no_options . "explicit"
  713                                   | type_declaration_no_options . "const"
  714                                   | type_declaration_no_options . '-' "const"
  715                                   | type_declaration_no_options . '&'
  716                                   | type_declaration_no_options . '-' '&'
  717                                   | type_declaration_no_options . '#'
  718                                   | type_declaration_no_options . "implicit"
  719                                   | type_declaration_no_options . '-' '#'
  720                                   | type_declaration_no_options . "==" "const"
  721                                   | type_declaration_no_options . "==" '&'
  722                                   | type_declaration_no_options . '?'
  726                                   | type_declaration_no_options . "??"
  807 make_struct_decl: "struct" '<' $@90 type_declaration_no_options . '>' $@91 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1112
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 926

  711 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  712                                   | type_declaration_no_options . "explicit"
  713                                   | type_declaration_no_options . "const"
  714                                   | type_declaration_no_options . '-' "const"
  715                                   | type_declaration_no_options . '&'
  716                                   | type_declaration_no_options . '-' '&'
  717                                   | type_declaration_no_options . '#'
  718                                   | type_declaration_no_options . "implicit"
  719                                   | type_declaration_no_options . '-' '#'
  720                                   | type_declaration_no_options . "==" "const"
  721                                   | type_declaration_no_options . "==" '&'
  722                                   | type_declaration_no_options . '?'
  726                                   | type_declaration_no_options . "??"
  810 make_struct_decl: "class" '<' $@92 type_declaration_no_options . '>' $@93 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1113
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 927

  284 new_type_declaration: '<' $@15 type_declaration . '>' $@16
  764 type_declaration: type_declaration . '|' type_declaration_no_options
  765                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 1114


State 928

  290 expr_new: "new" new_type_declaration '(' "uninitialized" . make_struct_single ')'
  804 use_initializer: "uninitialized" .

    "$f"    shift, and go to state 602
    "name"  shift, and go to state 981

    $default  reduce using rule 804 (use_initializer)

    make_struct_fields  go to state 605
    make_struct_single  go to state 1115


State 929

  288 expr_new: "new" new_type_declaration '(' expr_list . ')'
  330 expr_list: expr_list . ',' expr

    ','  shift, and go to state 1016
    ')'  shift, and go to state 1116


State 930

  289 expr_new: "new" new_type_declaration '(' make_struct_single . ')'

    ')'  shift, and go to state 1117


State 931

  287 expr_new: "new" new_type_declaration '(' use_initializer . ')'

    ')'  shift, and go to state 1118


State 932

  327 expr_type_info: "typeinfo" name_in_namespace '<' "name" . '>' '(' expr ')'
  328               | "typeinfo" name_in_namespace '<' "name" . c_or_s "name" '>' '(' expr ')'

    "new line, comma"      shift, and go to state 711
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 712
    '>'                    shift, and go to state 1119
    ';'                    shift, and go to state 16

    COMMA      go to state 713
    SEMICOLON  go to state 714
    c_or_s     go to state 1120


State 933

  326 expr_type_info: "typeinfo" name_in_namespace '(' expr . ')'
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1121


State 934

  325 expr_type_decl: "type" '<' $@23 type_declaration . '>' $@24
  764 type_declaration: type_declaration . '|' type_declaration_no_options
  765                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 1122


State 935

  826 make_dim_decl: "array" "struct" '<' $@100 . type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 1123
    type_declaration_no_options_no_dim  go to state 275


State 936

  829 make_dim_decl: "array" "tuple" '<' $@102 . tuple_type_list '>' $@103 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 665
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    tuple_type                          go to state 666
    tuple_type_list                     go to state 1124
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 668


State 937

  832 make_dim_decl: "array" "variant" '<' $@104 . variant_type_list '>' $@105 '(' make_variant_dim ')'

    "name"  shift, and go to state 669

    variant_type       go to state 670
    variant_type_list  go to state 1125


State 938

  711 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  712                                   | type_declaration_no_options . "explicit"
  713                                   | type_declaration_no_options . "const"
  714                                   | type_declaration_no_options . '-' "const"
  715                                   | type_declaration_no_options . '&'
  716                                   | type_declaration_no_options . '-' '&'
  717                                   | type_declaration_no_options . '#'
  718                                   | type_declaration_no_options . "implicit"
  719                                   | type_declaration_no_options . '-' '#'
  720                                   | type_declaration_no_options . "==" "const"
  721                                   | type_declaration_no_options . "==" '&'
  722                                   | type_declaration_no_options . '?'
  726                                   | type_declaration_no_options . "??"
  836 make_dim_decl: "array" '<' $@106 type_declaration_no_options . '>' $@107 '(' optional_expr_list ')'

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1126
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 939

  833 make_dim_decl: "array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1127


State 940

  846 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1128


State 941

  847 make_table_decl: "table" '<' type_declaration_no_options c_or_s . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 1129
    type_declaration_no_options_no_dim  go to state 275


State 942

  817 make_map_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1130
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 943

  842 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple
  851 optional_comma: ',' .

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 851 (optional_comma)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 729
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_map_tuple          go to state 1131
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 944

  845 make_table_decl: "table" '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1132


State 945

  456 expr: "deref" '(' expr ')' .

    $default  reduce using rule 456 (expr)


State 946

  316 expr_cast: "cast" '<' $@17 type_declaration_no_options . '>' $@18 expr
  711 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  712                                   | type_declaration_no_options . "explicit"
  713                                   | type_declaration_no_options . "const"
  714                                   | type_declaration_no_options . '-' "const"
  715                                   | type_declaration_no_options . '&'
  716                                   | type_declaration_no_options . '-' '&'
  717                                   | type_declaration_no_options . '#'
  718                                   | type_declaration_no_options . "implicit"
  719                                   | type_declaration_no_options . '-' '#'
  720                                   | type_declaration_no_options . "==" "const"
  721                                   | type_declaration_no_options . "==" '&'
  722                                   | type_declaration_no_options . '?'
  726                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1133
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 947

  319 expr_cast: "upcast" '<' $@19 type_declaration_no_options . '>' $@20 expr
  711 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  712                                   | type_declaration_no_options . "explicit"
  713                                   | type_declaration_no_options . "const"
  714                                   | type_declaration_no_options . '-' "const"
  715                                   | type_declaration_no_options . '&'
  716                                   | type_declaration_no_options . '-' '&'
  717                                   | type_declaration_no_options . '#'
  718                                   | type_declaration_no_options . "implicit"
  719                                   | type_declaration_no_options . '-' '#'
  720                                   | type_declaration_no_options . "==" "const"
  721                                   | type_declaration_no_options . "==" '&'
  722                                   | type_declaration_no_options . '?'
  726                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1134
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 948

  457 expr: "addr" '(' expr ')' .

    $default  reduce using rule 457 (expr)


State 949

  322 expr_cast: "reinterpret" '<' $@21 type_declaration_no_options . '>' $@22 expr
  711 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  712                                   | type_declaration_no_options . "explicit"
  713                                   | type_declaration_no_options . "const"
  714                                   | type_declaration_no_options . '-' "const"
  715                                   | type_declaration_no_options . '&'
  716                                   | type_declaration_no_options . '-' '&'
  717                                   | type_declaration_no_options . '#'
  718                                   | type_declaration_no_options . "implicit"
  719                                   | type_declaration_no_options . '-' '#'
  720                                   | type_declaration_no_options . "==" "const"
  721                                   | type_declaration_no_options . "==" '&'
  722                                   | type_declaration_no_options . '?'
  726                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1135
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 950

  487 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 487 (expr)


State 951

  711 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  712                                   | type_declaration_no_options . "explicit"
  713                                   | type_declaration_no_options . "const"
  714                                   | type_declaration_no_options . '-' "const"
  715                                   | type_declaration_no_options . '&'
  716                                   | type_declaration_no_options . '-' '&'
  717                                   | type_declaration_no_options . '#'
  718                                   | type_declaration_no_options . "implicit"
  719                                   | type_declaration_no_options . '-' '#'
  720                                   | type_declaration_no_options . "==" "const"
  721                                   | type_declaration_no_options . "==" '&'
  722                                   | type_declaration_no_options . '?'
  726                                   | type_declaration_no_options . "??"
  840 make_dim_decl: "fixed_array" '<' $@108 type_declaration_no_options . '>' $@109 '(' expr_list optional_comma ')'

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1136
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 952

  837 make_dim_decl: "fixed_array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1137


State 953

  711 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  712                                   | type_declaration_no_options . "explicit"
  713                                   | type_declaration_no_options . "const"
  714                                   | type_declaration_no_options . '-' "const"
  715                                   | type_declaration_no_options . '&'
  716                                   | type_declaration_no_options . '-' '&'
  717                                   | type_declaration_no_options . '#'
  718                                   | type_declaration_no_options . "implicit"
  719                                   | type_declaration_no_options . '-' '#'
  720                                   | type_declaration_no_options . "==" "const"
  721                                   | type_declaration_no_options . "==" '&'
  722                                   | type_declaration_no_options . '?'
  726                                   | type_declaration_no_options . "??"
  816 make_struct_decl: "default" '<' $@96 type_declaration_no_options . '>' $@97 use_initializer

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1138
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 954

  539 tuple_type_list: tuple_type_list . c_or_s tuple_type
  822 make_tuple_call: "tuple" '<' $@98 tuple_type_list . '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')'

    "new line, comma"      shift, and go to state 711
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 712
    '>'                    shift, and go to state 1139
    ';'                    shift, and go to state 16

    COMMA      go to state 713
    SEMICOLON  go to state 714
    c_or_s     go to state 848


State 955

  819 make_tuple_call: "tuple" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1140


State 956

  545 variant_type_list: variant_type_list . c_or_s variant_type
  813 make_struct_decl: "variant" '<' $@94 variant_type_list . '>' $@95 '(' use_initializer make_variant_dim ')'

    "new line, comma"      shift, and go to state 711
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 712
    '>'                    shift, and go to state 1141
    ';'                    shift, and go to state 16

    COMMA      go to state 713
    SEMICOLON  go to state 714
    c_or_s     go to state 851


State 957

  488 expr_generator: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  489               | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'
  490               | "generator" '<' type_declaration_no_options '>' . optional_capture_list optional_emit_semis expression_block

    "capture"  shift, and go to state 780

    $default  reduce using rule 344 (optional_capture_list)

    optional_capture_list  go to state 1142


State 958

  491 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 491 (expr_mtag)


State 959

  492 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 492 (expr_mtag)


State 960

  493 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 493 (expr_mtag)


State 961

  494 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 494 (expr_mtag)


State 962

  495 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 495 (expr_mtag)


State 963

  497 expr_mtag: "$c" '(' expr ')' . '(' ')'
  498          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1143


State 964

   40 string_builder_body: string_builder_body "{" expr . optional_format_string "}"
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    ':'    shift, and go to state 1144
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 35 (optional_format_string)

    optional_format_string  go to state 1145


State 965

  641 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  642                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  852 array_comprehension: '[' "for" '(' variable_name_with_pos_list . "in" expr_list ')' ';' expr array_comprehension_where ']'

    "in"  shift, and go to state 1146
    ','   shift, and go to state 867


State 966

  853 array_comprehension: '[' "iterator" "for" '(' . variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "$i"    shift, and go to state 686
    "name"  shift, and go to state 687

    variable_name_with_pos_list  go to state 1147


State 967

  330 expr_list: expr_list ',' expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 330 (expr_list)


State 968

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  790 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  791                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1148


State 969

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  787 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 787 (make_struct_fields)


State 970

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  786 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 786 (make_struct_fields)


State 971

  445 expr: '(' expr_list optional_comma ')' .

    $default  reduce using rule 445 (expr)


State 972

  792 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  793                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1149


State 973

  788 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  789                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 760
    ":="  shift, and go to state 1150
    '='   shift, and go to state 762

    copy_or_move  go to state 1151


State 974

  380 func_addr_name: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1152
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 975

  506 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1153
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 976

  384 func_addr_expr: '@' '@' '<' $@25 . type_declaration_no_options '>' $@26 func_addr_name

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 1154
    type_declaration_no_options_no_dim  go to state 275


State 977

  387 func_addr_expr: '@' '@' '<' $@27 . optional_function_argument_list optional_function_type '>' $@28 func_addr_name

    '('  shift, and go to state 334

    $default  reduce using rule 144 (optional_function_argument_list)

    optional_function_argument_list  go to state 1155


State 978

  641 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  642                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  854 array_comprehension: '{' "for" '(' variable_name_with_pos_list . "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "in"  shift, and go to state 1156
    ','   shift, and go to state 867


State 979

  844 make_table_decl: '{' $@110 optional_emit_semis optional_expr_map_tuple_list . '}'

    '}'  shift, and go to state 1157


State 980

  274 optional_expr_map_tuple_list: expr_map_tuple_list . optional_comma
  842 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple

    ','  shift, and go to state 943

    $default  reduce using rule 850 (optional_comma)

    optional_comma  go to state 1158


State 981

  786 make_struct_fields: "name" . copy_or_move expr
  787                   | "name" . ":=" expr

    "<-"  shift, and go to state 760
    ":="  shift, and go to state 761
    '='   shift, and go to state 762

    copy_or_move  go to state 763


State 982

  399 expr_call: name_in_namespace '(' "uninitialized" ')' .

    $default  reduce using rule 399 (expr_call)


State 983

  401 expr_call: name_in_namespace '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1159


State 984

  375 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  788 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  789                   | make_struct_fields . ',' "name" ":=" expr
  792                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  793                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 765
    ']'  shift, and go to state 1160


State 985

  330 expr_list: expr_list ',' . expr
  376 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 1161
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 967
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 986

  402 expr_call: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 402 (expr_call)


State 987

  400 expr_call: name_in_namespace '(' make_struct_single ')' .

    $default  reduce using rule 400 (expr_call)


State 988

  141 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 141 (optional_annotation_list)


State 989

  345 optional_capture_list: "capture" '(' . capture_list ')'

    "<-"    shift, and go to state 1162
    ":="    shift, and go to state 1163
    "name"  shift, and go to state 1164
    '='     shift, and go to state 1165
    '&'     shift, and go to state 1166

    capture_entry  go to state 1167
    capture_list   go to state 1168


State 990

  346 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type optional_emit_semis block_or_simple_block

    ':'  shift, and go to state 394

    $default  reduce using rule 147 (optional_function_type)

    optional_function_type  go to state 1169


State 991

  348 expr_full_block_assumed_piped: '{' expressions '}' .

    $default  reduce using rule 348 (expr_full_block_assumed_piped)


State 992

  347 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type optional_emit_semis expression_block

    '('  shift, and go to state 334

    $default  reduce using rule 144 (optional_function_argument_list)

    optional_function_argument_list  go to state 1170


State 993

  463 expr: expr "is" "type" '<' . $@31 type_declaration_no_options '>' $@32

    $default  reduce using rule 461 ($@31)

    $@31  go to state 1171


State 994

  505 expr_mtag: expr "is" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1172
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 995

  469 expr: expr "as" "type" '<' . $@33 type_declaration '>' $@34

    $default  reduce using rule 467 ($@33)

    $@33  go to state 1173


State 996

  503 expr_mtag: expr "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1174
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 997

  377 expr_method_call: expr "->" "name" '(' . ')'
  378                 | expr "->" "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    ')'                               shift, and go to state 1175
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 1176
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 998

  500 expr_mtag: expr "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1177
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 999

  449 expr: expr "?[" expr ']' .

    $default  reduce using rule 449 (expr)


State 1000

  474 expr: expr '?' "as" "type" . '<' $@35 type_declaration '>' $@36

    '<'  shift, and go to state 1178


State 1001

  504 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1179


State 1002

  471 expr: expr '?' "as" "name" .

    $default  reduce using rule 471 (expr)


State 1003

  475 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 475 (expr)


State 1004

  460 expr: expr '?' expr ':' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1180
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1005

  502 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1181


State 1006

  452 expr: expr '.' "?." "name" .

    $default  reduce using rule 452 (expr)


State 1007

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  450     | expr '.' "?[" expr . ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ']'    shift, and go to state 1182


State 1008

  499 expr_mtag: expr '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1183
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1009

  390 expr_field: expr '.' "name" '(' . ')'
  391           | expr '.' "name" '(' . expr_list ')'
  392           | expr '.' "name" '(' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 1184
    '('                               shift, and go to state 465
    ')'                               shift, and go to state 1185
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 1186
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1010

  501 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1187


State 1011

  389 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 389 (expr_field)


State 1012

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  448     | expr '.' '[' expr . ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ']'    shift, and go to state 1188


State 1013

  397 expr_field: expr '.' $@29 error . $@30

    $default  reduce using rule 396 ($@30)

    $@30  go to state 1189


State 1014

  393 expr_field: expr '.' basic_type_declaration '(' . ')'
  394           | expr '.' basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    ')'                               shift, and go to state 1190
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 1191
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1015

  447 expr: expr '[' expr ']' .

    $default  reduce using rule 447 (expr)


State 1016

  330 expr_list: expr_list ',' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 967
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1017

  404 expr_call: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 404 (expr_call)


State 1018

  735 type_declaration_no_options_no_dim: "iterator" '<' $@60 type_declaration '>' $@61 .

    $default  reduce using rule 735 (type_declaration_no_options_no_dim)


State 1019

  725 type_declaration_no_options_no_dim: "smart_ptr" '<' $@54 type_declaration '>' $@55 .

    $default  reduce using rule 725 (type_declaration_no_options_no_dim)


State 1020

  689 bitfield_type_declaration: "bitfield" '<' $@49 bitfield_bits '>' $@50 .

    $default  reduce using rule 689 (bitfield_type_declaration)


State 1021

  683 bitfield_bits: bitfield_bits ';' "name" .

    $default  reduce using rule 683 (bitfield_bits)


State 1022

  739 type_declaration_no_options_no_dim: "block" '<' $@62 type_declaration '>' $@63 .

    $default  reduce using rule 739 (type_declaration_no_options_no_dim)


State 1023

  742 type_declaration_no_options_no_dim: "block" '<' $@64 optional_function_argument_list optional_function_type '>' . $@65

    $default  reduce using rule 741 ($@65)

    $@65  go to state 1192


State 1024

  746 type_declaration_no_options_no_dim: "function" '<' $@66 type_declaration '>' $@67 .

    $default  reduce using rule 746 (type_declaration_no_options_no_dim)


State 1025

  749 type_declaration_no_options_no_dim: "function" '<' $@68 optional_function_argument_list optional_function_type '>' . $@69

    $default  reduce using rule 748 ($@69)

    $@69  go to state 1193


State 1026

  753 type_declaration_no_options_no_dim: "lambda" '<' $@70 type_declaration '>' $@71 .

    $default  reduce using rule 753 (type_declaration_no_options_no_dim)


State 1027

  756 type_declaration_no_options_no_dim: "lambda" '<' $@72 optional_function_argument_list optional_function_type '>' . $@73

    $default  reduce using rule 755 ($@73)

    $@73  go to state 1194


State 1028

  537 tuple_type: "name" ':' type_declaration .
  764 type_declaration: type_declaration . '|' type_declaration_no_options
  765                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 537 (tuple_type)


State 1029

  759 type_declaration_no_options_no_dim: "tuple" '<' $@74 tuple_type_list '>' $@75 .

    $default  reduce using rule 759 (type_declaration_no_options_no_dim)


State 1030

  539 tuple_type_list: tuple_type_list c_or_s tuple_type .

    $default  reduce using rule 539 (tuple_type_list)


State 1031

  543 variant_type: "name" ':' type_declaration .
  764 type_declaration: type_declaration . '|' type_declaration_no_options
  765                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 543 (variant_type)


State 1032

  762 type_declaration_no_options_no_dim: "variant" '<' $@76 variant_type_list '>' $@77 .

    $default  reduce using rule 762 (type_declaration_no_options_no_dim)


State 1033

  545 variant_type_list: variant_type_list c_or_s variant_type .

    $default  reduce using rule 545 (variant_type_list)


State 1034

  710 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@53 type_declaration_no_options_list '>' . '(' optional_expr_list ')'

    '('  shift, and go to state 1195


State 1035

  276 type_declaration_no_options_list: type_declaration_no_options_list c_or_s . type_declaration

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 1196


State 1036

  686 bitfield_alias_bits: bitfield_alias_bits commas "name" .

    $default  reduce using rule 686 (bitfield_alias_bits)


State 1037

  594 commas: commas COMMA .

    $default  reduce using rule 594 (commas)


State 1038

  780 bitfield_alias_declaration: "bitfield" $@86 optional_public_or_private_alias "name" optional_emit_commas $@87 '{' $@88 bitfield_alias_bits optional_commas $@89 . '}'

    '}'  shift, and go to state 1197


State 1039

   83 semis: semis SEMICOLON .

    $default  reduce using rule 83 (semis)


State 1040

  542 tuple_alias_type_list: tuple_alias_type_list semis tuple_type .

    $default  reduce using rule 542 (tuple_alias_type_list)


State 1041

  770 tuple_alias_declaration: "tuple" $@78 optional_public_or_private_alias "name" optional_emit_semis $@79 '{' $@80 tuple_alias_type_list optional_semis $@81 . '}'

    '}'  shift, and go to state 1198


State 1042

  548 variant_alias_type_list: variant_alias_type_list semis variant_type .

    $default  reduce using rule 548 (variant_alias_type_list)


State 1043

  775 variant_alias_declaration: "variant" $@82 optional_public_or_private_alias "name" optional_emit_semis $@83 '{' $@84 variant_alias_type_list optional_semis $@85 . '}'

    '}'  shift, and go to state 1199


State 1044

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  639 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1200


State 1045

  640 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 640 (variable_name_with_pos_list)


State 1046

  641 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  642                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1201

    $default  reduce using rule 641 (variable_name_with_pos_list)


State 1047

  554 variable_declaration_type: variable_name_with_pos_list ':' type_declaration .
  555                          | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  764 type_declaration: type_declaration . '|' type_declaration_no_options
  765                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 760
    '='   shift, and go to state 762
    '|'   shift, and go to state 377

    $default  reduce using rule 554 (variable_declaration_type)

    copy_or_move  go to state 1202


State 1048

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  553 variable_declaration_no_type: variable_name_with_pos_list copy_or_move expr .

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 553 (variable_declaration_no_type)


State 1049

  296 expression_return: "return" "<-" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1203
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1050

  295 expression_return: "return" expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 295 (expression_return)


State 1051

  299 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 1204


State 1052

  281 expression_delete: "delete" "explicit" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1205
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1053

  280 expression_delete: "delete" expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 280 (expression_delete)


State 1054

  101 expression_with_alias: "assume" "name" . '=' expr

    '='  shift, and go to state 1206


State 1055

  267 expression_any: "pass" SEMICOLON .

    $default  reduce using rule 267 (expression_any)


State 1056

   61 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 1207


State 1057

   62 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 1208


State 1058

   63 expression_goto: "goto" expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 63 (expression_goto)


State 1059

   96 expression_unsafe: "unsafe" optional_emit_semis . expression_block

    $default  reduce using rule 245 ($@13)

    expression_block  go to state 1209
    $@13              go to state 397


State 1060

  298 expression_yield: "yield" "<-" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1210
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1061

  297 expression_yield: "yield" expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 297 (expression_yield)


State 1062

  265 expression_any: expression_label SEMICOLON .

    $default  reduce using rule 265 (expression_any)


State 1063

  266 expression_any: expression_goto SEMICOLON .

    $default  reduce using rule 266 (expression_any)


State 1064

   93 expression_if_then_else_oneliner: expression_if_one_liner "if" . '(' expr ')' expression_else_one_liner SEMICOLON

    '('  shift, and go to state 1211


State 1065

   73 if_or_static_if: "if" .

    $default  reduce using rule 73 (if_or_static_if)


State 1066

   74 if_or_static_if: "static_if" .

    $default  reduce using rule 74 (if_or_static_if)


State 1067

   92 expression_if_then_else: $@6 if_or_static_if . '(' expr ')' optional_emit_semis expression_if_block expression_else

    '('  shift, and go to state 1212


State 1068

   95 expression_for_loop: $@7 "for" . '(' variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

    '('  shift, and go to state 1213


State 1069

   98 expression_while_loop: $@8 "while" . '(' expr ')' optional_emit_semis expression_block

    '('  shift, and go to state 1214


State 1070

  100 expression_with: $@9 "with" . '(' expr ')' optional_emit_semis expression_block

    '('  shift, and go to state 1215


State 1071

  256 expression_any: expression_with_alias SEMICOLON .

    $default  reduce using rule 256 (expression_any)


State 1072

  247 expression_block: $@13 '{' expressions $@14 '}' . expression_block_finally

    "finally"  shift, and go to state 1216

    $default  reduce using rule 241 (expression_block_finally)

    expression_block_finally  go to state 1217


State 1073

  251 expression_any: expression_delete SEMICOLON .

    $default  reduce using rule 251 (expression_any)


State 1074

  258 expression_any: expression_break SEMICOLON .

    $default  reduce using rule 258 (expression_any)


State 1075

  259 expression_any: expression_continue SEMICOLON .

    $default  reduce using rule 259 (expression_any)


State 1076

  260 expression_any: expression_return SEMICOLON .

    $default  reduce using rule 260 (expression_any)


State 1077

  261 expression_any: expression_yield SEMICOLON .

    $default  reduce using rule 261 (expression_any)


State 1078

  305 optional_in_scope: "inscope" .

    $default  reduce using rule 305 (optional_in_scope)


State 1079

  311 expression_let: kwd_let optional_in_scope . let_variable_declaration
  312               | kwd_let optional_in_scope . tuple_expansion_variable_declaration
  313               | kwd_let optional_in_scope . '{' variable_declaration_list '}'

    "$i"    shift, and go to state 540
    "name"  shift, and go to state 541
    '('     shift, and go to state 1218
    '{'     shift, and go to state 1219

    tuple_expansion_variable_declaration  go to state 1220
    let_variable_name_with_pos_list       go to state 542
    let_variable_declaration              go to state 1221


State 1080

  250 expression_any: expr_assign SEMICOLON .

    $default  reduce using rule 250 (expression_any)


State 1081

  366 expr_assign: expr "+=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1222
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1082

  367 expr_assign: expr "-=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1223
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1083

  369 expr_assign: expr "/=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1224
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1084

  368 expr_assign: expr "*=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1225
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1085

  370 expr_assign: expr "%=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1226
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1086

  360 expr_assign: expr "&=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1227
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1087

  361 expr_assign: expr "|=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1228
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1088

  362 expr_assign: expr "^=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1229
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1089

  371 expr_assign: expr "<<=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1230
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1090

  372 expr_assign: expr ">>=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1231
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1091

  358 expr_assign: expr "<-" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1232
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1092

  359 expr_assign: expr ":=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1233
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1093

  373 expr_assign: expr "<<<=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1234
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1094

  374 expr_assign: expr ">>>=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1235
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1095

  363 expr_assign: expr "&&=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1236
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1096

  364 expr_assign: expr "||=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1237
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1097

  365 expr_assign: expr "^^=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1238
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1098

  357 expr_assign: expr '=' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1239
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1099

  592 enum_expression: "name" '=' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1240
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1100

  594 commas: commas . COMMA
  597 enum_list: enum_list commas . enum_expression
  611 optional_commas: commas .

    "name"             shift, and go to state 910
    "new line, comma"  shift, and go to state 711
    ','                shift, and go to state 712

    $default  reduce using rule 611 (optional_commas)

    COMMA            go to state 1037
    enum_expression  go to state 1241


State 1101

  619 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@43 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@44 enum_list optional_commas . $@45 '}'

    $default  reduce using rule 618 ($@45)

    $@45  go to state 1242


State 1102

  521 struct_variable_declaration_list: struct_variable_declaration_list "new line, semicolon" .

    $default  reduce using rule 521 (struct_variable_declaration_list)


State 1103

  633 optional_struct_variable_declaration_list: '{' struct_variable_declaration_list '}' .

    $default  reduce using rule 633 (optional_struct_variable_declaration_list)


State 1104

  525 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis . "def" optional_public_or_private_member_variable "abstract" optional_constant $@38 function_declaration_header SEMICOLON
  527                                 | struct_variable_declaration_list optional_annotation_list_with_emit_semis . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@39 function_declaration_header optional_emit_semis expression_block

    "def"  shift, and go to state 1243


State 1105

  523 struct_variable_declaration_list: struct_variable_declaration_list $@37 . structure_variable_declaration SEMICOLON

    '@'  shift, and go to state 220

    $default  reduce using rule 507 (optional_field_annotation)

    metadata_argument_list          go to state 221
    optional_field_annotation       go to state 1244
    structure_variable_declaration  go to state 1245


State 1106

  564 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 564 (let_variable_name_with_pos_list)


State 1107

  567 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1246


State 1108

  573 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options SEMICOLON .

    $default  reduce using rule 573 (let_variable_declaration)


State 1109

  574 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1247
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1110

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  575 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . SEMICOLON

    "is"                   shift, and go to state 617
    "as"                   shift, and go to state 618
    "<<"                   shift, and go to state 619
    ">>"                   shift, and go to state 620
    "++"                   shift, and go to state 621
    "--"                   shift, and go to state 622
    "<="                   shift, and go to state 623
    ">="                   shift, and go to state 624
    "=="                   shift, and go to state 625
    "!="                   shift, and go to state 626
    "->"                   shift, and go to state 627
    "??"                   shift, and go to state 628
    "?."                   shift, and go to state 629
    "?["                   shift, and go to state 630
    "<|"                   shift, and go to state 631
    "|>"                   shift, and go to state 632
    "<<<"                  shift, and go to state 633
    ">>>"                  shift, and go to state 634
    "&&"                   shift, and go to state 635
    "||"                   shift, and go to state 636
    "^^"                   shift, and go to state 637
    ".."                   shift, and go to state 638
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 639
    '|'                    shift, and go to state 640
    '^'                    shift, and go to state 641
    '&'                    shift, and go to state 642
    '<'                    shift, and go to state 643
    '>'                    shift, and go to state 644
    '-'                    shift, and go to state 645
    '+'                    shift, and go to state 646
    '*'                    shift, and go to state 647
    '/'                    shift, and go to state 648
    '%'                    shift, and go to state 649
    '.'                    shift, and go to state 650
    '['                    shift, and go to state 651
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1248


State 1111

  577 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 577 (global_let_variable_declaration)


State 1112

  807 make_struct_decl: "struct" '<' $@90 type_declaration_no_options '>' . $@91 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 806 ($@91)

    $@91  go to state 1249


State 1113

  810 make_struct_decl: "class" '<' $@92 type_declaration_no_options '>' . $@93 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 809 ($@93)

    $@93  go to state 1250


State 1114

  284 new_type_declaration: '<' $@15 type_declaration '>' . $@16

    $default  reduce using rule 283 ($@16)

    $@16  go to state 1251


State 1115

  290 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1252


State 1116

  288 expr_new: "new" new_type_declaration '(' expr_list ')' .

    $default  reduce using rule 288 (expr_new)


State 1117

  289 expr_new: "new" new_type_declaration '(' make_struct_single ')' .

    $default  reduce using rule 289 (expr_new)


State 1118

  287 expr_new: "new" new_type_declaration '(' use_initializer ')' .

    $default  reduce using rule 287 (expr_new)


State 1119

  327 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' . '(' expr ')'

    '('  shift, and go to state 1253


State 1120

  328 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s . "name" '>' '(' expr ')'

    "name"  shift, and go to state 1254


State 1121

  326 expr_type_info: "typeinfo" name_in_namespace '(' expr ')' .

    $default  reduce using rule 326 (expr_type_info)


State 1122

  325 expr_type_decl: "type" '<' $@23 type_declaration '>' . $@24

    $default  reduce using rule 324 ($@24)

    $@24  go to state 1255


State 1123

  711 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  712                                   | type_declaration_no_options . "explicit"
  713                                   | type_declaration_no_options . "const"
  714                                   | type_declaration_no_options . '-' "const"
  715                                   | type_declaration_no_options . '&'
  716                                   | type_declaration_no_options . '-' '&'
  717                                   | type_declaration_no_options . '#'
  718                                   | type_declaration_no_options . "implicit"
  719                                   | type_declaration_no_options . '-' '#'
  720                                   | type_declaration_no_options . "==" "const"
  721                                   | type_declaration_no_options . "==" '&'
  722                                   | type_declaration_no_options . '?'
  726                                   | type_declaration_no_options . "??"
  826 make_dim_decl: "array" "struct" '<' $@100 type_declaration_no_options . '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1256
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 1124

  539 tuple_type_list: tuple_type_list . c_or_s tuple_type
  829 make_dim_decl: "array" "tuple" '<' $@102 tuple_type_list . '>' $@103 '(' use_initializer optional_make_struct_dim_decl ')'

    "new line, comma"      shift, and go to state 711
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 712
    '>'                    shift, and go to state 1257
    ';'                    shift, and go to state 16

    COMMA      go to state 713
    SEMICOLON  go to state 714
    c_or_s     go to state 848


State 1125

  545 variant_type_list: variant_type_list . c_or_s variant_type
  832 make_dim_decl: "array" "variant" '<' $@104 variant_type_list . '>' $@105 '(' make_variant_dim ')'

    "new line, comma"      shift, and go to state 711
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 712
    '>'                    shift, and go to state 1258
    ';'                    shift, and go to state 16

    COMMA      go to state 713
    SEMICOLON  go to state 714
    c_or_s     go to state 851


State 1126

  836 make_dim_decl: "array" '<' $@106 type_declaration_no_options '>' . $@107 '(' optional_expr_list ')'

    $default  reduce using rule 835 ($@107)

    $@107  go to state 1259


State 1127

  833 make_dim_decl: "array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 833 (make_dim_decl)


State 1128

  846 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 273 (optional_expr_map_tuple_list)

    string_builder                go to state 469
    expr_reader                   go to state 470
    expr_call_pipe                go to state 471
    optional_expr_map_tuple_list  go to state 1260
    name_in_namespace             go to state 472
    expr_new                      go to state 473
    expr_cast                     go to state 474
    expr_type_decl                go to state 475
    expr_type_info                go to state 476
    block_or_lambda               go to state 477
    expr_full_block               go to state 478
    expr_numeric_const            go to state 479
    expr_named_call               go to state 480
    expr_method_call              go to state 481
    func_addr_expr                go to state 482
    expr_field                    go to state 483
    expr_call                     go to state 484
    expr                          go to state 729
    expr_generator                go to state 486
    expr_mtag                     go to state 487
    basic_type_declaration        go to state 488
    make_decl                     go to state 489
    make_struct_decl              go to state 490
    make_map_tuple                go to state 730
    make_tuple_call               go to state 491
    make_dim_decl                 go to state 492
    expr_map_tuple_list           go to state 980
    make_table_decl               go to state 493
    array_comprehension           go to state 494


State 1129

  711 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  712                                   | type_declaration_no_options . "explicit"
  713                                   | type_declaration_no_options . "const"
  714                                   | type_declaration_no_options . '-' "const"
  715                                   | type_declaration_no_options . '&'
  716                                   | type_declaration_no_options . '-' '&'
  717                                   | type_declaration_no_options . '#'
  718                                   | type_declaration_no_options . "implicit"
  719                                   | type_declaration_no_options . '-' '#'
  720                                   | type_declaration_no_options . "==" "const"
  721                                   | type_declaration_no_options . "==" '&'
  722                                   | type_declaration_no_options . '?'
  726                                   | type_declaration_no_options . "??"
  847 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1261
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 1130

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  817 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 817 (make_map_tuple)


State 1131

  842 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 842 (expr_map_tuple_list)


State 1132

  845 make_table_decl: "table" '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 845 (make_table_decl)


State 1133

  316 expr_cast: "cast" '<' $@17 type_declaration_no_options '>' . $@18 expr

    $default  reduce using rule 315 ($@18)

    $@18  go to state 1262


State 1134

  319 expr_cast: "upcast" '<' $@19 type_declaration_no_options '>' . $@20 expr

    $default  reduce using rule 318 ($@20)

    $@20  go to state 1263


State 1135

  322 expr_cast: "reinterpret" '<' $@21 type_declaration_no_options '>' . $@22 expr

    $default  reduce using rule 321 ($@22)

    $@22  go to state 1264


State 1136

  840 make_dim_decl: "fixed_array" '<' $@108 type_declaration_no_options '>' . $@109 '(' expr_list optional_comma ')'

    $default  reduce using rule 839 ($@109)

    $@109  go to state 1265


State 1137

  837 make_dim_decl: "fixed_array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 837 (make_dim_decl)


State 1138

  816 make_struct_decl: "default" '<' $@96 type_declaration_no_options '>' . $@97 use_initializer

    $default  reduce using rule 815 ($@97)

    $@97  go to state 1266


State 1139

  822 make_tuple_call: "tuple" '<' $@98 tuple_type_list '>' . $@99 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 821 ($@99)

    $@99  go to state 1267


State 1140

  819 make_tuple_call: "tuple" '(' expr_list optional_comma ')' .

    $default  reduce using rule 819 (make_tuple_call)


State 1141

  813 make_struct_decl: "variant" '<' $@94 variant_type_list '>' . $@95 '(' use_initializer make_variant_dim ')'

    $default  reduce using rule 812 ($@95)

    $@95  go to state 1268


State 1142

  488 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  489               | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'
  490               | "generator" '<' type_declaration_no_options '>' optional_capture_list . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149
    '('                    shift, and go to state 1269

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1270


State 1143

  497 expr_mtag: "$c" '(' expr ')' '(' . ')'
  498          | "$c" '(' expr ')' '(' . expr_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    ')'                               shift, and go to state 1271
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 1272
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1144

   37 optional_format_string: ':' . $@1 format_string

    $default  reduce using rule 36 ($@1)

    $@1  go to state 1273


State 1145

   40 string_builder_body: string_builder_body "{" expr optional_format_string . "}"

    "}"  shift, and go to state 1274


State 1146

  852 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" . expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 1275
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1147

  641 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  642                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  853 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list . "in" expr_list ')' ';' expr array_comprehension_where ']'

    "in"  shift, and go to state 1276
    ','   shift, and go to state 867


State 1148

  790 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  791                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 760
    ":="  shift, and go to state 1277
    '='   shift, and go to state 762

    copy_or_move  go to state 1278


State 1149

  792 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  793                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1279
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1150

  789 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1280
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1151

  788 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1281
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1152

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  380 func_addr_name: "$i" '(' expr . ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1282


State 1153

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  506          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1283


State 1154

  384 func_addr_expr: '@' '@' '<' $@25 type_declaration_no_options . '>' $@26 func_addr_name
  711 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  712                                   | type_declaration_no_options . "explicit"
  713                                   | type_declaration_no_options . "const"
  714                                   | type_declaration_no_options . '-' "const"
  715                                   | type_declaration_no_options . '&'
  716                                   | type_declaration_no_options . '-' '&'
  717                                   | type_declaration_no_options . '#'
  718                                   | type_declaration_no_options . "implicit"
  719                                   | type_declaration_no_options . '-' '#'
  720                                   | type_declaration_no_options . "==" "const"
  721                                   | type_declaration_no_options . "==" '&'
  722                                   | type_declaration_no_options . '?'
  726                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1284
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 1155

  387 func_addr_expr: '@' '@' '<' $@27 optional_function_argument_list . optional_function_type '>' $@28 func_addr_name

    ':'  shift, and go to state 394

    $default  reduce using rule 147 (optional_function_type)

    optional_function_type  go to state 1285


State 1156

  854 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" . expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 1286
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1157

  844 make_table_decl: '{' $@110 optional_emit_semis optional_expr_map_tuple_list '}' .

    $default  reduce using rule 844 (make_table_decl)


State 1158

  274 optional_expr_map_tuple_list: expr_map_tuple_list optional_comma .

    $default  reduce using rule 274 (optional_expr_map_tuple_list)


State 1159

  401 expr_call: name_in_namespace '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 401 (expr_call)


State 1160

  375 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1287


State 1161

  376 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'
  823 make_dim_decl: '[' . optional_expr_list ']'
  852 array_comprehension: '[' . "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  853                    | '[' . "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "for"                             shift, and go to state 597
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "iterator"                        shift, and go to state 598
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "$f"                              shift, and go to state 602
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 603
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 271 (optional_expr_list)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    optional_expr_list      go to state 599
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 600
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_fields      go to state 1288
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1162

  339 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1289


State 1163

  340 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1290


State 1164

  341 capture_entry: "name" . '(' "name" ')'

    '('  shift, and go to state 1291


State 1165

  338 capture_entry: '=' . "name"

    "name"  shift, and go to state 1292


State 1166

  337 capture_entry: '&' . "name"

    "name"  shift, and go to state 1293


State 1167

  342 capture_list: capture_entry .

    $default  reduce using rule 342 (capture_list)


State 1168

  343 capture_list: capture_list . ',' capture_entry
  345 optional_capture_list: "capture" '(' capture_list . ')'

    ','  shift, and go to state 1294
    ')'  shift, and go to state 1295


State 1169

  346 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . optional_emit_semis block_or_simple_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1296


State 1170

  347 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type optional_emit_semis expression_block

    ':'  shift, and go to state 394

    $default  reduce using rule 147 (optional_function_type)

    optional_function_type  go to state 1297


State 1171

  463 expr: expr "is" "type" '<' $@31 . type_declaration_no_options '>' $@32

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 1298
    type_declaration_no_options_no_dim  go to state 275


State 1172

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  505          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1299


State 1173

  469 expr: expr "as" "type" '<' $@33 . type_declaration '>' $@34

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 1300


State 1174

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  503          | expr "as" "$f" '(' expr . ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1301


State 1175

  377 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 377 (expr_method_call)


State 1176

  330 expr_list: expr_list . ',' expr
  378 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 1016
    ')'  shift, and go to state 1302


State 1177

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  500          | expr "?." "$f" '(' expr . ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1303


State 1178

  474 expr: expr '?' "as" "type" '<' . $@35 type_declaration '>' $@36

    $default  reduce using rule 472 ($@35)

    $@35  go to state 1304


State 1179

  504 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1305
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1180

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  460     | expr '?' expr ':' expr .
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 460 (expr)


State 1181

  502 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1306
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1182

  450 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 450 (expr)


State 1183

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr '.' "$f" '(' expr . ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1307


State 1184

  392 expr_field: expr '.' "name" '(' '[' . make_struct_fields ']' ')'
  823 make_dim_decl: '[' . optional_expr_list ']'
  852 array_comprehension: '[' . "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  853                    | '[' . "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "for"                             shift, and go to state 597
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "iterator"                        shift, and go to state 598
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "$f"                              shift, and go to state 602
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 603
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 271 (optional_expr_list)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    optional_expr_list      go to state 599
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 600
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_fields      go to state 1308
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1185

  390 expr_field: expr '.' "name" '(' ')' .

    $default  reduce using rule 390 (expr_field)


State 1186

  330 expr_list: expr_list . ',' expr
  391 expr_field: expr '.' "name" '(' expr_list . ')'

    ','  shift, and go to state 1016
    ')'  shift, and go to state 1309


State 1187

  501 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1310
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1188

  448 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 448 (expr)


State 1189

  397 expr_field: expr '.' $@29 error $@30 .

    $default  reduce using rule 397 (expr_field)


State 1190

  393 expr_field: expr '.' basic_type_declaration '(' ')' .

    $default  reduce using rule 393 (expr_field)


State 1191

  330 expr_list: expr_list . ',' expr
  394 expr_field: expr '.' basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 1016
    ')'  shift, and go to state 1311


State 1192

  742 type_declaration_no_options_no_dim: "block" '<' $@64 optional_function_argument_list optional_function_type '>' $@65 .

    $default  reduce using rule 742 (type_declaration_no_options_no_dim)


State 1193

  749 type_declaration_no_options_no_dim: "function" '<' $@68 optional_function_argument_list optional_function_type '>' $@69 .

    $default  reduce using rule 749 (type_declaration_no_options_no_dim)


State 1194

  756 type_declaration_no_options_no_dim: "lambda" '<' $@72 optional_function_argument_list optional_function_type '>' $@73 .

    $default  reduce using rule 756 (type_declaration_no_options_no_dim)


State 1195

  710 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@53 type_declaration_no_options_list '>' '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 271 (optional_expr_list)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    optional_expr_list      go to state 1312
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 600
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1196

  276 type_declaration_no_options_list: type_declaration_no_options_list c_or_s type_declaration .
  764 type_declaration: type_declaration . '|' type_declaration_no_options
  765                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 276 (type_declaration_no_options_list)


State 1197

  780 bitfield_alias_declaration: "bitfield" $@86 optional_public_or_private_alias "name" optional_emit_commas $@87 '{' $@88 bitfield_alias_bits optional_commas $@89 '}' .

    $default  reduce using rule 780 (bitfield_alias_declaration)


State 1198

  770 tuple_alias_declaration: "tuple" $@78 optional_public_or_private_alias "name" optional_emit_semis $@79 '{' $@80 tuple_alias_type_list optional_semis $@81 '}' .

    $default  reduce using rule 770 (tuple_alias_declaration)


State 1199

  775 variant_alias_declaration: "variant" $@82 optional_public_or_private_alias "name" optional_emit_semis $@83 '{' $@84 variant_alias_type_list optional_semis $@85 '}' .

    $default  reduce using rule 775 (variant_alias_declaration)


State 1200

  639 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 639 (variable_name_with_pos_list)


State 1201

  642 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1313


State 1202

  555 variable_declaration_type: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1314
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1203

  296 expression_return: "return" "<-" expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 296 (expression_return)


State 1204

  299 expression_try_catch: "try" expression_block "recover" . expression_block

    $default  reduce using rule 245 ($@13)

    expression_block  go to state 1315
    $@13              go to state 397


State 1205

  281 expression_delete: "delete" "explicit" expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 281 (expression_delete)


State 1206

  101 expression_with_alias: "assume" "name" '=' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1316
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1207

   61 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 61 (expression_label)


State 1208

   62 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 62 (expression_goto)


State 1209

   96 expression_unsafe: "unsafe" optional_emit_semis expression_block .

    $default  reduce using rule 96 (expression_unsafe)


State 1210

  298 expression_yield: "yield" "<-" expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 298 (expression_yield)


State 1211

   93 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' . expr ')' expression_else_one_liner SEMICOLON

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1317
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1212

   92 expression_if_then_else: $@6 if_or_static_if '(' . expr ')' optional_emit_semis expression_if_block expression_else

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1318
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1213

   95 expression_for_loop: $@7 "for" '(' . variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

    "$i"    shift, and go to state 686
    "name"  shift, and go to state 687

    variable_name_with_pos_list  go to state 1319


State 1214

   98 expression_while_loop: $@8 "while" '(' . expr ')' optional_emit_semis expression_block

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1320
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1215

  100 expression_with: $@9 "with" '(' . expr ')' optional_emit_semis expression_block

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1321
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1216

  244 expression_block_finally: "finally" . $@11 '{' expressions $@12 '}'

    $default  reduce using rule 242 ($@11)

    $@11  go to state 1322


State 1217

  247 expression_block: $@13 '{' expressions $@14 '}' expression_block_finally .

    $default  reduce using rule 247 (expression_block)


State 1218

  309 tuple_expansion_variable_declaration: '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  310                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr SEMICOLON

    "name"  shift, and go to state 1323

    tuple_expansion  go to state 1324


State 1219

  313 expression_let: kwd_let optional_in_scope '{' . variable_declaration_list '}'

    $default  reduce using rule 570 (variable_declaration_list)

    variable_declaration_list  go to state 1325


State 1220

  312 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 312 (expression_let)


State 1221

  311 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 311 (expression_let)


State 1222

  366 expr_assign: expr "+=" expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 366 (expr_assign)


State 1223

  367 expr_assign: expr "-=" expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 367 (expr_assign)


State 1224

  369 expr_assign: expr "/=" expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 369 (expr_assign)


State 1225

  368 expr_assign: expr "*=" expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 368 (expr_assign)


State 1226

  370 expr_assign: expr "%=" expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 370 (expr_assign)


State 1227

  360 expr_assign: expr "&=" expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 360 (expr_assign)


State 1228

  361 expr_assign: expr "|=" expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 361 (expr_assign)


State 1229

  362 expr_assign: expr "^=" expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 362 (expr_assign)


State 1230

  371 expr_assign: expr "<<=" expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 371 (expr_assign)


State 1231

  372 expr_assign: expr ">>=" expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 372 (expr_assign)


State 1232

  358 expr_assign: expr "<-" expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 358 (expr_assign)


State 1233

  359 expr_assign: expr ":=" expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 359 (expr_assign)


State 1234

  373 expr_assign: expr "<<<=" expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 373 (expr_assign)


State 1235

  374 expr_assign: expr ">>>=" expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 374 (expr_assign)


State 1236

  363 expr_assign: expr "&&=" expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 363 (expr_assign)


State 1237

  364 expr_assign: expr "||=" expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 364 (expr_assign)


State 1238

  365 expr_assign: expr "^^=" expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 365 (expr_assign)


State 1239

  357 expr_assign: expr '=' expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 357 (expr_assign)


State 1240

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  592 enum_expression: "name" '=' expr .

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 592 (enum_expression)


State 1241

  597 enum_list: enum_list commas enum_expression .

    $default  reduce using rule 597 (enum_list)


State 1242

  619 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@43 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@44 enum_list optional_commas $@45 . '}'

    '}'  shift, and go to state 1326


State 1243

  525 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" . optional_public_or_private_member_variable "abstract" optional_constant $@38 function_declaration_header SEMICOLON
  527                                 | struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@39 function_declaration_header optional_emit_semis expression_block

    "public"   shift, and go to state 1327
    "private"  shift, and go to state 1328

    $default  reduce using rule 514 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1329


State 1244

  519 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1330

    $default  reduce using rule 517 (optional_static_member_variable)

    optional_static_member_variable  go to state 1331


State 1245

  523 struct_variable_declaration_list: struct_variable_declaration_list $@37 structure_variable_declaration . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1332


State 1246

  567 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 567 (let_variable_name_with_pos_list)


State 1247

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  574 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . SEMICOLON

    "is"                   shift, and go to state 617
    "as"                   shift, and go to state 618
    "<<"                   shift, and go to state 619
    ">>"                   shift, and go to state 620
    "++"                   shift, and go to state 621
    "--"                   shift, and go to state 622
    "<="                   shift, and go to state 623
    ">="                   shift, and go to state 624
    "=="                   shift, and go to state 625
    "!="                   shift, and go to state 626
    "->"                   shift, and go to state 627
    "??"                   shift, and go to state 628
    "?."                   shift, and go to state 629
    "?["                   shift, and go to state 630
    "<|"                   shift, and go to state 631
    "|>"                   shift, and go to state 632
    "<<<"                  shift, and go to state 633
    ">>>"                  shift, and go to state 634
    "&&"                   shift, and go to state 635
    "||"                   shift, and go to state 636
    "^^"                   shift, and go to state 637
    ".."                   shift, and go to state 638
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 639
    '|'                    shift, and go to state 640
    '^'                    shift, and go to state 641
    '&'                    shift, and go to state 642
    '<'                    shift, and go to state 643
    '>'                    shift, and go to state 644
    '-'                    shift, and go to state 645
    '+'                    shift, and go to state 646
    '*'                    shift, and go to state 647
    '/'                    shift, and go to state 648
    '%'                    shift, and go to state 649
    '.'                    shift, and go to state 650
    '['                    shift, and go to state 651
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1333


State 1248

  575 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 575 (let_variable_declaration)


State 1249

  807 make_struct_decl: "struct" '<' $@90 type_declaration_no_options '>' $@91 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1334


State 1250

  810 make_struct_decl: "class" '<' $@92 type_declaration_no_options '>' $@93 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1335


State 1251

  284 new_type_declaration: '<' $@15 type_declaration '>' $@16 .

    $default  reduce using rule 284 (new_type_declaration)


State 1252

  290 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 290 (expr_new)


State 1253

  327 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1336
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1254

  328 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" . '>' '(' expr ')'

    '>'  shift, and go to state 1337


State 1255

  325 expr_type_decl: "type" '<' $@23 type_declaration '>' $@24 .

    $default  reduce using rule 325 (expr_type_decl)


State 1256

  826 make_dim_decl: "array" "struct" '<' $@100 type_declaration_no_options '>' . $@101 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 825 ($@101)

    $@101  go to state 1338


State 1257

  829 make_dim_decl: "array" "tuple" '<' $@102 tuple_type_list '>' . $@103 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 828 ($@103)

    $@103  go to state 1339


State 1258

  832 make_dim_decl: "array" "variant" '<' $@104 variant_type_list '>' . $@105 '(' make_variant_dim ')'

    $default  reduce using rule 831 ($@105)

    $@105  go to state 1340


State 1259

  836 make_dim_decl: "array" '<' $@106 type_declaration_no_options '>' $@107 . '(' optional_expr_list ')'

    '('  shift, and go to state 1341


State 1260

  846 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1342


State 1261

  847 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1343


State 1262

  316 expr_cast: "cast" '<' $@17 type_declaration_no_options '>' $@18 . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1344
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1263

  319 expr_cast: "upcast" '<' $@19 type_declaration_no_options '>' $@20 . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1345
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1264

  322 expr_cast: "reinterpret" '<' $@21 type_declaration_no_options '>' $@22 . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1346
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1265

  840 make_dim_decl: "fixed_array" '<' $@108 type_declaration_no_options '>' $@109 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1347


State 1266

  816 make_struct_decl: "default" '<' $@96 type_declaration_no_options '>' $@97 . use_initializer

    "uninitialized"  shift, and go to state 1348

    $default  reduce using rule 803 (use_initializer)

    use_initializer  go to state 1349


State 1267

  822 make_tuple_call: "tuple" '<' $@98 tuple_type_list '>' $@99 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1350


State 1268

  813 make_struct_decl: "variant" '<' $@94 variant_type_list '>' $@95 . '(' use_initializer make_variant_dim ')'

    '('  shift, and go to state 1351


State 1269

  488 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  489               | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    ')'                               shift, and go to state 1352
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1353
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1270

  490 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis . expression_block

    $default  reduce using rule 245 ($@13)

    expression_block  go to state 1354
    $@13              go to state 397


State 1271

  497 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 497 (expr_mtag)


State 1272

  330 expr_list: expr_list . ',' expr
  498 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 1016
    ')'  shift, and go to state 1355


State 1273

   37 optional_format_string: ':' $@1 . format_string

    $default  reduce using rule 33 (format_string)

    format_string  go to state 1356


State 1274

   40 string_builder_body: string_builder_body "{" expr optional_format_string "}" .

    $default  reduce using rule 40 (string_builder_body)


State 1275

  330 expr_list: expr_list . ',' expr
  852 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list . ')' ';' expr array_comprehension_where ']'

    ','  shift, and go to state 1016
    ')'  shift, and go to state 1357


State 1276

  853 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" . expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 1358
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1277

  791 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1359
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1278

  790 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1360
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1279

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  792 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  793                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1361


State 1280

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  789 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 789 (make_struct_fields)


State 1281

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  788 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 788 (make_struct_fields)


State 1282

  380 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 380 (func_addr_name)


State 1283

  506 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 506 (expr_mtag)


State 1284

  384 func_addr_expr: '@' '@' '<' $@25 type_declaration_no_options '>' . $@26 func_addr_name

    $default  reduce using rule 383 ($@26)

    $@26  go to state 1362


State 1285

  387 func_addr_expr: '@' '@' '<' $@27 optional_function_argument_list optional_function_type . '>' $@28 func_addr_name

    '>'  shift, and go to state 1363


State 1286

  330 expr_list: expr_list . ',' expr
  854 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" expr_list . ')' ';' make_map_tuple array_comprehension_where '}'

    ','  shift, and go to state 1016
    ')'  shift, and go to state 1364


State 1287

  375 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 375 (expr_named_call)


State 1288

  376 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  788 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  789                   | make_struct_fields . ',' "name" ":=" expr
  792                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  793                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 765
    ']'  shift, and go to state 1365


State 1289

  339 capture_entry: "<-" "name" .

    $default  reduce using rule 339 (capture_entry)


State 1290

  340 capture_entry: ":=" "name" .

    $default  reduce using rule 340 (capture_entry)


State 1291

  341 capture_entry: "name" '(' . "name" ')'

    "name"  shift, and go to state 1366


State 1292

  338 capture_entry: '=' "name" .

    $default  reduce using rule 338 (capture_entry)


State 1293

  337 capture_entry: '&' "name" .

    $default  reduce using rule 337 (capture_entry)


State 1294

  343 capture_list: capture_list ',' . capture_entry

    "<-"    shift, and go to state 1162
    ":="    shift, and go to state 1163
    "name"  shift, and go to state 1164
    '='     shift, and go to state 1165
    '&'     shift, and go to state 1166

    capture_entry  go to state 1367


State 1295

  345 optional_capture_list: "capture" '(' capture_list ')' .

    $default  reduce using rule 345 (optional_capture_list)


State 1296

  346 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis . block_or_simple_block

    "=>"  shift, and go to state 1368

    $default  reduce using rule 245 ($@13)

    expression_block       go to state 1369
    $@13                   go to state 397
    block_or_simple_block  go to state 1370


State 1297

  347 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1371


State 1298

  463 expr: expr "is" "type" '<' $@31 type_declaration_no_options . '>' $@32
  711 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  712                                   | type_declaration_no_options . "explicit"
  713                                   | type_declaration_no_options . "const"
  714                                   | type_declaration_no_options . '-' "const"
  715                                   | type_declaration_no_options . '&'
  716                                   | type_declaration_no_options . '-' '&'
  717                                   | type_declaration_no_options . '#'
  718                                   | type_declaration_no_options . "implicit"
  719                                   | type_declaration_no_options . '-' '#'
  720                                   | type_declaration_no_options . "==" "const"
  721                                   | type_declaration_no_options . "==" '&'
  722                                   | type_declaration_no_options . '?'
  726                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1372
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 1299

  505 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 505 (expr_mtag)


State 1300

  469 expr: expr "as" "type" '<' $@33 type_declaration . '>' $@34
  764 type_declaration: type_declaration . '|' type_declaration_no_options
  765                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 1373


State 1301

  503 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 503 (expr_mtag)


State 1302

  378 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 378 (expr_method_call)


State 1303

  500 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 500 (expr_mtag)


State 1304

  474 expr: expr '?' "as" "type" '<' $@35 . type_declaration '>' $@36

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 1374


State 1305

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr '?' "as" "$f" '(' expr . ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1375


State 1306

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr '.' "?." "$f" '(' expr . ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1376


State 1307

  499 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 499 (expr_mtag)


State 1308

  392 expr_field: expr '.' "name" '(' '[' make_struct_fields . ']' ')'
  788 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  789                   | make_struct_fields . ',' "name" ":=" expr
  792                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  793                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 765
    ']'  shift, and go to state 1377


State 1309

  391 expr_field: expr '.' "name" '(' expr_list ')' .

    $default  reduce using rule 391 (expr_field)


State 1310

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr '.' '.' "$f" '(' expr . ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1378


State 1311

  394 expr_field: expr '.' basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 394 (expr_field)


State 1312

  710 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@53 type_declaration_no_options_list '>' '(' optional_expr_list . ')'

    ')'  shift, and go to state 1379


State 1313

  642 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 642 (variable_name_with_pos_list)


State 1314

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  555 variable_declaration_type: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 555 (variable_declaration_type)


State 1315

  299 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 299 (expression_try_catch)


State 1316

  101 expression_with_alias: "assume" "name" '=' expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 101 (expression_with_alias)


State 1317

   93 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr . ')' expression_else_one_liner SEMICOLON
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1380


State 1318

   92 expression_if_then_else: $@6 if_or_static_if '(' expr . ')' optional_emit_semis expression_if_block expression_else
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1381


State 1319

   95 expression_for_loop: $@7 "for" '(' variable_name_with_pos_list . "in" expr_list ')' optional_emit_semis expression_block
  641 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  642                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 1382
    ','   shift, and go to state 867


State 1320

   98 expression_while_loop: $@8 "while" '(' expr . ')' optional_emit_semis expression_block
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1383


State 1321

  100 expression_with: $@9 "with" '(' expr . ')' optional_emit_semis expression_block
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1384


State 1322

  244 expression_block_finally: "finally" $@11 . '{' expressions $@12 '}'

    '{'  shift, and go to state 1385


State 1323

  307 tuple_expansion: "name" .

    $default  reduce using rule 307 (tuple_expansion)


State 1324

  308 tuple_expansion: tuple_expansion . ',' "name"
  309 tuple_expansion_variable_declaration: '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  310                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr SEMICOLON

    ','  shift, and go to state 1386
    ')'  shift, and go to state 1387


State 1325

  313 expression_let: kwd_let optional_in_scope '{' variable_declaration_list . '}'
  571 variable_declaration_list: variable_declaration_list . SEMICOLON
  572                          | variable_declaration_list . let_variable_declaration

    "$i"                   shift, and go to state 540
    "name"                 shift, and go to state 541
    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16
    '}'                    shift, and go to state 1388

    SEMICOLON                        go to state 1389
    let_variable_name_with_pos_list  go to state 542
    let_variable_declaration         go to state 1390


State 1326

  619 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@43 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@44 enum_list optional_commas $@45 '}' .

    $default  reduce using rule 619 (enum_declaration)


State 1327

  515 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 515 (optional_public_or_private_member_variable)


State 1328

  516 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 516 (optional_public_or_private_member_variable)


State 1329

  525 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable . "abstract" optional_constant $@38 function_declaration_header SEMICOLON
  527                                 | struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@39 function_declaration_header optional_emit_semis expression_block

    "abstract"  shift, and go to state 1391
    "static"    shift, and go to state 1330

    $default  reduce using rule 517 (optional_static_member_variable)

    optional_static_member_variable  go to state 1392


State 1330

  518 optional_static_member_variable: "static" .

    $default  reduce using rule 518 (optional_static_member_variable)


State 1331

  519 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1393
    "sealed"    shift, and go to state 1394

    $default  reduce using rule 509 (optional_override)

    optional_override  go to state 1395


State 1332

  523 struct_variable_declaration_list: struct_variable_declaration_list $@37 structure_variable_declaration SEMICOLON .

    $default  reduce using rule 523 (struct_variable_declaration_list)


State 1333

  574 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 574 (let_variable_declaration)


State 1334

  807 make_struct_decl: "struct" '<' $@90 type_declaration_no_options '>' $@91 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1348

    $default  reduce using rule 803 (use_initializer)

    use_initializer  go to state 1396


State 1335

  810 make_struct_decl: "class" '<' $@92 type_declaration_no_options '>' $@93 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1348

    $default  reduce using rule 803 (use_initializer)

    use_initializer  go to state 1397


State 1336

  327 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr . ')'
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1398


State 1337

  328 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' . '(' expr ')'

    '('  shift, and go to state 1399


State 1338

  826 make_dim_decl: "array" "struct" '<' $@100 type_declaration_no_options '>' $@101 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1400


State 1339

  829 make_dim_decl: "array" "tuple" '<' $@102 tuple_type_list '>' $@103 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1401


State 1340

  832 make_dim_decl: "array" "variant" '<' $@104 variant_type_list '>' $@105 . '(' make_variant_dim ')'

    '('  shift, and go to state 1402


State 1341

  836 make_dim_decl: "array" '<' $@106 type_declaration_no_options '>' $@107 '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 271 (optional_expr_list)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    optional_expr_list      go to state 1403
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 600
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1342

  846 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 846 (make_table_decl)


State 1343

  847 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 273 (optional_expr_map_tuple_list)

    string_builder                go to state 469
    expr_reader                   go to state 470
    expr_call_pipe                go to state 471
    optional_expr_map_tuple_list  go to state 1404
    name_in_namespace             go to state 472
    expr_new                      go to state 473
    expr_cast                     go to state 474
    expr_type_decl                go to state 475
    expr_type_info                go to state 476
    block_or_lambda               go to state 477
    expr_full_block               go to state 478
    expr_numeric_const            go to state 479
    expr_named_call               go to state 480
    expr_method_call              go to state 481
    func_addr_expr                go to state 482
    expr_field                    go to state 483
    expr_call                     go to state 484
    expr                          go to state 729
    expr_generator                go to state 486
    expr_mtag                     go to state 487
    basic_type_declaration        go to state 488
    make_decl                     go to state 489
    make_struct_decl              go to state 490
    make_map_tuple                go to state 730
    make_tuple_call               go to state 491
    make_dim_decl                 go to state 492
    expr_map_tuple_list           go to state 980
    make_table_decl               go to state 493
    array_comprehension           go to state 494


State 1344

  316 expr_cast: "cast" '<' $@17 type_declaration_no_options '>' $@18 expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 316 (expr_cast)


State 1345

  319 expr_cast: "upcast" '<' $@19 type_declaration_no_options '>' $@20 expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 319 (expr_cast)


State 1346

  322 expr_cast: "reinterpret" '<' $@21 type_declaration_no_options '>' $@22 expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 322 (expr_cast)


State 1347

  840 make_dim_decl: "fixed_array" '<' $@108 type_declaration_no_options '>' $@109 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 1405
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1348

  804 use_initializer: "uninitialized" .

    $default  reduce using rule 804 (use_initializer)


State 1349

  816 make_struct_decl: "default" '<' $@96 type_declaration_no_options '>' $@97 use_initializer .

    $default  reduce using rule 816 (make_struct_decl)


State 1350

  822 make_tuple_call: "tuple" '<' $@98 tuple_type_list '>' $@99 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1348

    $default  reduce using rule 803 (use_initializer)

    use_initializer  go to state 1406


State 1351

  813 make_struct_decl: "variant" '<' $@94 variant_type_list '>' $@95 '(' . use_initializer make_variant_dim ')'

    "uninitialized"  shift, and go to state 1348

    $default  reduce using rule 803 (use_initializer)

    use_initializer  go to state 1407


State 1352

  488 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 488 (expr_generator)


State 1353

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  489 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1408


State 1354

  490 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block .

    $default  reduce using rule 490 (expr_generator)


State 1355

  498 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 498 (expr_mtag)


State 1356

   34 format_string: format_string . STRING_CHARACTER
   37 optional_format_string: ':' $@1 format_string .

    STRING_CHARACTER  shift, and go to state 1409

    $default  reduce using rule 37 (optional_format_string)


State 1357

  852 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' . ';' expr array_comprehension_where ']'

    ';'  shift, and go to state 1410


State 1358

  330 expr_list: expr_list . ',' expr
  853 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list . ')' ';' expr array_comprehension_where ']'

    ','  shift, and go to state 1016
    ')'  shift, and go to state 1411


State 1359

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  791 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 791 (make_struct_fields)


State 1360

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  790 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 790 (make_struct_fields)


State 1361

  792 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  793                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 760
    ":="  shift, and go to state 1412
    '='   shift, and go to state 762

    copy_or_move  go to state 1413


State 1362

  384 func_addr_expr: '@' '@' '<' $@25 type_declaration_no_options '>' $@26 . func_addr_name

    "::"    shift, and go to state 57
    "$i"    shift, and go to state 767
    "name"  shift, and go to state 58

    name_in_namespace  go to state 770
    func_addr_name     go to state 1414


State 1363

  387 func_addr_expr: '@' '@' '<' $@27 optional_function_argument_list optional_function_type '>' . $@28 func_addr_name

    $default  reduce using rule 386 ($@28)

    $@28  go to state 1415


State 1364

  854 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" expr_list ')' . ';' make_map_tuple array_comprehension_where '}'

    ';'  shift, and go to state 1416


State 1365

  376 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1417


State 1366

  341 capture_entry: "name" '(' "name" . ')'

    ')'  shift, and go to state 1418


State 1367

  343 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 343 (capture_list)


State 1368

  332 block_or_simple_block: "=>" . expr
  333                      | "=>" . "<-" expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "<-"                              shift, and go to state 1419
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1420
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1369

  331 block_or_simple_block: expression_block .

    $default  reduce using rule 331 (block_or_simple_block)


State 1370

  346 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block .

    $default  reduce using rule 346 (expr_full_block)


State 1371

  347 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis . expression_block

    $default  reduce using rule 245 ($@13)

    expression_block  go to state 1421
    $@13              go to state 397


State 1372

  463 expr: expr "is" "type" '<' $@31 type_declaration_no_options '>' . $@32

    $default  reduce using rule 462 ($@32)

    $@32  go to state 1422


State 1373

  469 expr: expr "as" "type" '<' $@33 type_declaration '>' . $@34

    $default  reduce using rule 468 ($@34)

    $@34  go to state 1423


State 1374

  474 expr: expr '?' "as" "type" '<' $@35 type_declaration . '>' $@36
  764 type_declaration: type_declaration . '|' type_declaration_no_options
  765                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 1424


State 1375

  504 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 504 (expr_mtag)


State 1376

  502 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 502 (expr_mtag)


State 1377

  392 expr_field: expr '.' "name" '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1425


State 1378

  501 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 501 (expr_mtag)


State 1379

  710 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@53 type_declaration_no_options_list '>' '(' optional_expr_list ')' .

    $default  reduce using rule 710 (type_declaration_no_options_no_dim)


State 1380

   93 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' . expression_else_one_liner SEMICOLON

    "else"  shift, and go to state 1426

    $default  reduce using rule 75 (expression_else_one_liner)

    expression_else_one_liner  go to state 1427


State 1381

   92 expression_if_then_else: $@6 if_or_static_if '(' expr ')' . optional_emit_semis expression_if_block expression_else

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1428


State 1382

   95 expression_for_loop: $@7 "for" '(' variable_name_with_pos_list "in" . expr_list ')' optional_emit_semis expression_block

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 1429
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1383

   98 expression_while_loop: $@8 "while" '(' expr ')' . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1430


State 1384

  100 expression_with: $@9 "with" '(' expr ')' . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1431


State 1385

  244 expression_block_finally: "finally" $@11 '{' . expressions $@12 '}'

    $default  reduce using rule 268 (expressions)

    expressions  go to state 1432


State 1386

  308 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1433


State 1387

  309 tuple_expansion_variable_declaration: '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  310                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr SEMICOLON

    ':'  shift, and go to state 1434
    '&'  shift, and go to state 415

    $default  reduce using rule 561 (optional_ref)

    optional_ref  go to state 1435


State 1388

  313 expression_let: kwd_let optional_in_scope '{' variable_declaration_list '}' .

    $default  reduce using rule 313 (expression_let)


State 1389

  571 variable_declaration_list: variable_declaration_list SEMICOLON .

    $default  reduce using rule 571 (variable_declaration_list)


State 1390

  572 variable_declaration_list: variable_declaration_list let_variable_declaration .

    $default  reduce using rule 572 (variable_declaration_list)


State 1391

  525 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" . optional_constant $@38 function_declaration_header SEMICOLON

    "const"  shift, and go to state 1436

    $default  reduce using rule 512 (optional_constant)

    optional_constant  go to state 1437


State 1392

  527 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@39 function_declaration_header optional_emit_semis expression_block

    "override"  shift, and go to state 1393
    "sealed"    shift, and go to state 1394

    $default  reduce using rule 509 (optional_override)

    optional_override  go to state 1438


State 1393

  510 optional_override: "override" .

    $default  reduce using rule 510 (optional_override)


State 1394

  511 optional_override: "sealed" .

    $default  reduce using rule 511 (optional_override)


State 1395

  519 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1327
    "private"  shift, and go to state 1328

    $default  reduce using rule 514 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1439


State 1396

  807 make_struct_decl: "struct" '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 602
    "name"  shift, and go to state 981
    '('     shift, and go to state 1440

    $default  reduce using rule 802 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1441
    make_struct_dim_list           go to state 1442
    make_struct_dim_decl           go to state 1443
    optional_make_struct_dim_decl  go to state 1444


State 1397

  810 make_struct_decl: "class" '<' $@92 type_declaration_no_options '>' $@93 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 602
    "name"  shift, and go to state 981
    '('     shift, and go to state 1440

    $default  reduce using rule 802 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1441
    make_struct_dim_list           go to state 1442
    make_struct_dim_decl           go to state 1443
    optional_make_struct_dim_decl  go to state 1445


State 1398

  327 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')' .

    $default  reduce using rule 327 (expr_type_info)


State 1399

  328 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1446
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1400

  826 make_dim_decl: "array" "struct" '<' $@100 type_declaration_no_options '>' $@101 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1348

    $default  reduce using rule 803 (use_initializer)

    use_initializer  go to state 1447


State 1401

  829 make_dim_decl: "array" "tuple" '<' $@102 tuple_type_list '>' $@103 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1348

    $default  reduce using rule 803 (use_initializer)

    use_initializer  go to state 1448


State 1402

  832 make_dim_decl: "array" "variant" '<' $@104 variant_type_list '>' $@105 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 602
    "name"  shift, and go to state 981

    $default  reduce using rule 794 (make_variant_dim)

    make_struct_fields  go to state 1449
    make_variant_dim    go to state 1450


State 1403

  836 make_dim_decl: "array" '<' $@106 type_declaration_no_options '>' $@107 '(' optional_expr_list . ')'

    ')'  shift, and go to state 1451


State 1404

  847 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1452


State 1405

  330 expr_list: expr_list . ',' expr
  840 make_dim_decl: "fixed_array" '<' $@108 type_declaration_no_options '>' $@109 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 757

    $default  reduce using rule 850 (optional_comma)

    optional_comma  go to state 1453


State 1406

  822 make_tuple_call: "tuple" '<' $@98 tuple_type_list '>' $@99 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 602
    "name"  shift, and go to state 981
    '('     shift, and go to state 1440

    $default  reduce using rule 802 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1441
    make_struct_dim_list           go to state 1442
    make_struct_dim_decl           go to state 1443
    optional_make_struct_dim_decl  go to state 1454


State 1407

  813 make_struct_decl: "variant" '<' $@94 variant_type_list '>' $@95 '(' use_initializer . make_variant_dim ')'

    "$f"    shift, and go to state 602
    "name"  shift, and go to state 981

    $default  reduce using rule 794 (make_variant_dim)

    make_struct_fields  go to state 1449
    make_variant_dim    go to state 1455


State 1408

  489 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 489 (expr_generator)


State 1409

   34 format_string: format_string STRING_CHARACTER .

    $default  reduce using rule 34 (format_string)


State 1410

  852 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1456
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1411

  853 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' . ';' expr array_comprehension_where ']'

    ';'  shift, and go to state 1457


State 1412

  793 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1458
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1413

  792 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1459
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1414

  384 func_addr_expr: '@' '@' '<' $@25 type_declaration_no_options '>' $@26 func_addr_name .

    $default  reduce using rule 384 (func_addr_expr)


State 1415

  387 func_addr_expr: '@' '@' '<' $@27 optional_function_argument_list optional_function_type '>' $@28 . func_addr_name

    "::"    shift, and go to state 57
    "$i"    shift, and go to state 767
    "name"  shift, and go to state 58

    name_in_namespace  go to state 770
    func_addr_name     go to state 1460


State 1416

  854 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' . make_map_tuple array_comprehension_where '}'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 729
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_map_tuple          go to state 1461
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1417

  376 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 376 (expr_named_call)


State 1418

  341 capture_entry: "name" '(' "name" ')' .

    $default  reduce using rule 341 (capture_entry)


State 1419

  333 block_or_simple_block: "=>" "<-" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1462
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1420

  332 block_or_simple_block: "=>" expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    ".."  error (nonassociative)

    $default  reduce using rule 332 (block_or_simple_block)


State 1421

  347 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block .

    $default  reduce using rule 347 (expr_full_block_assumed_piped)


State 1422

  463 expr: expr "is" "type" '<' $@31 type_declaration_no_options '>' $@32 .

    $default  reduce using rule 463 (expr)


State 1423

  469 expr: expr "as" "type" '<' $@33 type_declaration '>' $@34 .

    $default  reduce using rule 469 (expr)


State 1424

  474 expr: expr '?' "as" "type" '<' $@35 type_declaration '>' . $@36

    $default  reduce using rule 473 ($@36)

    $@36  go to state 1463


State 1425

  392 expr_field: expr '.' "name" '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 392 (expr_field)


State 1426

   76 expression_else_one_liner: "else" . expression_if_one_liner

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "return"                          shift, and go to state 872
    "null"                            shift, and go to state 428
    "break"                           shift, and go to state 873
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "continue"                        shift, and go to state 877
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "yield"                           shift, and go to state 882
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder           go to state 469
    expr_reader              go to state 470
    expression_if_one_liner  go to state 1464
    expr_call_pipe           go to state 471
    name_in_namespace        go to state 472
    expr_new                 go to state 473
    expression_break         go to state 1465
    expression_continue      go to state 1466
    expression_return        go to state 1467
    expression_yield         go to state 1468
    expr_cast                go to state 474
    expr_type_decl           go to state 475
    expr_type_info           go to state 476
    block_or_lambda          go to state 477
    expr_full_block          go to state 478
    expr_numeric_const       go to state 479
    expr_named_call          go to state 480
    expr_method_call         go to state 481
    func_addr_expr           go to state 482
    expr_field               go to state 483
    expr_call                go to state 484
    expr                     go to state 1469
    expr_generator           go to state 486
    expr_mtag                go to state 487
    basic_type_declaration   go to state 488
    make_decl                go to state 489
    make_struct_decl         go to state 490
    make_tuple_call          go to state 491
    make_dim_decl            go to state 492
    make_table_decl          go to state 493
    array_comprehension      go to state 494


State 1427

   93 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1470


State 1428

   92 expression_if_then_else: $@6 if_or_static_if '(' expr ')' optional_emit_semis . expression_if_block expression_else

    '{'       reduce using rule 86 ($@3)
    '{'       [reduce using rule 89 ($@5)]
    $default  reduce using rule 89 ($@5)

    expression_if_block  go to state 1471
    $@3                  go to state 1472
    $@5                  go to state 1473


State 1429

   95 expression_for_loop: $@7 "for" '(' variable_name_with_pos_list "in" expr_list . ')' optional_emit_semis expression_block
  330 expr_list: expr_list . ',' expr

    ','  shift, and go to state 1016
    ')'  shift, and go to state 1474


State 1430

   98 expression_while_loop: $@8 "while" '(' expr ')' optional_emit_semis . expression_block

    $default  reduce using rule 245 ($@13)

    expression_block  go to state 1475
    $@13              go to state 397


State 1431

  100 expression_with: $@9 "with" '(' expr ')' optional_emit_semis . expression_block

    $default  reduce using rule 245 ($@13)

    expression_block  go to state 1476
    $@13              go to state 397


State 1432

  244 expression_block_finally: "finally" $@11 '{' expressions . $@12 '}'
  269 expressions: expressions . expression_any
  270            | expressions . error

    error                             shift, and go to state 871
    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "return"                          shift, and go to state 872
    "null"                            shift, and go to state 428
    "break"                           shift, and go to state 873
    "try"                             shift, and go to state 874
    "table"                           shift, and go to state 429
    "delete"                          shift, and go to state 875
    "deref"                           shift, and go to state 430
    "assume"                          shift, and go to state 876
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 433
    "continue"                        shift, and go to state 877
    "pass"                            shift, and go to state 878
    "reinterpret"                     shift, and go to state 434
    "label"                           shift, and go to state 879
    "goto"                            shift, and go to state 880
    "unsafe"                          shift, and go to state 881
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "yield"                           shift, and go to state 882
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 468

    "while"      reduce using rule 97 ($@8)
    "if"         reduce using rule 91 ($@6)
    "static_if"  reduce using rule 91 ($@6)
    "for"        reduce using rule 94 ($@7)
    "with"       reduce using rule 99 ($@9)
    '}'          reduce using rule 243 ($@12)

    SEMICOLON                         go to state 883
    string_builder                    go to state 469
    expr_reader                       go to state 470
    expression_label                  go to state 884
    expression_goto                   go to state 885
    expression_if_one_liner           go to state 886
    expression_if_then_else           go to state 887
    $@6                               go to state 888
    expression_if_then_else_oneliner  go to state 889
    expression_for_loop               go to state 890
    $@7                               go to state 891
    expression_unsafe                 go to state 892
    expression_while_loop             go to state 893
    $@8                               go to state 894
    expression_with                   go to state 895
    $@9                               go to state 896
    expression_with_alias             go to state 897
    $@12                              go to state 1477
    expr_call_pipe                    go to state 471
    expression_any                    go to state 899
    name_in_namespace                 go to state 472
    expression_delete                 go to state 900
    expr_new                          go to state 473
    expression_break                  go to state 901
    expression_continue               go to state 902
    expression_return                 go to state 903
    expression_yield                  go to state 904
    expression_try_catch              go to state 905
    kwd_let                           go to state 906
    expression_let                    go to state 907
    expr_cast                         go to state 474
    expr_type_decl                    go to state 475
    expr_type_info                    go to state 476
    block_or_lambda                   go to state 477
    expr_full_block                   go to state 478
    expr_numeric_const                go to state 479
    expr_assign                       go to state 908
    expr_named_call                   go to state 480
    expr_method_call                  go to state 481
    func_addr_expr                    go to state 482
    expr_field                        go to state 483
    expr_call                         go to state 484
    expr                              go to state 909
    expr_generator                    go to state 486
    expr_mtag                         go to state 487
    basic_type_declaration            go to state 488
    make_decl                         go to state 489
    make_struct_decl                  go to state 490
    make_tuple_call                   go to state 491
    make_dim_decl                     go to state 492
    make_table_decl                   go to state 493
    array_comprehension               go to state 494


State 1433

  308 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 308 (tuple_expansion)


State 1434

  309 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr SEMICOLON

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 1478
    type_declaration_no_options_no_dim  go to state 275


State 1435

  310 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr SEMICOLON

    "<-"  shift, and go to state 547
    ":="  shift, and go to state 548
    '='   shift, and go to state 549

    copy_or_move_or_clone  go to state 1479


State 1436

  513 optional_constant: "const" .

    $default  reduce using rule 513 (optional_constant)


State 1437

  525 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant . $@38 function_declaration_header SEMICOLON

    $default  reduce using rule 524 ($@38)

    $@38  go to state 1480


State 1438

  527 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@39 function_declaration_header optional_emit_semis expression_block

    "const"  shift, and go to state 1436

    $default  reduce using rule 512 (optional_constant)

    optional_constant  go to state 1481


State 1439

  519 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 686
    "name"  shift, and go to state 687

    variable_declaration_no_type  go to state 1482
    variable_declaration_type     go to state 1483
    variable_declaration          go to state 1484
    variable_name_with_pos_list   go to state 690


State 1440

  797 make_struct_dim_list: '(' . make_struct_fields ')'

    "$f"    shift, and go to state 602
    "name"  shift, and go to state 981

    make_struct_fields  go to state 1485


State 1441

  788 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  789                   | make_struct_fields . ',' "name" ":=" expr
  792                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  793                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  799 make_struct_dim_decl: make_struct_fields .

    ','  shift, and go to state 765

    $default  reduce using rule 799 (make_struct_dim_decl)


State 1442

  798 make_struct_dim_list: make_struct_dim_list . ',' '(' make_struct_fields ')'
  800 make_struct_dim_decl: make_struct_dim_list . optional_comma

    ','  shift, and go to state 1486

    $default  reduce using rule 850 (optional_comma)

    optional_comma  go to state 1487


State 1443

  801 optional_make_struct_dim_decl: make_struct_dim_decl .

    $default  reduce using rule 801 (optional_make_struct_dim_decl)


State 1444

  807 make_struct_decl: "struct" '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1488


State 1445

  810 make_struct_decl: "class" '<' $@92 type_declaration_no_options '>' $@93 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1489


State 1446

  328 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr . ')'
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1490


State 1447

  826 make_dim_decl: "array" "struct" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 602
    "name"  shift, and go to state 981
    '('     shift, and go to state 1440

    $default  reduce using rule 802 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1441
    make_struct_dim_list           go to state 1442
    make_struct_dim_decl           go to state 1443
    optional_make_struct_dim_decl  go to state 1491


State 1448

  829 make_dim_decl: "array" "tuple" '<' $@102 tuple_type_list '>' $@103 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 602
    "name"  shift, and go to state 981
    '('     shift, and go to state 1440

    $default  reduce using rule 802 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1441
    make_struct_dim_list           go to state 1442
    make_struct_dim_decl           go to state 1443
    optional_make_struct_dim_decl  go to state 1492


State 1449

  788 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  789                   | make_struct_fields . ',' "name" ":=" expr
  792                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  793                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  795 make_variant_dim: make_struct_fields .

    ','  shift, and go to state 765

    $default  reduce using rule 795 (make_variant_dim)


State 1450

  832 make_dim_decl: "array" "variant" '<' $@104 variant_type_list '>' $@105 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1493


State 1451

  836 make_dim_decl: "array" '<' $@106 type_declaration_no_options '>' $@107 '(' optional_expr_list ')' .

    $default  reduce using rule 836 (make_dim_decl)


State 1452

  847 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 847 (make_table_decl)


State 1453

  840 make_dim_decl: "fixed_array" '<' $@108 type_declaration_no_options '>' $@109 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1494


State 1454

  822 make_tuple_call: "tuple" '<' $@98 tuple_type_list '>' $@99 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1495


State 1455

  813 make_struct_decl: "variant" '<' $@94 variant_type_list '>' $@95 '(' use_initializer make_variant_dim . ')'

    ')'  shift, and go to state 1496


State 1456

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  852 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr . array_comprehension_where ']'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ';'    shift, and go to state 1497

    $default  reduce using rule 848 (array_comprehension_where)

    array_comprehension_where  go to state 1498


State 1457

  853 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1499
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1458

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  793 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 793 (make_struct_fields)


State 1459

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  792 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 792 (make_struct_fields)


State 1460

  387 func_addr_expr: '@' '@' '<' $@27 optional_function_argument_list optional_function_type '>' $@28 func_addr_name .

    $default  reduce using rule 387 (func_addr_expr)


State 1461

  854 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple . array_comprehension_where '}'

    ';'  shift, and go to state 1497

    $default  reduce using rule 848 (array_comprehension_where)

    array_comprehension_where  go to state 1500


State 1462

  333 block_or_simple_block: "=>" "<-" expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 333 (block_or_simple_block)


State 1463

  474 expr: expr '?' "as" "type" '<' $@35 type_declaration '>' $@36 .

    $default  reduce using rule 474 (expr)


State 1464

   76 expression_else_one_liner: "else" expression_if_one_liner .

    $default  reduce using rule 76 (expression_else_one_liner)


State 1465

   80 expression_if_one_liner: expression_break .

    $default  reduce using rule 80 (expression_if_one_liner)


State 1466

   81 expression_if_one_liner: expression_continue .

    $default  reduce using rule 81 (expression_if_one_liner)


State 1467

   78 expression_if_one_liner: expression_return .

    $default  reduce using rule 78 (expression_if_one_liner)


State 1468

   79 expression_if_one_liner: expression_yield .

    $default  reduce using rule 79 (expression_if_one_liner)


State 1469

   77 expression_if_one_liner: expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 77 (expression_if_one_liner)


State 1470

   93 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner SEMICOLON .

    $default  reduce using rule 93 (expression_if_then_else_oneliner)


State 1471

   92 expression_if_then_else: $@6 if_or_static_if '(' expr ')' optional_emit_semis expression_if_block . expression_else

    "else"         shift, and go to state 1501
    "elif"         shift, and go to state 1502
    "static_elif"  shift, and go to state 1503

    $default  reduce using rule 70 (expression_else)

    elif_or_static_elif  go to state 1504
    expression_else      go to state 1505


State 1472

   88 expression_if_block: $@3 . '{' expressions $@4 '}' expression_block_finally

    '{'  shift, and go to state 1506


State 1473

   90 expression_if_block: $@5 . expression_if_one_liner SEMICOLON

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "return"                          shift, and go to state 872
    "null"                            shift, and go to state 428
    "break"                           shift, and go to state 873
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "continue"                        shift, and go to state 877
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "yield"                           shift, and go to state 882
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder           go to state 469
    expr_reader              go to state 470
    expression_if_one_liner  go to state 1507
    expr_call_pipe           go to state 471
    name_in_namespace        go to state 472
    expr_new                 go to state 473
    expression_break         go to state 1465
    expression_continue      go to state 1466
    expression_return        go to state 1467
    expression_yield         go to state 1468
    expr_cast                go to state 474
    expr_type_decl           go to state 475
    expr_type_info           go to state 476
    block_or_lambda          go to state 477
    expr_full_block          go to state 478
    expr_numeric_const       go to state 479
    expr_named_call          go to state 480
    expr_method_call         go to state 481
    func_addr_expr           go to state 482
    expr_field               go to state 483
    expr_call                go to state 484
    expr                     go to state 1469
    expr_generator           go to state 486
    expr_mtag                go to state 487
    basic_type_declaration   go to state 488
    make_decl                go to state 489
    make_struct_decl         go to state 490
    make_tuple_call          go to state 491
    make_dim_decl            go to state 492
    make_table_decl          go to state 493
    array_comprehension      go to state 494


State 1474

   95 expression_for_loop: $@7 "for" '(' variable_name_with_pos_list "in" expr_list ')' . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1508


State 1475

   98 expression_while_loop: $@8 "while" '(' expr ')' optional_emit_semis expression_block .

    $default  reduce using rule 98 (expression_while_loop)


State 1476

  100 expression_with: $@9 "with" '(' expr ')' optional_emit_semis expression_block .

    $default  reduce using rule 100 (expression_with)


State 1477

  244 expression_block_finally: "finally" $@11 '{' expressions $@12 . '}'

    '}'  shift, and go to state 1509


State 1478

  309 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr SEMICOLON
  711 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  712                                   | type_declaration_no_options . "explicit"
  713                                   | type_declaration_no_options . "const"
  714                                   | type_declaration_no_options . '-' "const"
  715                                   | type_declaration_no_options . '&'
  716                                   | type_declaration_no_options . '-' '&'
  717                                   | type_declaration_no_options . '#'
  718                                   | type_declaration_no_options . "implicit"
  719                                   | type_declaration_no_options . '-' '#'
  720                                   | type_declaration_no_options . "==" "const"
  721                                   | type_declaration_no_options . "==" '&'
  722                                   | type_declaration_no_options . '?'
  726                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "<-"        shift, and go to state 547
    "??"        shift, and go to state 370
    ":="        shift, and go to state 548
    '='         shift, and go to state 549
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374

    copy_or_move_or_clone  go to state 1510


State 1479

  310 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1511
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1480

  525 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@38 . function_declaration_header SEMICOLON

    "operator"  shift, and go to state 185
    "bool"      shift, and go to state 186
    "string"    shift, and go to state 187
    "int"       shift, and go to state 188
    "int2"      shift, and go to state 189
    "int3"      shift, and go to state 190
    "int4"      shift, and go to state 191
    "uint"      shift, and go to state 192
    "uint2"     shift, and go to state 193
    "uint3"     shift, and go to state 194
    "uint4"     shift, and go to state 195
    "float"     shift, and go to state 196
    "float2"    shift, and go to state 197
    "float3"    shift, and go to state 198
    "float4"    shift, and go to state 199
    "range"     shift, and go to state 200
    "urange"    shift, and go to state 201
    "range64"   shift, and go to state 202
    "urange64"  shift, and go to state 203
    "int64"     shift, and go to state 204
    "uint64"    shift, and go to state 205
    "double"    shift, and go to state 206
    "int8"      shift, and go to state 207
    "uint8"     shift, and go to state 208
    "int16"     shift, and go to state 209
    "uint16"    shift, and go to state 210
    "++"        shift, and go to state 211
    "--"        shift, and go to state 212
    "name"      shift, and go to state 213

    function_name                go to state 214
    function_declaration_header  go to state 1512


State 1481

  527 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@39 function_declaration_header optional_emit_semis expression_block

    $default  reduce using rule 526 ($@39)

    $@39  go to state 1513


State 1482

  557 variable_declaration: variable_declaration_no_type .

    $default  reduce using rule 557 (variable_declaration)


State 1483

  556 variable_declaration: variable_declaration_type .

    $default  reduce using rule 556 (variable_declaration)


State 1484

  519 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 519 (structure_variable_declaration)


State 1485

  788 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  789                   | make_struct_fields . ',' "name" ":=" expr
  792                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  793                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  797 make_struct_dim_list: '(' make_struct_fields . ')'

    ','  shift, and go to state 765
    ')'  shift, and go to state 1514


State 1486

  798 make_struct_dim_list: make_struct_dim_list ',' . '(' make_struct_fields ')'
  851 optional_comma: ',' .

    '('  shift, and go to state 1515

    $default  reduce using rule 851 (optional_comma)


State 1487

  800 make_struct_dim_decl: make_struct_dim_list optional_comma .

    $default  reduce using rule 800 (make_struct_dim_decl)


State 1488

  807 make_struct_decl: "struct" '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 807 (make_struct_decl)


State 1489

  810 make_struct_decl: "class" '<' $@92 type_declaration_no_options '>' $@93 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 810 (make_struct_decl)


State 1490

  328 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')' .

    $default  reduce using rule 328 (expr_type_info)


State 1491

  826 make_dim_decl: "array" "struct" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1516


State 1492

  829 make_dim_decl: "array" "tuple" '<' $@102 tuple_type_list '>' $@103 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1517


State 1493

  832 make_dim_decl: "array" "variant" '<' $@104 variant_type_list '>' $@105 '(' make_variant_dim ')' .

    $default  reduce using rule 832 (make_dim_decl)


State 1494

  840 make_dim_decl: "fixed_array" '<' $@108 type_declaration_no_options '>' $@109 '(' expr_list optional_comma ')' .

    $default  reduce using rule 840 (make_dim_decl)


State 1495

  822 make_tuple_call: "tuple" '<' $@98 tuple_type_list '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 822 (make_tuple_call)


State 1496

  813 make_struct_decl: "variant" '<' $@94 variant_type_list '>' $@95 '(' use_initializer make_variant_dim ')' .

    $default  reduce using rule 813 (make_struct_decl)


State 1497

  849 array_comprehension_where: ';' . "where" expr

    "where"  shift, and go to state 1518


State 1498

  852 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where . ']'

    ']'  shift, and go to state 1519


State 1499

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  853 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr . array_comprehension_where ']'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ';'    shift, and go to state 1497

    $default  reduce using rule 848 (array_comprehension_where)

    array_comprehension_where  go to state 1520


State 1500

  854 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where . '}'

    '}'  shift, and go to state 1521


State 1501

   71 expression_else: "else" . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1522


State 1502

   64 elif_or_static_elif: "elif" .

    $default  reduce using rule 64 (elif_or_static_elif)


State 1503

   65 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 65 (elif_or_static_elif)


State 1504

   72 expression_else: elif_or_static_elif . '(' expr ')' optional_emit_semis expression_block expression_else

    '('  shift, and go to state 1523


State 1505

   92 expression_if_then_else: $@6 if_or_static_if '(' expr ')' optional_emit_semis expression_if_block expression_else .

    $default  reduce using rule 92 (expression_if_then_else)


State 1506

   88 expression_if_block: $@3 '{' . expressions $@4 '}' expression_block_finally

    $default  reduce using rule 268 (expressions)

    expressions  go to state 1524


State 1507

   90 expression_if_block: $@5 expression_if_one_liner . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1525


State 1508

   95 expression_for_loop: $@7 "for" '(' variable_name_with_pos_list "in" expr_list ')' optional_emit_semis . expression_block

    $default  reduce using rule 245 ($@13)

    expression_block  go to state 1526
    $@13              go to state 397


State 1509

  244 expression_block_finally: "finally" $@11 '{' expressions $@12 '}' .

    $default  reduce using rule 244 (expression_block_finally)


State 1510

  309 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1527
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1511

  310 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr . SEMICOLON
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 617
    "as"                   shift, and go to state 618
    "<<"                   shift, and go to state 619
    ">>"                   shift, and go to state 620
    "++"                   shift, and go to state 621
    "--"                   shift, and go to state 622
    "<="                   shift, and go to state 623
    ">="                   shift, and go to state 624
    "=="                   shift, and go to state 625
    "!="                   shift, and go to state 626
    "->"                   shift, and go to state 627
    "??"                   shift, and go to state 628
    "?."                   shift, and go to state 629
    "?["                   shift, and go to state 630
    "<|"                   shift, and go to state 631
    "|>"                   shift, and go to state 632
    "<<<"                  shift, and go to state 633
    ">>>"                  shift, and go to state 634
    "&&"                   shift, and go to state 635
    "||"                   shift, and go to state 636
    "^^"                   shift, and go to state 637
    ".."                   shift, and go to state 638
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 639
    '|'                    shift, and go to state 640
    '^'                    shift, and go to state 641
    '&'                    shift, and go to state 642
    '<'                    shift, and go to state 643
    '>'                    shift, and go to state 644
    '-'                    shift, and go to state 645
    '+'                    shift, and go to state 646
    '*'                    shift, and go to state 647
    '/'                    shift, and go to state 648
    '%'                    shift, and go to state 649
    '.'                    shift, and go to state 650
    '['                    shift, and go to state 651
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1528


State 1512

  525 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@38 function_declaration_header . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1529


State 1513

  527 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@39 . function_declaration_header optional_emit_semis expression_block

    "operator"  shift, and go to state 185
    "bool"      shift, and go to state 186
    "string"    shift, and go to state 187
    "int"       shift, and go to state 188
    "int2"      shift, and go to state 189
    "int3"      shift, and go to state 190
    "int4"      shift, and go to state 191
    "uint"      shift, and go to state 192
    "uint2"     shift, and go to state 193
    "uint3"     shift, and go to state 194
    "uint4"     shift, and go to state 195
    "float"     shift, and go to state 196
    "float2"    shift, and go to state 197
    "float3"    shift, and go to state 198
    "float4"    shift, and go to state 199
    "range"     shift, and go to state 200
    "urange"    shift, and go to state 201
    "range64"   shift, and go to state 202
    "urange64"  shift, and go to state 203
    "int64"     shift, and go to state 204
    "uint64"    shift, and go to state 205
    "double"    shift, and go to state 206
    "int8"      shift, and go to state 207
    "uint8"     shift, and go to state 208
    "int16"     shift, and go to state 209
    "uint16"    shift, and go to state 210
    "++"        shift, and go to state 211
    "--"        shift, and go to state 212
    "name"      shift, and go to state 213

    function_name                go to state 214
    function_declaration_header  go to state 1530


State 1514

  797 make_struct_dim_list: '(' make_struct_fields ')' .

    $default  reduce using rule 797 (make_struct_dim_list)


State 1515

  798 make_struct_dim_list: make_struct_dim_list ',' '(' . make_struct_fields ')'

    "$f"    shift, and go to state 602
    "name"  shift, and go to state 981

    make_struct_fields  go to state 1531


State 1516

  826 make_dim_decl: "array" "struct" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 826 (make_dim_decl)


State 1517

  829 make_dim_decl: "array" "tuple" '<' $@102 tuple_type_list '>' $@103 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 829 (make_dim_decl)


State 1518

  849 array_comprehension_where: ';' "where" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1532
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1519

  852 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']' .

    $default  reduce using rule 852 (array_comprehension)


State 1520

  853 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where . ']'

    ']'  shift, and go to state 1533


State 1521

  854 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}' .

    $default  reduce using rule 854 (array_comprehension)


State 1522

   71 expression_else: "else" optional_emit_semis . expression_block

    $default  reduce using rule 245 ($@13)

    expression_block  go to state 1534
    $@13              go to state 397


State 1523

   72 expression_else: elif_or_static_elif '(' . expr ')' optional_emit_semis expression_block expression_else

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1535
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1524

   88 expression_if_block: $@3 '{' expressions . $@4 '}' expression_block_finally
  269 expressions: expressions . expression_any
  270            | expressions . error

    error                             shift, and go to state 871
    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "return"                          shift, and go to state 872
    "null"                            shift, and go to state 428
    "break"                           shift, and go to state 873
    "try"                             shift, and go to state 874
    "table"                           shift, and go to state 429
    "delete"                          shift, and go to state 875
    "deref"                           shift, and go to state 430
    "assume"                          shift, and go to state 876
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 433
    "continue"                        shift, and go to state 877
    "pass"                            shift, and go to state 878
    "reinterpret"                     shift, and go to state 434
    "label"                           shift, and go to state 879
    "goto"                            shift, and go to state 880
    "unsafe"                          shift, and go to state 881
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "yield"                           shift, and go to state 882
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 468

    "while"      reduce using rule 97 ($@8)
    "if"         reduce using rule 91 ($@6)
    "static_if"  reduce using rule 91 ($@6)
    "for"        reduce using rule 94 ($@7)
    "with"       reduce using rule 99 ($@9)
    '}'          reduce using rule 87 ($@4)

    SEMICOLON                         go to state 883
    string_builder                    go to state 469
    expr_reader                       go to state 470
    expression_label                  go to state 884
    expression_goto                   go to state 885
    expression_if_one_liner           go to state 886
    $@4                               go to state 1536
    expression_if_then_else           go to state 887
    $@6                               go to state 888
    expression_if_then_else_oneliner  go to state 889
    expression_for_loop               go to state 890
    $@7                               go to state 891
    expression_unsafe                 go to state 892
    expression_while_loop             go to state 893
    $@8                               go to state 894
    expression_with                   go to state 895
    $@9                               go to state 896
    expression_with_alias             go to state 897
    expr_call_pipe                    go to state 471
    expression_any                    go to state 899
    name_in_namespace                 go to state 472
    expression_delete                 go to state 900
    expr_new                          go to state 473
    expression_break                  go to state 901
    expression_continue               go to state 902
    expression_return                 go to state 903
    expression_yield                  go to state 904
    expression_try_catch              go to state 905
    kwd_let                           go to state 906
    expression_let                    go to state 907
    expr_cast                         go to state 474
    expr_type_decl                    go to state 475
    expr_type_info                    go to state 476
    block_or_lambda                   go to state 477
    expr_full_block                   go to state 478
    expr_numeric_const                go to state 479
    expr_assign                       go to state 908
    expr_named_call                   go to state 480
    expr_method_call                  go to state 481
    func_addr_expr                    go to state 482
    expr_field                        go to state 483
    expr_call                         go to state 484
    expr                              go to state 909
    expr_generator                    go to state 486
    expr_mtag                         go to state 487
    basic_type_declaration            go to state 488
    make_decl                         go to state 489
    make_struct_decl                  go to state 490
    make_tuple_call                   go to state 491
    make_dim_decl                     go to state 492
    make_table_decl                   go to state 493
    array_comprehension               go to state 494


State 1525

   90 expression_if_block: $@5 expression_if_one_liner SEMICOLON .

    $default  reduce using rule 90 (expression_if_block)


State 1526

   95 expression_for_loop: $@7 "for" '(' variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block .

    $default  reduce using rule 95 (expression_for_loop)


State 1527

  309 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr . SEMICOLON
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 617
    "as"                   shift, and go to state 618
    "<<"                   shift, and go to state 619
    ">>"                   shift, and go to state 620
    "++"                   shift, and go to state 621
    "--"                   shift, and go to state 622
    "<="                   shift, and go to state 623
    ">="                   shift, and go to state 624
    "=="                   shift, and go to state 625
    "!="                   shift, and go to state 626
    "->"                   shift, and go to state 627
    "??"                   shift, and go to state 628
    "?."                   shift, and go to state 629
    "?["                   shift, and go to state 630
    "<|"                   shift, and go to state 631
    "|>"                   shift, and go to state 632
    "<<<"                  shift, and go to state 633
    ">>>"                  shift, and go to state 634
    "&&"                   shift, and go to state 635
    "||"                   shift, and go to state 636
    "^^"                   shift, and go to state 637
    ".."                   shift, and go to state 638
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 639
    '|'                    shift, and go to state 640
    '^'                    shift, and go to state 641
    '&'                    shift, and go to state 642
    '<'                    shift, and go to state 643
    '>'                    shift, and go to state 644
    '-'                    shift, and go to state 645
    '+'                    shift, and go to state 646
    '*'                    shift, and go to state 647
    '/'                    shift, and go to state 648
    '%'                    shift, and go to state 649
    '.'                    shift, and go to state 650
    '['                    shift, and go to state 651
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1537


State 1528

  310 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 310 (tuple_expansion_variable_declaration)


State 1529

  525 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@38 function_declaration_header SEMICOLON .

    $default  reduce using rule 525 (struct_variable_declaration_list)


State 1530

  527 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@39 function_declaration_header . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1538


State 1531

  788 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  789                   | make_struct_fields . ',' "name" ":=" expr
  792                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  793                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  798 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields . ')'

    ','  shift, and go to state 765
    ')'  shift, and go to state 1539


State 1532

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  849 array_comprehension_where: ';' "where" expr .

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 849 (array_comprehension_where)


State 1533

  853 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']' .

    $default  reduce using rule 853 (array_comprehension)


State 1534

   71 expression_else: "else" optional_emit_semis expression_block .

    $default  reduce using rule 71 (expression_else)


State 1535

   72 expression_else: elif_or_static_elif '(' expr . ')' optional_emit_semis expression_block expression_else
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1540


State 1536

   88 expression_if_block: $@3 '{' expressions $@4 . '}' expression_block_finally

    '}'  shift, and go to state 1541


State 1537

  309 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 309 (tuple_expansion_variable_declaration)


State 1538

  527 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@39 function_declaration_header optional_emit_semis . expression_block

    $default  reduce using rule 245 ($@13)

    expression_block  go to state 1542
    $@13              go to state 397


State 1539

  798 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields ')' .

    $default  reduce using rule 798 (make_struct_dim_list)


State 1540

   72 expression_else: elif_or_static_elif '(' expr ')' . optional_emit_semis expression_block expression_else

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1543


State 1541

   88 expression_if_block: $@3 '{' expressions $@4 '}' . expression_block_finally

    "finally"  shift, and go to state 1216

    $default  reduce using rule 241 (expression_block_finally)

    expression_block_finally  go to state 1544


State 1542

  527 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@39 function_declaration_header optional_emit_semis expression_block .

    $default  reduce using rule 527 (struct_variable_declaration_list)


State 1543

   72 expression_else: elif_or_static_elif '(' expr ')' optional_emit_semis . expression_block expression_else

    $default  reduce using rule 245 ($@13)

    expression_block  go to state 1545
    $@13              go to state 397


State 1544

   88 expression_if_block: $@3 '{' expressions $@4 '}' expression_block_finally .

    $default  reduce using rule 88 (expression_if_block)


State 1545

   72 expression_else: elif_or_static_elif '(' expr ')' optional_emit_semis expression_block . expression_else

    "else"         shift, and go to state 1501
    "elif"         shift, and go to state 1502
    "static_elif"  shift, and go to state 1503

    $default  reduce using rule 70 (expression_else)

    elif_or_static_elif  go to state 1504
    expression_else      go to state 1546


State 1546

   72 expression_else: elif_or_static_elif '(' expr ')' optional_emit_semis expression_block expression_else .

    $default  reduce using rule 72 (expression_else)
