Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"


State 59 conflicts: 1 shift/reduce
State 325 conflicts: 1 shift/reduce
State 422 conflicts: 1 shift/reduce
State 526 conflicts: 2 shift/reduce
State 528 conflicts: 2 shift/reduce
State 637 conflicts: 1 shift/reduce
State 720 conflicts: 1 shift/reduce
State 929 conflicts: 1 shift/reduce
State 1072 conflicts: 1 shift/reduce
State 1184 conflicts: 1 shift/reduce
State 1185 conflicts: 1 shift/reduce
State 1473 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration
    9        | program options_declaration
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program tuple_alias_declaration
   13        | program bitfield_alias_declaration
   14        | program top_level_reader_macro
   15        | program "end of expression"

   16 top_level_reader_macro: expr_reader "end of expression"

   17 optional_public_or_private_module: %empty
   18                                  | "public"
   19                                  | "private"

   20 module_name: '$'
   21            | "name"

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   23 character_sequence: STRING_CHARACTER
   24                   | STRING_CHARACTER_ESC
   25                   | character_sequence STRING_CHARACTER
   26                   | character_sequence STRING_CHARACTER_ESC

   27 string_constant: "start of the string" character_sequence "end of the string"
   28                | "start of the string" "end of the string"

   29 format_string: %empty
   30              | format_string STRING_CHARACTER

   31 optional_format_string: %empty

   32 $@1: %empty

   33 optional_format_string: ':' $@1 format_string

   34 string_builder_body: %empty
   35                    | string_builder_body character_sequence
   36                    | string_builder_body "{" expr optional_format_string "}"

   37 string_builder: "start of the string" string_builder_body "end of the string"

   38 reader_character_sequence: STRING_CHARACTER
   39                          | reader_character_sequence STRING_CHARACTER

   40 $@2: %empty

   41 expr_reader: '%' name_in_namespace $@2 reader_character_sequence

   42 options_declaration: "options" annotation_argument_list

   43 require_declaration: "require" require_module

   44 keyword_or_name: "name"
   45                | "keyword"
   46                | "type function"

   47 require_module_name: keyword_or_name
   48                    | '%' require_module_name
   49                    | require_module_name '.' keyword_or_name
   50                    | require_module_name '/' keyword_or_name

   51 require_module: require_module_name is_public_module
   52               | require_module_name "as" "name" is_public_module

   53 is_public_module: %empty
   54                 | "public"

   55 expect_declaration: "expect" expect_list

   56 expect_list: expect_error
   57            | expect_list ',' expect_error

   58 expect_error: "integer constant"
   59             | "integer constant" ':' "integer constant"

   60 expression_label: "label" "integer constant" ':'

   61 expression_goto: "goto" "label" "integer constant"
   62                | "goto" expr

   63 elif_or_static_elif: "elif"
   64                    | "static_elif"

   65 expression_else: %empty
   66                | "else" expression_block
   67                | elif_or_static_elif expr expression_block expression_else

   68 if_or_static_if: "if"
   69                | "static_if"

   70 expression_else_one_liner: %empty

   71 $@3: %empty

   72 expression_else_one_liner: "else" $@3 expression_if_one_liner

   73 expression_if_one_liner: expr
   74                        | expression_return_no_pipe
   75                        | expression_yield_no_pipe
   76                        | expression_break
   77                        | expression_continue

   78 expression_if_then_else: if_or_static_if expr expression_block expression_else

   79 $@4: %empty

   80 expression_if_then_else: expression_if_one_liner "if" $@4 expr expression_else_one_liner "end of expression"

   81 $@5: %empty

   82 expression_for_loop: "for" $@5 variable_name_with_pos_list "in" expr_list expression_block

   83 expression_unsafe: "unsafe" expression_block

   84 expression_while_loop: "while" expr expression_block

   85 expression_with: "with" expr expression_block

   86 $@6: %empty

   87 expression_with_alias: "assume" "name" '=' $@6 expr

   88 annotation_argument_value: string_constant
   89                          | "name"
   90                          | "integer constant"
   91                          | "floating point constant"
   92                          | "true"
   93                          | "false"

   94 annotation_argument_value_list: annotation_argument_value
   95                               | annotation_argument_value_list ',' annotation_argument_value

   96 annotation_argument_name: "name"
   97                         | "type"
   98                         | "in"

   99 annotation_argument: annotation_argument_name '=' string_constant
  100                    | annotation_argument_name '=' "name"
  101                    | annotation_argument_name '=' "integer constant"
  102                    | annotation_argument_name '=' "floating point constant"
  103                    | annotation_argument_name '=' "true"
  104                    | annotation_argument_name '=' "false"
  105                    | annotation_argument_name
  106                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

  107 annotation_argument_list: annotation_argument
  108                         | annotation_argument_list ',' annotation_argument

  109 metadata_argument_list: '@' annotation_argument
  110                       | metadata_argument_list '@' annotation_argument
  111                       | metadata_argument_list "end of expression"

  112 annotation_declaration_name: name_in_namespace
  113                            | "require"
  114                            | "private"
  115                            | "template"

  116 annotation_declaration_basic: annotation_declaration_name
  117                             | annotation_declaration_name '(' annotation_argument_list ')'

  118 annotation_declaration: annotation_declaration_basic
  119                       | '!' annotation_declaration
  120                       | annotation_declaration "&&" annotation_declaration
  121                       | annotation_declaration "||" annotation_declaration
  122                       | annotation_declaration "^^" annotation_declaration
  123                       | '(' annotation_declaration ')'
  124                       | "|>" annotation_declaration

  125 annotation_list: annotation_declaration
  126                | annotation_list ',' annotation_declaration

  127 optional_annotation_list: %empty
  128                         | '[' annotation_list ']'

  129 optional_function_argument_list: %empty
  130                                | '(' ')'
  131                                | '(' function_argument_list ')'

  132 optional_function_type: %empty
  133                       | ':' type_declaration

  134 function_name: "name"
  135              | "operator" '!'
  136              | "operator" '~'
  137              | "operator" "+="
  138              | "operator" "-="
  139              | "operator" "*="
  140              | "operator" "/="
  141              | "operator" "%="
  142              | "operator" "&="
  143              | "operator" "|="
  144              | "operator" "^="
  145              | "operator" "&&="
  146              | "operator" "||="
  147              | "operator" "^^="
  148              | "operator" "&&"
  149              | "operator" "||"
  150              | "operator" "^^"
  151              | "operator" '+'
  152              | "operator" '-'
  153              | "operator" '*'
  154              | "operator" '/'
  155              | "operator" '%'
  156              | "operator" '<'
  157              | "operator" '>'
  158              | "operator" ".."
  159              | "operator" "=="
  160              | "operator" "!="
  161              | "operator" "<="
  162              | "operator" ">="
  163              | "operator" '&'
  164              | "operator" '|'
  165              | "operator" '^'
  166              | "++" "operator"
  167              | "--" "operator"
  168              | "operator" "++"
  169              | "operator" "--"
  170              | "operator" "<<"
  171              | "operator" ">>"
  172              | "operator" "<<="
  173              | "operator" ">>="
  174              | "operator" "<<<"
  175              | "operator" ">>>"
  176              | "operator" "<<<="
  177              | "operator" ">>>="
  178              | "operator" '[' ']'
  179              | "operator" "?[" ']'
  180              | "operator" '.'
  181              | "operator" "?."
  182              | "operator" '.' "name"
  183              | "operator" '.' "name" ":="
  184              | "operator" "?." "name"
  185              | "operator" ":="
  186              | "operator" "delete"
  187              | "operator" "??"
  188              | "operator" "is"
  189              | "operator" "as"
  190              | "operator" "is" "name"
  191              | "operator" "as" "name"
  192              | "operator" '?' "as"
  193              | "operator" '?' "as" "name"
  194              | "bool"
  195              | "string"
  196              | "int"
  197              | "int2"
  198              | "int3"
  199              | "int4"
  200              | "uint"
  201              | "uint2"
  202              | "uint3"
  203              | "uint4"
  204              | "float"
  205              | "float2"
  206              | "float3"
  207              | "float4"
  208              | "range"
  209              | "urange"
  210              | "range64"
  211              | "urange64"
  212              | "int64"
  213              | "uint64"
  214              | "double"
  215              | "int8"
  216              | "uint8"
  217              | "int16"
  218              | "uint16"

  219 global_function_declaration: optional_annotation_list "def" function_declaration

  220 optional_public_or_private_function: %empty
  221                                    | "private"
  222                                    | "public"

  223 function_declaration_header: function_name optional_function_argument_list optional_function_type

  224 $@7: %empty

  225 function_declaration: optional_public_or_private_function $@7 function_declaration_header expression_block

  226 expression_block: "begin of code block" expressions "end of code block"
  227                 | "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions "end of code block"

  228 expr_call_pipe: expr expr_full_block_assumed_piped
  229               | expression_keyword expr_full_block_assumed_piped
  230               | "generator" '<' type_declaration_no_options '>' optional_capture_list expr_full_block_assumed_piped

  231 expression_any: "end of expression"
  232               | expr_pipe
  233               | expr_keyword
  234               | expr_assign_pipe
  235               | expr_assign "end of expression"
  236               | expression_delete "end of expression"
  237               | expression_let
  238               | expression_while_loop
  239               | expression_unsafe
  240               | expression_with
  241               | expression_with_alias
  242               | expression_for_loop
  243               | expression_break "end of expression"
  244               | expression_continue "end of expression"
  245               | expression_return
  246               | expression_yield
  247               | expression_if_then_else
  248               | expression_try_catch
  249               | expression_label "end of expression"
  250               | expression_goto "end of expression"
  251               | "pass" "end of expression"

  252 expressions: %empty
  253            | expressions expression_any
  254            | expressions error

  255 expr_keyword: "keyword" expr expression_block

  256 optional_expr_list: %empty
  257                   | expr_list optional_comma

  258 optional_expr_list_in_braces: %empty
  259                             | '(' optional_expr_list optional_comma ')'

  260 optional_expr_map_tuple_list: %empty
  261                             | expr_map_tuple_list optional_comma

  262 type_declaration_no_options_list: type_declaration
  263                                 | type_declaration_no_options_list c_or_s type_declaration

  264 $@8: %empty

  265 $@9: %empty

  266 expression_keyword: "keyword" '<' $@8 type_declaration_no_options_list '>' $@9 expr

  267 $@10: %empty

  268 $@11: %empty

  269 expression_keyword: "type function" '<' $@10 type_declaration_no_options_list '>' $@11 optional_expr_list_in_braces

  270 expr_pipe: expr_assign " <|" expr_block
  271          | "@ <|" expr_block
  272          | "@@ <|" expr_block
  273          | "$ <|" expr_block
  274          | expr_call_pipe

  275 name_in_namespace: "name"
  276                  | "name" "::" "name"
  277                  | "::" "name"

  278 expression_delete: "delete" expr
  279                  | "delete" "explicit" expr

  280 $@12: %empty

  281 $@13: %empty

  282 new_type_declaration: '<' $@12 type_declaration '>' $@13
  283                     | structure_type_declaration

  284 expr_new: "new" new_type_declaration
  285         | "new" new_type_declaration '(' use_initializer ')'
  286         | "new" new_type_declaration '(' expr_list ')'
  287         | "new" new_type_declaration '(' make_struct_single ')'
  288         | "new" new_type_declaration '(' "uninitialized" make_struct_single ')'
  289         | "new" make_decl

  290 expression_break: "break"

  291 expression_continue: "continue"

  292 expression_return_no_pipe: "return"
  293                          | "return" expr_list
  294                          | "return" "<-" expr_list

  295 expression_return: expression_return_no_pipe "end of expression"
  296                  | "return" expr_pipe
  297                  | "return" "<-" expr_pipe

  298 expression_yield_no_pipe: "yield" expr
  299                         | "yield" "<-" expr

  300 expression_yield: expression_yield_no_pipe "end of expression"
  301                 | "yield" expr_pipe
  302                 | "yield" "<-" expr_pipe

  303 expression_try_catch: "try" expression_block "recover" expression_block

  304 kwd_let_var_or_nothing: "let"
  305                       | "var"
  306                       | %empty

  307 kwd_let: "let"
  308        | "var"

  309 optional_in_scope: "inscope"
  310                  | %empty

  311 tuple_expansion: "name"
  312                | tuple_expansion ',' "name"

  313 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  314                                     | "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  315                                     | '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  316                                     | '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  317                                     | "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr "end of expression"
  318                                     | "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr_pipe
  319                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression"
  320                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr_pipe

  321 expression_let: kwd_let optional_in_scope let_variable_declaration
  322               | kwd_let optional_in_scope tuple_expansion_variable_declaration

  323 $@14: %empty

  324 $@15: %empty

  325 expr_cast: "cast" '<' $@14 type_declaration_no_options '>' $@15 expr

  326 $@16: %empty

  327 $@17: %empty

  328 expr_cast: "upcast" '<' $@16 type_declaration_no_options '>' $@17 expr

  329 $@18: %empty

  330 $@19: %empty

  331 expr_cast: "reinterpret" '<' $@18 type_declaration_no_options '>' $@19 expr

  332 $@20: %empty

  333 $@21: %empty

  334 expr_type_decl: "type" '<' $@20 type_declaration '>' $@21

  335 expr_type_info: "typeinfo" '(' name_in_namespace expr ')'
  336               | "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')'
  337               | "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" '>' expr ')'
  338               | "typeinfo" name_in_namespace '(' expr ')'
  339               | "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')'
  340               | "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr ')'

  341 expr_list: expr
  342          | expr_list ',' expr

  343 block_or_simple_block: expression_block
  344                      | "=>" expr
  345                      | "=>" "<-" expr

  346 block_or_lambda: '$'
  347                | '@'
  348                | '@' '@'

  349 capture_entry: '&' "name"
  350              | '=' "name"
  351              | "<-" "name"
  352              | ":=" "name"
  353              | "name" '(' "name" ')'

  354 capture_list: capture_entry
  355             | capture_list ',' capture_entry

  356 optional_capture_list: %empty
  357                      | "[[" capture_list ']' ']'
  358                      | "capture" '(' capture_list ')'

  359 expr_block: expression_block
  360           | block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  361 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  362 $@22: %empty

  363 expr_full_block_assumed_piped: block_or_lambda $@22 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

  364 expr_numeric_const: "integer constant"
  365                   | "unsigned integer constant"
  366                   | "long integer constant"
  367                   | "unsigned long integer constant"
  368                   | "unsigned int8 constant"
  369                   | "floating point constant"
  370                   | "double constant"

  371 expr_assign: expr
  372            | expr '=' expr
  373            | expr "<-" expr
  374            | expr ":=" expr
  375            | expr "&=" expr
  376            | expr "|=" expr
  377            | expr "^=" expr
  378            | expr "&&=" expr
  379            | expr "||=" expr
  380            | expr "^^=" expr
  381            | expr "+=" expr
  382            | expr "-=" expr
  383            | expr "*=" expr
  384            | expr "/=" expr
  385            | expr "%=" expr
  386            | expr "<<=" expr
  387            | expr ">>=" expr
  388            | expr "<<<=" expr
  389            | expr ">>>=" expr

  390 expr_assign_pipe_right: "@ <|" expr_block
  391                       | "@@ <|" expr_block
  392                       | "$ <|" expr_block
  393                       | expr_call_pipe

  394 expr_assign_pipe: expr '=' expr_assign_pipe_right
  395                 | expr "<-" expr_assign_pipe_right
  396                 | expr "&=" expr_assign_pipe_right
  397                 | expr "|=" expr_assign_pipe_right
  398                 | expr "^=" expr_assign_pipe_right
  399                 | expr "&&=" expr_assign_pipe_right
  400                 | expr "||=" expr_assign_pipe_right
  401                 | expr "^^=" expr_assign_pipe_right
  402                 | expr "+=" expr_assign_pipe_right
  403                 | expr "-=" expr_assign_pipe_right
  404                 | expr "*=" expr_assign_pipe_right
  405                 | expr "/=" expr_assign_pipe_right
  406                 | expr "%=" expr_assign_pipe_right
  407                 | expr "<<=" expr_assign_pipe_right
  408                 | expr ">>=" expr_assign_pipe_right
  409                 | expr "<<<=" expr_assign_pipe_right
  410                 | expr ">>>=" expr_assign_pipe_right

  411 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  412                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  413 expr_method_call: expr "->" "name" '(' ')'
  414                 | expr "->" "name" '(' expr_list ')'

  415 func_addr_name: name_in_namespace
  416               | "$i" '(' expr ')'

  417 func_addr_expr: '@' '@' func_addr_name

  418 $@23: %empty

  419 $@24: %empty

  420 func_addr_expr: '@' '@' '<' $@23 type_declaration_no_options '>' $@24 func_addr_name

  421 $@25: %empty

  422 $@26: %empty

  423 func_addr_expr: '@' '@' '<' $@25 optional_function_argument_list optional_function_type '>' $@26 func_addr_name

  424 expr_field: expr '.' "name"
  425           | expr '.' '.' "name"
  426           | expr '.' "name" '(' ')'
  427           | expr '.' "name" '(' expr_list ')'
  428           | expr '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr '.' basic_type_declaration '(' ')'
  430           | expr '.' basic_type_declaration '(' expr_list ')'

  431 $@27: %empty

  432 $@28: %empty

  433 expr_field: expr '.' $@27 error $@28

  434 expr_call: name_in_namespace '(' ')'
  435          | name_in_namespace '(' "uninitialized" ')'
  436          | name_in_namespace '(' make_struct_single ')'
  437          | name_in_namespace '(' "uninitialized" make_struct_single ')'
  438          | name_in_namespace '(' expr_list ')'
  439          | basic_type_declaration '(' ')'
  440          | basic_type_declaration '(' expr_list ')'

  441 expr: "null"
  442     | name_in_namespace
  443     | expr_numeric_const
  444     | expr_reader
  445     | string_builder
  446     | make_decl
  447     | "true"
  448     | "false"
  449     | expr_field
  450     | expr_mtag
  451     | '!' expr
  452     | '~' expr
  453     | '+' expr
  454     | '-' expr
  455     | expr "<<" expr
  456     | expr ">>" expr
  457     | expr "<<<" expr
  458     | expr ">>>" expr
  459     | expr '+' expr
  460     | expr '-' expr
  461     | expr '*' expr
  462     | expr '/' expr
  463     | expr '%' expr
  464     | expr '<' expr
  465     | expr '>' expr
  466     | expr "==" expr
  467     | expr "!=" expr
  468     | expr "<=" expr
  469     | expr ">=" expr
  470     | expr '&' expr
  471     | expr '|' expr
  472     | expr '^' expr
  473     | expr "&&" expr
  474     | expr "||" expr
  475     | expr "^^" expr
  476     | expr ".." expr
  477     | "++" expr
  478     | "--" expr
  479     | expr "++"
  480     | expr "--"
  481     | '(' expr_list optional_comma ')'
  482     | '(' make_struct_single ')'
  483     | expr '[' expr ']'
  484     | expr '.' '[' expr ']'
  485     | expr "?[" expr ']'
  486     | expr '.' "?[" expr ']'
  487     | expr "?." "name"
  488     | expr '.' "?." "name"
  489     | func_addr_expr
  490     | expr_call
  491     | '*' expr
  492     | "deref" '(' expr ')'
  493     | "addr" '(' expr ')'
  494     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  495     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  496     | expr "??" expr
  497     | expr '?' expr ':' expr

  498 $@29: %empty

  499 $@30: %empty

  500 expr: expr "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr "is" basic_type_declaration
  502     | expr "is" "name"
  503     | expr "as" "name"

  504 $@31: %empty

  505 $@32: %empty

  506 expr: expr "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr "as" basic_type_declaration
  508     | expr '?' "as" "name"

  509 $@33: %empty

  510 $@34: %empty

  511 expr: expr '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr '?' "as" basic_type_declaration
  513     | expr_type_info
  514     | expr_type_decl
  515     | expr_cast
  516     | expr_new
  517     | expr_method_call
  518     | expr_named_call
  519     | expr_full_block
  520     | expr "<|" expr
  521     | expr "|>" expr
  522     | expr "|>" basic_type_declaration
  523     | name_in_namespace "name"
  524     | "unsafe" '(' expr ')'
  525     | expression_keyword

  526 expr_mtag: "$$" '(' expr ')'
  527          | "$i" '(' expr ')'
  528          | "$v" '(' expr ')'
  529          | "$b" '(' expr ')'
  530          | "$a" '(' expr ')'
  531          | "..."
  532          | "$c" '(' expr ')' '(' ')'
  533          | "$c" '(' expr ')' '(' expr_list ')'
  534          | expr '.' "$f" '(' expr ')'
  535          | expr "?." "$f" '(' expr ')'
  536          | expr '.' '.' "$f" '(' expr ')'
  537          | expr '.' "?." "$f" '(' expr ')'
  538          | expr "as" "$f" '(' expr ')'
  539          | expr '?' "as" "$f" '(' expr ')'
  540          | expr "is" "$f" '(' expr ')'
  541          | '@' '@' "$c" '(' expr ')'

  542 optional_field_annotation: %empty
  543                          | "[[" annotation_argument_list ']' ']'
  544                          | metadata_argument_list

  545 optional_override: %empty
  546                  | "override"
  547                  | "sealed"

  548 optional_constant: %empty
  549                  | "const"

  550 optional_public_or_private_member_variable: %empty
  551                                           | "public"
  552                                           | "private"

  553 optional_static_member_variable: %empty
  554                                | "static"

  555 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  556 struct_variable_declaration_list: %empty
  557                                 | struct_variable_declaration_list "end of expression"

  558 $@35: %empty

  559 struct_variable_declaration_list: struct_variable_declaration_list $@35 structure_variable_declaration "end of expression"

  560 $@36: %empty

  561 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@36 function_declaration_header "end of expression"

  562 $@37: %empty

  563 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@37 function_declaration_header expression_block
  564                                 | struct_variable_declaration_list '[' annotation_list ']' "end of expression"

  565 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration
  566                              | "$a" '(' expr ')'

  567 function_argument_list: function_argument_declaration
  568                       | function_argument_list "end of expression" function_argument_declaration

  569 tuple_type: type_declaration
  570           | "name" ':' type_declaration

  571 tuple_type_list: tuple_type
  572                | tuple_type_list c_or_s tuple_type

  573 tuple_alias_type_list: %empty
  574                      | tuple_alias_type_list c_or_s
  575                      | tuple_alias_type_list tuple_type c_or_s

  576 variant_type: "name" ':' type_declaration

  577 variant_type_list: variant_type
  578                  | variant_type_list c_or_s variant_type

  579 variant_alias_type_list: %empty
  580                        | variant_alias_type_list c_or_s
  581                        | variant_alias_type_list variant_type c_or_s

  582 copy_or_move: '='
  583             | "<-"

  584 variable_declaration: variable_name_with_pos_list
  585                     | variable_name_with_pos_list '&'
  586                     | variable_name_with_pos_list ':' type_declaration
  587                     | variable_name_with_pos_list ':' type_declaration copy_or_move expr
  588                     | variable_name_with_pos_list copy_or_move expr
  589                     | variable_name_with_pos_list copy_or_move expr_pipe

  590 copy_or_move_or_clone: '='
  591                      | "<-"
  592                      | ":="

  593 optional_ref: %empty
  594             | '&'

  595 let_variable_name_with_pos_list: "name"
  596                                | "$i" '(' expr ')'
  597                                | "name" "aka" "name"
  598                                | let_variable_name_with_pos_list ',' "name"
  599                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  600 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression"
  601                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  602                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  603                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression"
  604                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe

  605 global_variable_declaration_list: %empty

  606 $@38: %empty

  607 global_variable_declaration_list: global_variable_declaration_list $@38 optional_field_annotation let_variable_declaration

  608 optional_shared: %empty
  609                | "shared"

  610 optional_public_or_private_variable: %empty
  611                                    | "private"
  612                                    | "public"

  613 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"

  614 $@39: %empty

  615 global_let: kwd_let optional_shared optional_public_or_private_variable $@39 optional_field_annotation let_variable_declaration

  616 enum_list: %empty
  617          | enum_list "end of expression"
  618          | enum_list "name" "end of expression"
  619          | enum_list "name" '=' expr "end of expression"

  620 optional_public_or_private_alias: %empty
  621                                 | "private"
  622                                 | "public"

  623 $@40: %empty

  624 single_alias: optional_public_or_private_alias "name" $@40 '=' type_declaration

  625 alias_list: single_alias "end of expression"
  626           | alias_list single_alias "end of expression"

  627 alias_declaration: "typedef" "begin of code block" alias_list "end of code block"

  628 $@41: %empty

  629 alias_declaration: "typedef" $@41 single_alias "end of expression"

  630 optional_public_or_private_enum: %empty
  631                                | "private"
  632                                | "public"

  633 enum_name: "name"

  634 $@42: %empty

  635 $@43: %empty

  636 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@42 enum_list $@43 "end of code block"

  637 $@44: %empty

  638 $@45: %empty

  639 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@44 enum_list $@45 "end of code block"

  640 optional_structure_parent: %empty
  641                          | ':' name_in_namespace

  642 optional_sealed: %empty
  643                | "sealed"

  644 structure_name: optional_sealed "name" optional_structure_parent

  645 class_or_struct: "class"
  646                | "struct"
  647                | "template" "class"
  648                | "template" "struct"

  649 optional_public_or_private_structure: %empty
  650                                     | "private"
  651                                     | "public"

  652 optional_struct_variable_declaration_list: %empty
  653                                          | "begin of code block" struct_variable_declaration_list "end of code block"

  654 $@46: %empty

  655 $@47: %empty

  656 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@46 structure_name $@47 optional_struct_variable_declaration_list

  657 variable_name_with_pos_list: "name"
  658                            | "$i" '(' expr ')'
  659                            | "name" "aka" "name"
  660                            | variable_name_with_pos_list ',' "name"
  661                            | variable_name_with_pos_list ',' "name" "aka" "name"

  662 basic_type_declaration: "bool"
  663                       | "string"
  664                       | "int"
  665                       | "int8"
  666                       | "int16"
  667                       | "int64"
  668                       | "int2"
  669                       | "int3"
  670                       | "int4"
  671                       | "uint"
  672                       | "uint8"
  673                       | "uint16"
  674                       | "uint64"
  675                       | "uint2"
  676                       | "uint3"
  677                       | "uint4"
  678                       | "float"
  679                       | "float2"
  680                       | "float3"
  681                       | "float4"
  682                       | "void"
  683                       | "range"
  684                       | "urange"
  685                       | "range64"
  686                       | "urange64"
  687                       | "double"
  688                       | "bitfield"

  689 enum_basic_type_declaration: "int"
  690                            | "int8"
  691                            | "int16"
  692                            | "uint"
  693                            | "uint8"
  694                            | "uint16"
  695                            | "int64"
  696                            | "uint64"

  697 structure_type_declaration: name_in_namespace

  698 auto_type_declaration: "auto"
  699                      | "auto" '(' "name" ')'
  700                      | "$t" '(' expr ')'

  701 bitfield_bits: "name"
  702              | bitfield_bits "end of expression" "name"

  703 bitfield_alias_bits: %empty
  704                    | bitfield_alias_bits "end of expression"
  705                    | bitfield_alias_bits "name" "end of expression"

  706 $@48: %empty

  707 $@49: %empty

  708 bitfield_type_declaration: "bitfield" '<' $@48 bitfield_bits '>' $@49

  709 c_or_s: ','
  710       | "end of expression"

  711 table_type_pair: type_declaration
  712                | type_declaration c_or_s type_declaration

  713 dim_list: '[' expr ']'
  714         | dim_list '[' expr ']'

  715 type_declaration_no_options: basic_type_declaration
  716                            | auto_type_declaration
  717                            | bitfield_type_declaration
  718                            | structure_type_declaration
  719                            | type_declaration_no_options dim_list
  720                            | type_declaration_no_options '[' ']'

  721 $@50: %empty

  722 $@51: %empty

  723 type_declaration_no_options: "type" '<' $@50 type_declaration '>' $@51
  724                            | "typedecl" '(' expr ')'
  725                            | '$' name_in_namespace '(' optional_expr_list ')'

  726 $@52: %empty

  727 type_declaration_no_options: '$' name_in_namespace '<' $@52 type_declaration_no_options_list '>' '(' optional_expr_list ')'
  728                            | type_declaration_no_options '-' '[' ']'
  729                            | type_declaration_no_options "explicit"
  730                            | type_declaration_no_options "const"
  731                            | type_declaration_no_options '-' "const"
  732                            | type_declaration_no_options '&'
  733                            | type_declaration_no_options '-' '&'
  734                            | type_declaration_no_options '#'
  735                            | type_declaration_no_options "implicit"
  736                            | type_declaration_no_options '-' '#'
  737                            | type_declaration_no_options "==" "const"
  738                            | type_declaration_no_options "==" '&'
  739                            | type_declaration_no_options '?'

  740 $@53: %empty

  741 $@54: %empty

  742 type_declaration_no_options: "smart_ptr" '<' $@53 type_declaration '>' $@54
  743                            | type_declaration_no_options "??"

  744 $@55: %empty

  745 $@56: %empty

  746 type_declaration_no_options: "array" '<' $@55 type_declaration '>' $@56

  747 $@57: %empty

  748 $@58: %empty

  749 type_declaration_no_options: "table" '<' $@57 table_type_pair '>' $@58

  750 $@59: %empty

  751 $@60: %empty

  752 type_declaration_no_options: "iterator" '<' $@59 type_declaration '>' $@60
  753                            | "block"

  754 $@61: %empty

  755 $@62: %empty

  756 type_declaration_no_options: "block" '<' $@61 type_declaration '>' $@62

  757 $@63: %empty

  758 $@64: %empty

  759 type_declaration_no_options: "block" '<' $@63 optional_function_argument_list optional_function_type '>' $@64
  760                            | "function"

  761 $@65: %empty

  762 $@66: %empty

  763 type_declaration_no_options: "function" '<' $@65 type_declaration '>' $@66

  764 $@67: %empty

  765 $@68: %empty

  766 type_declaration_no_options: "function" '<' $@67 optional_function_argument_list optional_function_type '>' $@68
  767                            | "lambda"

  768 $@69: %empty

  769 $@70: %empty

  770 type_declaration_no_options: "lambda" '<' $@69 type_declaration '>' $@70

  771 $@71: %empty

  772 $@72: %empty

  773 type_declaration_no_options: "lambda" '<' $@71 optional_function_argument_list optional_function_type '>' $@72

  774 $@73: %empty

  775 $@74: %empty

  776 type_declaration_no_options: "tuple" '<' $@73 tuple_type_list '>' $@74

  777 $@75: %empty

  778 $@76: %empty

  779 type_declaration_no_options: "variant" '<' $@75 variant_type_list '>' $@76

  780 type_declaration: type_declaration_no_options
  781                 | type_declaration '|' type_declaration_no_options
  782                 | type_declaration '|' '#'

  783 $@77: %empty

  784 $@78: %empty

  785 $@79: %empty

  786 $@80: %empty

  787 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 "name" $@78 "begin of code block" $@79 tuple_alias_type_list $@80 "end of code block"

  788 $@81: %empty

  789 $@82: %empty

  790 $@83: %empty

  791 $@84: %empty

  792 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 "name" $@82 "begin of code block" $@83 variant_alias_type_list $@84 "end of code block"

  793 $@85: %empty

  794 $@86: %empty

  795 $@87: %empty

  796 $@88: %empty

  797 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 "name" $@86 "begin of code block" $@87 bitfield_alias_bits $@88 "end of code block"

  798 make_decl: make_struct_decl
  799          | make_dim_decl
  800          | make_table_decl
  801          | array_comprehension
  802          | make_tuple_call

  803 make_struct_fields: "name" copy_or_move expr
  804                   | "name" ":=" expr
  805                   | make_struct_fields ',' "name" copy_or_move expr
  806                   | make_struct_fields ',' "name" ":=" expr
  807                   | "$f" '(' expr ')' copy_or_move expr
  808                   | "$f" '(' expr ')' ":=" expr
  809                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  810                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  811 make_variant_dim: make_struct_fields

  812 make_struct_single: make_struct_fields

  813 make_struct_dim: make_struct_fields
  814                | make_struct_dim "end of expression" make_struct_fields

  815 make_struct_dim_list: '(' make_struct_fields ')'
  816                     | make_struct_dim_list ',' '(' make_struct_fields ')'

  817 make_struct_dim_decl: make_struct_fields
  818                     | make_struct_dim_list optional_comma

  819 optional_make_struct_dim_decl: make_struct_dim_decl
  820                              | %empty

  821 optional_block: %empty
  822               | "where" expr_block

  823 optional_trailing_semicolon_cur_cur: "end of code block" "end of code block"
  824                                    | ";}}"

  825 optional_trailing_semicolon_cur_sqr: "end of code block" ']'
  826                                    | ";}]"

  827 optional_trailing_semicolon_sqr_sqr: ']' ']'
  828                                    | ";]]"

  829 optional_trailing_delim_sqr_sqr: ']' ']'
  830                                | ";]]"
  831                                | ",]]"

  832 optional_trailing_delim_cur_sqr: "end of code block" ']'
  833                                | ";}]"
  834                                | ",}]"

  835 use_initializer: %empty
  836                | "uninitialized"

  837 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  838                 | "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  839                 | "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  840                 | "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  841                 | "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  842                 | "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

  843 $@89: %empty

  844 $@90: %empty

  845 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')'

  846 $@91: %empty

  847 $@92: %empty

  848 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')'

  849 $@93: %empty

  850 $@94: %empty

  851 make_struct_decl: "variant" '<' $@93 type_declaration_no_options '>' $@94 '(' make_variant_dim ')'

  852 $@95: %empty

  853 $@96: %empty

  854 make_struct_decl: "default" '<' $@95 type_declaration_no_options '>' $@96 use_initializer

  855 make_tuple: expr
  856           | expr "=>" expr
  857           | make_tuple ',' expr

  858 make_map_tuple: expr "=>" expr
  859               | expr

  860 make_tuple_call: "tuple" '(' expr_list optional_comma ')'

  861 $@97: %empty

  862 $@98: %empty

  863 make_tuple_call: "tuple" '<' $@97 type_declaration_no_options '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'

  864 make_dim: make_tuple
  865         | make_dim "end of expression" make_tuple

  866 make_dim_decl: '[' optional_expr_list ']'
  867              | "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  868              | "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr

  869 $@99: %empty

  870 $@100: %empty

  871 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'

  872 $@101: %empty

  873 $@102: %empty

  874 make_dim_decl: "array" "tuple" '<' $@101 type_declaration_no_options '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

  875 $@103: %empty

  876 $@104: %empty

  877 make_dim_decl: "array" "variant" '<' $@103 type_declaration_no_options '>' $@104 '(' make_variant_dim ')'
  878              | "array" '(' expr_list optional_comma ')'

  879 $@105: %empty

  880 $@106: %empty

  881 make_dim_decl: "array" '<' $@105 type_declaration_no_options '>' $@106 '(' optional_expr_list ')'
  882              | "fixed_array" '(' expr_list optional_comma ')'

  883 $@107: %empty

  884 $@108: %empty

  885 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' $@108 '(' expr_list optional_comma ')'

  886 make_table: make_map_tuple
  887           | make_table "end of expression" make_map_tuple

  888 expr_map_tuple_list: make_map_tuple
  889                    | expr_map_tuple_list ',' make_map_tuple

  890 make_table_decl: "begin of code block" optional_expr_map_tuple_list "end of code block"
  891                | "{{" make_table optional_trailing_semicolon_cur_cur
  892                | "table" '(' optional_expr_map_tuple_list ')'
  893                | "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  894                | "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

  895 array_comprehension_where: %empty
  896                          | "end of expression" "where" expr

  897 optional_comma: %empty
  898               | ','

  899 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  900                    | '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  901                    | "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']'
  902                    | "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'
  903                    | "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"
  904                    | "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 119 135 451
    '#' (35) 734 736 782
    '$' (36) 20 346 725 727
    '%' (37) 41 48 155 463
    '&' (38) 163 349 470 585 594 732 733 738
    '(' (40) 106 117 123 130 131 259 285 286 287 288 315 316 319 320 335 336 337 338 339 340 353 358 411 412 413 414 416 426 427 428 429 430 434 435 436 437 438 439 440 481 482 492 493 494 495 524 526 527 528 529 530 532 533 534 535 536 537 538 539 540 541 566 596 658 699 700 724 725 727 807 808 809 810 815 816 839 840 842 845 848 851 860 863 871 874 877 878 881 882 885 892 893 894
    ')' (41) 106 117 123 130 131 259 285 286 287 288 315 316 319 320 335 336 337 338 339 340 353 358 411 412 413 414 416 426 427 428 429 430 434 435 436 437 438 439 440 481 482 492 493 494 495 524 526 527 528 529 530 532 533 534 535 536 537 538 539 540 541 566 596 658 699 700 724 725 727 807 808 809 810 815 816 839 840 842 845 848 851 860 863 871 874 877 878 881 882 885 892 893 894
    '*' (42) 153 461 491
    '+' (43) 151 453 459
    ',' (44) 57 95 108 126 312 342 355 412 598 599 660 661 709 805 806 809 810 816 857 889 898
    '-' (45) 152 454 460 728 731 733 736
    '.' (46) 49 180 182 183 424 425 426 427 428 429 430 433 484 486 488 534 536 537
    '/' (47) 50 154 462
    ':' (58) 33 59 60 133 313 314 315 316 497 570 576 586 587 600 601 602 639 641
    "end of expression" (59) 15 16 80 111 231 235 236 243 244 249 250 251 295 300 313 315 317 319 340 557 559 561 564 568 600 601 603 617 618 619 625 626 629 702 704 705 710 814 865 887 896 899 900 901 902 903 904
    '<' (60) 156 230 266 269 282 325 328 331 334 336 337 339 340 420 423 464 494 495 500 506 511 708 723 727 742 746 749 752 756 759 763 766 770 773 776 779 845 848 851 854 863 871 874 877 881 885 893 894
    '=' (61) 87 99 100 101 102 103 104 106 350 372 394 582 590 619 624
    '>' (62) 157 230 266 269 282 325 328 331 334 336 337 339 340 420 423 465 494 495 500 506 511 708 723 727 742 746 749 752 756 759 763 766 770 773 776 779 845 848 851 854 863 871 874 877 881 885 893 894
    '?' (63) 192 193 497 508 511 512 539 739
    '@' (64) 109 110 347 348 417 420 423 541
    '[' (91) 128 178 411 412 428 483 484 564 713 714 720 728 866 899 900
    ']' (93) 128 178 179 313 314 317 318 357 411 412 428 483 484 485 486 543 564 713 714 720 728 825 827 829 832 866 899 900 901 902
    '^' (94) 165 472
    "begin of code block" (123) 226 227 613 627 636 639 653 787 792 797 890 903
    '|' (124) 164 471 781 782
    "end of code block" (125) 226 227 613 627 636 639 653 787 792 797 823 825 832 890 902 903 904
    '~' (126) 136 452
    error (256) 254 433
    "lexer error" (258)
    "capture" (259) 358
    "struct" (260) 646 648 845 871
    "class" (261) 645 647 848
    "let" (262) 304 307
    "def" (263) 219 561 563
    "while" (264) 84
    "if" (265) 68 80
    "static_if" (266) 69
    "else" (267) 66 72
    "for" (268) 82 899 900 901 902 903 904
    "recover" (269) 303
    "true" (270) 92 103 447
    "false" (271) 93 104 448
    "new" (272) 284 285 286 287 288 289
    "typeinfo" (273) 335 336 337 338 339 340
    "type" (274) 97 334 500 506 511 723
    "in" (275) 82 98 899 900 901 902 903 904
    "is" (276) 188 190 500 501 502 540
    "as" (277) 52 189 191 192 193 503 506 507 508 511 512 538 539
    "elif" (278) 63
    "static_elif" (279) 64
    "array" (280) 746 871 874 877 878 881
    "return" (281) 292 293 294 296 297
    "null" (282) 441
    "break" (283) 290
    "try" (284) 303
    "options" (285) 42
    "table" (286) 749 892 893 894
    "expect" (287) 55
    "const" (288) 549 730 731 737
    "require" (289) 43 113
    "operator" (290) 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193
    "enum" (291) 636 639
    "finally" (292) 227
    "delete" (293) 186 278 279
    "deref" (294) 492
    "typedef" (295) 627 629
    "typedecl" (296) 724
    "with" (297) 85
    "aka" (298) 597 599 659 661
    "assume" (299) 87
    "cast" (300) 325
    "override" (301) 546
    "abstract" (302) 561
    "upcast" (303) 328
    "iterator" (304) 752 900
    "var" (305) 305 308
    "addr" (306) 493
    "continue" (307) 291
    "where" (308) 822 896
    "pass" (309) 251
    "reinterpret" (310) 331
    "module" (311) 22
    "public" (312) 18 54 222 551 612 622 632 651
    "label" (313) 60 61
    "goto" (314) 61 62
    "implicit" (315) 735
    "explicit" (316) 279 729
    "shared" (317) 609
    "private" (318) 19 114 221 552 611 621 631 650
    "smart_ptr" (319) 742
    "unsafe" (320) 83 524
    "inscope" (321) 309
    "static" (322) 554
    "fixed_array" (323) 882 885
    "default" (324) 854
    "uninitialized" (325) 288 435 437 836
    "bool" (326) 194 662
    "void" (327) 682
    "string" (328) 195 663
    "auto" (329) 698 699
    "int" (330) 196 664 689
    "int2" (331) 197 668
    "int3" (332) 198 669
    "int4" (333) 199 670
    "uint" (334) 200 671 692
    "bitfield" (335) 688 708 797
    "uint2" (336) 201 675
    "uint3" (337) 202 676
    "uint4" (338) 203 677
    "float" (339) 204 678
    "float2" (340) 205 679
    "float3" (341) 206 680
    "float4" (342) 207 681
    "range" (343) 208 683
    "urange" (344) 209 684
    "range64" (345) 210 685
    "urange64" (346) 211 686
    "block" (347) 753 756 759
    "int64" (348) 212 667 695
    "uint64" (349) 213 674 696
    "double" (350) 214 687
    "function" (351) 760 763 766
    "lambda" (352) 767 770 773
    "int8" (353) 215 665 690
    "uint8" (354) 216 672 693
    "int16" (355) 217 666 691
    "uint16" (356) 218 673 694
    "tuple" (357) 776 787 860 863 874
    "variant" (358) 779 792 851 877
    "generator" (359) 230 494 495
    "yield" (360) 298 299 301 302
    "sealed" (361) 547 643
    "template" (362) 115 647 648
    "+=" (363) 137 381 402
    "-=" (364) 138 382 403
    "/=" (365) 140 384 405
    "*=" (366) 139 383 404
    "%=" (367) 141 385 406
    "&=" (368) 142 375 396
    "|=" (369) 143 376 397
    "^=" (370) 144 377 398
    "<<" (371) 170 455
    ">>" (372) 171 456
    "++" (373) 166 168 477 479
    "--" (374) 167 169 478 480
    "<=" (375) 161 468
    "<<=" (376) 172 386 407
    ">>=" (377) 173 387 408
    ">=" (378) 162 469
    "==" (379) 159 466 737 738
    "!=" (380) 160 467
    "->" (381) 413 414
    "<-" (382) 294 297 299 302 345 351 373 395 583 591
    "??" (383) 187 496 743
    "?." (384) 181 184 487 488 535 537
    "?[" (385) 179 485 486
    "<|" (386) 520
    " <|" (387) 270
    "$ <|" (388) 273 392
    "@ <|" (389) 271 390
    "@@ <|" (390) 272 391
    "|>" (391) 124 521 522
    ":=" (392) 183 185 352 374 592 804 806 808 810
    "<<<" (393) 174 457
    ">>>" (394) 175 458
    "<<<=" (395) 176 388 409
    ">>>=" (396) 177 389 410
    "=>" (397) 344 345 856 858
    "::" (398) 276 277
    "&&" (399) 120 148 473
    "||" (400) 121 149 474
    "^^" (401) 122 150 475
    "&&=" (402) 145 378 399
    "||=" (403) 146 379 400
    "^^=" (404) 147 380 401
    ".." (405) 158 476
    "$$" (406) 526
    "$i" (407) 416 527 596 658
    "$v" (408) 528
    "$b" (409) 529
    "$a" (410) 530 566
    "$t" (411) 700
    "$c" (412) 532 533 541
    "$f" (413) 534 535 536 537 538 539 540 807 808 809 810
    "..." (414) 531
    "[[" (415) 313 314 317 318 357 543 837 838 839 840 867 901
    "[{" (416) 841 842 868 902
    "{{" (417) 891 904
    "integer constant" <i> (418) 58 59 60 61 90 101 364
    "long integer constant" <i64> (419) 366
    "unsigned integer constant" <ui> (420) 365
    "unsigned long integer constant" <ui64> (421) 367
    "unsigned int8 constant" <ui> (422) 368
    "floating point constant" <fd> (423) 91 102 369
    "double constant" <d> (424) 370
    "name" <s> (425) 21 44 52 87 89 96 100 134 182 183 184 190 191 193 275 276 277 311 312 336 337 339 340 349 350 351 352 353 413 414 424 425 426 427 428 487 488 502 503 508 523 570 576 595 597 598 599 618 619 624 633 644 657 659 660 661 699 701 702 705 787 792 797 803 804 805 806
    "keyword" <s> (426) 45 255 266
    "type function" <s> (427) 46 269
    "start of the string" (428) 27 28 37
    STRING_CHARACTER <ch> (429) 23 25 30 38 39
    STRING_CHARACTER_ESC (430) 24 26
    "end of the string" (431) 27 28 37
    "{" (432) 36
    "}" (433) 36
    "end of failed eader macro" (434)
    ";}}" (435) 824
    ";}]" (436) 826 833
    ";]]" (437) 828 830
    ",]]" (438) 831
    ",}]" (439) 834
    UNARY_MINUS (440)
    UNARY_PLUS (441)
    PRE_INC (442)
    PRE_DEC (443)
    POST_INC (444)
    POST_DEC (445)
    DEREF (446)


Nonterminals, with rules where they appear

    $accept (219)
        on left: 0
    program (220)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    top_level_reader_macro (221)
        on left: 16
        on right: 14
    optional_public_or_private_module <b> (222)
        on left: 17 18 19
        on right: 22
    module_name <s> (223)
        on left: 20 21
        on right: 22
    module_declaration (224)
        on left: 22
        on right: 2
    character_sequence <s> (225)
        on left: 23 24 25 26
        on right: 25 26 27 35
    string_constant <s> (226)
        on left: 27 28
        on right: 88 99
    format_string <s> (227)
        on left: 29 30
        on right: 30 33
    optional_format_string <s> (228)
        on left: 31 33
        on right: 36
    $@1 (229)
        on left: 32
        on right: 33
    string_builder_body <pExpression> (230)
        on left: 34 35 36
        on right: 35 36 37
    string_builder <pExpression> (231)
        on left: 37
        on right: 445
    reader_character_sequence (232)
        on left: 38 39
        on right: 39 41
    expr_reader <pExpression> (233)
        on left: 41
        on right: 16 444
    $@2 (234)
        on left: 40
        on right: 41
    options_declaration (235)
        on left: 42
        on right: 9
    require_declaration (236)
        on left: 43
        on right: 8
    keyword_or_name <s> (237)
        on left: 44 45 46
        on right: 47 49 50
    require_module_name <s> (238)
        on left: 47 48 49 50
        on right: 48 49 50 51 52
    require_module (239)
        on left: 51 52
        on right: 43
    is_public_module <b> (240)
        on left: 53 54
        on right: 51 52
    expect_declaration (241)
        on left: 55
        on right: 7
    expect_list (242)
        on left: 56 57
        on right: 55 57
    expect_error (243)
        on left: 58 59
        on right: 56 57
    expression_label <pExpression> (244)
        on left: 60
        on right: 249
    expression_goto <pExpression> (245)
        on left: 61 62
        on right: 250
    elif_or_static_elif <b> (246)
        on left: 63 64
        on right: 67
    expression_else <pExpression> (247)
        on left: 65 66 67
        on right: 67 78
    if_or_static_if <b> (248)
        on left: 68 69
        on right: 78
    expression_else_one_liner <pExpression> (249)
        on left: 70 72
        on right: 80
    $@3 (250)
        on left: 71
        on right: 72
    expression_if_one_liner <pExpression> (251)
        on left: 73 74 75 76 77
        on right: 72 80
    expression_if_then_else <pExpression> (252)
        on left: 78 80
        on right: 247
    $@4 (253)
        on left: 79
        on right: 80
    expression_for_loop <pExpression> (254)
        on left: 82
        on right: 242
    $@5 (255)
        on left: 81
        on right: 82
    expression_unsafe <pExpression> (256)
        on left: 83
        on right: 239
    expression_while_loop <pExpression> (257)
        on left: 84
        on right: 238
    expression_with <pExpression> (258)
        on left: 85
        on right: 240
    expression_with_alias <pExpression> (259)
        on left: 87
        on right: 241
    $@6 (260)
        on left: 86
        on right: 87
    annotation_argument_value <aa> (261)
        on left: 88 89 90 91 92 93
        on right: 94 95
    annotation_argument_value_list <aaList> (262)
        on left: 94 95
        on right: 95 106
    annotation_argument_name <s> (263)
        on left: 96 97 98
        on right: 99 100 101 102 103 104 105 106
    annotation_argument <aa> (264)
        on left: 99 100 101 102 103 104 105 106
        on right: 107 108 109 110
    annotation_argument_list <aaList> (265)
        on left: 107 108
        on right: 42 108 117 543
    metadata_argument_list <aaList> (266)
        on left: 109 110 111
        on right: 110 111 544
    annotation_declaration_name <s> (267)
        on left: 112 113 114 115
        on right: 116 117
    annotation_declaration_basic <fa> (268)
        on left: 116 117
        on right: 118
    annotation_declaration <fa> (269)
        on left: 118 119 120 121 122 123 124
        on right: 119 120 121 122 123 124 125 126
    annotation_list <faList> (270)
        on left: 125 126
        on right: 126 128 564
    optional_annotation_list <faList> (271)
        on left: 127 128
        on right: 219 360 361 363 561 563 636 639 656
    optional_function_argument_list <pVarDeclList> (272)
        on left: 129 130 131
        on right: 223 360 361 363 423 759 766 773
    optional_function_type <pTypeDecl> (273)
        on left: 132 133
        on right: 223 360 361 363 423 759 766 773
    function_name <s> (274)
        on left: 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218
        on right: 223
    global_function_declaration (275)
        on left: 219
        on right: 6
    optional_public_or_private_function <b> (276)
        on left: 220 221 222
        on right: 225
    function_declaration_header <pFuncDecl> (277)
        on left: 223
        on right: 225 561 563
    function_declaration <pFuncDecl> (278)
        on left: 225
        on right: 219
    $@7 (279)
        on left: 224
        on right: 225
    expression_block <pExpression> (280)
        on left: 226 227
        on right: 66 67 78 82 83 84 85 225 255 303 343 359 363 563
    expr_call_pipe <pExpression> (281)
        on left: 228 229 230
        on right: 274 393
    expression_any <pExpression> (282)
        on left: 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251
        on right: 253
    expressions <pExpression> (283)
        on left: 252 253 254
        on right: 226 227 253 254
    expr_keyword <pExpression> (284)
        on left: 255
        on right: 233
    optional_expr_list <pExpression> (285)
        on left: 256 257
        on right: 259 725 727 866 881
    optional_expr_list_in_braces <pExpression> (286)
        on left: 258 259
        on right: 269
    optional_expr_map_tuple_list <pExpression> (287)
        on left: 260 261
        on right: 890 892 893 894
    type_declaration_no_options_list <pTypeDeclList> (288)
        on left: 262 263
        on right: 263 266 269 727
    expression_keyword <pExpression> (289)
        on left: 266 269
        on right: 229 525
    $@8 (290)
        on left: 264
        on right: 266
    $@9 (291)
        on left: 265
        on right: 266
    $@10 (292)
        on left: 267
        on right: 269
    $@11 (293)
        on left: 268
        on right: 269
    expr_pipe <pExpression> (294)
        on left: 270 271 272 273 274
        on right: 232 296 297 301 302 314 316 318 320 589 602 604
    name_in_namespace <s> (295)
        on left: 275 276 277
        on right: 41 112 335 336 337 338 339 340 411 412 415 434 435 436 437 438 442 523 641 697 725 727
    expression_delete <pExpression> (296)
        on left: 278 279
        on right: 236
    new_type_declaration <pTypeDecl> (297)
        on left: 282 283
        on right: 284 285 286 287 288
    $@12 (298)
        on left: 280
        on right: 282
    $@13 (299)
        on left: 281
        on right: 282
    expr_new <pExpression> (300)
        on left: 284 285 286 287 288 289
        on right: 516
    expression_break <pExpression> (301)
        on left: 290
        on right: 76 243
    expression_continue <pExpression> (302)
        on left: 291
        on right: 77 244
    expression_return_no_pipe <pExpression> (303)
        on left: 292 293 294
        on right: 74 295
    expression_return <pExpression> (304)
        on left: 295 296 297
        on right: 245
    expression_yield_no_pipe <pExpression> (305)
        on left: 298 299
        on right: 75 300
    expression_yield <pExpression> (306)
        on left: 300 301 302
        on right: 246
    expression_try_catch <pExpression> (307)
        on left: 303
        on right: 248
    kwd_let_var_or_nothing <b> (308)
        on left: 304 305 306
        on right: 565
    kwd_let <b> (309)
        on left: 307 308
        on right: 321 322 613 615
    optional_in_scope <b> (310)
        on left: 309 310
        on right: 321 322
    tuple_expansion <pNameList> (311)
        on left: 311 312
        on right: 312 313 314 315 316 317 318 319 320
    tuple_expansion_variable_declaration <pVarDecl> (312)
        on left: 313 314 315 316 317 318 319 320
        on right: 322
    expression_let <pExpression> (313)
        on left: 321 322
        on right: 237
    expr_cast <pExpression> (314)
        on left: 325 328 331
        on right: 515
    $@14 (315)
        on left: 323
        on right: 325
    $@15 (316)
        on left: 324
        on right: 325
    $@16 (317)
        on left: 326
        on right: 328
    $@17 (318)
        on left: 327
        on right: 328
    $@18 (319)
        on left: 329
        on right: 331
    $@19 (320)
        on left: 330
        on right: 331
    expr_type_decl <pExpression> (321)
        on left: 334
        on right: 514
    $@20 (322)
        on left: 332
        on right: 334
    $@21 (323)
        on left: 333
        on right: 334
    expr_type_info <pExpression> (324)
        on left: 335 336 337 338 339 340
        on right: 513
    expr_list <pExpression> (325)
        on left: 341 342
        on right: 82 257 286 293 294 342 412 414 427 430 438 440 481 533 860 878 882 885 899 900 901 902 903 904
    block_or_simple_block <pExpression> (326)
        on left: 343 344 345
        on right: 360 361
    block_or_lambda <i> (327)
        on left: 346 347 348
        on right: 360 361 363
    capture_entry <pCapt> (328)
        on left: 349 350 351 352 353
        on right: 354 355
    capture_list <pCaptList> (329)
        on left: 354 355
        on right: 355 357 358
    optional_capture_list <pCaptList> (330)
        on left: 356 357 358
        on right: 230 360 361 363 494 495
    expr_block <pExpression> (331)
        on left: 359 360
        on right: 270 271 272 273 390 391 392 822
    expr_full_block <pExpression> (332)
        on left: 361
        on right: 519
    expr_full_block_assumed_piped <pExpression> (333)
        on left: 363
        on right: 228 229 230
    $@22 (334)
        on left: 362
        on right: 363
    expr_numeric_const <pExpression> (335)
        on left: 364 365 366 367 368 369 370
        on right: 443
    expr_assign <pExpression> (336)
        on left: 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389
        on right: 235 270
    expr_assign_pipe_right <pExpression> (337)
        on left: 390 391 392 393
        on right: 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410
    expr_assign_pipe <pExpression> (338)
        on left: 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410
        on right: 234
    expr_named_call <pExpression> (339)
        on left: 411 412
        on right: 518
    expr_method_call <pExpression> (340)
        on left: 413 414
        on right: 517
    func_addr_name <pExpression> (341)
        on left: 415 416
        on right: 417 420 423
    func_addr_expr <pExpression> (342)
        on left: 417 420 423
        on right: 489
    $@23 (343)
        on left: 418
        on right: 420
    $@24 (344)
        on left: 419
        on right: 420
    $@25 (345)
        on left: 421
        on right: 423
    $@26 (346)
        on left: 422
        on right: 423
    expr_field <pExpression> (347)
        on left: 424 425 426 427 428 429 430 433
        on right: 449
    $@27 (348)
        on left: 431
        on right: 433
    $@28 (349)
        on left: 432
        on right: 433
    expr_call <pExpression> (350)
        on left: 434 435 436 437 438 439 440
        on right: 490
    expr <pExpression> (351)
        on left: 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 500 501 502 503 506 507 508 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525
        on right
    $@29 (352)
        on left: 498
        on right: 500
    $@30 (353)
        on left: 499
        on right: 500
    $@31 (354)
        on left: 504
        on right: 506
    $@32 (355)
        on left: 505
        on right: 506
    $@33 (356)
        on left: 509
        on right: 511
    $@34 (357)
        on left: 510
        on right: 511
    expr_mtag <pExpression> (358)
        on left: 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541
        on right: 450
    optional_field_annotation <aaList> (359)
        on left: 542 543 544
        on right: 555 565 607 615
    optional_override <i> (360)
        on left: 545 546 547
        on right: 555 563
    optional_constant <b> (361)
        on left: 548 549
        on right: 561 563
    optional_public_or_private_member_variable <b> (362)
        on left: 550 551 552
        on right: 555 561 563
    optional_static_member_variable <b> (363)
        on left: 553 554
        on right: 555 563
    structure_variable_declaration <pVarDecl> (364)
        on left: 555
        on right: 559
    struct_variable_declaration_list <pVarDeclList> (365)
        on left: 556 557 559 561 563 564
        on right: 557 559 561 563 564 653
    $@35 (366)
        on left: 558
        on right: 559
    $@36 (367)
        on left: 560
        on right: 561
    $@37 (368)
        on left: 562
        on right: 563
    function_argument_declaration <pVarDecl> (369)
        on left: 565 566
        on right: 567 568
    function_argument_list <pVarDeclList> (370)
        on left: 567 568
        on right: 131 568
    tuple_type <pVarDecl> (371)
        on left: 569 570
        on right: 571 572 575
    tuple_type_list <pVarDeclList> (372)
        on left: 571 572
        on right: 572 776
    tuple_alias_type_list <pVarDeclList> (373)
        on left: 573 574 575
        on right: 574 575 787
    variant_type <pVarDecl> (374)
        on left: 576
        on right: 577 578 581
    variant_type_list <pVarDeclList> (375)
        on left: 577 578
        on right: 578 779
    variant_alias_type_list <pVarDeclList> (376)
        on left: 579 580 581
        on right: 580 581 792
    copy_or_move <b> (377)
        on left: 582 583
        on right: 587 588 589 803 805 807 809
    variable_declaration <pVarDecl> (378)
        on left: 584 585 586 587 588 589
        on right: 555 565
    copy_or_move_or_clone <i> (379)
        on left: 590 591 592
        on right: 313 314 315 316 317 318 319 320 601 602 603 604
    optional_ref <b> (380)
        on left: 593 594
        on right: 317 318 319 320 603 604
    let_variable_name_with_pos_list <pNameWithPosList> (381)
        on left: 595 596 597 598 599
        on right: 598 599 600 601 602 603 604
    let_variable_declaration <pVarDecl> (382)
        on left: 600 601 602 603 604
        on right: 321 607 615
    global_variable_declaration_list <pVarDeclList> (383)
        on left: 605 607
        on right: 607 613
    $@38 (384)
        on left: 606
        on right: 607
    optional_shared <b> (385)
        on left: 608 609
        on right: 22 613 615
    optional_public_or_private_variable <b> (386)
        on left: 610 611 612
        on right: 613 615
    global_let (387)
        on left: 613 615
        on right: 5
    $@39 (388)
        on left: 614
        on right: 615
    enum_list <pEnum> (389)
        on left: 616 617 618 619
        on right: 617 618 619 636 639
    optional_public_or_private_alias <b> (390)
        on left: 620 621 622
        on right: 624 787 792 797
    single_alias (391)
        on left: 624
        on right: 625 626 629
    $@40 (392)
        on left: 623
        on right: 624
    alias_list (393)
        on left: 625 626
        on right: 626 627
    alias_declaration (394)
        on left: 627 629
        on right: 10
    $@41 (395)
        on left: 628
        on right: 629
    optional_public_or_private_enum <b> (396)
        on left: 630 631 632
        on right: 636 639
    enum_name <pEnum> (397)
        on left: 633
        on right: 636 639
    enum_declaration (398)
        on left: 636 639
        on right: 4
    $@42 (399)
        on left: 634
        on right: 636
    $@43 (400)
        on left: 635
        on right: 636
    $@44 (401)
        on left: 637
        on right: 639
    $@45 (402)
        on left: 638
        on right: 639
    optional_structure_parent <s> (403)
        on left: 640 641
        on right: 644
    optional_sealed <b> (404)
        on left: 642 643
        on right: 644
    structure_name <pStructure> (405)
        on left: 644
        on right: 656
    class_or_struct <i> (406)
        on left: 645 646 647 648
        on right: 656
    optional_public_or_private_structure <b> (407)
        on left: 649 650 651
        on right: 656
    optional_struct_variable_declaration_list <pVarDeclList> (408)
        on left: 652 653
        on right: 656
    structure_declaration (409)
        on left: 656
        on right: 3
    $@46 (410)
        on left: 654
        on right: 656
    $@47 (411)
        on left: 655
        on right: 656
    variable_name_with_pos_list <pNameWithPosList> (412)
        on left: 657 658 659 660 661
        on right: 82 584 585 586 587 588 589 660 661 899 900 901 902 903 904
    basic_type_declaration <type> (413)
        on left: 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688
        on right: 429 430 439 440 501 507 512 522 715
    enum_basic_type_declaration <type> (414)
        on left: 689 690 691 692 693 694 695 696
        on right: 639
    structure_type_declaration <pTypeDecl> (415)
        on left: 697
        on right: 283 718
    auto_type_declaration <pTypeDecl> (416)
        on left: 698 699 700
        on right: 716
    bitfield_bits <pNameList> (417)
        on left: 701 702
        on right: 702 708
    bitfield_alias_bits <pNameList> (418)
        on left: 703 704 705
        on right: 704 705 797
    bitfield_type_declaration <pTypeDecl> (419)
        on left: 708
        on right: 717
    $@48 (420)
        on left: 706
        on right: 708
    $@49 (421)
        on left: 707
        on right: 708
    c_or_s (422)
        on left: 709 710
        on right: 263 337 572 574 575 578 580 581 712 894
    table_type_pair <aTypePair> (423)
        on left: 711 712
        on right: 749
    dim_list <pTypeDecl> (424)
        on left: 713 714
        on right: 714 719
    type_declaration_no_options <pTypeDecl> (425)
        on left: 715 716 717 718 719 720 723 724 725 727 728 729 730 731 732 733 734 735 736 737 738 739 742 743 746 749 752 753 756 759 760 763 766 767 770 773 776 779
        on right: 230 313 314 315 316 325 328 331 420 494 495 500 600 601 602 719 720 728 729 730 731 732 733 734 735 736 737 738 739 743 780 781 837 838 839 840 841 842 845 848 851 854 863 867 868 871 874 877 881 885 893 894
    $@50 (426)
        on left: 721
        on right: 723
    $@51 (427)
        on left: 722
        on right: 723
    $@52 (428)
        on left: 726
        on right: 727
    $@53 (429)
        on left: 740
        on right: 742
    $@54 (430)
        on left: 741
        on right: 742
    $@55 (431)
        on left: 744
        on right: 746
    $@56 (432)
        on left: 745
        on right: 746
    $@57 (433)
        on left: 747
        on right: 749
    $@58 (434)
        on left: 748
        on right: 749
    $@59 (435)
        on left: 750
        on right: 752
    $@60 (436)
        on left: 751
        on right: 752
    $@61 (437)
        on left: 754
        on right: 756
    $@62 (438)
        on left: 755
        on right: 756
    $@63 (439)
        on left: 757
        on right: 759
    $@64 (440)
        on left: 758
        on right: 759
    $@65 (441)
        on left: 761
        on right: 763
    $@66 (442)
        on left: 762
        on right: 763
    $@67 (443)
        on left: 764
        on right: 766
    $@68 (444)
        on left: 765
        on right: 766
    $@69 (445)
        on left: 768
        on right: 770
    $@70 (446)
        on left: 769
        on right: 770
    $@71 (447)
        on left: 771
        on right: 773
    $@72 (448)
        on left: 772
        on right: 773
    $@73 (449)
        on left: 774
        on right: 776
    $@74 (450)
        on left: 775
        on right: 776
    $@75 (451)
        on left: 777
        on right: 779
    $@76 (452)
        on left: 778
        on right: 779
    type_declaration <pTypeDecl> (453)
        on left: 780 781 782
        on right: 133 262 263 282 334 506 511 569 570 576 586 587 624 711 712 723 742 746 752 756 763 770 781 782
    tuple_alias_declaration (454)
        on left: 787
        on right: 12
    $@77 (455)
        on left: 783
        on right: 787
    $@78 (456)
        on left: 784
        on right: 787
    $@79 (457)
        on left: 785
        on right: 787
    $@80 (458)
        on left: 786
        on right: 787
    variant_alias_declaration (459)
        on left: 792
        on right: 11
    $@81 (460)
        on left: 788
        on right: 792
    $@82 (461)
        on left: 789
        on right: 792
    $@83 (462)
        on left: 790
        on right: 792
    $@84 (463)
        on left: 791
        on right: 792
    bitfield_alias_declaration (464)
        on left: 797
        on right: 13
    $@85 (465)
        on left: 793
        on right: 797
    $@86 (466)
        on left: 794
        on right: 797
    $@87 (467)
        on left: 795
        on right: 797
    $@88 (468)
        on left: 796
        on right: 797
    make_decl <pExpression> (469)
        on left: 798 799 800 801 802
        on right: 289 446
    make_struct_fields <pMakeStruct> (470)
        on left: 803 804 805 806 807 808 809 810
        on right: 411 412 428 805 806 809 810 811 812 813 814 815 816 817
    make_variant_dim <pExpression> (471)
        on left: 811
        on right: 851 877
    make_struct_single <pExpression> (472)
        on left: 812
        on right: 287 288 436 437 482
    make_struct_dim <pExpression> (473)
        on left: 813 814
        on right: 814 837 840 841 842
    make_struct_dim_list <pExpression> (474)
        on left: 815 816
        on right: 816 818
    make_struct_dim_decl <pExpression> (475)
        on left: 817 818
        on right: 819
    optional_make_struct_dim_decl <pExpression> (476)
        on left: 819 820
        on right: 845 848 863 871 874
    optional_block <pExpression> (477)
        on left: 821 822
        on right: 837 838 839 840 841 842
    optional_trailing_semicolon_cur_cur (478)
        on left: 823 824
        on right: 891
    optional_trailing_semicolon_cur_sqr (479)
        on left: 825 826
        on right: 868
    optional_trailing_semicolon_sqr_sqr (480)
        on left: 827 828
        on right: 867
    optional_trailing_delim_sqr_sqr (481)
        on left: 829 830 831
        on right: 837 838 839 840
    optional_trailing_delim_cur_sqr (482)
        on left: 832 833 834
        on right: 841 842
    use_initializer <b> (483)
        on left: 835 836
        on right: 285 845 848 854 863 871 874
    make_struct_decl <pExpression> (484)
        on left: 837 838 839 840 841 842 845 848 851 854
        on right: 798
    $@89 (485)
        on left: 843
        on right: 845
    $@90 (486)
        on left: 844
        on right: 845
    $@91 (487)
        on left: 846
        on right: 848
    $@92 (488)
        on left: 847
        on right: 848
    $@93 (489)
        on left: 849
        on right: 851
    $@94 (490)
        on left: 850
        on right: 851
    $@95 (491)
        on left: 852
        on right: 854
    $@96 (492)
        on left: 853
        on right: 854
    make_tuple <pExpression> (493)
        on left: 855 856 857
        on right: 857 864 865
    make_map_tuple <pExpression> (494)
        on left: 858 859
        on right: 886 887 888 889 903 904
    make_tuple_call <pExpression> (495)
        on left: 860 863
        on right: 802
    $@97 (496)
        on left: 861
        on right: 863
    $@98 (497)
        on left: 862
        on right: 863
    make_dim <pExpression> (498)
        on left: 864 865
        on right: 865 867 868
    make_dim_decl <pExpression> (499)
        on left: 866 867 868 871 874 877 878 881 882 885
        on right: 799
    $@99 (500)
        on left: 869
        on right: 871
    $@100 (501)
        on left: 870
        on right: 871
    $@101 (502)
        on left: 872
        on right: 874
    $@102 (503)
        on left: 873
        on right: 874
    $@103 (504)
        on left: 875
        on right: 877
    $@104 (505)
        on left: 876
        on right: 877
    $@105 (506)
        on left: 879
        on right: 881
    $@106 (507)
        on left: 880
        on right: 881
    $@107 (508)
        on left: 883
        on right: 885
    $@108 (509)
        on left: 884
        on right: 885
    make_table <pExpression> (510)
        on left: 886 887
        on right: 887 891
    expr_map_tuple_list <pExpression> (511)
        on left: 888 889
        on right: 261 889
    make_table_decl <pExpression> (512)
        on left: 890 891 892 893 894
        on right: 800
    array_comprehension_where <pExpression> (513)
        on left: 895 896
        on right: 899 900 901 902 903 904
    optional_comma <b> (514)
        on left: 897 898
        on right: 257 259 261 481 818 860 878 882 885
    array_comprehension <pExpression> (515)
        on left: 899 900 901 902 903 904
        on right: 801


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration
    9        | program . options_declaration
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . tuple_alias_declaration
   13        | program . bitfield_alias_declaration
   14        | program . top_level_reader_macro
   15        | program . "end of expression"

    $end                 shift, and go to state 2
    "let"                shift, and go to state 3
    "options"            shift, and go to state 4
    "expect"             shift, and go to state 5
    "require"            shift, and go to state 6
    "typedef"            shift, and go to state 7
    "var"                shift, and go to state 8
    "module"             shift, and go to state 9
    "bitfield"           shift, and go to state 10
    "tuple"              shift, and go to state 11
    "variant"            shift, and go to state 12
    "end of expression"  shift, and go to state 13
    '%'                  shift, and go to state 14
    '['                  shift, and go to state 15

    $default  reduce using rule 127 (optional_annotation_list)

    top_level_reader_macro       go to state 16
    module_declaration           go to state 17
    expr_reader                  go to state 18
    options_declaration          go to state 19
    require_declaration          go to state 20
    expect_declaration           go to state 21
    optional_annotation_list     go to state 22
    global_function_declaration  go to state 23
    kwd_let                      go to state 24
    global_let                   go to state 25
    alias_declaration            go to state 26
    enum_declaration             go to state 27
    structure_declaration        go to state 28
    tuple_alias_declaration      go to state 29
    variant_alias_declaration    go to state 30
    bitfield_alias_declaration   go to state 31


State 2

    0 $accept: program $end .

    $default  accept


State 3

  307 kwd_let: "let" .

    $default  reduce using rule 307 (kwd_let)


State 4

   42 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 37


State 5

   55 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 38

    expect_list   go to state 39
    expect_error  go to state 40


State 6

   43 require_declaration: "require" . require_module

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43
    '%'              shift, and go to state 44

    keyword_or_name      go to state 45
    require_module_name  go to state 46
    require_module       go to state 47


State 7

  627 alias_declaration: "typedef" . "begin of code block" alias_list "end of code block"
  629                  | "typedef" . $@41 single_alias "end of expression"

    "begin of code block"  shift, and go to state 48

    $default  reduce using rule 628 ($@41)

    $@41  go to state 49


State 8

  308 kwd_let: "var" .

    $default  reduce using rule 308 (kwd_let)


State 9

   22 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 50
    '$'     shift, and go to state 51

    module_name  go to state 52


State 10

  797 bitfield_alias_declaration: "bitfield" . optional_public_or_private_alias $@85 "name" $@86 "begin of code block" $@87 bitfield_alias_bits $@88 "end of code block"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 620 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 55


State 11

  787 tuple_alias_declaration: "tuple" . optional_public_or_private_alias $@77 "name" $@78 "begin of code block" $@79 tuple_alias_type_list $@80 "end of code block"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 620 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 56


State 12

  792 variant_alias_declaration: "variant" . optional_public_or_private_alias $@81 "name" $@82 "begin of code block" $@83 variant_alias_type_list $@84 "end of code block"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 620 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 57


State 13

   15 program: program "end of expression" .

    $default  reduce using rule 15 (program)


State 14

   41 expr_reader: '%' . name_in_namespace $@2 reader_character_sequence

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 60


State 15

  128 optional_annotation_list: '[' . annotation_list ']'

    "require"   shift, and go to state 61
    "private"   shift, and go to state 62
    "template"  shift, and go to state 63
    "|>"        shift, and go to state 64
    "::"        shift, and go to state 58
    "name"      shift, and go to state 59
    '!'         shift, and go to state 65
    '('         shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 69
    annotation_list               go to state 70
    name_in_namespace             go to state 71


State 16

   14 program: program top_level_reader_macro .

    $default  reduce using rule 14 (program)


State 17

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 18

   16 top_level_reader_macro: expr_reader . "end of expression"

    "end of expression"  shift, and go to state 72


State 19

    9 program: program options_declaration .

    $default  reduce using rule 9 (program)


State 20

    8 program: program require_declaration .

    $default  reduce using rule 8 (program)


State 21

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 22

  219 global_function_declaration: optional_annotation_list . "def" function_declaration
  636 enum_declaration: optional_annotation_list . "enum" optional_public_or_private_enum enum_name "begin of code block" $@42 enum_list $@43 "end of code block"
  639                 | optional_annotation_list . "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@44 enum_list $@45 "end of code block"
  656 structure_declaration: optional_annotation_list . class_or_struct optional_public_or_private_structure $@46 structure_name $@47 optional_struct_variable_declaration_list

    "struct"    shift, and go to state 73
    "class"     shift, and go to state 74
    "def"       shift, and go to state 75
    "enum"      shift, and go to state 76
    "template"  shift, and go to state 77

    class_or_struct  go to state 78


State 23

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 24

  613 global_let: kwd_let . optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"
  615           | kwd_let . optional_shared optional_public_or_private_variable $@39 optional_field_annotation let_variable_declaration

    "shared"  shift, and go to state 79

    $default  reduce using rule 608 (optional_shared)

    optional_shared  go to state 80


State 25

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 26

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 27

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 28

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 29

   12 program: program tuple_alias_declaration .

    $default  reduce using rule 12 (program)


State 30

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 31

   13 program: program bitfield_alias_declaration .

    $default  reduce using rule 13 (program)


State 32

   97 annotation_argument_name: "type" .

    $default  reduce using rule 97 (annotation_argument_name)


State 33

   98 annotation_argument_name: "in" .

    $default  reduce using rule 98 (annotation_argument_name)


State 34

   96 annotation_argument_name: "name" .

    $default  reduce using rule 96 (annotation_argument_name)


State 35

   99 annotation_argument: annotation_argument_name . '=' string_constant
  100                    | annotation_argument_name . '=' "name"
  101                    | annotation_argument_name . '=' "integer constant"
  102                    | annotation_argument_name . '=' "floating point constant"
  103                    | annotation_argument_name . '=' "true"
  104                    | annotation_argument_name . '=' "false"
  105                    | annotation_argument_name .
  106                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 81

    $default  reduce using rule 105 (annotation_argument)


State 36

  107 annotation_argument_list: annotation_argument .

    $default  reduce using rule 107 (annotation_argument_list)


State 37

   42 options_declaration: "options" annotation_argument_list .
  108 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 82

    $default  reduce using rule 42 (options_declaration)


State 38

   58 expect_error: "integer constant" .
   59             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 83

    $default  reduce using rule 58 (expect_error)


State 39

   55 expect_declaration: "expect" expect_list .
   57 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 84

    $default  reduce using rule 55 (expect_declaration)


State 40

   56 expect_list: expect_error .

    $default  reduce using rule 56 (expect_list)


State 41

   44 keyword_or_name: "name" .

    $default  reduce using rule 44 (keyword_or_name)


State 42

   45 keyword_or_name: "keyword" .

    $default  reduce using rule 45 (keyword_or_name)


State 43

   46 keyword_or_name: "type function" .

    $default  reduce using rule 46 (keyword_or_name)


State 44

   48 require_module_name: '%' . require_module_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43
    '%'              shift, and go to state 44

    keyword_or_name      go to state 45
    require_module_name  go to state 85


State 45

   47 require_module_name: keyword_or_name .

    $default  reduce using rule 47 (require_module_name)


State 46

   49 require_module_name: require_module_name . '.' keyword_or_name
   50                    | require_module_name . '/' keyword_or_name
   51 require_module: require_module_name . is_public_module
   52               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 86
    "public"  shift, and go to state 87
    '/'       shift, and go to state 88
    '.'       shift, and go to state 89

    $default  reduce using rule 53 (is_public_module)

    is_public_module  go to state 90


State 47

   43 require_declaration: "require" require_module .

    $default  reduce using rule 43 (require_declaration)


State 48

  627 alias_declaration: "typedef" "begin of code block" . alias_list "end of code block"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 620 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 91
    single_alias                      go to state 92
    alias_list                        go to state 93


State 49

  629 alias_declaration: "typedef" $@41 . single_alias "end of expression"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 620 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 91
    single_alias                      go to state 94


State 50

   21 module_name: "name" .

    $default  reduce using rule 21 (module_name)


State 51

   20 module_name: '$' .

    $default  reduce using rule 20 (module_name)


State 52

   22 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 79

    $default  reduce using rule 608 (optional_shared)

    optional_shared  go to state 95


State 53

  622 optional_public_or_private_alias: "public" .

    $default  reduce using rule 622 (optional_public_or_private_alias)


State 54

  621 optional_public_or_private_alias: "private" .

    $default  reduce using rule 621 (optional_public_or_private_alias)


State 55

  797 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias . $@85 "name" $@86 "begin of code block" $@87 bitfield_alias_bits $@88 "end of code block"

    $default  reduce using rule 793 ($@85)

    $@85  go to state 96


State 56

  787 tuple_alias_declaration: "tuple" optional_public_or_private_alias . $@77 "name" $@78 "begin of code block" $@79 tuple_alias_type_list $@80 "end of code block"

    $default  reduce using rule 783 ($@77)

    $@77  go to state 97


State 57

  792 variant_alias_declaration: "variant" optional_public_or_private_alias . $@81 "name" $@82 "begin of code block" $@83 variant_alias_type_list $@84 "end of code block"

    $default  reduce using rule 788 ($@81)

    $@81  go to state 98


State 58

  277 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 99


State 59

  275 name_in_namespace: "name" .
  276                  | "name" . "::" "name"

    "::"  shift, and go to state 100

    "::"      [reduce using rule 275 (name_in_namespace)]
    $default  reduce using rule 275 (name_in_namespace)


State 60

   41 expr_reader: '%' name_in_namespace . $@2 reader_character_sequence

    $default  reduce using rule 40 ($@2)

    $@2  go to state 101


State 61

  113 annotation_declaration_name: "require" .

    $default  reduce using rule 113 (annotation_declaration_name)


State 62

  114 annotation_declaration_name: "private" .

    $default  reduce using rule 114 (annotation_declaration_name)


State 63

  115 annotation_declaration_name: "template" .

    $default  reduce using rule 115 (annotation_declaration_name)


State 64

  124 annotation_declaration: "|>" . annotation_declaration

    "require"   shift, and go to state 61
    "private"   shift, and go to state 62
    "template"  shift, and go to state 63
    "|>"        shift, and go to state 64
    "::"        shift, and go to state 58
    "name"      shift, and go to state 59
    '!'         shift, and go to state 65
    '('         shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 102
    name_in_namespace             go to state 71


State 65

  119 annotation_declaration: '!' . annotation_declaration

    "require"   shift, and go to state 61
    "private"   shift, and go to state 62
    "template"  shift, and go to state 63
    "|>"        shift, and go to state 64
    "::"        shift, and go to state 58
    "name"      shift, and go to state 59
    '!'         shift, and go to state 65
    '('         shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 103
    name_in_namespace             go to state 71


State 66

  123 annotation_declaration: '(' . annotation_declaration ')'

    "require"   shift, and go to state 61
    "private"   shift, and go to state 62
    "template"  shift, and go to state 63
    "|>"        shift, and go to state 64
    "::"        shift, and go to state 58
    "name"      shift, and go to state 59
    '!'         shift, and go to state 65
    '('         shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 104
    name_in_namespace             go to state 71


State 67

  116 annotation_declaration_basic: annotation_declaration_name .
  117                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 105

    $default  reduce using rule 116 (annotation_declaration_basic)


State 68

  118 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 118 (annotation_declaration)


State 69

  120 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  121                       | annotation_declaration . "||" annotation_declaration
  122                       | annotation_declaration . "^^" annotation_declaration
  125 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 106
    "||"  shift, and go to state 107
    "^^"  shift, and go to state 108

    $default  reduce using rule 125 (annotation_list)


State 70

  126 annotation_list: annotation_list . ',' annotation_declaration
  128 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 109
    ']'  shift, and go to state 110


State 71

  112 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 112 (annotation_declaration_name)


State 72

   16 top_level_reader_macro: expr_reader "end of expression" .

    $default  reduce using rule 16 (top_level_reader_macro)


State 73

  646 class_or_struct: "struct" .

    $default  reduce using rule 646 (class_or_struct)


State 74

  645 class_or_struct: "class" .

    $default  reduce using rule 645 (class_or_struct)


State 75

  219 global_function_declaration: optional_annotation_list "def" . function_declaration

    "public"   shift, and go to state 111
    "private"  shift, and go to state 112

    $default  reduce using rule 220 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 113
    function_declaration                 go to state 114


State 76

  636 enum_declaration: optional_annotation_list "enum" . optional_public_or_private_enum enum_name "begin of code block" $@42 enum_list $@43 "end of code block"
  639                 | optional_annotation_list "enum" . optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@44 enum_list $@45 "end of code block"

    "public"   shift, and go to state 115
    "private"  shift, and go to state 116

    $default  reduce using rule 630 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 117


State 77

  647 class_or_struct: "template" . "class"
  648                | "template" . "struct"

    "struct"  shift, and go to state 118
    "class"   shift, and go to state 119


State 78

  656 structure_declaration: optional_annotation_list class_or_struct . optional_public_or_private_structure $@46 structure_name $@47 optional_struct_variable_declaration_list

    "public"   shift, and go to state 120
    "private"  shift, and go to state 121

    $default  reduce using rule 649 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 122


State 79

  609 optional_shared: "shared" .

    $default  reduce using rule 609 (optional_shared)


State 80

  613 global_let: kwd_let optional_shared . optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"
  615           | kwd_let optional_shared . optional_public_or_private_variable $@39 optional_field_annotation let_variable_declaration

    "public"   shift, and go to state 123
    "private"  shift, and go to state 124

    $default  reduce using rule 610 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 125


State 81

   99 annotation_argument: annotation_argument_name '=' . string_constant
  100                    | annotation_argument_name '=' . "name"
  101                    | annotation_argument_name '=' . "integer constant"
  102                    | annotation_argument_name '=' . "floating point constant"
  103                    | annotation_argument_name '=' . "true"
  104                    | annotation_argument_name '=' . "false"
  106                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 126
    "false"                    shift, and go to state 127
    "integer constant"         shift, and go to state 128
    "floating point constant"  shift, and go to state 129
    "name"                     shift, and go to state 130
    "start of the string"      shift, and go to state 131
    '('                        shift, and go to state 132

    string_constant  go to state 133


State 82

  108 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 134


State 83

   59 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 135


State 84

   57 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 38

    expect_error  go to state 136


State 85

   48 require_module_name: '%' require_module_name .
   49                    | require_module_name . '.' keyword_or_name
   50                    | require_module_name . '/' keyword_or_name

    '.'  shift, and go to state 89

    $default  reduce using rule 48 (require_module_name)


State 86

   52 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 137


State 87

   54 is_public_module: "public" .

    $default  reduce using rule 54 (is_public_module)


State 88

   50 require_module_name: require_module_name '/' . keyword_or_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43

    keyword_or_name  go to state 138


State 89

   49 require_module_name: require_module_name '.' . keyword_or_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43

    keyword_or_name  go to state 139


State 90

   51 require_module: require_module_name is_public_module .

    $default  reduce using rule 51 (require_module)


State 91

  624 single_alias: optional_public_or_private_alias . "name" $@40 '=' type_declaration

    "name"  shift, and go to state 140


State 92

  625 alias_list: single_alias . "end of expression"

    "end of expression"  shift, and go to state 141


State 93

  626 alias_list: alias_list . single_alias "end of expression"
  627 alias_declaration: "typedef" "begin of code block" alias_list . "end of code block"

    "public"             shift, and go to state 53
    "private"            shift, and go to state 54
    "end of code block"  shift, and go to state 142

    $default  reduce using rule 620 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 91
    single_alias                      go to state 143


State 94

  629 alias_declaration: "typedef" $@41 single_alias . "end of expression"

    "end of expression"  shift, and go to state 144


State 95

   22 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 145
    "private"  shift, and go to state 146

    $default  reduce using rule 17 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 147


State 96

  797 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 . "name" $@86 "begin of code block" $@87 bitfield_alias_bits $@88 "end of code block"

    "name"  shift, and go to state 148


State 97

  787 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 . "name" $@78 "begin of code block" $@79 tuple_alias_type_list $@80 "end of code block"

    "name"  shift, and go to state 149


State 98

  792 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 . "name" $@82 "begin of code block" $@83 variant_alias_type_list $@84 "end of code block"

    "name"  shift, and go to state 150


State 99

  277 name_in_namespace: "::" "name" .

    $default  reduce using rule 277 (name_in_namespace)


State 100

  276 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 151


State 101

   41 expr_reader: '%' name_in_namespace $@2 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 152

    reader_character_sequence  go to state 153


State 102

  120 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  121                       | annotation_declaration . "||" annotation_declaration
  122                       | annotation_declaration . "^^" annotation_declaration
  124                       | "|>" annotation_declaration .

    $default  reduce using rule 124 (annotation_declaration)


State 103

  119 annotation_declaration: '!' annotation_declaration .
  120                       | annotation_declaration . "&&" annotation_declaration
  121                       | annotation_declaration . "||" annotation_declaration
  122                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 119 (annotation_declaration)


State 104

  120 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  121                       | annotation_declaration . "||" annotation_declaration
  122                       | annotation_declaration . "^^" annotation_declaration
  123                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 106
    "||"  shift, and go to state 107
    "^^"  shift, and go to state 108
    ')'   shift, and go to state 154


State 105

  117 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 155


State 106

  120 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"   shift, and go to state 61
    "private"   shift, and go to state 62
    "template"  shift, and go to state 63
    "|>"        shift, and go to state 64
    "::"        shift, and go to state 58
    "name"      shift, and go to state 59
    '!'         shift, and go to state 65
    '('         shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 156
    name_in_namespace             go to state 71


State 107

  121 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"   shift, and go to state 61
    "private"   shift, and go to state 62
    "template"  shift, and go to state 63
    "|>"        shift, and go to state 64
    "::"        shift, and go to state 58
    "name"      shift, and go to state 59
    '!'         shift, and go to state 65
    '('         shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 157
    name_in_namespace             go to state 71


State 108

  122 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"   shift, and go to state 61
    "private"   shift, and go to state 62
    "template"  shift, and go to state 63
    "|>"        shift, and go to state 64
    "::"        shift, and go to state 58
    "name"      shift, and go to state 59
    '!'         shift, and go to state 65
    '('         shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 158
    name_in_namespace             go to state 71


State 109

  126 annotation_list: annotation_list ',' . annotation_declaration

    "require"   shift, and go to state 61
    "private"   shift, and go to state 62
    "template"  shift, and go to state 63
    "|>"        shift, and go to state 64
    "::"        shift, and go to state 58
    "name"      shift, and go to state 59
    '!'         shift, and go to state 65
    '('         shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 159
    name_in_namespace             go to state 71


State 110

  128 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 128 (optional_annotation_list)


State 111

  222 optional_public_or_private_function: "public" .

    $default  reduce using rule 222 (optional_public_or_private_function)


State 112

  221 optional_public_or_private_function: "private" .

    $default  reduce using rule 221 (optional_public_or_private_function)


State 113

  225 function_declaration: optional_public_or_private_function . $@7 function_declaration_header expression_block

    $default  reduce using rule 224 ($@7)

    $@7  go to state 160


State 114

  219 global_function_declaration: optional_annotation_list "def" function_declaration .

    $default  reduce using rule 219 (global_function_declaration)


State 115

  632 optional_public_or_private_enum: "public" .

    $default  reduce using rule 632 (optional_public_or_private_enum)


State 116

  631 optional_public_or_private_enum: "private" .

    $default  reduce using rule 631 (optional_public_or_private_enum)


State 117

  636 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum . enum_name "begin of code block" $@42 enum_list $@43 "end of code block"
  639                 | optional_annotation_list "enum" optional_public_or_private_enum . enum_name ':' enum_basic_type_declaration "begin of code block" $@44 enum_list $@45 "end of code block"

    "name"  shift, and go to state 161

    enum_name  go to state 162


State 118

  648 class_or_struct: "template" "struct" .

    $default  reduce using rule 648 (class_or_struct)


State 119

  647 class_or_struct: "template" "class" .

    $default  reduce using rule 647 (class_or_struct)


State 120

  651 optional_public_or_private_structure: "public" .

    $default  reduce using rule 651 (optional_public_or_private_structure)


State 121

  650 optional_public_or_private_structure: "private" .

    $default  reduce using rule 650 (optional_public_or_private_structure)


State 122

  656 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure . $@46 structure_name $@47 optional_struct_variable_declaration_list

    $default  reduce using rule 654 ($@46)

    $@46  go to state 163


State 123

  612 optional_public_or_private_variable: "public" .

    $default  reduce using rule 612 (optional_public_or_private_variable)


State 124

  611 optional_public_or_private_variable: "private" .

    $default  reduce using rule 611 (optional_public_or_private_variable)


State 125

  613 global_let: kwd_let optional_shared optional_public_or_private_variable . "begin of code block" global_variable_declaration_list "end of code block"
  615           | kwd_let optional_shared optional_public_or_private_variable . $@39 optional_field_annotation let_variable_declaration

    "begin of code block"  shift, and go to state 164

    $default  reduce using rule 614 ($@39)

    $@39  go to state 165


State 126

  103 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 103 (annotation_argument)


State 127

  104 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 104 (annotation_argument)


State 128

  101 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 101 (annotation_argument)


State 129

  102 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 102 (annotation_argument)


State 130

  100 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 100 (annotation_argument)


State 131

   27 string_constant: "start of the string" . character_sequence "end of the string"
   28                | "start of the string" . "end of the string"

    STRING_CHARACTER      shift, and go to state 166
    STRING_CHARACTER_ESC  shift, and go to state 167
    "end of the string"   shift, and go to state 168

    character_sequence  go to state 169


State 132

  106 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 170
    "false"                    shift, and go to state 171
    "integer constant"         shift, and go to state 172
    "floating point constant"  shift, and go to state 173
    "name"                     shift, and go to state 174
    "start of the string"      shift, and go to state 131

    string_constant                 go to state 175
    annotation_argument_value       go to state 176
    annotation_argument_value_list  go to state 177


State 133

   99 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 99 (annotation_argument)


State 134

  108 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 108 (annotation_argument_list)


State 135

   59 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 59 (expect_error)


State 136

   57 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 57 (expect_list)


State 137

   52 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 87

    $default  reduce using rule 53 (is_public_module)

    is_public_module  go to state 178


State 138

   50 require_module_name: require_module_name '/' keyword_or_name .

    $default  reduce using rule 50 (require_module_name)


State 139

   49 require_module_name: require_module_name '.' keyword_or_name .

    $default  reduce using rule 49 (require_module_name)


State 140

  624 single_alias: optional_public_or_private_alias "name" . $@40 '=' type_declaration

    $default  reduce using rule 623 ($@40)

    $@40  go to state 179


State 141

  625 alias_list: single_alias "end of expression" .

    $default  reduce using rule 625 (alias_list)


State 142

  627 alias_declaration: "typedef" "begin of code block" alias_list "end of code block" .

    $default  reduce using rule 627 (alias_declaration)


State 143

  626 alias_list: alias_list single_alias . "end of expression"

    "end of expression"  shift, and go to state 180


State 144

  629 alias_declaration: "typedef" $@41 single_alias "end of expression" .

    $default  reduce using rule 629 (alias_declaration)


State 145

   18 optional_public_or_private_module: "public" .

    $default  reduce using rule 18 (optional_public_or_private_module)


State 146

   19 optional_public_or_private_module: "private" .

    $default  reduce using rule 19 (optional_public_or_private_module)


State 147

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 22 (module_declaration)


State 148

  797 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 "name" . $@86 "begin of code block" $@87 bitfield_alias_bits $@88 "end of code block"

    $default  reduce using rule 794 ($@86)

    $@86  go to state 181


State 149

  787 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 "name" . $@78 "begin of code block" $@79 tuple_alias_type_list $@80 "end of code block"

    $default  reduce using rule 784 ($@78)

    $@78  go to state 182


State 150

  792 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 "name" . $@82 "begin of code block" $@83 variant_alias_type_list $@84 "end of code block"

    $default  reduce using rule 789 ($@82)

    $@82  go to state 183


State 151

  276 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 276 (name_in_namespace)


State 152

   38 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 38 (reader_character_sequence)


State 153

   39 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   41 expr_reader: '%' name_in_namespace $@2 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 184

    $default  reduce using rule 41 (expr_reader)


State 154

  123 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 123 (annotation_declaration)


State 155

  108 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  117 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 82
    ')'  shift, and go to state 185


State 156

  120 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  120                       | annotation_declaration "&&" annotation_declaration .
  121                       | annotation_declaration . "||" annotation_declaration
  122                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 120 (annotation_declaration)


State 157

  120 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  121                       | annotation_declaration . "||" annotation_declaration
  121                       | annotation_declaration "||" annotation_declaration .
  122                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 106
    "^^"  shift, and go to state 108

    $default  reduce using rule 121 (annotation_declaration)


State 158

  120 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  121                       | annotation_declaration . "||" annotation_declaration
  122                       | annotation_declaration . "^^" annotation_declaration
  122                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 106

    $default  reduce using rule 122 (annotation_declaration)


State 159

  120 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  121                       | annotation_declaration . "||" annotation_declaration
  122                       | annotation_declaration . "^^" annotation_declaration
  126 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 106
    "||"  shift, and go to state 107
    "^^"  shift, and go to state 108

    $default  reduce using rule 126 (annotation_list)


State 160

  225 function_declaration: optional_public_or_private_function $@7 . function_declaration_header expression_block

    "operator"  shift, and go to state 186
    "bool"      shift, and go to state 187
    "string"    shift, and go to state 188
    "int"       shift, and go to state 189
    "int2"      shift, and go to state 190
    "int3"      shift, and go to state 191
    "int4"      shift, and go to state 192
    "uint"      shift, and go to state 193
    "uint2"     shift, and go to state 194
    "uint3"     shift, and go to state 195
    "uint4"     shift, and go to state 196
    "float"     shift, and go to state 197
    "float2"    shift, and go to state 198
    "float3"    shift, and go to state 199
    "float4"    shift, and go to state 200
    "range"     shift, and go to state 201
    "urange"    shift, and go to state 202
    "range64"   shift, and go to state 203
    "urange64"  shift, and go to state 204
    "int64"     shift, and go to state 205
    "uint64"    shift, and go to state 206
    "double"    shift, and go to state 207
    "int8"      shift, and go to state 208
    "uint8"     shift, and go to state 209
    "int16"     shift, and go to state 210
    "uint16"    shift, and go to state 211
    "++"        shift, and go to state 212
    "--"        shift, and go to state 213
    "name"      shift, and go to state 214

    function_name                go to state 215
    function_declaration_header  go to state 216


State 161

  633 enum_name: "name" .

    $default  reduce using rule 633 (enum_name)


State 162

  636 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name . "begin of code block" $@42 enum_list $@43 "end of code block"
  639                 | optional_annotation_list "enum" optional_public_or_private_enum enum_name . ':' enum_basic_type_declaration "begin of code block" $@44 enum_list $@45 "end of code block"

    "begin of code block"  shift, and go to state 217
    ':'                    shift, and go to state 218


State 163

  656 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@46 . structure_name $@47 optional_struct_variable_declaration_list

    "sealed"  shift, and go to state 219

    $default  reduce using rule 642 (optional_sealed)

    optional_sealed  go to state 220
    structure_name   go to state 221


State 164

  613 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" . global_variable_declaration_list "end of code block"

    $default  reduce using rule 605 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 222


State 165

  615 global_let: kwd_let optional_shared optional_public_or_private_variable $@39 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 223
    '@'   shift, and go to state 224

    $default  reduce using rule 542 (optional_field_annotation)

    metadata_argument_list     go to state 225
    optional_field_annotation  go to state 226


State 166

   23 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 23 (character_sequence)


State 167

   24 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 24 (character_sequence)


State 168

   28 string_constant: "start of the string" "end of the string" .

    $default  reduce using rule 28 (string_constant)


State 169

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   27 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 227
    STRING_CHARACTER_ESC  shift, and go to state 228
    "end of the string"   shift, and go to state 229


State 170

   92 annotation_argument_value: "true" .

    $default  reduce using rule 92 (annotation_argument_value)


State 171

   93 annotation_argument_value: "false" .

    $default  reduce using rule 93 (annotation_argument_value)


State 172

   90 annotation_argument_value: "integer constant" .

    $default  reduce using rule 90 (annotation_argument_value)


State 173

   91 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 91 (annotation_argument_value)


State 174

   89 annotation_argument_value: "name" .

    $default  reduce using rule 89 (annotation_argument_value)


State 175

   88 annotation_argument_value: string_constant .

    $default  reduce using rule 88 (annotation_argument_value)


State 176

   94 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 94 (annotation_argument_value_list)


State 177

   95 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
  106 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 230
    ')'  shift, and go to state 231


State 178

   52 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 52 (require_module)


State 179

  624 single_alias: optional_public_or_private_alias "name" $@40 . '=' type_declaration

    '='  shift, and go to state 232


State 180

  626 alias_list: alias_list single_alias "end of expression" .

    $default  reduce using rule 626 (alias_list)


State 181

  797 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 "name" $@86 . "begin of code block" $@87 bitfield_alias_bits $@88 "end of code block"

    "begin of code block"  shift, and go to state 233


State 182

  787 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 "name" $@78 . "begin of code block" $@79 tuple_alias_type_list $@80 "end of code block"

    "begin of code block"  shift, and go to state 234


State 183

  792 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 "name" $@82 . "begin of code block" $@83 variant_alias_type_list $@84 "end of code block"

    "begin of code block"  shift, and go to state 235


State 184

   39 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 39 (reader_character_sequence)


State 185

  117 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 117 (annotation_declaration_basic)


State 186

  135 function_name: "operator" . '!'
  136              | "operator" . '~'
  137              | "operator" . "+="
  138              | "operator" . "-="
  139              | "operator" . "*="
  140              | "operator" . "/="
  141              | "operator" . "%="
  142              | "operator" . "&="
  143              | "operator" . "|="
  144              | "operator" . "^="
  145              | "operator" . "&&="
  146              | "operator" . "||="
  147              | "operator" . "^^="
  148              | "operator" . "&&"
  149              | "operator" . "||"
  150              | "operator" . "^^"
  151              | "operator" . '+'
  152              | "operator" . '-'
  153              | "operator" . '*'
  154              | "operator" . '/'
  155              | "operator" . '%'
  156              | "operator" . '<'
  157              | "operator" . '>'
  158              | "operator" . ".."
  159              | "operator" . "=="
  160              | "operator" . "!="
  161              | "operator" . "<="
  162              | "operator" . ">="
  163              | "operator" . '&'
  164              | "operator" . '|'
  165              | "operator" . '^'
  168              | "operator" . "++"
  169              | "operator" . "--"
  170              | "operator" . "<<"
  171              | "operator" . ">>"
  172              | "operator" . "<<="
  173              | "operator" . ">>="
  174              | "operator" . "<<<"
  175              | "operator" . ">>>"
  176              | "operator" . "<<<="
  177              | "operator" . ">>>="
  178              | "operator" . '[' ']'
  179              | "operator" . "?[" ']'
  180              | "operator" . '.'
  181              | "operator" . "?."
  182              | "operator" . '.' "name"
  183              | "operator" . '.' "name" ":="
  184              | "operator" . "?." "name"
  185              | "operator" . ":="
  186              | "operator" . "delete"
  187              | "operator" . "??"
  188              | "operator" . "is"
  189              | "operator" . "as"
  190              | "operator" . "is" "name"
  191              | "operator" . "as" "name"
  192              | "operator" . '?' "as"
  193              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 236
    "as"      shift, and go to state 237
    "delete"  shift, and go to state 238
    "+="      shift, and go to state 239
    "-="      shift, and go to state 240
    "/="      shift, and go to state 241
    "*="      shift, and go to state 242
    "%="      shift, and go to state 243
    "&="      shift, and go to state 244
    "|="      shift, and go to state 245
    "^="      shift, and go to state 246
    "<<"      shift, and go to state 247
    ">>"      shift, and go to state 248
    "++"      shift, and go to state 249
    "--"      shift, and go to state 250
    "<="      shift, and go to state 251
    "<<="     shift, and go to state 252
    ">>="     shift, and go to state 253
    ">="      shift, and go to state 254
    "=="      shift, and go to state 255
    "!="      shift, and go to state 256
    "??"      shift, and go to state 257
    "?."      shift, and go to state 258
    "?["      shift, and go to state 259
    ":="      shift, and go to state 260
    "<<<"     shift, and go to state 261
    ">>>"     shift, and go to state 262
    "<<<="    shift, and go to state 263
    ">>>="    shift, and go to state 264
    "&&"      shift, and go to state 265
    "||"      shift, and go to state 266
    "^^"      shift, and go to state 267
    "&&="     shift, and go to state 268
    "||="     shift, and go to state 269
    "^^="     shift, and go to state 270
    ".."      shift, and go to state 271
    '?'       shift, and go to state 272
    '|'       shift, and go to state 273
    '^'       shift, and go to state 274
    '&'       shift, and go to state 275
    '<'       shift, and go to state 276
    '>'       shift, and go to state 277
    '-'       shift, and go to state 278
    '+'       shift, and go to state 279
    '*'       shift, and go to state 280
    '/'       shift, and go to state 281
    '%'       shift, and go to state 282
    '~'       shift, and go to state 283
    '!'       shift, and go to state 284
    '.'       shift, and go to state 285
    '['       shift, and go to state 286


State 187

  194 function_name: "bool" .

    $default  reduce using rule 194 (function_name)


State 188

  195 function_name: "string" .

    $default  reduce using rule 195 (function_name)


State 189

  196 function_name: "int" .

    $default  reduce using rule 196 (function_name)


State 190

  197 function_name: "int2" .

    $default  reduce using rule 197 (function_name)


State 191

  198 function_name: "int3" .

    $default  reduce using rule 198 (function_name)


State 192

  199 function_name: "int4" .

    $default  reduce using rule 199 (function_name)


State 193

  200 function_name: "uint" .

    $default  reduce using rule 200 (function_name)


State 194

  201 function_name: "uint2" .

    $default  reduce using rule 201 (function_name)


State 195

  202 function_name: "uint3" .

    $default  reduce using rule 202 (function_name)


State 196

  203 function_name: "uint4" .

    $default  reduce using rule 203 (function_name)


State 197

  204 function_name: "float" .

    $default  reduce using rule 204 (function_name)


State 198

  205 function_name: "float2" .

    $default  reduce using rule 205 (function_name)


State 199

  206 function_name: "float3" .

    $default  reduce using rule 206 (function_name)


State 200

  207 function_name: "float4" .

    $default  reduce using rule 207 (function_name)


State 201

  208 function_name: "range" .

    $default  reduce using rule 208 (function_name)


State 202

  209 function_name: "urange" .

    $default  reduce using rule 209 (function_name)


State 203

  210 function_name: "range64" .

    $default  reduce using rule 210 (function_name)


State 204

  211 function_name: "urange64" .

    $default  reduce using rule 211 (function_name)


State 205

  212 function_name: "int64" .

    $default  reduce using rule 212 (function_name)


State 206

  213 function_name: "uint64" .

    $default  reduce using rule 213 (function_name)


State 207

  214 function_name: "double" .

    $default  reduce using rule 214 (function_name)


State 208

  215 function_name: "int8" .

    $default  reduce using rule 215 (function_name)


State 209

  216 function_name: "uint8" .

    $default  reduce using rule 216 (function_name)


State 210

  217 function_name: "int16" .

    $default  reduce using rule 217 (function_name)


State 211

  218 function_name: "uint16" .

    $default  reduce using rule 218 (function_name)


State 212

  166 function_name: "++" . "operator"

    "operator"  shift, and go to state 287


State 213

  167 function_name: "--" . "operator"

    "operator"  shift, and go to state 288


State 214

  134 function_name: "name" .

    $default  reduce using rule 134 (function_name)


State 215

  223 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 289

    $default  reduce using rule 129 (optional_function_argument_list)

    optional_function_argument_list  go to state 290


State 216

  225 function_declaration: optional_public_or_private_function $@7 function_declaration_header . expression_block

    "begin of code block"  shift, and go to state 291

    expression_block  go to state 292


State 217

  636 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" . $@42 enum_list $@43 "end of code block"

    $default  reduce using rule 634 ($@42)

    $@42  go to state 293


State 218

  639 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' . enum_basic_type_declaration "begin of code block" $@44 enum_list $@45 "end of code block"

    "int"     shift, and go to state 294
    "uint"    shift, and go to state 295
    "int64"   shift, and go to state 296
    "uint64"  shift, and go to state 297
    "int8"    shift, and go to state 298
    "uint8"   shift, and go to state 299
    "int16"   shift, and go to state 300
    "uint16"  shift, and go to state 301

    enum_basic_type_declaration  go to state 302


State 219

  643 optional_sealed: "sealed" .

    $default  reduce using rule 643 (optional_sealed)


State 220

  644 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 303


State 221

  656 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@46 structure_name . $@47 optional_struct_variable_declaration_list

    $default  reduce using rule 655 ($@47)

    $@47  go to state 304


State 222

  607 global_variable_declaration_list: global_variable_declaration_list . $@38 optional_field_annotation let_variable_declaration
  613 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list . "end of code block"

    "end of code block"  shift, and go to state 305

    $default  reduce using rule 606 ($@38)

    $@38  go to state 306


State 223

  543 optional_field_annotation: "[[" . annotation_argument_list ']' ']'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 307


State 224

  109 metadata_argument_list: '@' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 308


State 225

  110 metadata_argument_list: metadata_argument_list . '@' annotation_argument
  111                       | metadata_argument_list . "end of expression"
  544 optional_field_annotation: metadata_argument_list .

    "end of expression"  shift, and go to state 309
    '@'                  shift, and go to state 310

    $default  reduce using rule 544 (optional_field_annotation)


State 226

  615 global_let: kwd_let optional_shared optional_public_or_private_variable $@39 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 311
    "name"  shift, and go to state 312

    let_variable_name_with_pos_list  go to state 313
    let_variable_declaration         go to state 314


State 227

   25 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 25 (character_sequence)


State 228

   26 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 26 (character_sequence)


State 229

   27 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 27 (string_constant)


State 230

   95 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 170
    "false"                    shift, and go to state 171
    "integer constant"         shift, and go to state 172
    "floating point constant"  shift, and go to state 173
    "name"                     shift, and go to state 174
    "start of the string"      shift, and go to state 131

    string_constant            go to state 175
    annotation_argument_value  go to state 315


State 231

  106 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 106 (annotation_argument)


State 232

  624 single_alias: optional_public_or_private_alias "name" $@40 '=' . type_declaration

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 362
    type_declaration             go to state 363


State 233

  797 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 "name" $@86 "begin of code block" . $@87 bitfield_alias_bits $@88 "end of code block"

    $default  reduce using rule 795 ($@87)

    $@87  go to state 364


State 234

  787 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 "name" $@78 "begin of code block" . $@79 tuple_alias_type_list $@80 "end of code block"

    $default  reduce using rule 785 ($@79)

    $@79  go to state 365


State 235

  792 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 "name" $@82 "begin of code block" . $@83 variant_alias_type_list $@84 "end of code block"

    $default  reduce using rule 790 ($@83)

    $@83  go to state 366


State 236

  188 function_name: "operator" "is" .
  190              | "operator" "is" . "name"

    "name"  shift, and go to state 367

    $default  reduce using rule 188 (function_name)


State 237

  189 function_name: "operator" "as" .
  191              | "operator" "as" . "name"

    "name"  shift, and go to state 368

    $default  reduce using rule 189 (function_name)


State 238

  186 function_name: "operator" "delete" .

    $default  reduce using rule 186 (function_name)


State 239

  137 function_name: "operator" "+=" .

    $default  reduce using rule 137 (function_name)


State 240

  138 function_name: "operator" "-=" .

    $default  reduce using rule 138 (function_name)


State 241

  140 function_name: "operator" "/=" .

    $default  reduce using rule 140 (function_name)


State 242

  139 function_name: "operator" "*=" .

    $default  reduce using rule 139 (function_name)


State 243

  141 function_name: "operator" "%=" .

    $default  reduce using rule 141 (function_name)


State 244

  142 function_name: "operator" "&=" .

    $default  reduce using rule 142 (function_name)


State 245

  143 function_name: "operator" "|=" .

    $default  reduce using rule 143 (function_name)


State 246

  144 function_name: "operator" "^=" .

    $default  reduce using rule 144 (function_name)


State 247

  170 function_name: "operator" "<<" .

    $default  reduce using rule 170 (function_name)


State 248

  171 function_name: "operator" ">>" .

    $default  reduce using rule 171 (function_name)


State 249

  168 function_name: "operator" "++" .

    $default  reduce using rule 168 (function_name)


State 250

  169 function_name: "operator" "--" .

    $default  reduce using rule 169 (function_name)


State 251

  161 function_name: "operator" "<=" .

    $default  reduce using rule 161 (function_name)


State 252

  172 function_name: "operator" "<<=" .

    $default  reduce using rule 172 (function_name)


State 253

  173 function_name: "operator" ">>=" .

    $default  reduce using rule 173 (function_name)


State 254

  162 function_name: "operator" ">=" .

    $default  reduce using rule 162 (function_name)


State 255

  159 function_name: "operator" "==" .

    $default  reduce using rule 159 (function_name)


State 256

  160 function_name: "operator" "!=" .

    $default  reduce using rule 160 (function_name)


State 257

  187 function_name: "operator" "??" .

    $default  reduce using rule 187 (function_name)


State 258

  181 function_name: "operator" "?." .
  184              | "operator" "?." . "name"

    "name"  shift, and go to state 369

    $default  reduce using rule 181 (function_name)


State 259

  179 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 370


State 260

  185 function_name: "operator" ":=" .

    $default  reduce using rule 185 (function_name)


State 261

  174 function_name: "operator" "<<<" .

    $default  reduce using rule 174 (function_name)


State 262

  175 function_name: "operator" ">>>" .

    $default  reduce using rule 175 (function_name)


State 263

  176 function_name: "operator" "<<<=" .

    $default  reduce using rule 176 (function_name)


State 264

  177 function_name: "operator" ">>>=" .

    $default  reduce using rule 177 (function_name)


State 265

  148 function_name: "operator" "&&" .

    $default  reduce using rule 148 (function_name)


State 266

  149 function_name: "operator" "||" .

    $default  reduce using rule 149 (function_name)


State 267

  150 function_name: "operator" "^^" .

    $default  reduce using rule 150 (function_name)


State 268

  145 function_name: "operator" "&&=" .

    $default  reduce using rule 145 (function_name)


State 269

  146 function_name: "operator" "||=" .

    $default  reduce using rule 146 (function_name)


State 270

  147 function_name: "operator" "^^=" .

    $default  reduce using rule 147 (function_name)


State 271

  158 function_name: "operator" ".." .

    $default  reduce using rule 158 (function_name)


State 272

  192 function_name: "operator" '?' . "as"
  193              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 371


State 273

  164 function_name: "operator" '|' .

    $default  reduce using rule 164 (function_name)


State 274

  165 function_name: "operator" '^' .

    $default  reduce using rule 165 (function_name)


State 275

  163 function_name: "operator" '&' .

    $default  reduce using rule 163 (function_name)


State 276

  156 function_name: "operator" '<' .

    $default  reduce using rule 156 (function_name)


State 277

  157 function_name: "operator" '>' .

    $default  reduce using rule 157 (function_name)


State 278

  152 function_name: "operator" '-' .

    $default  reduce using rule 152 (function_name)


State 279

  151 function_name: "operator" '+' .

    $default  reduce using rule 151 (function_name)


State 280

  153 function_name: "operator" '*' .

    $default  reduce using rule 153 (function_name)


State 281

  154 function_name: "operator" '/' .

    $default  reduce using rule 154 (function_name)


State 282

  155 function_name: "operator" '%' .

    $default  reduce using rule 155 (function_name)


State 283

  136 function_name: "operator" '~' .

    $default  reduce using rule 136 (function_name)


State 284

  135 function_name: "operator" '!' .

    $default  reduce using rule 135 (function_name)


State 285

  180 function_name: "operator" '.' .
  182              | "operator" '.' . "name"
  183              | "operator" '.' . "name" ":="

    "name"  shift, and go to state 372

    $default  reduce using rule 180 (function_name)


State 286

  178 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 373


State 287

  166 function_name: "++" "operator" .

    $default  reduce using rule 166 (function_name)


State 288

  167 function_name: "--" "operator" .

    $default  reduce using rule 167 (function_name)


State 289

  130 optional_function_argument_list: '(' . ')'
  131                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 374
    "[["  shift, and go to state 223
    ')'   shift, and go to state 375
    '@'   shift, and go to state 224

    $default  reduce using rule 542 (optional_field_annotation)

    metadata_argument_list         go to state 225
    optional_field_annotation      go to state 376
    function_argument_declaration  go to state 377
    function_argument_list         go to state 378


State 290

  223 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 379

    $default  reduce using rule 132 (optional_function_type)

    optional_function_type  go to state 380


State 291

  226 expression_block: "begin of code block" . expressions "end of code block"
  227                 | "begin of code block" . expressions "end of code block" "finally" "begin of code block" expressions "end of code block"

    $default  reduce using rule 252 (expressions)

    expressions  go to state 381


State 292

  225 function_declaration: optional_public_or_private_function $@7 function_declaration_header expression_block .

    $default  reduce using rule 225 (function_declaration)


State 293

  636 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@42 . enum_list $@43 "end of code block"

    $default  reduce using rule 616 (enum_list)

    enum_list  go to state 382


State 294

  689 enum_basic_type_declaration: "int" .

    $default  reduce using rule 689 (enum_basic_type_declaration)


State 295

  692 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 692 (enum_basic_type_declaration)


State 296

  695 enum_basic_type_declaration: "int64" .

    $default  reduce using rule 695 (enum_basic_type_declaration)


State 297

  696 enum_basic_type_declaration: "uint64" .

    $default  reduce using rule 696 (enum_basic_type_declaration)


State 298

  690 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 690 (enum_basic_type_declaration)


State 299

  693 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 693 (enum_basic_type_declaration)


State 300

  691 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 691 (enum_basic_type_declaration)


State 301

  694 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 694 (enum_basic_type_declaration)


State 302

  639 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration . "begin of code block" $@44 enum_list $@45 "end of code block"

    "begin of code block"  shift, and go to state 383


State 303

  644 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 384

    $default  reduce using rule 640 (optional_structure_parent)

    optional_structure_parent  go to state 385


State 304

  656 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@46 structure_name $@47 . optional_struct_variable_declaration_list

    "begin of code block"  shift, and go to state 386

    $default  reduce using rule 652 (optional_struct_variable_declaration_list)

    optional_struct_variable_declaration_list  go to state 387


State 305

  613 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block" .

    $default  reduce using rule 613 (global_let)


State 306

  607 global_variable_declaration_list: global_variable_declaration_list $@38 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 223
    '@'   shift, and go to state 224

    $default  reduce using rule 542 (optional_field_annotation)

    metadata_argument_list     go to state 225
    optional_field_annotation  go to state 388


State 307

  108 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  543 optional_field_annotation: "[[" annotation_argument_list . ']' ']'

    ','  shift, and go to state 82
    ']'  shift, and go to state 389


State 308

  109 metadata_argument_list: '@' annotation_argument .

    $default  reduce using rule 109 (metadata_argument_list)


State 309

  111 metadata_argument_list: metadata_argument_list "end of expression" .

    $default  reduce using rule 111 (metadata_argument_list)


State 310

  110 metadata_argument_list: metadata_argument_list '@' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 390


State 311

  596 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 391


State 312

  595 let_variable_name_with_pos_list: "name" .
  597                                | "name" . "aka" "name"

    "aka"  shift, and go to state 392

    $default  reduce using rule 595 (let_variable_name_with_pos_list)


State 313

  598 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  599                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  600 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options "end of expression"
  601                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  602                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  603                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr "end of expression"
  604                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 393
    ':'  shift, and go to state 394
    '&'  shift, and go to state 395

    $default  reduce using rule 593 (optional_ref)

    optional_ref  go to state 396


State 314

  615 global_let: kwd_let optional_shared optional_public_or_private_variable $@39 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 615 (global_let)


State 315

   95 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 95 (annotation_argument_value_list)


State 316

  723 type_declaration_no_options: "type" . '<' $@50 type_declaration '>' $@51

    '<'  shift, and go to state 397


State 317

  746 type_declaration_no_options: "array" . '<' $@55 type_declaration '>' $@56

    '<'  shift, and go to state 398


State 318

  749 type_declaration_no_options: "table" . '<' $@57 table_type_pair '>' $@58

    '<'  shift, and go to state 399


State 319

  724 type_declaration_no_options: "typedecl" . '(' expr ')'

    '('  shift, and go to state 400


State 320

  752 type_declaration_no_options: "iterator" . '<' $@59 type_declaration '>' $@60

    '<'  shift, and go to state 401


State 321

  742 type_declaration_no_options: "smart_ptr" . '<' $@53 type_declaration '>' $@54

    '<'  shift, and go to state 402


State 322

  662 basic_type_declaration: "bool" .

    $default  reduce using rule 662 (basic_type_declaration)


State 323

  682 basic_type_declaration: "void" .

    $default  reduce using rule 682 (basic_type_declaration)


State 324

  663 basic_type_declaration: "string" .

    $default  reduce using rule 663 (basic_type_declaration)


State 325

  698 auto_type_declaration: "auto" .
  699                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 403

    '('       [reduce using rule 698 (auto_type_declaration)]
    $default  reduce using rule 698 (auto_type_declaration)


State 326

  664 basic_type_declaration: "int" .

    $default  reduce using rule 664 (basic_type_declaration)


State 327

  668 basic_type_declaration: "int2" .

    $default  reduce using rule 668 (basic_type_declaration)


State 328

  669 basic_type_declaration: "int3" .

    $default  reduce using rule 669 (basic_type_declaration)


State 329

  670 basic_type_declaration: "int4" .

    $default  reduce using rule 670 (basic_type_declaration)


State 330

  671 basic_type_declaration: "uint" .

    $default  reduce using rule 671 (basic_type_declaration)


State 331

  688 basic_type_declaration: "bitfield" .
  708 bitfield_type_declaration: "bitfield" . '<' $@48 bitfield_bits '>' $@49

    '<'  shift, and go to state 404

    $default  reduce using rule 688 (basic_type_declaration)


State 332

  675 basic_type_declaration: "uint2" .

    $default  reduce using rule 675 (basic_type_declaration)


State 333

  676 basic_type_declaration: "uint3" .

    $default  reduce using rule 676 (basic_type_declaration)


State 334

  677 basic_type_declaration: "uint4" .

    $default  reduce using rule 677 (basic_type_declaration)


State 335

  678 basic_type_declaration: "float" .

    $default  reduce using rule 678 (basic_type_declaration)


State 336

  679 basic_type_declaration: "float2" .

    $default  reduce using rule 679 (basic_type_declaration)


State 337

  680 basic_type_declaration: "float3" .

    $default  reduce using rule 680 (basic_type_declaration)


State 338

  681 basic_type_declaration: "float4" .

    $default  reduce using rule 681 (basic_type_declaration)


State 339

  683 basic_type_declaration: "range" .

    $default  reduce using rule 683 (basic_type_declaration)


State 340

  684 basic_type_declaration: "urange" .

    $default  reduce using rule 684 (basic_type_declaration)


State 341

  685 basic_type_declaration: "range64" .

    $default  reduce using rule 685 (basic_type_declaration)


State 342

  686 basic_type_declaration: "urange64" .

    $default  reduce using rule 686 (basic_type_declaration)


State 343

  753 type_declaration_no_options: "block" .
  756                            | "block" . '<' $@61 type_declaration '>' $@62
  759                            | "block" . '<' $@63 optional_function_argument_list optional_function_type '>' $@64

    '<'  shift, and go to state 405

    $default  reduce using rule 753 (type_declaration_no_options)


State 344

  667 basic_type_declaration: "int64" .

    $default  reduce using rule 667 (basic_type_declaration)


State 345

  674 basic_type_declaration: "uint64" .

    $default  reduce using rule 674 (basic_type_declaration)


State 346

  687 basic_type_declaration: "double" .

    $default  reduce using rule 687 (basic_type_declaration)


State 347

  760 type_declaration_no_options: "function" .
  763                            | "function" . '<' $@65 type_declaration '>' $@66
  766                            | "function" . '<' $@67 optional_function_argument_list optional_function_type '>' $@68

    '<'  shift, and go to state 406

    $default  reduce using rule 760 (type_declaration_no_options)


State 348

  767 type_declaration_no_options: "lambda" .
  770                            | "lambda" . '<' $@69 type_declaration '>' $@70
  773                            | "lambda" . '<' $@71 optional_function_argument_list optional_function_type '>' $@72

    '<'  shift, and go to state 407

    $default  reduce using rule 767 (type_declaration_no_options)


State 349

  665 basic_type_declaration: "int8" .

    $default  reduce using rule 665 (basic_type_declaration)


State 350

  672 basic_type_declaration: "uint8" .

    $default  reduce using rule 672 (basic_type_declaration)


State 351

  666 basic_type_declaration: "int16" .

    $default  reduce using rule 666 (basic_type_declaration)


State 352

  673 basic_type_declaration: "uint16" .

    $default  reduce using rule 673 (basic_type_declaration)


State 353

  776 type_declaration_no_options: "tuple" . '<' $@73 tuple_type_list '>' $@74

    '<'  shift, and go to state 408


State 354

  779 type_declaration_no_options: "variant" . '<' $@75 variant_type_list '>' $@76

    '<'  shift, and go to state 409


State 355

  700 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 410


State 356

  725 type_declaration_no_options: '$' . name_in_namespace '(' optional_expr_list ')'
  727                            | '$' . name_in_namespace '<' $@52 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 411


State 357

  697 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 697 (structure_type_declaration)


State 358

  715 type_declaration_no_options: basic_type_declaration .

    $default  reduce using rule 715 (type_declaration_no_options)


State 359

  718 type_declaration_no_options: structure_type_declaration .

    $default  reduce using rule 718 (type_declaration_no_options)


State 360

  716 type_declaration_no_options: auto_type_declaration .

    $default  reduce using rule 716 (type_declaration_no_options)


State 361

  717 type_declaration_no_options: bitfield_type_declaration .

    $default  reduce using rule 717 (type_declaration_no_options)


State 362

  719 type_declaration_no_options: type_declaration_no_options . dim_list
  720                            | type_declaration_no_options . '[' ']'
  728                            | type_declaration_no_options . '-' '[' ']'
  729                            | type_declaration_no_options . "explicit"
  730                            | type_declaration_no_options . "const"
  731                            | type_declaration_no_options . '-' "const"
  732                            | type_declaration_no_options . '&'
  733                            | type_declaration_no_options . '-' '&'
  734                            | type_declaration_no_options . '#'
  735                            | type_declaration_no_options . "implicit"
  736                            | type_declaration_no_options . '-' '#'
  737                            | type_declaration_no_options . "==" "const"
  738                            | type_declaration_no_options . "==" '&'
  739                            | type_declaration_no_options . '?'
  743                            | type_declaration_no_options . "??"
  780 type_declaration: type_declaration_no_options .

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "??"        shift, and go to state 416
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    $default  reduce using rule 780 (type_declaration)

    dim_list  go to state 422


State 363

  624 single_alias: optional_public_or_private_alias "name" $@40 '=' type_declaration .
  781 type_declaration: type_declaration . '|' type_declaration_no_options
  782                 | type_declaration . '|' '#'

    '|'  shift, and go to state 423

    $default  reduce using rule 624 (single_alias)


State 364

  797 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 "name" $@86 "begin of code block" $@87 . bitfield_alias_bits $@88 "end of code block"

    $default  reduce using rule 703 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 424


State 365

  787 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 "name" $@78 "begin of code block" $@79 . tuple_alias_type_list $@80 "end of code block"

    $default  reduce using rule 573 (tuple_alias_type_list)

    tuple_alias_type_list  go to state 425


State 366

  792 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 "name" $@82 "begin of code block" $@83 . variant_alias_type_list $@84 "end of code block"

    $default  reduce using rule 579 (variant_alias_type_list)

    variant_alias_type_list  go to state 426


State 367

  190 function_name: "operator" "is" "name" .

    $default  reduce using rule 190 (function_name)


State 368

  191 function_name: "operator" "as" "name" .

    $default  reduce using rule 191 (function_name)


State 369

  184 function_name: "operator" "?." "name" .

    $default  reduce using rule 184 (function_name)


State 370

  179 function_name: "operator" "?[" ']' .

    $default  reduce using rule 179 (function_name)


State 371

  192 function_name: "operator" '?' "as" .
  193              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 427

    $default  reduce using rule 192 (function_name)


State 372

  182 function_name: "operator" '.' "name" .
  183              | "operator" '.' "name" . ":="

    ":="  shift, and go to state 428

    $default  reduce using rule 182 (function_name)


State 373

  178 function_name: "operator" '[' ']' .

    $default  reduce using rule 178 (function_name)


State 374

  566 function_argument_declaration: "$a" . '(' expr ')'

    '('  shift, and go to state 429


State 375

  130 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 130 (optional_function_argument_list)


State 376

  565 function_argument_declaration: optional_field_annotation . kwd_let_var_or_nothing variable_declaration

    "let"  shift, and go to state 430
    "var"  shift, and go to state 431

    $default  reduce using rule 306 (kwd_let_var_or_nothing)

    kwd_let_var_or_nothing  go to state 432


State 377

  567 function_argument_list: function_argument_declaration .

    $default  reduce using rule 567 (function_argument_list)


State 378

  131 optional_function_argument_list: '(' function_argument_list . ')'
  568 function_argument_list: function_argument_list . "end of expression" function_argument_declaration

    "end of expression"  shift, and go to state 433
    ')'                  shift, and go to state 434


State 379

  133 optional_function_type: ':' . type_declaration

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 362
    type_declaration             go to state 435


State 380

  223 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 223 (function_declaration_header)


State 381

  226 expression_block: "begin of code block" expressions . "end of code block"
  227                 | "begin of code block" expressions . "end of code block" "finally" "begin of code block" expressions "end of code block"
  253 expressions: expressions . expression_any
  254            | expressions . error

    error                             shift, and go to state 436
    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 439
    "if"                              shift, and go to state 440
    "static_if"                       shift, and go to state 441
    "for"                             shift, and go to state 442
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "return"                          shift, and go to state 449
    "null"                            shift, and go to state 450
    "break"                           shift, and go to state 451
    "try"                             shift, and go to state 452
    "table"                           shift, and go to state 453
    "delete"                          shift, and go to state 454
    "deref"                           shift, and go to state 455
    "with"                            shift, and go to state 456
    "assume"                          shift, and go to state 457
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 460
    "continue"                        shift, and go to state 461
    "pass"                            shift, and go to state 462
    "reinterpret"                     shift, and go to state 463
    "label"                           shift, and go to state 464
    "goto"                            shift, and go to state 465
    "unsafe"                          shift, and go to state 466
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "yield"                           shift, and go to state 473
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 476
    "@ <|"                            shift, and go to state 477
    "@@ <|"                           shift, and go to state 478
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 496
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    "end of code block"               shift, and go to state 500
    "end of expression"               shift, and go to state 501
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder             go to state 511
    expr_reader                go to state 512
    expression_label           go to state 513
    expression_goto            go to state 514
    if_or_static_if            go to state 515
    expression_if_one_liner    go to state 516
    expression_if_then_else    go to state 517
    expression_for_loop        go to state 518
    expression_unsafe          go to state 519
    expression_while_loop      go to state 520
    expression_with            go to state 521
    expression_with_alias      go to state 522
    expr_call_pipe             go to state 523
    expression_any             go to state 524
    expr_keyword               go to state 525
    expression_keyword         go to state 526
    expr_pipe                  go to state 527
    name_in_namespace          go to state 528
    expression_delete          go to state 529
    expr_new                   go to state 530
    expression_break           go to state 531
    expression_continue        go to state 532
    expression_return_no_pipe  go to state 533
    expression_return          go to state 534
    expression_yield_no_pipe   go to state 535
    expression_yield           go to state 536
    expression_try_catch       go to state 537
    kwd_let                    go to state 538
    expression_let             go to state 539
    expr_cast                  go to state 540
    expr_type_decl             go to state 541
    expr_type_info             go to state 542
    block_or_lambda            go to state 543
    expr_full_block            go to state 544
    expr_numeric_const         go to state 545
    expr_assign                go to state 546
    expr_assign_pipe           go to state 547
    expr_named_call            go to state 548
    expr_method_call           go to state 549
    func_addr_expr             go to state 550
    expr_field                 go to state 551
    expr_call                  go to state 552
    expr                       go to state 553
    expr_mtag                  go to state 554
    basic_type_declaration     go to state 555
    make_decl                  go to state 556
    make_struct_decl           go to state 557
    make_tuple_call            go to state 558
    make_dim_decl              go to state 559
    make_table_decl            go to state 560
    array_comprehension        go to state 561


State 382

  617 enum_list: enum_list . "end of expression"
  618          | enum_list . "name" "end of expression"
  619          | enum_list . "name" '=' expr "end of expression"
  636 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@42 enum_list . $@43 "end of code block"

    "name"               shift, and go to state 562
    "end of expression"  shift, and go to state 563

    $default  reduce using rule 635 ($@43)

    $@43  go to state 564


State 383

  639 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" . $@44 enum_list $@45 "end of code block"

    $default  reduce using rule 637 ($@44)

    $@44  go to state 565


State 384

  641 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 566


State 385

  644 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 644 (structure_name)


State 386

  653 optional_struct_variable_declaration_list: "begin of code block" . struct_variable_declaration_list "end of code block"

    $default  reduce using rule 556 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 567


State 387

  656 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@46 structure_name $@47 optional_struct_variable_declaration_list .

    $default  reduce using rule 656 (structure_declaration)


State 388

  607 global_variable_declaration_list: global_variable_declaration_list $@38 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 311
    "name"  shift, and go to state 312

    let_variable_name_with_pos_list  go to state 313
    let_variable_declaration         go to state 568


State 389

  543 optional_field_annotation: "[[" annotation_argument_list ']' . ']'

    ']'  shift, and go to state 569


State 390

  110 metadata_argument_list: metadata_argument_list '@' annotation_argument .

    $default  reduce using rule 110 (metadata_argument_list)


State 391

  596 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 574
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 392

  597 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 575


State 393

  598 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  599                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 576


State 394

  600 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options "end of expression"
  601                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  602                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr_pipe

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 577


State 395

  594 optional_ref: '&' .

    $default  reduce using rule 594 (optional_ref)


State 396

  603 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr "end of expression"
  604                         | let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 578
    ":="  shift, and go to state 579
    '='   shift, and go to state 580

    copy_or_move_or_clone  go to state 581


State 397

  723 type_declaration_no_options: "type" '<' . $@50 type_declaration '>' $@51

    $default  reduce using rule 721 ($@50)

    $@50  go to state 582


State 398

  746 type_declaration_no_options: "array" '<' . $@55 type_declaration '>' $@56

    $default  reduce using rule 744 ($@55)

    $@55  go to state 583


State 399

  749 type_declaration_no_options: "table" '<' . $@57 table_type_pair '>' $@58

    $default  reduce using rule 747 ($@57)

    $@57  go to state 584


State 400

  724 type_declaration_no_options: "typedecl" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 585
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 401

  752 type_declaration_no_options: "iterator" '<' . $@59 type_declaration '>' $@60

    $default  reduce using rule 750 ($@59)

    $@59  go to state 586


State 402

  742 type_declaration_no_options: "smart_ptr" '<' . $@53 type_declaration '>' $@54

    $default  reduce using rule 740 ($@53)

    $@53  go to state 587


State 403

  699 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 588


State 404

  708 bitfield_type_declaration: "bitfield" '<' . $@48 bitfield_bits '>' $@49

    $default  reduce using rule 706 ($@48)

    $@48  go to state 589


State 405

  756 type_declaration_no_options: "block" '<' . $@61 type_declaration '>' $@62
  759                            | "block" '<' . $@63 optional_function_argument_list optional_function_type '>' $@64

    ':'       reduce using rule 757 ($@63)
    '>'       reduce using rule 757 ($@63)
    '('       reduce using rule 757 ($@63)
    $default  reduce using rule 754 ($@61)

    $@61  go to state 590
    $@63  go to state 591


State 406

  763 type_declaration_no_options: "function" '<' . $@65 type_declaration '>' $@66
  766                            | "function" '<' . $@67 optional_function_argument_list optional_function_type '>' $@68

    ':'       reduce using rule 764 ($@67)
    '>'       reduce using rule 764 ($@67)
    '('       reduce using rule 764 ($@67)
    $default  reduce using rule 761 ($@65)

    $@65  go to state 592
    $@67  go to state 593


State 407

  770 type_declaration_no_options: "lambda" '<' . $@69 type_declaration '>' $@70
  773                            | "lambda" '<' . $@71 optional_function_argument_list optional_function_type '>' $@72

    ':'       reduce using rule 771 ($@71)
    '>'       reduce using rule 771 ($@71)
    '('       reduce using rule 771 ($@71)
    $default  reduce using rule 768 ($@69)

    $@69  go to state 594
    $@71  go to state 595


State 408

  776 type_declaration_no_options: "tuple" '<' . $@73 tuple_type_list '>' $@74

    $default  reduce using rule 774 ($@73)

    $@73  go to state 596


State 409

  779 type_declaration_no_options: "variant" '<' . $@75 variant_type_list '>' $@76

    $default  reduce using rule 777 ($@75)

    $@75  go to state 597


State 410

  700 auto_type_declaration: "$t" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 598
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 411

  725 type_declaration_no_options: '$' name_in_namespace . '(' optional_expr_list ')'
  727                            | '$' name_in_namespace . '<' $@52 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    '<'  shift, and go to state 599
    '('  shift, and go to state 600


State 412

  730 type_declaration_no_options: type_declaration_no_options "const" .

    $default  reduce using rule 730 (type_declaration_no_options)


State 413

  735 type_declaration_no_options: type_declaration_no_options "implicit" .

    $default  reduce using rule 735 (type_declaration_no_options)


State 414

  729 type_declaration_no_options: type_declaration_no_options "explicit" .

    $default  reduce using rule 729 (type_declaration_no_options)


State 415

  737 type_declaration_no_options: type_declaration_no_options "==" . "const"
  738                            | type_declaration_no_options "==" . '&'

    "const"  shift, and go to state 601
    '&'      shift, and go to state 602


State 416

  743 type_declaration_no_options: type_declaration_no_options "??" .

    $default  reduce using rule 743 (type_declaration_no_options)


State 417

  739 type_declaration_no_options: type_declaration_no_options '?' .

    $default  reduce using rule 739 (type_declaration_no_options)


State 418

  732 type_declaration_no_options: type_declaration_no_options '&' .

    $default  reduce using rule 732 (type_declaration_no_options)


State 419

  728 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  731                            | type_declaration_no_options '-' . "const"
  733                            | type_declaration_no_options '-' . '&'
  736                            | type_declaration_no_options '-' . '#'

    "const"  shift, and go to state 603
    '&'      shift, and go to state 604
    '['      shift, and go to state 605
    '#'      shift, and go to state 606


State 420

  713 dim_list: '[' . expr ']'
  720 type_declaration_no_options: type_declaration_no_options '[' . ']'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    ']'                               shift, and go to state 607
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 608
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 421

  734 type_declaration_no_options: type_declaration_no_options '#' .

    $default  reduce using rule 734 (type_declaration_no_options)


State 422

  714 dim_list: dim_list . '[' expr ']'
  719 type_declaration_no_options: type_declaration_no_options dim_list .

    '['  shift, and go to state 609

    '['       [reduce using rule 719 (type_declaration_no_options)]
    $default  reduce using rule 719 (type_declaration_no_options)


State 423

  781 type_declaration: type_declaration '|' . type_declaration_no_options
  782                 | type_declaration '|' . '#'

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356
    '#'          shift, and go to state 610

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 611


State 424

  704 bitfield_alias_bits: bitfield_alias_bits . "end of expression"
  705                    | bitfield_alias_bits . "name" "end of expression"
  797 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 "name" $@86 "begin of code block" $@87 bitfield_alias_bits . $@88 "end of code block"

    "name"               shift, and go to state 612
    "end of expression"  shift, and go to state 613

    $default  reduce using rule 796 ($@88)

    $@88  go to state 614


State 425

  574 tuple_alias_type_list: tuple_alias_type_list . c_or_s
  575                      | tuple_alias_type_list . tuple_type c_or_s
  787 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 "name" $@78 "begin of code block" $@79 tuple_alias_type_list . $@80 "end of code block"

    "type"               shift, and go to state 316
    "array"              shift, and go to state 317
    "table"              shift, and go to state 318
    "typedecl"           shift, and go to state 319
    "iterator"           shift, and go to state 320
    "smart_ptr"          shift, and go to state 321
    "bool"               shift, and go to state 322
    "void"               shift, and go to state 323
    "string"             shift, and go to state 324
    "auto"               shift, and go to state 325
    "int"                shift, and go to state 326
    "int2"               shift, and go to state 327
    "int3"               shift, and go to state 328
    "int4"               shift, and go to state 329
    "uint"               shift, and go to state 330
    "bitfield"           shift, and go to state 331
    "uint2"              shift, and go to state 332
    "uint3"              shift, and go to state 333
    "uint4"              shift, and go to state 334
    "float"              shift, and go to state 335
    "float2"             shift, and go to state 336
    "float3"             shift, and go to state 337
    "float4"             shift, and go to state 338
    "range"              shift, and go to state 339
    "urange"             shift, and go to state 340
    "range64"            shift, and go to state 341
    "urange64"           shift, and go to state 342
    "block"              shift, and go to state 343
    "int64"              shift, and go to state 344
    "uint64"             shift, and go to state 345
    "double"             shift, and go to state 346
    "function"           shift, and go to state 347
    "lambda"             shift, and go to state 348
    "int8"               shift, and go to state 349
    "uint8"              shift, and go to state 350
    "int16"              shift, and go to state 351
    "uint16"             shift, and go to state 352
    "tuple"              shift, and go to state 353
    "variant"            shift, and go to state 354
    "::"                 shift, and go to state 58
    "$t"                 shift, and go to state 355
    "name"               shift, and go to state 615
    "end of expression"  shift, and go to state 616
    ','                  shift, and go to state 617
    '$'                  shift, and go to state 356

    $default  reduce using rule 786 ($@80)

    name_in_namespace            go to state 357
    tuple_type                   go to state 618
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    c_or_s                       go to state 619
    type_declaration_no_options  go to state 362
    type_declaration             go to state 620
    $@80                         go to state 621


State 426

  580 variant_alias_type_list: variant_alias_type_list . c_or_s
  581                        | variant_alias_type_list . variant_type c_or_s
  792 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 "name" $@82 "begin of code block" $@83 variant_alias_type_list . $@84 "end of code block"

    "name"               shift, and go to state 622
    "end of expression"  shift, and go to state 616
    ','                  shift, and go to state 617

    $default  reduce using rule 791 ($@84)

    variant_type  go to state 623
    c_or_s        go to state 624
    $@84          go to state 625


State 427

  193 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 193 (function_name)


State 428

  183 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 183 (function_name)


State 429

  566 function_argument_declaration: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 626
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 430

  304 kwd_let_var_or_nothing: "let" .

    $default  reduce using rule 304 (kwd_let_var_or_nothing)


State 431

  305 kwd_let_var_or_nothing: "var" .

    $default  reduce using rule 305 (kwd_let_var_or_nothing)


State 432

  565 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing . variable_declaration

    "$i"    shift, and go to state 627
    "name"  shift, and go to state 628

    variable_declaration         go to state 629
    variable_name_with_pos_list  go to state 630


State 433

  568 function_argument_list: function_argument_list "end of expression" . function_argument_declaration

    "$a"  shift, and go to state 374
    "[["  shift, and go to state 223
    '@'   shift, and go to state 224

    $default  reduce using rule 542 (optional_field_annotation)

    metadata_argument_list         go to state 225
    optional_field_annotation      go to state 376
    function_argument_declaration  go to state 631


State 434

  131 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 131 (optional_function_argument_list)


State 435

  133 optional_function_type: ':' type_declaration .
  781 type_declaration: type_declaration . '|' type_declaration_no_options
  782                 | type_declaration . '|' '#'

    '|'  shift, and go to state 423

    $default  reduce using rule 133 (optional_function_type)


State 436

  254 expressions: expressions error .

    $default  reduce using rule 254 (expressions)


State 437

  845 make_struct_decl: "struct" . '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 632


State 438

  848 make_struct_decl: "class" . '<' $@91 type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 633


State 439

   84 expression_while_loop: "while" . expr expression_block

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 634
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 440

   68 if_or_static_if: "if" .

    $default  reduce using rule 68 (if_or_static_if)


State 441

   69 if_or_static_if: "static_if" .

    $default  reduce using rule 69 (if_or_static_if)


State 442

   82 expression_for_loop: "for" . $@5 variable_name_with_pos_list "in" expr_list expression_block

    $default  reduce using rule 81 ($@5)

    $@5  go to state 635


State 443

  447 expr: "true" .

    $default  reduce using rule 447 (expr)


State 444

  448 expr: "false" .

    $default  reduce using rule 448 (expr)


State 445

  284 expr_new: "new" . new_type_declaration
  285         | "new" . new_type_declaration '(' use_initializer ')'
  286         | "new" . new_type_declaration '(' expr_list ')'
  287         | "new" . new_type_declaration '(' make_struct_single ')'
  288         | "new" . new_type_declaration '(' "uninitialized" make_struct_single ')'
  289         | "new" . make_decl

    "struct"               shift, and go to state 437
    "class"                shift, and go to state 438
    "array"                shift, and go to state 448
    "table"                shift, and go to state 453
    "fixed_array"          shift, and go to state 467
    "default"              shift, and go to state 468
    "tuple"                shift, and go to state 470
    "variant"              shift, and go to state 471
    "::"                   shift, and go to state 58
    "[["                   shift, and go to state 486
    "[{"                   shift, and go to state 487
    "{{"                   shift, and go to state 488
    "name"                 shift, and go to state 59
    "begin of code block"  shift, and go to state 499
    '<'                    shift, and go to state 636
    '['                    shift, and go to state 507

    name_in_namespace           go to state 357
    new_type_declaration        go to state 637
    structure_type_declaration  go to state 638
    make_decl                   go to state 639
    make_struct_decl            go to state 557
    make_tuple_call             go to state 558
    make_dim_decl               go to state 559
    make_table_decl             go to state 560
    array_comprehension         go to state 561


State 446

  335 expr_type_info: "typeinfo" . '(' name_in_namespace expr ')'
  336               | "typeinfo" . '(' name_in_namespace '<' "name" '>' expr ')'
  337               | "typeinfo" . '(' name_in_namespace '<' "name" c_or_s "name" '>' expr ')'
  338               | "typeinfo" . name_in_namespace '(' expr ')'
  339               | "typeinfo" . name_in_namespace '<' "name" '>' '(' expr ')'
  340               | "typeinfo" . name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr ')'

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59
    '('     shift, and go to state 640

    name_in_namespace  go to state 641


State 447

  334 expr_type_decl: "type" . '<' $@20 type_declaration '>' $@21

    '<'  shift, and go to state 642


State 448

  871 make_dim_decl: "array" . "struct" '<' $@99 type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'
  874              | "array" . "tuple" '<' $@101 type_declaration_no_options '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'
  877              | "array" . "variant" '<' $@103 type_declaration_no_options '>' $@104 '(' make_variant_dim ')'
  878              | "array" . '(' expr_list optional_comma ')'
  881              | "array" . '<' $@105 type_declaration_no_options '>' $@106 '(' optional_expr_list ')'

    "struct"   shift, and go to state 643
    "tuple"    shift, and go to state 644
    "variant"  shift, and go to state 645
    '<'        shift, and go to state 646
    '('        shift, and go to state 647


State 449

  292 expression_return_no_pipe: "return" .
  293                          | "return" . expr_list
  294                          | "return" . "<-" expr_list
  296 expression_return: "return" . expr_pipe
  297                  | "return" . "<-" expr_pipe

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "<-"                              shift, and go to state 648
    "$ <|"                            shift, and go to state 476
    "@ <|"                            shift, and go to state 477
    "@@ <|"                           shift, and go to state 478
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    $default  reduce using rule 292 (expression_return_no_pipe)

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 523
    expression_keyword      go to state 526
    expr_pipe               go to state 649
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 650
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign             go to state 651
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 652
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 450

  441 expr: "null" .

    $default  reduce using rule 441 (expr)


State 451

  290 expression_break: "break" .

    $default  reduce using rule 290 (expression_break)


State 452

  303 expression_try_catch: "try" . expression_block "recover" expression_block

    "begin of code block"  shift, and go to state 291

    expression_block  go to state 653


State 453

  892 make_table_decl: "table" . '(' optional_expr_map_tuple_list ')'
  893                | "table" . '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  894                | "table" . '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    '<'  shift, and go to state 654
    '('  shift, and go to state 655


State 454

  278 expression_delete: "delete" . expr
  279                  | "delete" . "explicit" expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "explicit"                        shift, and go to state 656
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 657
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 455

  492 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 658


State 456

   85 expression_with: "with" . expr expression_block

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 659
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 457

   87 expression_with_alias: "assume" . "name" '=' $@6 expr

    "name"  shift, and go to state 660


State 458

  325 expr_cast: "cast" . '<' $@14 type_declaration_no_options '>' $@15 expr

    '<'  shift, and go to state 661


State 459

  328 expr_cast: "upcast" . '<' $@16 type_declaration_no_options '>' $@17 expr

    '<'  shift, and go to state 662


State 460

  493 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 663


State 461

  291 expression_continue: "continue" .

    $default  reduce using rule 291 (expression_continue)


State 462

  251 expression_any: "pass" . "end of expression"

    "end of expression"  shift, and go to state 664


State 463

  331 expr_cast: "reinterpret" . '<' $@18 type_declaration_no_options '>' $@19 expr

    '<'  shift, and go to state 665


State 464

   60 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 666


State 465

   61 expression_goto: "goto" . "label" "integer constant"
   62                | "goto" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "label"                           shift, and go to state 667
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 668
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 466

   83 expression_unsafe: "unsafe" . expression_block
  524 expr: "unsafe" . '(' expr ')'

    "begin of code block"  shift, and go to state 291
    '('                    shift, and go to state 669

    expression_block  go to state 670


State 467

  882 make_dim_decl: "fixed_array" . '(' expr_list optional_comma ')'
  885              | "fixed_array" . '<' $@107 type_declaration_no_options '>' $@108 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 671
    '('  shift, and go to state 672


State 468

  854 make_struct_decl: "default" . '<' $@95 type_declaration_no_options '>' $@96 use_initializer

    '<'  shift, and go to state 673


State 469

  688 basic_type_declaration: "bitfield" .

    $default  reduce using rule 688 (basic_type_declaration)


State 470

  860 make_tuple_call: "tuple" . '(' expr_list optional_comma ')'
  863                | "tuple" . '<' $@97 type_declaration_no_options '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 674
    '('  shift, and go to state 675


State 471

  851 make_struct_decl: "variant" . '<' $@93 type_declaration_no_options '>' $@94 '(' make_variant_dim ')'

    '<'  shift, and go to state 676


State 472

  230 expr_call_pipe: "generator" . '<' type_declaration_no_options '>' optional_capture_list expr_full_block_assumed_piped
  494 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  495     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 677


State 473

  298 expression_yield_no_pipe: "yield" . expr
  299                         | "yield" . "<-" expr
  301 expression_yield: "yield" . expr_pipe
  302                 | "yield" . "<-" expr_pipe

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "<-"                              shift, and go to state 678
    "$ <|"                            shift, and go to state 476
    "@ <|"                            shift, and go to state 477
    "@@ <|"                           shift, and go to state 478
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 523
    expression_keyword      go to state 526
    expr_pipe               go to state 679
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign             go to state 651
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 680
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 474

  477 expr: "++" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 681
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 475

  478 expr: "--" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 682
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 476

  273 expr_pipe: "$ <|" . expr_block

    "begin of code block"  shift, and go to state 291
    '$'                    shift, and go to state 509
    '@'                    shift, and go to state 683

    expression_block  go to state 684
    block_or_lambda   go to state 685
    expr_block        go to state 686


State 477

  271 expr_pipe: "@ <|" . expr_block

    "begin of code block"  shift, and go to state 291
    '$'                    shift, and go to state 509
    '@'                    shift, and go to state 683

    expression_block  go to state 684
    block_or_lambda   go to state 685
    expr_block        go to state 687


State 478

  272 expr_pipe: "@@ <|" . expr_block

    "begin of code block"  shift, and go to state 291
    '$'                    shift, and go to state 509
    '@'                    shift, and go to state 683

    expression_block  go to state 684
    block_or_lambda   go to state 685
    expr_block        go to state 688


State 479

  526 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 689


State 480

  527 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 690


State 481

  528 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 691


State 482

  529 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 692


State 483

  530 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 693


State 484

  532 expr_mtag: "$c" . '(' expr ')' '(' ')'
  533          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 694


State 485

  531 expr_mtag: "..." .

    $default  reduce using rule 531 (expr_mtag)


State 486

  837 make_struct_decl: "[[" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  838                 | "[[" . type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  839                 | "[[" . type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  840                 | "[[" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  867 make_dim_decl: "[[" . type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  901 array_comprehension: "[[" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']'

    "for"        shift, and go to state 695
    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 696


State 487

  841 make_struct_decl: "[{" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  842                 | "[{" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  868 make_dim_decl: "[{" . type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr
  902 array_comprehension: "[{" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "for"        shift, and go to state 697
    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 698


State 488

  891 make_table_decl: "{{" . make_table optional_trailing_semicolon_cur_cur
  904 array_comprehension: "{{" . "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "for"                             shift, and go to state 699
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 700
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_map_tuple          go to state 701
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table              go to state 702
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 489

  364 expr_numeric_const: "integer constant" .

    $default  reduce using rule 364 (expr_numeric_const)


State 490

  366 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 366 (expr_numeric_const)


State 491

  365 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 365 (expr_numeric_const)


State 492

  367 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 367 (expr_numeric_const)


State 493

  368 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 368 (expr_numeric_const)


State 494

  369 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 369 (expr_numeric_const)


State 495

  370 expr_numeric_const: "double constant" .

    $default  reduce using rule 370 (expr_numeric_const)


State 496

  255 expr_keyword: "keyword" . expr expression_block
  266 expression_keyword: "keyword" . '<' $@8 type_declaration_no_options_list '>' $@9 expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '<'                               shift, and go to state 703
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 704
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 497

  269 expression_keyword: "type function" . '<' $@10 type_declaration_no_options_list '>' $@11 optional_expr_list_in_braces

    '<'  shift, and go to state 705


State 498

   37 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 34 (string_builder_body)

    string_builder_body  go to state 706


State 499

  890 make_table_decl: "begin of code block" . optional_expr_map_tuple_list "end of code block"
  903 array_comprehension: "begin of code block" . "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "for"                             shift, and go to state 707
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    $default  reduce using rule 260 (optional_expr_map_tuple_list)

    string_builder                go to state 511
    expr_reader                   go to state 512
    optional_expr_map_tuple_list  go to state 708
    expression_keyword            go to state 573
    name_in_namespace             go to state 528
    expr_new                      go to state 530
    expr_cast                     go to state 540
    expr_type_decl                go to state 541
    expr_type_info                go to state 542
    block_or_lambda               go to state 543
    expr_full_block               go to state 544
    expr_numeric_const            go to state 545
    expr_named_call               go to state 548
    expr_method_call              go to state 549
    func_addr_expr                go to state 550
    expr_field                    go to state 551
    expr_call                     go to state 552
    expr                          go to state 700
    expr_mtag                     go to state 554
    basic_type_declaration        go to state 555
    make_decl                     go to state 556
    make_struct_decl              go to state 557
    make_map_tuple                go to state 709
    make_tuple_call               go to state 558
    make_dim_decl                 go to state 559
    expr_map_tuple_list           go to state 710
    make_table_decl               go to state 560
    array_comprehension           go to state 561


State 500

  226 expression_block: "begin of code block" expressions "end of code block" .
  227                 | "begin of code block" expressions "end of code block" . "finally" "begin of code block" expressions "end of code block"

    "finally"  shift, and go to state 711

    $default  reduce using rule 226 (expression_block)


State 501

  231 expression_any: "end of expression" .

    $default  reduce using rule 231 (expression_any)


State 502

  454 expr: '-' . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 712
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 503

  453 expr: '+' . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 713
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 504

  491 expr: '*' . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 714
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 505

  452 expr: '~' . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 715
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 506

  451 expr: '!' . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 716
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 507

  866 make_dim_decl: '[' . optional_expr_list ']'
  899 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  900                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "for"                             shift, and go to state 717
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "iterator"                        shift, and go to state 718
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    $default  reduce using rule 256 (optional_expr_list)

    string_builder          go to state 511
    expr_reader             go to state 512
    optional_expr_list      go to state 719
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 720
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 721
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 508

  481 expr: '(' . expr_list optional_comma ')'
  482     | '(' . make_struct_single ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "$f"                              shift, and go to state 722
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 723
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 724
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 721
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_fields      go to state 725
    make_struct_single      go to state 726
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 509

  346 block_or_lambda: '$' .

    $default  reduce using rule 346 (block_or_lambda)


State 510

  347 block_or_lambda: '@' .
  348                | '@' . '@'
  417 func_addr_expr: '@' . '@' func_addr_name
  420               | '@' . '@' '<' $@23 type_declaration_no_options '>' $@24 func_addr_name
  423               | '@' . '@' '<' $@25 optional_function_argument_list optional_function_type '>' $@26 func_addr_name
  541 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 727

    $default  reduce using rule 347 (block_or_lambda)


State 511

  445 expr: string_builder .

    $default  reduce using rule 445 (expr)


State 512

  444 expr: expr_reader .

    $default  reduce using rule 444 (expr)


State 513

  249 expression_any: expression_label . "end of expression"

    "end of expression"  shift, and go to state 728


State 514

  250 expression_any: expression_goto . "end of expression"

    "end of expression"  shift, and go to state 729


State 515

   78 expression_if_then_else: if_or_static_if . expr expression_block expression_else

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 730
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 516

   80 expression_if_then_else: expression_if_one_liner . "if" $@4 expr expression_else_one_liner "end of expression"

    "if"  shift, and go to state 731


State 517

  247 expression_any: expression_if_then_else .

    $default  reduce using rule 247 (expression_any)


State 518

  242 expression_any: expression_for_loop .

    $default  reduce using rule 242 (expression_any)


State 519

  239 expression_any: expression_unsafe .

    $default  reduce using rule 239 (expression_any)


State 520

  238 expression_any: expression_while_loop .

    $default  reduce using rule 238 (expression_any)


State 521

  240 expression_any: expression_with .

    $default  reduce using rule 240 (expression_any)


State 522

  241 expression_any: expression_with_alias .

    $default  reduce using rule 241 (expression_any)


State 523

  274 expr_pipe: expr_call_pipe .

    $default  reduce using rule 274 (expr_pipe)


State 524

  253 expressions: expressions expression_any .

    $default  reduce using rule 253 (expressions)


State 525

  233 expression_any: expr_keyword .

    $default  reduce using rule 233 (expression_any)


State 526

  229 expr_call_pipe: expression_keyword . expr_full_block_assumed_piped
  525 expr: expression_keyword .

    '$'  shift, and go to state 509
    '@'  shift, and go to state 683

    '$'       [reduce using rule 525 (expr)]
    '@'       [reduce using rule 525 (expr)]
    $default  reduce using rule 525 (expr)

    block_or_lambda                go to state 732
    expr_full_block_assumed_piped  go to state 733


State 527

  232 expression_any: expr_pipe .

    $default  reduce using rule 232 (expression_any)


State 528

  411 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  412                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  434 expr_call: name_in_namespace . '(' ')'
  435          | name_in_namespace . '(' "uninitialized" ')'
  436          | name_in_namespace . '(' make_struct_single ')'
  437          | name_in_namespace . '(' "uninitialized" make_struct_single ')'
  438          | name_in_namespace . '(' expr_list ')'
  442 expr: name_in_namespace .
  523     | name_in_namespace . "name"

    "name"  shift, and go to state 734
    '('     shift, and go to state 735

    "name"    [reduce using rule 442 (expr)]
    '('       [reduce using rule 442 (expr)]
    $default  reduce using rule 442 (expr)


State 529

  236 expression_any: expression_delete . "end of expression"

    "end of expression"  shift, and go to state 736


State 530

  516 expr: expr_new .

    $default  reduce using rule 516 (expr)


State 531

   76 expression_if_one_liner: expression_break .
  243 expression_any: expression_break . "end of expression"

    "end of expression"  shift, and go to state 737

    $default  reduce using rule 76 (expression_if_one_liner)


State 532

   77 expression_if_one_liner: expression_continue .
  244 expression_any: expression_continue . "end of expression"

    "end of expression"  shift, and go to state 738

    $default  reduce using rule 77 (expression_if_one_liner)


State 533

   74 expression_if_one_liner: expression_return_no_pipe .
  295 expression_return: expression_return_no_pipe . "end of expression"

    "end of expression"  shift, and go to state 739

    $default  reduce using rule 74 (expression_if_one_liner)


State 534

  245 expression_any: expression_return .

    $default  reduce using rule 245 (expression_any)


State 535

   75 expression_if_one_liner: expression_yield_no_pipe .
  300 expression_yield: expression_yield_no_pipe . "end of expression"

    "end of expression"  shift, and go to state 740

    $default  reduce using rule 75 (expression_if_one_liner)


State 536

  246 expression_any: expression_yield .

    $default  reduce using rule 246 (expression_any)


State 537

  248 expression_any: expression_try_catch .

    $default  reduce using rule 248 (expression_any)


State 538

  321 expression_let: kwd_let . optional_in_scope let_variable_declaration
  322               | kwd_let . optional_in_scope tuple_expansion_variable_declaration

    "inscope"  shift, and go to state 741

    $default  reduce using rule 310 (optional_in_scope)

    optional_in_scope  go to state 742


State 539

  237 expression_any: expression_let .

    $default  reduce using rule 237 (expression_any)


State 540

  515 expr: expr_cast .

    $default  reduce using rule 515 (expr)


State 541

  514 expr: expr_type_decl .

    $default  reduce using rule 514 (expr)


State 542

  513 expr: expr_type_info .

    $default  reduce using rule 513 (expr)


State 543

  361 expr_full_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 15

    $default  reduce using rule 127 (optional_annotation_list)

    optional_annotation_list  go to state 743


State 544

  519 expr: expr_full_block .

    $default  reduce using rule 519 (expr)


State 545

  443 expr: expr_numeric_const .

    $default  reduce using rule 443 (expr)


State 546

  235 expression_any: expr_assign . "end of expression"
  270 expr_pipe: expr_assign . " <|" expr_block

    " <|"                shift, and go to state 744
    "end of expression"  shift, and go to state 745


State 547

  234 expression_any: expr_assign_pipe .

    $default  reduce using rule 234 (expression_any)


State 548

  518 expr: expr_named_call .

    $default  reduce using rule 518 (expr)


State 549

  517 expr: expr_method_call .

    $default  reduce using rule 517 (expr)


State 550

  489 expr: func_addr_expr .

    $default  reduce using rule 489 (expr)


State 551

  449 expr: expr_field .

    $default  reduce using rule 449 (expr)


State 552

  490 expr: expr_call .

    $default  reduce using rule 490 (expr)


State 553

   73 expression_if_one_liner: expr .
  228 expr_call_pipe: expr . expr_full_block_assumed_piped
  371 expr_assign: expr .
  372            | expr . '=' expr
  373            | expr . "<-" expr
  374            | expr . ":=" expr
  375            | expr . "&=" expr
  376            | expr . "|=" expr
  377            | expr . "^=" expr
  378            | expr . "&&=" expr
  379            | expr . "||=" expr
  380            | expr . "^^=" expr
  381            | expr . "+=" expr
  382            | expr . "-=" expr
  383            | expr . "*=" expr
  384            | expr . "/=" expr
  385            | expr . "%=" expr
  386            | expr . "<<=" expr
  387            | expr . ">>=" expr
  388            | expr . "<<<=" expr
  389            | expr . ">>>=" expr
  394 expr_assign_pipe: expr . '=' expr_assign_pipe_right
  395                 | expr . "<-" expr_assign_pipe_right
  396                 | expr . "&=" expr_assign_pipe_right
  397                 | expr . "|=" expr_assign_pipe_right
  398                 | expr . "^=" expr_assign_pipe_right
  399                 | expr . "&&=" expr_assign_pipe_right
  400                 | expr . "||=" expr_assign_pipe_right
  401                 | expr . "^^=" expr_assign_pipe_right
  402                 | expr . "+=" expr_assign_pipe_right
  403                 | expr . "-=" expr_assign_pipe_right
  404                 | expr . "*=" expr_assign_pipe_right
  405                 | expr . "/=" expr_assign_pipe_right
  406                 | expr . "%=" expr_assign_pipe_right
  407                 | expr . "<<=" expr_assign_pipe_right
  408                 | expr . ">>=" expr_assign_pipe_right
  409                 | expr . "<<<=" expr_assign_pipe_right
  410                 | expr . ">>>=" expr_assign_pipe_right
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 746
    "as"    shift, and go to state 747
    "+="    shift, and go to state 748
    "-="    shift, and go to state 749
    "/="    shift, and go to state 750
    "*="    shift, and go to state 751
    "%="    shift, and go to state 752
    "&="    shift, and go to state 753
    "|="    shift, and go to state 754
    "^="    shift, and go to state 755
    "<<"    shift, and go to state 756
    ">>"    shift, and go to state 757
    "++"    shift, and go to state 758
    "--"    shift, and go to state 759
    "<="    shift, and go to state 760
    "<<="   shift, and go to state 761
    ">>="   shift, and go to state 762
    ">="    shift, and go to state 763
    "=="    shift, and go to state 764
    "!="    shift, and go to state 765
    "->"    shift, and go to state 766
    "<-"    shift, and go to state 767
    "??"    shift, and go to state 768
    "?."    shift, and go to state 769
    "?["    shift, and go to state 770
    "<|"    shift, and go to state 771
    "|>"    shift, and go to state 772
    ":="    shift, and go to state 773
    "<<<"   shift, and go to state 774
    ">>>"   shift, and go to state 775
    "<<<="  shift, and go to state 776
    ">>>="  shift, and go to state 777
    "&&"    shift, and go to state 778
    "||"    shift, and go to state 779
    "^^"    shift, and go to state 780
    "&&="   shift, and go to state 781
    "||="   shift, and go to state 782
    "^^="   shift, and go to state 783
    ".."    shift, and go to state 784
    '='     shift, and go to state 785
    '?'     shift, and go to state 786
    '|'     shift, and go to state 787
    '^'     shift, and go to state 788
    '&'     shift, and go to state 789
    '<'     shift, and go to state 790
    '>'     shift, and go to state 791
    '-'     shift, and go to state 792
    '+'     shift, and go to state 793
    '*'     shift, and go to state 794
    '/'     shift, and go to state 795
    '%'     shift, and go to state 796
    '.'     shift, and go to state 797
    '['     shift, and go to state 798
    '$'     shift, and go to state 509
    '@'     shift, and go to state 683

    "if"      reduce using rule 73 (expression_if_one_liner)
    $default  reduce using rule 371 (expr_assign)

    block_or_lambda                go to state 732
    expr_full_block_assumed_piped  go to state 799


State 554

  450 expr: expr_mtag .

    $default  reduce using rule 450 (expr)


State 555

  439 expr_call: basic_type_declaration . '(' ')'
  440          | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 800


State 556

  446 expr: make_decl .

    $default  reduce using rule 446 (expr)


State 557

  798 make_decl: make_struct_decl .

    $default  reduce using rule 798 (make_decl)


State 558

  802 make_decl: make_tuple_call .

    $default  reduce using rule 802 (make_decl)


State 559

  799 make_decl: make_dim_decl .

    $default  reduce using rule 799 (make_decl)


State 560

  800 make_decl: make_table_decl .

    $default  reduce using rule 800 (make_decl)


State 561

  801 make_decl: array_comprehension .

    $default  reduce using rule 801 (make_decl)


State 562

  618 enum_list: enum_list "name" . "end of expression"
  619          | enum_list "name" . '=' expr "end of expression"

    "end of expression"  shift, and go to state 801
    '='                  shift, and go to state 802


State 563

  617 enum_list: enum_list "end of expression" .

    $default  reduce using rule 617 (enum_list)


State 564

  636 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@42 enum_list $@43 . "end of code block"

    "end of code block"  shift, and go to state 803


State 565

  639 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@44 . enum_list $@45 "end of code block"

    $default  reduce using rule 616 (enum_list)

    enum_list  go to state 804


State 566

  641 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 641 (optional_structure_parent)


State 567

  557 struct_variable_declaration_list: struct_variable_declaration_list . "end of expression"
  559                                 | struct_variable_declaration_list . $@35 structure_variable_declaration "end of expression"
  561                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@36 function_declaration_header "end of expression"
  563                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@37 function_declaration_header expression_block
  564                                 | struct_variable_declaration_list . '[' annotation_list ']' "end of expression"
  653 optional_struct_variable_declaration_list: "begin of code block" struct_variable_declaration_list . "end of code block"

    "end of code block"  shift, and go to state 805
    "end of expression"  shift, and go to state 806
    '['                  shift, and go to state 807

    "def"     reduce using rule 127 (optional_annotation_list)
    $default  reduce using rule 558 ($@35)

    optional_annotation_list  go to state 808
    $@35                      go to state 809


State 568

  607 global_variable_declaration_list: global_variable_declaration_list $@38 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 607 (global_variable_declaration_list)


State 569

  543 optional_field_annotation: "[[" annotation_argument_list ']' ']' .

    $default  reduce using rule 543 (optional_field_annotation)


State 570

  524 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 669


State 571

  494 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  495     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 810


State 572

  266 expression_keyword: "keyword" . '<' $@8 type_declaration_no_options_list '>' $@9 expr

    '<'  shift, and go to state 703


State 573

  525 expr: expression_keyword .

    $default  reduce using rule 525 (expr)


State 574

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'
  596 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798
    ')'    shift, and go to state 811


State 575

  597 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 597 (let_variable_name_with_pos_list)


State 576

  598 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  599                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 812

    $default  reduce using rule 598 (let_variable_name_with_pos_list)


State 577

  600 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . "end of expression"
  601                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"
  602                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr_pipe
  719 type_declaration_no_options: type_declaration_no_options . dim_list
  720                            | type_declaration_no_options . '[' ']'
  728                            | type_declaration_no_options . '-' '[' ']'
  729                            | type_declaration_no_options . "explicit"
  730                            | type_declaration_no_options . "const"
  731                            | type_declaration_no_options . '-' "const"
  732                            | type_declaration_no_options . '&'
  733                            | type_declaration_no_options . '-' '&'
  734                            | type_declaration_no_options . '#'
  735                            | type_declaration_no_options . "implicit"
  736                            | type_declaration_no_options . '-' '#'
  737                            | type_declaration_no_options . "==" "const"
  738                            | type_declaration_no_options . "==" '&'
  739                            | type_declaration_no_options . '?'
  743                            | type_declaration_no_options . "??"

    "const"              shift, and go to state 412
    "implicit"           shift, and go to state 413
    "explicit"           shift, and go to state 414
    "=="                 shift, and go to state 415
    "<-"                 shift, and go to state 578
    "??"                 shift, and go to state 416
    ":="                 shift, and go to state 579
    "end of expression"  shift, and go to state 813
    '='                  shift, and go to state 580
    '?'                  shift, and go to state 417
    '&'                  shift, and go to state 418
    '-'                  shift, and go to state 419
    '['                  shift, and go to state 420
    '#'                  shift, and go to state 421

    copy_or_move_or_clone  go to state 814
    dim_list               go to state 422


State 578

  591 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 591 (copy_or_move_or_clone)


State 579

  592 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 592 (copy_or_move_or_clone)


State 580

  590 copy_or_move_or_clone: '=' .

    $default  reduce using rule 590 (copy_or_move_or_clone)


State 581

  603 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr "end of expression"
  604                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 476
    "@ <|"                            shift, and go to state 477
    "@@ <|"                           shift, and go to state 478
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 523
    expression_keyword      go to state 526
    expr_pipe               go to state 815
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign             go to state 651
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 816
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 582

  723 type_declaration_no_options: "type" '<' $@50 . type_declaration '>' $@51

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 362
    type_declaration             go to state 817


State 583

  746 type_declaration_no_options: "array" '<' $@55 . type_declaration '>' $@56

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 362
    type_declaration             go to state 818


State 584

  749 type_declaration_no_options: "table" '<' $@57 . table_type_pair '>' $@58

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    table_type_pair              go to state 819
    type_declaration_no_options  go to state 362
    type_declaration             go to state 820


State 585

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'
  724 type_declaration_no_options: "typedecl" '(' expr . ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798
    ')'    shift, and go to state 821


State 586

  752 type_declaration_no_options: "iterator" '<' $@59 . type_declaration '>' $@60

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 362
    type_declaration             go to state 822


State 587

  742 type_declaration_no_options: "smart_ptr" '<' $@53 . type_declaration '>' $@54

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 362
    type_declaration             go to state 823


State 588

  699 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 824


State 589

  708 bitfield_type_declaration: "bitfield" '<' $@48 . bitfield_bits '>' $@49

    "name"  shift, and go to state 825

    bitfield_bits  go to state 826


State 590

  756 type_declaration_no_options: "block" '<' $@61 . type_declaration '>' $@62

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 362
    type_declaration             go to state 827


State 591

  759 type_declaration_no_options: "block" '<' $@63 . optional_function_argument_list optional_function_type '>' $@64

    '('  shift, and go to state 289

    $default  reduce using rule 129 (optional_function_argument_list)

    optional_function_argument_list  go to state 828


State 592

  763 type_declaration_no_options: "function" '<' $@65 . type_declaration '>' $@66

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 362
    type_declaration             go to state 829


State 593

  766 type_declaration_no_options: "function" '<' $@67 . optional_function_argument_list optional_function_type '>' $@68

    '('  shift, and go to state 289

    $default  reduce using rule 129 (optional_function_argument_list)

    optional_function_argument_list  go to state 830


State 594

  770 type_declaration_no_options: "lambda" '<' $@69 . type_declaration '>' $@70

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 362
    type_declaration             go to state 831


State 595

  773 type_declaration_no_options: "lambda" '<' $@71 . optional_function_argument_list optional_function_type '>' $@72

    '('  shift, and go to state 289

    $default  reduce using rule 129 (optional_function_argument_list)

    optional_function_argument_list  go to state 832


State 596

  776 type_declaration_no_options: "tuple" '<' $@73 . tuple_type_list '>' $@74

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 615
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    tuple_type                   go to state 833
    tuple_type_list              go to state 834
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 362
    type_declaration             go to state 620


State 597

  779 type_declaration_no_options: "variant" '<' $@75 . variant_type_list '>' $@76

    "name"  shift, and go to state 622

    variant_type       go to state 835
    variant_type_list  go to state 836


State 598

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'
  700 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798
    ')'    shift, and go to state 837


State 599

  727 type_declaration_no_options: '$' name_in_namespace '<' . $@52 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    $default  reduce using rule 726 ($@52)

    $@52  go to state 838


State 600

  725 type_declaration_no_options: '$' name_in_namespace '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    $default  reduce using rule 256 (optional_expr_list)

    string_builder          go to state 511
    expr_reader             go to state 512
    optional_expr_list      go to state 839
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 720
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 721
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 601

  737 type_declaration_no_options: type_declaration_no_options "==" "const" .

    $default  reduce using rule 737 (type_declaration_no_options)


State 602

  738 type_declaration_no_options: type_declaration_no_options "==" '&' .

    $default  reduce using rule 738 (type_declaration_no_options)


State 603

  731 type_declaration_no_options: type_declaration_no_options '-' "const" .

    $default  reduce using rule 731 (type_declaration_no_options)


State 604

  733 type_declaration_no_options: type_declaration_no_options '-' '&' .

    $default  reduce using rule 733 (type_declaration_no_options)


State 605

  728 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'

    ']'  shift, and go to state 840


State 606

  736 type_declaration_no_options: type_declaration_no_options '-' '#' .

    $default  reduce using rule 736 (type_declaration_no_options)


State 607

  720 type_declaration_no_options: type_declaration_no_options '[' ']' .

    $default  reduce using rule 720 (type_declaration_no_options)


State 608

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'
  713 dim_list: '[' expr . ']'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798
    ']'    shift, and go to state 841


State 609

  714 dim_list: dim_list '[' . expr ']'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 842
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 610

  782 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 782 (type_declaration)


State 611

  719 type_declaration_no_options: type_declaration_no_options . dim_list
  720                            | type_declaration_no_options . '[' ']'
  728                            | type_declaration_no_options . '-' '[' ']'
  729                            | type_declaration_no_options . "explicit"
  730                            | type_declaration_no_options . "const"
  731                            | type_declaration_no_options . '-' "const"
  732                            | type_declaration_no_options . '&'
  733                            | type_declaration_no_options . '-' '&'
  734                            | type_declaration_no_options . '#'
  735                            | type_declaration_no_options . "implicit"
  736                            | type_declaration_no_options . '-' '#'
  737                            | type_declaration_no_options . "==" "const"
  738                            | type_declaration_no_options . "==" '&'
  739                            | type_declaration_no_options . '?'
  743                            | type_declaration_no_options . "??"
  781 type_declaration: type_declaration '|' type_declaration_no_options .

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "??"        shift, and go to state 416
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    $default  reduce using rule 781 (type_declaration)

    dim_list  go to state 422


State 612

  705 bitfield_alias_bits: bitfield_alias_bits "name" . "end of expression"

    "end of expression"  shift, and go to state 843


State 613

  704 bitfield_alias_bits: bitfield_alias_bits "end of expression" .

    $default  reduce using rule 704 (bitfield_alias_bits)


State 614

  797 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 "name" $@86 "begin of code block" $@87 bitfield_alias_bits $@88 . "end of code block"

    "end of code block"  shift, and go to state 844


State 615

  275 name_in_namespace: "name" .
  276                  | "name" . "::" "name"
  570 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 100
    ':'   shift, and go to state 845

    $default  reduce using rule 275 (name_in_namespace)


State 616

  710 c_or_s: "end of expression" .

    $default  reduce using rule 710 (c_or_s)


State 617

  709 c_or_s: ',' .

    $default  reduce using rule 709 (c_or_s)


State 618

  575 tuple_alias_type_list: tuple_alias_type_list tuple_type . c_or_s

    "end of expression"  shift, and go to state 616
    ','                  shift, and go to state 617

    c_or_s  go to state 846


State 619

  574 tuple_alias_type_list: tuple_alias_type_list c_or_s .

    $default  reduce using rule 574 (tuple_alias_type_list)


State 620

  569 tuple_type: type_declaration .
  781 type_declaration: type_declaration . '|' type_declaration_no_options
  782                 | type_declaration . '|' '#'

    '|'  shift, and go to state 423

    $default  reduce using rule 569 (tuple_type)


State 621

  787 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 "name" $@78 "begin of code block" $@79 tuple_alias_type_list $@80 . "end of code block"

    "end of code block"  shift, and go to state 847


State 622

  576 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 848


State 623

  581 variant_alias_type_list: variant_alias_type_list variant_type . c_or_s

    "end of expression"  shift, and go to state 616
    ','                  shift, and go to state 617

    c_or_s  go to state 849


State 624

  580 variant_alias_type_list: variant_alias_type_list c_or_s .

    $default  reduce using rule 580 (variant_alias_type_list)


State 625

  792 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 "name" $@82 "begin of code block" $@83 variant_alias_type_list $@84 . "end of code block"

    "end of code block"  shift, and go to state 850


State 626

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'
  566 function_argument_declaration: "$a" '(' expr . ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798
    ')'    shift, and go to state 851


State 627

  658 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 852


State 628

  657 variable_name_with_pos_list: "name" .
  659                            | "name" . "aka" "name"

    "aka"  shift, and go to state 853

    $default  reduce using rule 657 (variable_name_with_pos_list)


State 629

  565 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration .

    $default  reduce using rule 565 (function_argument_declaration)


State 630

  584 variable_declaration: variable_name_with_pos_list .
  585                     | variable_name_with_pos_list . '&'
  586                     | variable_name_with_pos_list . ':' type_declaration
  587                     | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  588                     | variable_name_with_pos_list . copy_or_move expr
  589                     | variable_name_with_pos_list . copy_or_move expr_pipe
  660 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  661                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 854
    ','   shift, and go to state 855
    '='   shift, and go to state 856
    ':'   shift, and go to state 857
    '&'   shift, and go to state 858

    $default  reduce using rule 584 (variable_declaration)

    copy_or_move  go to state 859


State 631

  568 function_argument_list: function_argument_list "end of expression" function_argument_declaration .

    $default  reduce using rule 568 (function_argument_list)


State 632

  845 make_struct_decl: "struct" '<' . $@89 type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 843 ($@89)

    $@89  go to state 860


State 633

  848 make_struct_decl: "class" '<' . $@91 type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 846 ($@91)

    $@91  go to state 861


State 634

   84 expression_while_loop: "while" expr . expression_block
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 746
    "as"                   shift, and go to state 747
    "<<"                   shift, and go to state 756
    ">>"                   shift, and go to state 757
    "++"                   shift, and go to state 758
    "--"                   shift, and go to state 759
    "<="                   shift, and go to state 760
    ">="                   shift, and go to state 763
    "=="                   shift, and go to state 764
    "!="                   shift, and go to state 765
    "->"                   shift, and go to state 766
    "??"                   shift, and go to state 768
    "?."                   shift, and go to state 769
    "?["                   shift, and go to state 770
    "<|"                   shift, and go to state 771
    "|>"                   shift, and go to state 772
    "<<<"                  shift, and go to state 774
    ">>>"                  shift, and go to state 775
    "&&"                   shift, and go to state 778
    "||"                   shift, and go to state 779
    "^^"                   shift, and go to state 780
    ".."                   shift, and go to state 784
    "begin of code block"  shift, and go to state 291
    '?'                    shift, and go to state 786
    '|'                    shift, and go to state 787
    '^'                    shift, and go to state 788
    '&'                    shift, and go to state 789
    '<'                    shift, and go to state 790
    '>'                    shift, and go to state 791
    '-'                    shift, and go to state 792
    '+'                    shift, and go to state 793
    '*'                    shift, and go to state 794
    '/'                    shift, and go to state 795
    '%'                    shift, and go to state 796
    '.'                    shift, and go to state 797
    '['                    shift, and go to state 798

    expression_block  go to state 862


State 635

   82 expression_for_loop: "for" $@5 . variable_name_with_pos_list "in" expr_list expression_block

    "$i"    shift, and go to state 627
    "name"  shift, and go to state 628

    variable_name_with_pos_list  go to state 863


State 636

  282 new_type_declaration: '<' . $@12 type_declaration '>' $@13

    $default  reduce using rule 280 ($@12)

    $@12  go to state 864


State 637

  284 expr_new: "new" new_type_declaration .
  285         | "new" new_type_declaration . '(' use_initializer ')'
  286         | "new" new_type_declaration . '(' expr_list ')'
  287         | "new" new_type_declaration . '(' make_struct_single ')'
  288         | "new" new_type_declaration . '(' "uninitialized" make_struct_single ')'

    '('  shift, and go to state 865

    '('       [reduce using rule 284 (expr_new)]
    $default  reduce using rule 284 (expr_new)


State 638

  283 new_type_declaration: structure_type_declaration .

    $default  reduce using rule 283 (new_type_declaration)


State 639

  289 expr_new: "new" make_decl .

    $default  reduce using rule 289 (expr_new)


State 640

  335 expr_type_info: "typeinfo" '(' . name_in_namespace expr ')'
  336               | "typeinfo" '(' . name_in_namespace '<' "name" '>' expr ')'
  337               | "typeinfo" '(' . name_in_namespace '<' "name" c_or_s "name" '>' expr ')'

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 866


State 641

  338 expr_type_info: "typeinfo" name_in_namespace . '(' expr ')'
  339               | "typeinfo" name_in_namespace . '<' "name" '>' '(' expr ')'
  340               | "typeinfo" name_in_namespace . '<' "name" "end of expression" "name" '>' '(' expr ')'

    '<'  shift, and go to state 867
    '('  shift, and go to state 868


State 642

  334 expr_type_decl: "type" '<' . $@20 type_declaration '>' $@21

    $default  reduce using rule 332 ($@20)

    $@20  go to state 869


State 643

  871 make_dim_decl: "array" "struct" . '<' $@99 type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 870


State 644

  874 make_dim_decl: "array" "tuple" . '<' $@101 type_declaration_no_options '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 871


State 645

  877 make_dim_decl: "array" "variant" . '<' $@103 type_declaration_no_options '>' $@104 '(' make_variant_dim ')'

    '<'  shift, and go to state 872


State 646

  881 make_dim_decl: "array" '<' . $@105 type_declaration_no_options '>' $@106 '(' optional_expr_list ')'

    $default  reduce using rule 879 ($@105)

    $@105  go to state 873


State 647

  878 make_dim_decl: "array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 874
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 721
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 648

  294 expression_return_no_pipe: "return" "<-" . expr_list
  297 expression_return: "return" "<-" . expr_pipe

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 476
    "@ <|"                            shift, and go to state 477
    "@@ <|"                           shift, and go to state 478
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 523
    expression_keyword      go to state 526
    expr_pipe               go to state 875
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 876
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign             go to state 651
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 652
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 649

  296 expression_return: "return" expr_pipe .

    $default  reduce using rule 296 (expression_return)


State 650

  293 expression_return_no_pipe: "return" expr_list .
  342 expr_list: expr_list . ',' expr

    ','  shift, and go to state 877

    $default  reduce using rule 293 (expression_return_no_pipe)


State 651

  270 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 744


State 652

  228 expr_call_pipe: expr . expr_full_block_assumed_piped
  341 expr_list: expr .
  371 expr_assign: expr .
  372            | expr . '=' expr
  373            | expr . "<-" expr
  374            | expr . ":=" expr
  375            | expr . "&=" expr
  376            | expr . "|=" expr
  377            | expr . "^=" expr
  378            | expr . "&&=" expr
  379            | expr . "||=" expr
  380            | expr . "^^=" expr
  381            | expr . "+=" expr
  382            | expr . "-=" expr
  383            | expr . "*=" expr
  384            | expr . "/=" expr
  385            | expr . "%=" expr
  386            | expr . "<<=" expr
  387            | expr . ">>=" expr
  388            | expr . "<<<=" expr
  389            | expr . ">>>=" expr
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 746
    "as"    shift, and go to state 747
    "+="    shift, and go to state 878
    "-="    shift, and go to state 879
    "/="    shift, and go to state 880
    "*="    shift, and go to state 881
    "%="    shift, and go to state 882
    "&="    shift, and go to state 883
    "|="    shift, and go to state 884
    "^="    shift, and go to state 885
    "<<"    shift, and go to state 756
    ">>"    shift, and go to state 757
    "++"    shift, and go to state 758
    "--"    shift, and go to state 759
    "<="    shift, and go to state 760
    "<<="   shift, and go to state 886
    ">>="   shift, and go to state 887
    ">="    shift, and go to state 763
    "=="    shift, and go to state 764
    "!="    shift, and go to state 765
    "->"    shift, and go to state 766
    "<-"    shift, and go to state 888
    "??"    shift, and go to state 768
    "?."    shift, and go to state 769
    "?["    shift, and go to state 770
    "<|"    shift, and go to state 771
    "|>"    shift, and go to state 772
    ":="    shift, and go to state 773
    "<<<"   shift, and go to state 774
    ">>>"   shift, and go to state 775
    "<<<="  shift, and go to state 889
    ">>>="  shift, and go to state 890
    "&&"    shift, and go to state 778
    "||"    shift, and go to state 779
    "^^"    shift, and go to state 780
    "&&="   shift, and go to state 891
    "||="   shift, and go to state 892
    "^^="   shift, and go to state 893
    ".."    shift, and go to state 784
    '='     shift, and go to state 894
    '?'     shift, and go to state 786
    '|'     shift, and go to state 787
    '^'     shift, and go to state 788
    '&'     shift, and go to state 789
    '<'     shift, and go to state 790
    '>'     shift, and go to state 791
    '-'     shift, and go to state 792
    '+'     shift, and go to state 793
    '*'     shift, and go to state 794
    '/'     shift, and go to state 795
    '%'     shift, and go to state 796
    '.'     shift, and go to state 797
    '['     shift, and go to state 798
    '$'     shift, and go to state 509
    '@'     shift, and go to state 683

    " <|"     reduce using rule 371 (expr_assign)
    $default  reduce using rule 341 (expr_list)

    block_or_lambda                go to state 732
    expr_full_block_assumed_piped  go to state 799


State 653

  303 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 895


State 654

  893 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  894                | "table" '<' . type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 896


State 655

  892 make_table_decl: "table" '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    $default  reduce using rule 260 (optional_expr_map_tuple_list)

    string_builder                go to state 511
    expr_reader                   go to state 512
    optional_expr_map_tuple_list  go to state 897
    expression_keyword            go to state 573
    name_in_namespace             go to state 528
    expr_new                      go to state 530
    expr_cast                     go to state 540
    expr_type_decl                go to state 541
    expr_type_info                go to state 542
    block_or_lambda               go to state 543
    expr_full_block               go to state 544
    expr_numeric_const            go to state 545
    expr_named_call               go to state 548
    expr_method_call              go to state 549
    func_addr_expr                go to state 550
    expr_field                    go to state 551
    expr_call                     go to state 552
    expr                          go to state 700
    expr_mtag                     go to state 554
    basic_type_declaration        go to state 555
    make_decl                     go to state 556
    make_struct_decl              go to state 557
    make_map_tuple                go to state 709
    make_tuple_call               go to state 558
    make_dim_decl                 go to state 559
    expr_map_tuple_list           go to state 710
    make_table_decl               go to state 560
    array_comprehension           go to state 561


State 656

  279 expression_delete: "delete" "explicit" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 898
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 657

  278 expression_delete: "delete" expr .
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    $default  reduce using rule 278 (expression_delete)


State 658

  492 expr: "deref" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 899
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 659

   85 expression_with: "with" expr . expression_block
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 746
    "as"                   shift, and go to state 747
    "<<"                   shift, and go to state 756
    ">>"                   shift, and go to state 757
    "++"                   shift, and go to state 758
    "--"                   shift, and go to state 759
    "<="                   shift, and go to state 760
    ">="                   shift, and go to state 763
    "=="                   shift, and go to state 764
    "!="                   shift, and go to state 765
    "->"                   shift, and go to state 766
    "??"                   shift, and go to state 768
    "?."                   shift, and go to state 769
    "?["                   shift, and go to state 770
    "<|"                   shift, and go to state 771
    "|>"                   shift, and go to state 772
    "<<<"                  shift, and go to state 774
    ">>>"                  shift, and go to state 775
    "&&"                   shift, and go to state 778
    "||"                   shift, and go to state 779
    "^^"                   shift, and go to state 780
    ".."                   shift, and go to state 784
    "begin of code block"  shift, and go to state 291
    '?'                    shift, and go to state 786
    '|'                    shift, and go to state 787
    '^'                    shift, and go to state 788
    '&'                    shift, and go to state 789
    '<'                    shift, and go to state 790
    '>'                    shift, and go to state 791
    '-'                    shift, and go to state 792
    '+'                    shift, and go to state 793
    '*'                    shift, and go to state 794
    '/'                    shift, and go to state 795
    '%'                    shift, and go to state 796
    '.'                    shift, and go to state 797
    '['                    shift, and go to state 798

    expression_block  go to state 900


State 660

   87 expression_with_alias: "assume" "name" . '=' $@6 expr

    '='  shift, and go to state 901


State 661

  325 expr_cast: "cast" '<' . $@14 type_declaration_no_options '>' $@15 expr

    $default  reduce using rule 323 ($@14)

    $@14  go to state 902


State 662

  328 expr_cast: "upcast" '<' . $@16 type_declaration_no_options '>' $@17 expr

    $default  reduce using rule 326 ($@16)

    $@16  go to state 903


State 663

  493 expr: "addr" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 904
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 664

  251 expression_any: "pass" "end of expression" .

    $default  reduce using rule 251 (expression_any)


State 665

  331 expr_cast: "reinterpret" '<' . $@18 type_declaration_no_options '>' $@19 expr

    $default  reduce using rule 329 ($@18)

    $@18  go to state 905


State 666

   60 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 906


State 667

   61 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 907


State 668

   62 expression_goto: "goto" expr .
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    $default  reduce using rule 62 (expression_goto)


State 669

  524 expr: "unsafe" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 908
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 670

   83 expression_unsafe: "unsafe" expression_block .

    $default  reduce using rule 83 (expression_unsafe)


State 671

  885 make_dim_decl: "fixed_array" '<' . $@107 type_declaration_no_options '>' $@108 '(' expr_list optional_comma ')'

    $default  reduce using rule 883 ($@107)

    $@107  go to state 909


State 672

  882 make_dim_decl: "fixed_array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 910
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 721
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 673

  854 make_struct_decl: "default" '<' . $@95 type_declaration_no_options '>' $@96 use_initializer

    $default  reduce using rule 852 ($@95)

    $@95  go to state 911


State 674

  863 make_tuple_call: "tuple" '<' . $@97 type_declaration_no_options '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 861 ($@97)

    $@97  go to state 912


State 675

  860 make_tuple_call: "tuple" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 913
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 721
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 676

  851 make_struct_decl: "variant" '<' . $@93 type_declaration_no_options '>' $@94 '(' make_variant_dim ')'

    $default  reduce using rule 849 ($@93)

    $@93  go to state 914


State 677

  230 expr_call_pipe: "generator" '<' . type_declaration_no_options '>' optional_capture_list expr_full_block_assumed_piped
  494 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  495     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 915


State 678

  299 expression_yield_no_pipe: "yield" "<-" . expr
  302 expression_yield: "yield" "<-" . expr_pipe

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 476
    "@ <|"                            shift, and go to state 477
    "@@ <|"                           shift, and go to state 478
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 523
    expression_keyword      go to state 526
    expr_pipe               go to state 916
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign             go to state 651
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 917
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 679

  301 expression_yield: "yield" expr_pipe .

    $default  reduce using rule 301 (expression_yield)


State 680

  228 expr_call_pipe: expr . expr_full_block_assumed_piped
  298 expression_yield_no_pipe: "yield" expr .
  371 expr_assign: expr .
  372            | expr . '=' expr
  373            | expr . "<-" expr
  374            | expr . ":=" expr
  375            | expr . "&=" expr
  376            | expr . "|=" expr
  377            | expr . "^=" expr
  378            | expr . "&&=" expr
  379            | expr . "||=" expr
  380            | expr . "^^=" expr
  381            | expr . "+=" expr
  382            | expr . "-=" expr
  383            | expr . "*=" expr
  384            | expr . "/=" expr
  385            | expr . "%=" expr
  386            | expr . "<<=" expr
  387            | expr . ">>=" expr
  388            | expr . "<<<=" expr
  389            | expr . ">>>=" expr
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 746
    "as"    shift, and go to state 747
    "+="    shift, and go to state 878
    "-="    shift, and go to state 879
    "/="    shift, and go to state 880
    "*="    shift, and go to state 881
    "%="    shift, and go to state 882
    "&="    shift, and go to state 883
    "|="    shift, and go to state 884
    "^="    shift, and go to state 885
    "<<"    shift, and go to state 756
    ">>"    shift, and go to state 757
    "++"    shift, and go to state 758
    "--"    shift, and go to state 759
    "<="    shift, and go to state 760
    "<<="   shift, and go to state 886
    ">>="   shift, and go to state 887
    ">="    shift, and go to state 763
    "=="    shift, and go to state 764
    "!="    shift, and go to state 765
    "->"    shift, and go to state 766
    "<-"    shift, and go to state 888
    "??"    shift, and go to state 768
    "?."    shift, and go to state 769
    "?["    shift, and go to state 770
    "<|"    shift, and go to state 771
    "|>"    shift, and go to state 772
    ":="    shift, and go to state 773
    "<<<"   shift, and go to state 774
    ">>>"   shift, and go to state 775
    "<<<="  shift, and go to state 889
    ">>>="  shift, and go to state 890
    "&&"    shift, and go to state 778
    "||"    shift, and go to state 779
    "^^"    shift, and go to state 780
    "&&="   shift, and go to state 891
    "||="   shift, and go to state 892
    "^^="   shift, and go to state 893
    ".."    shift, and go to state 784
    '='     shift, and go to state 894
    '?'     shift, and go to state 786
    '|'     shift, and go to state 787
    '^'     shift, and go to state 788
    '&'     shift, and go to state 789
    '<'     shift, and go to state 790
    '>'     shift, and go to state 791
    '-'     shift, and go to state 792
    '+'     shift, and go to state 793
    '*'     shift, and go to state 794
    '/'     shift, and go to state 795
    '%'     shift, and go to state 796
    '.'     shift, and go to state 797
    '['     shift, and go to state 798
    '$'     shift, and go to state 509
    '@'     shift, and go to state 683

    " <|"     reduce using rule 371 (expr_assign)
    $default  reduce using rule 298 (expression_yield_no_pipe)

    block_or_lambda                go to state 732
    expr_full_block_assumed_piped  go to state 799


State 681

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  477     | "++" expr .
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 746
    "as"  shift, and go to state 747
    "++"  shift, and go to state 758
    "--"  shift, and go to state 759
    "->"  shift, and go to state 766
    "?."  shift, and go to state 769
    "?["  shift, and go to state 770
    "<|"  shift, and go to state 771
    "|>"  shift, and go to state 772
    '.'   shift, and go to state 797
    '['   shift, and go to state 798

    $default  reduce using rule 477 (expr)


State 682

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  478     | "--" expr .
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 746
    "as"  shift, and go to state 747
    "++"  shift, and go to state 758
    "--"  shift, and go to state 759
    "->"  shift, and go to state 766
    "?."  shift, and go to state 769
    "?["  shift, and go to state 770
    "<|"  shift, and go to state 771
    "|>"  shift, and go to state 772
    '.'   shift, and go to state 797
    '['   shift, and go to state 798

    $default  reduce using rule 478 (expr)


State 683

  347 block_or_lambda: '@' .
  348                | '@' . '@'

    '@'  shift, and go to state 918

    $default  reduce using rule 347 (block_or_lambda)


State 684

  359 expr_block: expression_block .

    $default  reduce using rule 359 (expr_block)


State 685

  360 expr_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 15

    $default  reduce using rule 127 (optional_annotation_list)

    optional_annotation_list  go to state 919


State 686

  273 expr_pipe: "$ <|" expr_block .

    $default  reduce using rule 273 (expr_pipe)


State 687

  271 expr_pipe: "@ <|" expr_block .

    $default  reduce using rule 271 (expr_pipe)


State 688

  272 expr_pipe: "@@ <|" expr_block .

    $default  reduce using rule 272 (expr_pipe)


State 689

  526 expr_mtag: "$$" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 920
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 690

  527 expr_mtag: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 921
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 691

  528 expr_mtag: "$v" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 922
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 692

  529 expr_mtag: "$b" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 923
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 693

  530 expr_mtag: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 924
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 694

  532 expr_mtag: "$c" '(' . expr ')' '(' ')'
  533          | "$c" '(' . expr ')' '(' expr_list ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 925
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 695

  901 array_comprehension: "[[" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']'

    "$i"    shift, and go to state 627
    "name"  shift, and go to state 628

    variable_name_with_pos_list  go to state 926


State 696

  719 type_declaration_no_options: type_declaration_no_options . dim_list
  720                            | type_declaration_no_options . '[' ']'
  728                            | type_declaration_no_options . '-' '[' ']'
  729                            | type_declaration_no_options . "explicit"
  730                            | type_declaration_no_options . "const"
  731                            | type_declaration_no_options . '-' "const"
  732                            | type_declaration_no_options . '&'
  733                            | type_declaration_no_options . '-' '&'
  734                            | type_declaration_no_options . '#'
  735                            | type_declaration_no_options . "implicit"
  736                            | type_declaration_no_options . '-' '#'
  737                            | type_declaration_no_options . "==" "const"
  738                            | type_declaration_no_options . "==" '&'
  739                            | type_declaration_no_options . '?'
  743                            | type_declaration_no_options . "??"
  837 make_struct_decl: "[[" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  838                 | "[[" type_declaration_no_options . optional_block optional_trailing_delim_sqr_sqr
  839                 | "[[" type_declaration_no_options . '(' ')' optional_block optional_trailing_delim_sqr_sqr
  840                 | "[[" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  867 make_dim_decl: "[[" type_declaration_no_options . make_dim optional_trailing_semicolon_sqr_sqr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "const"                           shift, and go to state 412
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "where"                           shift, and go to state 927
    "reinterpret"                     shift, and go to state 463
    "implicit"                        shift, and go to state 413
    "explicit"                        shift, and go to state 414
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "=="                              shift, and go to state 415
    "??"                              shift, and go to state 416
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "$f"                              shift, and go to state 722
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 723
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '?'                               shift, and go to state 417
    '&'                               shift, and go to state 418
    '-'                               shift, and go to state 928
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 929
    '('                               shift, and go to state 930
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510
    '#'                               shift, and go to state 421

    $default  reduce using rule 821 (optional_block)

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 931
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    dim_list                go to state 422
    make_decl               go to state 556
    make_struct_fields      go to state 932
    make_struct_dim         go to state 933
    optional_block          go to state 934
    make_struct_decl        go to state 557
    make_tuple              go to state 935
    make_tuple_call         go to state 558
    make_dim                go to state 936
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 697

  902 array_comprehension: "[{" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "$i"    shift, and go to state 627
    "name"  shift, and go to state 628

    variable_name_with_pos_list  go to state 937


State 698

  719 type_declaration_no_options: type_declaration_no_options . dim_list
  720                            | type_declaration_no_options . '[' ']'
  728                            | type_declaration_no_options . '-' '[' ']'
  729                            | type_declaration_no_options . "explicit"
  730                            | type_declaration_no_options . "const"
  731                            | type_declaration_no_options . '-' "const"
  732                            | type_declaration_no_options . '&'
  733                            | type_declaration_no_options . '-' '&'
  734                            | type_declaration_no_options . '#'
  735                            | type_declaration_no_options . "implicit"
  736                            | type_declaration_no_options . '-' '#'
  737                            | type_declaration_no_options . "==" "const"
  738                            | type_declaration_no_options . "==" '&'
  739                            | type_declaration_no_options . '?'
  743                            | type_declaration_no_options . "??"
  841 make_struct_decl: "[{" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_cur_sqr
  842                 | "[{" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  868 make_dim_decl: "[{" type_declaration_no_options . make_dim optional_trailing_semicolon_cur_sqr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "const"                           shift, and go to state 412
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "implicit"                        shift, and go to state 413
    "explicit"                        shift, and go to state 414
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "=="                              shift, and go to state 415
    "??"                              shift, and go to state 416
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "$f"                              shift, and go to state 722
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 723
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '?'                               shift, and go to state 417
    '&'                               shift, and go to state 418
    '-'                               shift, and go to state 928
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 929
    '('                               shift, and go to state 938
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510
    '#'                               shift, and go to state 421

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 931
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    dim_list                go to state 422
    make_decl               go to state 556
    make_struct_fields      go to state 932
    make_struct_dim         go to state 939
    make_struct_decl        go to state 557
    make_tuple              go to state 935
    make_tuple_call         go to state 558
    make_dim                go to state 940
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 699

  904 array_comprehension: "{{" "for" . variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "$i"    shift, and go to state 627
    "name"  shift, and go to state 628

    variable_name_with_pos_list  go to state 941


State 700

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'
  858 make_map_tuple: expr . "=>" expr
  859               | expr .

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "=>"   shift, and go to state 942
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    $default  reduce using rule 859 (make_map_tuple)


State 701

  886 make_table: make_map_tuple .

    $default  reduce using rule 886 (make_table)


State 702

  887 make_table: make_table . "end of expression" make_map_tuple
  891 make_table_decl: "{{" make_table . optional_trailing_semicolon_cur_cur

    "end of code block"  shift, and go to state 943
    "end of expression"  shift, and go to state 944
    ";}}"                shift, and go to state 945

    optional_trailing_semicolon_cur_cur  go to state 946


State 703

  266 expression_keyword: "keyword" '<' . $@8 type_declaration_no_options_list '>' $@9 expr

    $default  reduce using rule 264 ($@8)

    $@8  go to state 947


State 704

  255 expr_keyword: "keyword" expr . expression_block
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 746
    "as"                   shift, and go to state 747
    "<<"                   shift, and go to state 756
    ">>"                   shift, and go to state 757
    "++"                   shift, and go to state 758
    "--"                   shift, and go to state 759
    "<="                   shift, and go to state 760
    ">="                   shift, and go to state 763
    "=="                   shift, and go to state 764
    "!="                   shift, and go to state 765
    "->"                   shift, and go to state 766
    "??"                   shift, and go to state 768
    "?."                   shift, and go to state 769
    "?["                   shift, and go to state 770
    "<|"                   shift, and go to state 771
    "|>"                   shift, and go to state 772
    "<<<"                  shift, and go to state 774
    ">>>"                  shift, and go to state 775
    "&&"                   shift, and go to state 778
    "||"                   shift, and go to state 779
    "^^"                   shift, and go to state 780
    ".."                   shift, and go to state 784
    "begin of code block"  shift, and go to state 291
    '?'                    shift, and go to state 786
    '|'                    shift, and go to state 787
    '^'                    shift, and go to state 788
    '&'                    shift, and go to state 789
    '<'                    shift, and go to state 790
    '>'                    shift, and go to state 791
    '-'                    shift, and go to state 792
    '+'                    shift, and go to state 793
    '*'                    shift, and go to state 794
    '/'                    shift, and go to state 795
    '%'                    shift, and go to state 796
    '.'                    shift, and go to state 797
    '['                    shift, and go to state 798

    expression_block  go to state 948


State 705

  269 expression_keyword: "type function" '<' . $@10 type_declaration_no_options_list '>' $@11 optional_expr_list_in_braces

    $default  reduce using rule 267 ($@10)

    $@10  go to state 949


State 706

   35 string_builder_body: string_builder_body . character_sequence
   36                    | string_builder_body . "{" expr optional_format_string "}"
   37 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 166
    STRING_CHARACTER_ESC  shift, and go to state 167
    "end of the string"   shift, and go to state 950
    "{"                   shift, and go to state 951

    character_sequence  go to state 952


State 707

  903 array_comprehension: "begin of code block" "for" . variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "$i"    shift, and go to state 627
    "name"  shift, and go to state 628

    variable_name_with_pos_list  go to state 953


State 708

  890 make_table_decl: "begin of code block" optional_expr_map_tuple_list . "end of code block"

    "end of code block"  shift, and go to state 954


State 709

  888 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 888 (expr_map_tuple_list)


State 710

  261 optional_expr_map_tuple_list: expr_map_tuple_list . optional_comma
  889 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple

    ','  shift, and go to state 955

    $default  reduce using rule 897 (optional_comma)

    optional_comma  go to state 956


State 711

  227 expression_block: "begin of code block" expressions "end of code block" "finally" . "begin of code block" expressions "end of code block"

    "begin of code block"  shift, and go to state 957


State 712

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  454 expr: '-' expr .
  455     | expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 746
    "as"  shift, and go to state 747
    "++"  shift, and go to state 758
    "--"  shift, and go to state 759
    "->"  shift, and go to state 766
    "?."  shift, and go to state 769
    "?["  shift, and go to state 770
    "<|"  shift, and go to state 771
    "|>"  shift, and go to state 772
    '.'   shift, and go to state 797
    '['   shift, and go to state 798

    $default  reduce using rule 454 (expr)


State 713

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  453 expr: '+' expr .
  455     | expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 746
    "as"  shift, and go to state 747
    "++"  shift, and go to state 758
    "--"  shift, and go to state 759
    "->"  shift, and go to state 766
    "?."  shift, and go to state 769
    "?["  shift, and go to state 770
    "<|"  shift, and go to state 771
    "|>"  shift, and go to state 772
    '.'   shift, and go to state 797
    '['   shift, and go to state 798

    $default  reduce using rule 453 (expr)


State 714

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  491     | '*' expr .
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 769
    "?["  shift, and go to state 770
    '.'   shift, and go to state 797
    '['   shift, and go to state 798

    $default  reduce using rule 491 (expr)


State 715

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  452 expr: '~' expr .
  455     | expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 746
    "as"  shift, and go to state 747
    "++"  shift, and go to state 758
    "--"  shift, and go to state 759
    "->"  shift, and go to state 766
    "?."  shift, and go to state 769
    "?["  shift, and go to state 770
    "<|"  shift, and go to state 771
    "|>"  shift, and go to state 772
    '.'   shift, and go to state 797
    '['   shift, and go to state 798

    $default  reduce using rule 452 (expr)


State 716

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  451 expr: '!' expr .
  455     | expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 746
    "as"  shift, and go to state 747
    "++"  shift, and go to state 758
    "--"  shift, and go to state 759
    "->"  shift, and go to state 766
    "?."  shift, and go to state 769
    "?["  shift, and go to state 770
    "<|"  shift, and go to state 771
    "|>"  shift, and go to state 772
    '.'   shift, and go to state 797
    '['   shift, and go to state 798

    $default  reduce using rule 451 (expr)


State 717

  899 array_comprehension: '[' "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 627
    "name"  shift, and go to state 628

    variable_name_with_pos_list  go to state 958


State 718

  900 array_comprehension: '[' "iterator" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "for"  shift, and go to state 959


State 719

  866 make_dim_decl: '[' optional_expr_list . ']'

    ']'  shift, and go to state 960


State 720

  257 optional_expr_list: expr_list . optional_comma
  342 expr_list: expr_list . ',' expr

    ','  shift, and go to state 961

    ','       [reduce using rule 897 (optional_comma)]
    $default  reduce using rule 897 (optional_comma)

    optional_comma  go to state 962


State 721

  341 expr_list: expr .
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    $default  reduce using rule 341 (expr_list)


State 722

  807 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  808                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 963


State 723

  275 name_in_namespace: "name" .
  276                  | "name" . "::" "name"
  803 make_struct_fields: "name" . copy_or_move expr
  804                   | "name" . ":=" expr

    "<-"  shift, and go to state 854
    ":="  shift, and go to state 964
    "::"  shift, and go to state 100
    '='   shift, and go to state 856

    $default  reduce using rule 275 (name_in_namespace)

    copy_or_move  go to state 965


State 724

  342 expr_list: expr_list . ',' expr
  481 expr: '(' expr_list . optional_comma ')'

    ','  shift, and go to state 961

    $default  reduce using rule 897 (optional_comma)

    optional_comma  go to state 966


State 725

  805 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  806                   | make_struct_fields . ',' "name" ":=" expr
  809                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  810                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  812 make_struct_single: make_struct_fields .

    ','  shift, and go to state 967

    $default  reduce using rule 812 (make_struct_single)


State 726

  482 expr: '(' make_struct_single . ')'

    ')'  shift, and go to state 968


State 727

  348 block_or_lambda: '@' '@' .
  417 func_addr_expr: '@' '@' . func_addr_name
  420               | '@' '@' . '<' $@23 type_declaration_no_options '>' $@24 func_addr_name
  423               | '@' '@' . '<' $@25 optional_function_argument_list optional_function_type '>' $@26 func_addr_name
  541 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 969
    "$c"    shift, and go to state 970
    "name"  shift, and go to state 59
    '<'     shift, and go to state 971

    $default  reduce using rule 348 (block_or_lambda)

    name_in_namespace  go to state 972
    func_addr_name     go to state 973


State 728

  249 expression_any: expression_label "end of expression" .

    $default  reduce using rule 249 (expression_any)


State 729

  250 expression_any: expression_goto "end of expression" .

    $default  reduce using rule 250 (expression_any)


State 730

   78 expression_if_then_else: if_or_static_if expr . expression_block expression_else
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 746
    "as"                   shift, and go to state 747
    "<<"                   shift, and go to state 756
    ">>"                   shift, and go to state 757
    "++"                   shift, and go to state 758
    "--"                   shift, and go to state 759
    "<="                   shift, and go to state 760
    ">="                   shift, and go to state 763
    "=="                   shift, and go to state 764
    "!="                   shift, and go to state 765
    "->"                   shift, and go to state 766
    "??"                   shift, and go to state 768
    "?."                   shift, and go to state 769
    "?["                   shift, and go to state 770
    "<|"                   shift, and go to state 771
    "|>"                   shift, and go to state 772
    "<<<"                  shift, and go to state 774
    ">>>"                  shift, and go to state 775
    "&&"                   shift, and go to state 778
    "||"                   shift, and go to state 779
    "^^"                   shift, and go to state 780
    ".."                   shift, and go to state 784
    "begin of code block"  shift, and go to state 291
    '?'                    shift, and go to state 786
    '|'                    shift, and go to state 787
    '^'                    shift, and go to state 788
    '&'                    shift, and go to state 789
    '<'                    shift, and go to state 790
    '>'                    shift, and go to state 791
    '-'                    shift, and go to state 792
    '+'                    shift, and go to state 793
    '*'                    shift, and go to state 794
    '/'                    shift, and go to state 795
    '%'                    shift, and go to state 796
    '.'                    shift, and go to state 797
    '['                    shift, and go to state 798

    expression_block  go to state 974


State 731

   80 expression_if_then_else: expression_if_one_liner "if" . $@4 expr expression_else_one_liner "end of expression"

    $default  reduce using rule 79 ($@4)

    $@4  go to state 975


State 732

  363 expr_full_block_assumed_piped: block_or_lambda . $@22 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

    $default  reduce using rule 362 ($@22)

    $@22  go to state 976


State 733

  229 expr_call_pipe: expression_keyword expr_full_block_assumed_piped .

    $default  reduce using rule 229 (expr_call_pipe)


State 734

  523 expr: name_in_namespace "name" .

    $default  reduce using rule 523 (expr)


State 735

  411 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  412                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  434 expr_call: name_in_namespace '(' . ')'
  435          | name_in_namespace '(' . "uninitialized" ')'
  436          | name_in_namespace '(' . make_struct_single ')'
  437          | name_in_namespace '(' . "uninitialized" make_struct_single ')'
  438          | name_in_namespace '(' . expr_list ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "uninitialized"                   shift, and go to state 977
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "$f"                              shift, and go to state 722
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 723
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 978
    '('                               shift, and go to state 508
    ')'                               shift, and go to state 979
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 980
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 721
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_fields      go to state 725
    make_struct_single      go to state 981
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 736

  236 expression_any: expression_delete "end of expression" .

    $default  reduce using rule 236 (expression_any)


State 737

  243 expression_any: expression_break "end of expression" .

    $default  reduce using rule 243 (expression_any)


State 738

  244 expression_any: expression_continue "end of expression" .

    $default  reduce using rule 244 (expression_any)


State 739

  295 expression_return: expression_return_no_pipe "end of expression" .

    $default  reduce using rule 295 (expression_return)


State 740

  300 expression_yield: expression_yield_no_pipe "end of expression" .

    $default  reduce using rule 300 (expression_yield)


State 741

  309 optional_in_scope: "inscope" .

    $default  reduce using rule 309 (optional_in_scope)


State 742

  321 expression_let: kwd_let optional_in_scope . let_variable_declaration
  322               | kwd_let optional_in_scope . tuple_expansion_variable_declaration

    "$i"    shift, and go to state 311
    "[["    shift, and go to state 982
    "name"  shift, and go to state 312
    '('     shift, and go to state 983

    tuple_expansion_variable_declaration  go to state 984
    let_variable_name_with_pos_list       go to state 313
    let_variable_declaration              go to state 985


State 743

  361 expr_full_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "capture"  shift, and go to state 986
    "[["       shift, and go to state 987

    $default  reduce using rule 356 (optional_capture_list)

    optional_capture_list  go to state 988


State 744

  270 expr_pipe: expr_assign " <|" . expr_block

    "begin of code block"  shift, and go to state 291
    '$'                    shift, and go to state 509
    '@'                    shift, and go to state 683

    expression_block  go to state 684
    block_or_lambda   go to state 685
    expr_block        go to state 989


State 745

  235 expression_any: expr_assign "end of expression" .

    $default  reduce using rule 235 (expression_any)


State 746

  500 expr: expr "is" . "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr "is" . basic_type_declaration
  502     | expr "is" . "name"
  540 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 990
    "bool"      shift, and go to state 322
    "void"      shift, and go to state 323
    "string"    shift, and go to state 324
    "int"       shift, and go to state 326
    "int2"      shift, and go to state 327
    "int3"      shift, and go to state 328
    "int4"      shift, and go to state 329
    "uint"      shift, and go to state 330
    "bitfield"  shift, and go to state 469
    "uint2"     shift, and go to state 332
    "uint3"     shift, and go to state 333
    "uint4"     shift, and go to state 334
    "float"     shift, and go to state 335
    "float2"    shift, and go to state 336
    "float3"    shift, and go to state 337
    "float4"    shift, and go to state 338
    "range"     shift, and go to state 339
    "urange"    shift, and go to state 340
    "range64"   shift, and go to state 341
    "urange64"  shift, and go to state 342
    "int64"     shift, and go to state 344
    "uint64"    shift, and go to state 345
    "double"    shift, and go to state 346
    "int8"      shift, and go to state 349
    "uint8"     shift, and go to state 350
    "int16"     shift, and go to state 351
    "uint16"    shift, and go to state 352
    "$f"        shift, and go to state 991
    "name"      shift, and go to state 992

    basic_type_declaration  go to state 993


State 747

  503 expr: expr "as" . "name"
  506     | expr "as" . "type" '<' $@31 type_declaration '>' $@32
  507     | expr "as" . basic_type_declaration
  538 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 994
    "bool"      shift, and go to state 322
    "void"      shift, and go to state 323
    "string"    shift, and go to state 324
    "int"       shift, and go to state 326
    "int2"      shift, and go to state 327
    "int3"      shift, and go to state 328
    "int4"      shift, and go to state 329
    "uint"      shift, and go to state 330
    "bitfield"  shift, and go to state 469
    "uint2"     shift, and go to state 332
    "uint3"     shift, and go to state 333
    "uint4"     shift, and go to state 334
    "float"     shift, and go to state 335
    "float2"    shift, and go to state 336
    "float3"    shift, and go to state 337
    "float4"    shift, and go to state 338
    "range"     shift, and go to state 339
    "urange"    shift, and go to state 340
    "range64"   shift, and go to state 341
    "urange64"  shift, and go to state 342
    "int64"     shift, and go to state 344
    "uint64"    shift, and go to state 345
    "double"    shift, and go to state 346
    "int8"      shift, and go to state 349
    "uint8"     shift, and go to state 350
    "int16"     shift, and go to state 351
    "uint16"    shift, and go to state 352
    "$f"        shift, and go to state 995
    "name"      shift, and go to state 996

    basic_type_declaration  go to state 997


State 748

  381 expr_assign: expr "+=" . expr
  402 expr_assign_pipe: expr "+=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 998
    "@ <|"                            shift, and go to state 999
    "@@ <|"                           shift, and go to state 1000
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 1001
    expression_keyword      go to state 526
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign_pipe_right  go to state 1002
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1003
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 749

  382 expr_assign: expr "-=" . expr
  403 expr_assign_pipe: expr "-=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 998
    "@ <|"                            shift, and go to state 999
    "@@ <|"                           shift, and go to state 1000
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 1001
    expression_keyword      go to state 526
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign_pipe_right  go to state 1004
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1005
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 750

  384 expr_assign: expr "/=" . expr
  405 expr_assign_pipe: expr "/=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 998
    "@ <|"                            shift, and go to state 999
    "@@ <|"                           shift, and go to state 1000
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 1001
    expression_keyword      go to state 526
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign_pipe_right  go to state 1006
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1007
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 751

  383 expr_assign: expr "*=" . expr
  404 expr_assign_pipe: expr "*=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 998
    "@ <|"                            shift, and go to state 999
    "@@ <|"                           shift, and go to state 1000
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 1001
    expression_keyword      go to state 526
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign_pipe_right  go to state 1008
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1009
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 752

  385 expr_assign: expr "%=" . expr
  406 expr_assign_pipe: expr "%=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 998
    "@ <|"                            shift, and go to state 999
    "@@ <|"                           shift, and go to state 1000
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 1001
    expression_keyword      go to state 526
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign_pipe_right  go to state 1010
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1011
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 753

  375 expr_assign: expr "&=" . expr
  396 expr_assign_pipe: expr "&=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 998
    "@ <|"                            shift, and go to state 999
    "@@ <|"                           shift, and go to state 1000
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 1001
    expression_keyword      go to state 526
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign_pipe_right  go to state 1012
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1013
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 754

  376 expr_assign: expr "|=" . expr
  397 expr_assign_pipe: expr "|=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 998
    "@ <|"                            shift, and go to state 999
    "@@ <|"                           shift, and go to state 1000
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 1001
    expression_keyword      go to state 526
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign_pipe_right  go to state 1014
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1015
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 755

  377 expr_assign: expr "^=" . expr
  398 expr_assign_pipe: expr "^=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 998
    "@ <|"                            shift, and go to state 999
    "@@ <|"                           shift, and go to state 1000
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 1001
    expression_keyword      go to state 526
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign_pipe_right  go to state 1016
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1017
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 756

  455 expr: expr "<<" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1018
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 757

  456 expr: expr ">>" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1019
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 758

  479 expr: expr "++" .

    $default  reduce using rule 479 (expr)


State 759

  480 expr: expr "--" .

    $default  reduce using rule 480 (expr)


State 760

  468 expr: expr "<=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1020
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 761

  386 expr_assign: expr "<<=" . expr
  407 expr_assign_pipe: expr "<<=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 998
    "@ <|"                            shift, and go to state 999
    "@@ <|"                           shift, and go to state 1000
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 1001
    expression_keyword      go to state 526
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign_pipe_right  go to state 1021
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1022
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 762

  387 expr_assign: expr ">>=" . expr
  408 expr_assign_pipe: expr ">>=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 998
    "@ <|"                            shift, and go to state 999
    "@@ <|"                           shift, and go to state 1000
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 1001
    expression_keyword      go to state 526
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign_pipe_right  go to state 1023
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1024
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 763

  469 expr: expr ">=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1025
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 764

  466 expr: expr "==" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1026
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 765

  467 expr: expr "!=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1027
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 766

  413 expr_method_call: expr "->" . "name" '(' ')'
  414                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 1028


State 767

  373 expr_assign: expr "<-" . expr
  395 expr_assign_pipe: expr "<-" . expr_assign_pipe_right

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 998
    "@ <|"                            shift, and go to state 999
    "@@ <|"                           shift, and go to state 1000
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 1001
    expression_keyword      go to state 526
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign_pipe_right  go to state 1029
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1030
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 768

  496 expr: expr "??" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1031
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 769

  487 expr: expr "?." . "name"
  535 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1032
    "name"  shift, and go to state 1033


State 770

  485 expr: expr "?[" . expr ']'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1034
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 771

  520 expr: expr "<|" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1035
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 772

  521 expr: expr "|>" . expr
  522     | expr "|>" . basic_type_declaration

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1036
    expr_mtag               go to state 554
    basic_type_declaration  go to state 1037
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 773

  374 expr_assign: expr ":=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1038
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 774

  457 expr: expr "<<<" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1039
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 775

  458 expr: expr ">>>" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1040
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 776

  388 expr_assign: expr "<<<=" . expr
  409 expr_assign_pipe: expr "<<<=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 998
    "@ <|"                            shift, and go to state 999
    "@@ <|"                           shift, and go to state 1000
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 1001
    expression_keyword      go to state 526
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign_pipe_right  go to state 1041
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1042
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 777

  389 expr_assign: expr ">>>=" . expr
  410 expr_assign_pipe: expr ">>>=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 998
    "@ <|"                            shift, and go to state 999
    "@@ <|"                           shift, and go to state 1000
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 1001
    expression_keyword      go to state 526
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign_pipe_right  go to state 1043
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1044
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 778

  473 expr: expr "&&" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1045
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 779

  474 expr: expr "||" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1046
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 780

  475 expr: expr "^^" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1047
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 781

  378 expr_assign: expr "&&=" . expr
  399 expr_assign_pipe: expr "&&=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 998
    "@ <|"                            shift, and go to state 999
    "@@ <|"                           shift, and go to state 1000
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 1001
    expression_keyword      go to state 526
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign_pipe_right  go to state 1048
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1049
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 782

  379 expr_assign: expr "||=" . expr
  400 expr_assign_pipe: expr "||=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 998
    "@ <|"                            shift, and go to state 999
    "@@ <|"                           shift, and go to state 1000
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 1001
    expression_keyword      go to state 526
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign_pipe_right  go to state 1050
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1051
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 783

  380 expr_assign: expr "^^=" . expr
  401 expr_assign_pipe: expr "^^=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 998
    "@ <|"                            shift, and go to state 999
    "@@ <|"                           shift, and go to state 1000
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 1001
    expression_keyword      go to state 526
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign_pipe_right  go to state 1052
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1053
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 784

  476 expr: expr ".." . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1054
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 785

  372 expr_assign: expr '=' . expr
  394 expr_assign_pipe: expr '=' . expr_assign_pipe_right

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 998
    "@ <|"                            shift, and go to state 999
    "@@ <|"                           shift, and go to state 1000
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 1001
    expression_keyword      go to state 526
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign_pipe_right  go to state 1055
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1056
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 786

  497 expr: expr '?' . expr ':' expr
  508     | expr '?' . "as" "name"
  511     | expr '?' . "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr '?' . "as" basic_type_declaration
  539 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "as"                              shift, and go to state 1057
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1058
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 787

  471 expr: expr '|' . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1059
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 788

  472 expr: expr '^' . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1060
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 789

  470 expr: expr '&' . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1061
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 790

  464 expr: expr '<' . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1062
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 791

  465 expr: expr '>' . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1063
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 792

  460 expr: expr '-' . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1064
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 793

  459 expr: expr '+' . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1065
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 794

  461 expr: expr '*' . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1066
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 795

  462 expr: expr '/' . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1067
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 796

  463 expr: expr '%' . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1068
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 797

  424 expr_field: expr '.' . "name"
  425           | expr '.' . '.' "name"
  426           | expr '.' . "name" '(' ')'
  427           | expr '.' . "name" '(' expr_list ')'
  428           | expr '.' . "name" '(' '[' make_struct_fields ']' ')'
  429           | expr '.' . basic_type_declaration '(' ')'
  430           | expr '.' . basic_type_declaration '(' expr_list ')'
  433           | expr '.' . $@27 error $@28
  484 expr: expr '.' . '[' expr ']'
  486     | expr '.' . "?[" expr ']'
  488     | expr '.' . "?." "name"
  534 expr_mtag: expr '.' . "$f" '(' expr ')'
  536          | expr '.' . '.' "$f" '(' expr ')'
  537          | expr '.' . "?." "$f" '(' expr ')'

    "bool"      shift, and go to state 322
    "void"      shift, and go to state 323
    "string"    shift, and go to state 324
    "int"       shift, and go to state 326
    "int2"      shift, and go to state 327
    "int3"      shift, and go to state 328
    "int4"      shift, and go to state 329
    "uint"      shift, and go to state 330
    "bitfield"  shift, and go to state 469
    "uint2"     shift, and go to state 332
    "uint3"     shift, and go to state 333
    "uint4"     shift, and go to state 334
    "float"     shift, and go to state 335
    "float2"    shift, and go to state 336
    "float3"    shift, and go to state 337
    "float4"    shift, and go to state 338
    "range"     shift, and go to state 339
    "urange"    shift, and go to state 340
    "range64"   shift, and go to state 341
    "urange64"  shift, and go to state 342
    "int64"     shift, and go to state 344
    "uint64"    shift, and go to state 345
    "double"    shift, and go to state 346
    "int8"      shift, and go to state 349
    "uint8"     shift, and go to state 350
    "int16"     shift, and go to state 351
    "uint16"    shift, and go to state 352
    "?."        shift, and go to state 1069
    "?["        shift, and go to state 1070
    "$f"        shift, and go to state 1071
    "name"      shift, and go to state 1072
    '.'         shift, and go to state 1073
    '['         shift, and go to state 1074

    $default  reduce using rule 431 ($@27)

    $@27                    go to state 1075
    basic_type_declaration  go to state 1076


State 798

  483 expr: expr '[' . expr ']'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1077
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 799

  228 expr_call_pipe: expr expr_full_block_assumed_piped .

    $default  reduce using rule 228 (expr_call_pipe)


State 800

  439 expr_call: basic_type_declaration '(' . ')'
  440          | basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    ')'                               shift, and go to state 1078
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 1079
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 721
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 801

  618 enum_list: enum_list "name" "end of expression" .

    $default  reduce using rule 618 (enum_list)


State 802

  619 enum_list: enum_list "name" '=' . expr "end of expression"

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1080
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 803

  636 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@42 enum_list $@43 "end of code block" .

    $default  reduce using rule 636 (enum_declaration)


State 804

  617 enum_list: enum_list . "end of expression"
  618          | enum_list . "name" "end of expression"
  619          | enum_list . "name" '=' expr "end of expression"
  639 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@44 enum_list . $@45 "end of code block"

    "name"               shift, and go to state 562
    "end of expression"  shift, and go to state 563

    $default  reduce using rule 638 ($@45)

    $@45  go to state 1081


State 805

  653 optional_struct_variable_declaration_list: "begin of code block" struct_variable_declaration_list "end of code block" .

    $default  reduce using rule 653 (optional_struct_variable_declaration_list)


State 806

  557 struct_variable_declaration_list: struct_variable_declaration_list "end of expression" .

    $default  reduce using rule 557 (struct_variable_declaration_list)


State 807

  128 optional_annotation_list: '[' . annotation_list ']'
  564 struct_variable_declaration_list: struct_variable_declaration_list '[' . annotation_list ']' "end of expression"

    "require"   shift, and go to state 61
    "private"   shift, and go to state 62
    "template"  shift, and go to state 63
    "|>"        shift, and go to state 64
    "::"        shift, and go to state 58
    "name"      shift, and go to state 59
    '!'         shift, and go to state 65
    '('         shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 69
    annotation_list               go to state 1082
    name_in_namespace             go to state 71


State 808

  561 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable "abstract" optional_constant $@36 function_declaration_header "end of expression"
  563                                 | struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@37 function_declaration_header expression_block

    "def"  shift, and go to state 1083


State 809

  559 struct_variable_declaration_list: struct_variable_declaration_list $@35 . structure_variable_declaration "end of expression"

    "[["  shift, and go to state 223
    '@'   shift, and go to state 224

    $default  reduce using rule 542 (optional_field_annotation)

    metadata_argument_list          go to state 225
    optional_field_annotation       go to state 1084
    structure_variable_declaration  go to state 1085


State 810

  494 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  495     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 1086


State 811

  596 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 596 (let_variable_name_with_pos_list)


State 812

  599 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1087


State 813

  600 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression" .

    $default  reduce using rule 600 (let_variable_declaration)


State 814

  601 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"
  602                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 476
    "@ <|"                            shift, and go to state 477
    "@@ <|"                           shift, and go to state 478
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 523
    expression_keyword      go to state 526
    expr_pipe               go to state 1088
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign             go to state 651
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1089
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 815

  604 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 604 (let_variable_declaration)


State 816

  228 expr_call_pipe: expr . expr_full_block_assumed_piped
  371 expr_assign: expr .
  372            | expr . '=' expr
  373            | expr . "<-" expr
  374            | expr . ":=" expr
  375            | expr . "&=" expr
  376            | expr . "|=" expr
  377            | expr . "^=" expr
  378            | expr . "&&=" expr
  379            | expr . "||=" expr
  380            | expr . "^^=" expr
  381            | expr . "+=" expr
  382            | expr . "-=" expr
  383            | expr . "*=" expr
  384            | expr . "/=" expr
  385            | expr . "%=" expr
  386            | expr . "<<=" expr
  387            | expr . ">>=" expr
  388            | expr . "<<<=" expr
  389            | expr . ">>>=" expr
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'
  603 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 746
    "as"                 shift, and go to state 747
    "+="                 shift, and go to state 878
    "-="                 shift, and go to state 879
    "/="                 shift, and go to state 880
    "*="                 shift, and go to state 881
    "%="                 shift, and go to state 882
    "&="                 shift, and go to state 883
    "|="                 shift, and go to state 884
    "^="                 shift, and go to state 885
    "<<"                 shift, and go to state 756
    ">>"                 shift, and go to state 757
    "++"                 shift, and go to state 758
    "--"                 shift, and go to state 759
    "<="                 shift, and go to state 760
    "<<="                shift, and go to state 886
    ">>="                shift, and go to state 887
    ">="                 shift, and go to state 763
    "=="                 shift, and go to state 764
    "!="                 shift, and go to state 765
    "->"                 shift, and go to state 766
    "<-"                 shift, and go to state 888
    "??"                 shift, and go to state 768
    "?."                 shift, and go to state 769
    "?["                 shift, and go to state 770
    "<|"                 shift, and go to state 771
    "|>"                 shift, and go to state 772
    ":="                 shift, and go to state 773
    "<<<"                shift, and go to state 774
    ">>>"                shift, and go to state 775
    "<<<="               shift, and go to state 889
    ">>>="               shift, and go to state 890
    "&&"                 shift, and go to state 778
    "||"                 shift, and go to state 779
    "^^"                 shift, and go to state 780
    "&&="                shift, and go to state 891
    "||="                shift, and go to state 892
    "^^="                shift, and go to state 893
    ".."                 shift, and go to state 784
    "end of expression"  shift, and go to state 1090
    '='                  shift, and go to state 894
    '?'                  shift, and go to state 786
    '|'                  shift, and go to state 787
    '^'                  shift, and go to state 788
    '&'                  shift, and go to state 789
    '<'                  shift, and go to state 790
    '>'                  shift, and go to state 791
    '-'                  shift, and go to state 792
    '+'                  shift, and go to state 793
    '*'                  shift, and go to state 794
    '/'                  shift, and go to state 795
    '%'                  shift, and go to state 796
    '.'                  shift, and go to state 797
    '['                  shift, and go to state 798
    '$'                  shift, and go to state 509
    '@'                  shift, and go to state 683

    $default  reduce using rule 371 (expr_assign)

    block_or_lambda                go to state 732
    expr_full_block_assumed_piped  go to state 799


State 817

  723 type_declaration_no_options: "type" '<' $@50 type_declaration . '>' $@51
  781 type_declaration: type_declaration . '|' type_declaration_no_options
  782                 | type_declaration . '|' '#'

    '|'  shift, and go to state 423
    '>'  shift, and go to state 1091


State 818

  746 type_declaration_no_options: "array" '<' $@55 type_declaration . '>' $@56
  781 type_declaration: type_declaration . '|' type_declaration_no_options
  782                 | type_declaration . '|' '#'

    '|'  shift, and go to state 423
    '>'  shift, and go to state 1092


State 819

  749 type_declaration_no_options: "table" '<' $@57 table_type_pair . '>' $@58

    '>'  shift, and go to state 1093


State 820

  711 table_type_pair: type_declaration .
  712                | type_declaration . c_or_s type_declaration
  781 type_declaration: type_declaration . '|' type_declaration_no_options
  782                 | type_declaration . '|' '#'

    "end of expression"  shift, and go to state 616
    ','                  shift, and go to state 617
    '|'                  shift, and go to state 423

    $default  reduce using rule 711 (table_type_pair)

    c_or_s  go to state 1094


State 821

  724 type_declaration_no_options: "typedecl" '(' expr ')' .

    $default  reduce using rule 724 (type_declaration_no_options)


State 822

  752 type_declaration_no_options: "iterator" '<' $@59 type_declaration . '>' $@60
  781 type_declaration: type_declaration . '|' type_declaration_no_options
  782                 | type_declaration . '|' '#'

    '|'  shift, and go to state 423
    '>'  shift, and go to state 1095


State 823

  742 type_declaration_no_options: "smart_ptr" '<' $@53 type_declaration . '>' $@54
  781 type_declaration: type_declaration . '|' type_declaration_no_options
  782                 | type_declaration . '|' '#'

    '|'  shift, and go to state 423
    '>'  shift, and go to state 1096


State 824

  699 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 699 (auto_type_declaration)


State 825

  701 bitfield_bits: "name" .

    $default  reduce using rule 701 (bitfield_bits)


State 826

  702 bitfield_bits: bitfield_bits . "end of expression" "name"
  708 bitfield_type_declaration: "bitfield" '<' $@48 bitfield_bits . '>' $@49

    "end of expression"  shift, and go to state 1097
    '>'                  shift, and go to state 1098


State 827

  756 type_declaration_no_options: "block" '<' $@61 type_declaration . '>' $@62
  781 type_declaration: type_declaration . '|' type_declaration_no_options
  782                 | type_declaration . '|' '#'

    '|'  shift, and go to state 423
    '>'  shift, and go to state 1099


State 828

  759 type_declaration_no_options: "block" '<' $@63 optional_function_argument_list . optional_function_type '>' $@64

    ':'  shift, and go to state 379

    $default  reduce using rule 132 (optional_function_type)

    optional_function_type  go to state 1100


State 829

  763 type_declaration_no_options: "function" '<' $@65 type_declaration . '>' $@66
  781 type_declaration: type_declaration . '|' type_declaration_no_options
  782                 | type_declaration . '|' '#'

    '|'  shift, and go to state 423
    '>'  shift, and go to state 1101


State 830

  766 type_declaration_no_options: "function" '<' $@67 optional_function_argument_list . optional_function_type '>' $@68

    ':'  shift, and go to state 379

    $default  reduce using rule 132 (optional_function_type)

    optional_function_type  go to state 1102


State 831

  770 type_declaration_no_options: "lambda" '<' $@69 type_declaration . '>' $@70
  781 type_declaration: type_declaration . '|' type_declaration_no_options
  782                 | type_declaration . '|' '#'

    '|'  shift, and go to state 423
    '>'  shift, and go to state 1103


State 832

  773 type_declaration_no_options: "lambda" '<' $@71 optional_function_argument_list . optional_function_type '>' $@72

    ':'  shift, and go to state 379

    $default  reduce using rule 132 (optional_function_type)

    optional_function_type  go to state 1104


State 833

  571 tuple_type_list: tuple_type .

    $default  reduce using rule 571 (tuple_type_list)


State 834

  572 tuple_type_list: tuple_type_list . c_or_s tuple_type
  776 type_declaration_no_options: "tuple" '<' $@73 tuple_type_list . '>' $@74

    "end of expression"  shift, and go to state 616
    ','                  shift, and go to state 617
    '>'                  shift, and go to state 1105

    c_or_s  go to state 1106


State 835

  577 variant_type_list: variant_type .

    $default  reduce using rule 577 (variant_type_list)


State 836

  578 variant_type_list: variant_type_list . c_or_s variant_type
  779 type_declaration_no_options: "variant" '<' $@75 variant_type_list . '>' $@76

    "end of expression"  shift, and go to state 616
    ','                  shift, and go to state 617
    '>'                  shift, and go to state 1107

    c_or_s  go to state 1108


State 837

  700 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 700 (auto_type_declaration)


State 838

  727 type_declaration_no_options: '$' name_in_namespace '<' $@52 . type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    type_declaration_no_options_list  go to state 1109
    name_in_namespace                 go to state 357
    basic_type_declaration            go to state 358
    structure_type_declaration        go to state 359
    auto_type_declaration             go to state 360
    bitfield_type_declaration         go to state 361
    type_declaration_no_options       go to state 362
    type_declaration                  go to state 1110


State 839

  725 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list . ')'

    ')'  shift, and go to state 1111


State 840

  728 type_declaration_no_options: type_declaration_no_options '-' '[' ']' .

    $default  reduce using rule 728 (type_declaration_no_options)


State 841

  713 dim_list: '[' expr ']' .

    $default  reduce using rule 713 (dim_list)


State 842

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'
  714 dim_list: dim_list '[' expr . ']'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798
    ']'    shift, and go to state 1112


State 843

  705 bitfield_alias_bits: bitfield_alias_bits "name" "end of expression" .

    $default  reduce using rule 705 (bitfield_alias_bits)


State 844

  797 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 "name" $@86 "begin of code block" $@87 bitfield_alias_bits $@88 "end of code block" .

    $default  reduce using rule 797 (bitfield_alias_declaration)


State 845

  570 tuple_type: "name" ':' . type_declaration

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 362
    type_declaration             go to state 1113


State 846

  575 tuple_alias_type_list: tuple_alias_type_list tuple_type c_or_s .

    $default  reduce using rule 575 (tuple_alias_type_list)


State 847

  787 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 "name" $@78 "begin of code block" $@79 tuple_alias_type_list $@80 "end of code block" .

    $default  reduce using rule 787 (tuple_alias_declaration)


State 848

  576 variant_type: "name" ':' . type_declaration

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 362
    type_declaration             go to state 1114


State 849

  581 variant_alias_type_list: variant_alias_type_list variant_type c_or_s .

    $default  reduce using rule 581 (variant_alias_type_list)


State 850

  792 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 "name" $@82 "begin of code block" $@83 variant_alias_type_list $@84 "end of code block" .

    $default  reduce using rule 792 (variant_alias_declaration)


State 851

  566 function_argument_declaration: "$a" '(' expr ')' .

    $default  reduce using rule 566 (function_argument_declaration)


State 852

  658 variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1115
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 853

  659 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1116


State 854

  583 copy_or_move: "<-" .

    $default  reduce using rule 583 (copy_or_move)


State 855

  660 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  661                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 1117


State 856

  582 copy_or_move: '=' .

    $default  reduce using rule 582 (copy_or_move)


State 857

  586 variable_declaration: variable_name_with_pos_list ':' . type_declaration
  587                     | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 362
    type_declaration             go to state 1118


State 858

  585 variable_declaration: variable_name_with_pos_list '&' .

    $default  reduce using rule 585 (variable_declaration)


State 859

  588 variable_declaration: variable_name_with_pos_list copy_or_move . expr
  589                     | variable_name_with_pos_list copy_or_move . expr_pipe

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 476
    "@ <|"                            shift, and go to state 477
    "@@ <|"                           shift, and go to state 478
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 523
    expression_keyword      go to state 526
    expr_pipe               go to state 1119
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign             go to state 651
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1120
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 860

  845 make_struct_decl: "struct" '<' $@89 . type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 1121


State 861

  848 make_struct_decl: "class" '<' $@91 . type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 1122


State 862

   84 expression_while_loop: "while" expr expression_block .

    $default  reduce using rule 84 (expression_while_loop)


State 863

   82 expression_for_loop: "for" $@5 variable_name_with_pos_list . "in" expr_list expression_block
  660 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  661                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 1123
    ','   shift, and go to state 855


State 864

  282 new_type_declaration: '<' $@12 . type_declaration '>' $@13

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 362
    type_declaration             go to state 1124


State 865

  285 expr_new: "new" new_type_declaration '(' . use_initializer ')'
  286         | "new" new_type_declaration '(' . expr_list ')'
  287         | "new" new_type_declaration '(' . make_struct_single ')'
  288         | "new" new_type_declaration '(' . "uninitialized" make_struct_single ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "uninitialized"                   shift, and go to state 1125
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "$f"                              shift, and go to state 722
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 723
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    $default  reduce using rule 835 (use_initializer)

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 1126
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 721
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_fields      go to state 725
    make_struct_single      go to state 1127
    use_initializer         go to state 1128
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 866

  335 expr_type_info: "typeinfo" '(' name_in_namespace . expr ')'
  336               | "typeinfo" '(' name_in_namespace . '<' "name" '>' expr ')'
  337               | "typeinfo" '(' name_in_namespace . '<' "name" c_or_s "name" '>' expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '<'                               shift, and go to state 1129
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1130
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 867

  339 expr_type_info: "typeinfo" name_in_namespace '<' . "name" '>' '(' expr ')'
  340               | "typeinfo" name_in_namespace '<' . "name" "end of expression" "name" '>' '(' expr ')'

    "name"  shift, and go to state 1131


State 868

  338 expr_type_info: "typeinfo" name_in_namespace '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1132
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 869

  334 expr_type_decl: "type" '<' $@20 . type_declaration '>' $@21

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 362
    type_declaration             go to state 1133


State 870

  871 make_dim_decl: "array" "struct" '<' . $@99 type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 869 ($@99)

    $@99  go to state 1134


State 871

  874 make_dim_decl: "array" "tuple" '<' . $@101 type_declaration_no_options '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 872 ($@101)

    $@101  go to state 1135


State 872

  877 make_dim_decl: "array" "variant" '<' . $@103 type_declaration_no_options '>' $@104 '(' make_variant_dim ')'

    $default  reduce using rule 875 ($@103)

    $@103  go to state 1136


State 873

  881 make_dim_decl: "array" '<' $@105 . type_declaration_no_options '>' $@106 '(' optional_expr_list ')'

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 1137


State 874

  342 expr_list: expr_list . ',' expr
  878 make_dim_decl: "array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 961

    $default  reduce using rule 897 (optional_comma)

    optional_comma  go to state 1138


State 875

  297 expression_return: "return" "<-" expr_pipe .

    $default  reduce using rule 297 (expression_return)


State 876

  294 expression_return_no_pipe: "return" "<-" expr_list .
  342 expr_list: expr_list . ',' expr

    ','  shift, and go to state 877

    $default  reduce using rule 294 (expression_return_no_pipe)


State 877

  342 expr_list: expr_list ',' . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1139
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 878

  381 expr_assign: expr "+=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1140
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 879

  382 expr_assign: expr "-=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1141
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 880

  384 expr_assign: expr "/=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1142
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 881

  383 expr_assign: expr "*=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1143
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 882

  385 expr_assign: expr "%=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1144
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 883

  375 expr_assign: expr "&=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1145
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 884

  376 expr_assign: expr "|=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1146
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 885

  377 expr_assign: expr "^=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1147
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 886

  386 expr_assign: expr "<<=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1148
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 887

  387 expr_assign: expr ">>=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1149
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 888

  373 expr_assign: expr "<-" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1150
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 889

  388 expr_assign: expr "<<<=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1151
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 890

  389 expr_assign: expr ">>>=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1152
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 891

  378 expr_assign: expr "&&=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1153
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 892

  379 expr_assign: expr "||=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1154
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 893

  380 expr_assign: expr "^^=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1155
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 894

  372 expr_assign: expr '=' . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1156
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 895

  303 expression_try_catch: "try" expression_block "recover" . expression_block

    "begin of code block"  shift, and go to state 291

    expression_block  go to state 1157


State 896

  719 type_declaration_no_options: type_declaration_no_options . dim_list
  720                            | type_declaration_no_options . '[' ']'
  728                            | type_declaration_no_options . '-' '[' ']'
  729                            | type_declaration_no_options . "explicit"
  730                            | type_declaration_no_options . "const"
  731                            | type_declaration_no_options . '-' "const"
  732                            | type_declaration_no_options . '&'
  733                            | type_declaration_no_options . '-' '&'
  734                            | type_declaration_no_options . '#'
  735                            | type_declaration_no_options . "implicit"
  736                            | type_declaration_no_options . '-' '#'
  737                            | type_declaration_no_options . "==" "const"
  738                            | type_declaration_no_options . "==" '&'
  739                            | type_declaration_no_options . '?'
  743                            | type_declaration_no_options . "??"
  893 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'
  894                | "table" '<' type_declaration_no_options . c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "const"              shift, and go to state 412
    "implicit"           shift, and go to state 413
    "explicit"           shift, and go to state 414
    "=="                 shift, and go to state 415
    "??"                 shift, and go to state 416
    "end of expression"  shift, and go to state 616
    ','                  shift, and go to state 617
    '?'                  shift, and go to state 417
    '&'                  shift, and go to state 418
    '>'                  shift, and go to state 1158
    '-'                  shift, and go to state 419
    '['                  shift, and go to state 420
    '#'                  shift, and go to state 421

    c_or_s    go to state 1159
    dim_list  go to state 422


State 897

  892 make_table_decl: "table" '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1160


State 898

  279 expression_delete: "delete" "explicit" expr .
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    $default  reduce using rule 279 (expression_delete)


State 899

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  492     | "deref" '(' expr . ')'
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798
    ')'    shift, and go to state 1161


State 900

   85 expression_with: "with" expr expression_block .

    $default  reduce using rule 85 (expression_with)


State 901

   87 expression_with_alias: "assume" "name" '=' . $@6 expr

    $default  reduce using rule 86 ($@6)

    $@6  go to state 1162


State 902

  325 expr_cast: "cast" '<' $@14 . type_declaration_no_options '>' $@15 expr

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 1163


State 903

  328 expr_cast: "upcast" '<' $@16 . type_declaration_no_options '>' $@17 expr

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 1164


State 904

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  493     | "addr" '(' expr . ')'
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798
    ')'    shift, and go to state 1165


State 905

  331 expr_cast: "reinterpret" '<' $@18 . type_declaration_no_options '>' $@19 expr

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 1166


State 906

   60 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 60 (expression_label)


State 907

   61 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 61 (expression_goto)


State 908

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  524     | "unsafe" '(' expr . ')'
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798
    ')'    shift, and go to state 1167


State 909

  885 make_dim_decl: "fixed_array" '<' $@107 . type_declaration_no_options '>' $@108 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 1168


State 910

  342 expr_list: expr_list . ',' expr
  882 make_dim_decl: "fixed_array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 961

    $default  reduce using rule 897 (optional_comma)

    optional_comma  go to state 1169


State 911

  854 make_struct_decl: "default" '<' $@95 . type_declaration_no_options '>' $@96 use_initializer

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 1170


State 912

  863 make_tuple_call: "tuple" '<' $@97 . type_declaration_no_options '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 1171


State 913

  342 expr_list: expr_list . ',' expr
  860 make_tuple_call: "tuple" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 961

    $default  reduce using rule 897 (optional_comma)

    optional_comma  go to state 1172


State 914

  851 make_struct_decl: "variant" '<' $@93 . type_declaration_no_options '>' $@94 '(' make_variant_dim ')'

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 1173


State 915

  230 expr_call_pipe: "generator" '<' type_declaration_no_options . '>' optional_capture_list expr_full_block_assumed_piped
  494 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  495     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  719 type_declaration_no_options: type_declaration_no_options . dim_list
  720                            | type_declaration_no_options . '[' ']'
  728                            | type_declaration_no_options . '-' '[' ']'
  729                            | type_declaration_no_options . "explicit"
  730                            | type_declaration_no_options . "const"
  731                            | type_declaration_no_options . '-' "const"
  732                            | type_declaration_no_options . '&'
  733                            | type_declaration_no_options . '-' '&'
  734                            | type_declaration_no_options . '#'
  735                            | type_declaration_no_options . "implicit"
  736                            | type_declaration_no_options . '-' '#'
  737                            | type_declaration_no_options . "==" "const"
  738                            | type_declaration_no_options . "==" '&'
  739                            | type_declaration_no_options . '?'
  743                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "??"        shift, and go to state 416
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '>'         shift, and go to state 1174
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    dim_list  go to state 422


State 916

  302 expression_yield: "yield" "<-" expr_pipe .

    $default  reduce using rule 302 (expression_yield)


State 917

  228 expr_call_pipe: expr . expr_full_block_assumed_piped
  299 expression_yield_no_pipe: "yield" "<-" expr .
  371 expr_assign: expr .
  372            | expr . '=' expr
  373            | expr . "<-" expr
  374            | expr . ":=" expr
  375            | expr . "&=" expr
  376            | expr . "|=" expr
  377            | expr . "^=" expr
  378            | expr . "&&=" expr
  379            | expr . "||=" expr
  380            | expr . "^^=" expr
  381            | expr . "+=" expr
  382            | expr . "-=" expr
  383            | expr . "*=" expr
  384            | expr . "/=" expr
  385            | expr . "%=" expr
  386            | expr . "<<=" expr
  387            | expr . ">>=" expr
  388            | expr . "<<<=" expr
  389            | expr . ">>>=" expr
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 746
    "as"    shift, and go to state 747
    "+="    shift, and go to state 878
    "-="    shift, and go to state 879
    "/="    shift, and go to state 880
    "*="    shift, and go to state 881
    "%="    shift, and go to state 882
    "&="    shift, and go to state 883
    "|="    shift, and go to state 884
    "^="    shift, and go to state 885
    "<<"    shift, and go to state 756
    ">>"    shift, and go to state 757
    "++"    shift, and go to state 758
    "--"    shift, and go to state 759
    "<="    shift, and go to state 760
    "<<="   shift, and go to state 886
    ">>="   shift, and go to state 887
    ">="    shift, and go to state 763
    "=="    shift, and go to state 764
    "!="    shift, and go to state 765
    "->"    shift, and go to state 766
    "<-"    shift, and go to state 888
    "??"    shift, and go to state 768
    "?."    shift, and go to state 769
    "?["    shift, and go to state 770
    "<|"    shift, and go to state 771
    "|>"    shift, and go to state 772
    ":="    shift, and go to state 773
    "<<<"   shift, and go to state 774
    ">>>"   shift, and go to state 775
    "<<<="  shift, and go to state 889
    ">>>="  shift, and go to state 890
    "&&"    shift, and go to state 778
    "||"    shift, and go to state 779
    "^^"    shift, and go to state 780
    "&&="   shift, and go to state 891
    "||="   shift, and go to state 892
    "^^="   shift, and go to state 893
    ".."    shift, and go to state 784
    '='     shift, and go to state 894
    '?'     shift, and go to state 786
    '|'     shift, and go to state 787
    '^'     shift, and go to state 788
    '&'     shift, and go to state 789
    '<'     shift, and go to state 790
    '>'     shift, and go to state 791
    '-'     shift, and go to state 792
    '+'     shift, and go to state 793
    '*'     shift, and go to state 794
    '/'     shift, and go to state 795
    '%'     shift, and go to state 796
    '.'     shift, and go to state 797
    '['     shift, and go to state 798
    '$'     shift, and go to state 509
    '@'     shift, and go to state 683

    " <|"     reduce using rule 371 (expr_assign)
    $default  reduce using rule 299 (expression_yield_no_pipe)

    block_or_lambda                go to state 732
    expr_full_block_assumed_piped  go to state 799


State 918

  348 block_or_lambda: '@' '@' .

    $default  reduce using rule 348 (block_or_lambda)


State 919

  360 expr_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "capture"  shift, and go to state 986
    "[["       shift, and go to state 987

    $default  reduce using rule 356 (optional_capture_list)

    optional_capture_list  go to state 1175


State 920

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  526 expr_mtag: "$$" '(' expr . ')'
  534          | expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798
    ')'    shift, and go to state 1176


State 921

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  527 expr_mtag: "$i" '(' expr . ')'
  534          | expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798
    ')'    shift, and go to state 1177


State 922

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  528 expr_mtag: "$v" '(' expr . ')'
  534          | expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798
    ')'    shift, and go to state 1178


State 923

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  529 expr_mtag: "$b" '(' expr . ')'
  534          | expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798
    ')'    shift, and go to state 1179


State 924

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  530 expr_mtag: "$a" '(' expr . ')'
  534          | expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798
    ')'    shift, and go to state 1180


State 925

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  532 expr_mtag: "$c" '(' expr . ')' '(' ')'
  533          | "$c" '(' expr . ')' '(' expr_list ')'
  534          | expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798
    ')'    shift, and go to state 1181


State 926

  660 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  661                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  901 array_comprehension: "[[" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']' ']'

    "in"  shift, and go to state 1182
    ','   shift, and go to state 855


State 927

  822 optional_block: "where" . expr_block

    "begin of code block"  shift, and go to state 291
    '$'                    shift, and go to state 509
    '@'                    shift, and go to state 683

    expression_block  go to state 684
    block_or_lambda   go to state 685
    expr_block        go to state 1183


State 928

  454 expr: '-' . expr
  728 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  731                            | type_declaration_no_options '-' . "const"
  733                            | type_declaration_no_options '-' . '&'
  736                            | type_declaration_no_options '-' . '#'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "const"                           shift, and go to state 603
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '&'                               shift, and go to state 604
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 1184
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510
    '#'                               shift, and go to state 606

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 712
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 929

  713 dim_list: '[' . expr ']'
  720 type_declaration_no_options: type_declaration_no_options '[' . ']'
  866 make_dim_decl: '[' . optional_expr_list ']'
  899 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  900                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "for"                             shift, and go to state 717
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "iterator"                        shift, and go to state 718
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    ']'                               shift, and go to state 607
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    ']'  [reduce using rule 256 (optional_expr_list)]

    string_builder          go to state 511
    expr_reader             go to state 512
    optional_expr_list      go to state 719
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 720
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1185
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 930

  481 expr: '(' . expr_list optional_comma ')'
  482     | '(' . make_struct_single ')'
  839 make_struct_decl: "[[" type_declaration_no_options '(' . ')' optional_block optional_trailing_delim_sqr_sqr
  840                 | "[[" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "$f"                              shift, and go to state 722
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 723
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    ')'                               shift, and go to state 1186
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 724
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 721
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_fields      go to state 725
    make_struct_single      go to state 726
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 931

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'
  855 make_tuple: expr .
  856           | expr . "=>" expr

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "=>"   shift, and go to state 1187
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    $default  reduce using rule 855 (make_tuple)


State 932

  805 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  806                   | make_struct_fields . ',' "name" ":=" expr
  809                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  810                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  813 make_struct_dim: make_struct_fields .

    ','  shift, and go to state 967

    $default  reduce using rule 813 (make_struct_dim)


State 933

  814 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  837 make_struct_decl: "[[" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"              shift, and go to state 927
    "end of expression"  shift, and go to state 1188

    $default  reduce using rule 821 (optional_block)

    optional_block  go to state 1189


State 934

  838 make_struct_decl: "[[" type_declaration_no_options optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1190
    ",]]"  shift, and go to state 1191
    ']'    shift, and go to state 1192

    optional_trailing_delim_sqr_sqr  go to state 1193


State 935

  857 make_tuple: make_tuple . ',' expr
  864 make_dim: make_tuple .

    ','  shift, and go to state 1194

    $default  reduce using rule 864 (make_dim)


State 936

  865 make_dim: make_dim . "end of expression" make_tuple
  867 make_dim_decl: "[[" type_declaration_no_options make_dim . optional_trailing_semicolon_sqr_sqr

    "end of expression"  shift, and go to state 1195
    ";]]"                shift, and go to state 1196
    ']'                  shift, and go to state 1197

    optional_trailing_semicolon_sqr_sqr  go to state 1198


State 937

  660 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  661                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  902 array_comprehension: "[{" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "in"  shift, and go to state 1199
    ','   shift, and go to state 855


State 938

  481 expr: '(' . expr_list optional_comma ')'
  482     | '(' . make_struct_single ')'
  842 make_struct_decl: "[{" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "$f"                              shift, and go to state 722
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 723
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    ')'                               shift, and go to state 1200
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 724
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 721
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_fields      go to state 725
    make_struct_single      go to state 726
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 939

  814 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  841 make_struct_decl: "[{" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"              shift, and go to state 927
    "end of expression"  shift, and go to state 1188

    $default  reduce using rule 821 (optional_block)

    optional_block  go to state 1201


State 940

  865 make_dim: make_dim . "end of expression" make_tuple
  868 make_dim_decl: "[{" type_declaration_no_options make_dim . optional_trailing_semicolon_cur_sqr

    "end of code block"  shift, and go to state 1202
    "end of expression"  shift, and go to state 1195
    ";}]"                shift, and go to state 1203

    optional_trailing_semicolon_cur_sqr  go to state 1204


State 941

  660 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  661                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  904 array_comprehension: "{{" "for" variable_name_with_pos_list . "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "in"  shift, and go to state 1205
    ','   shift, and go to state 855


State 942

  858 make_map_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1206
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 943

  823 optional_trailing_semicolon_cur_cur: "end of code block" . "end of code block"

    "end of code block"  shift, and go to state 1207


State 944

  887 make_table: make_table "end of expression" . make_map_tuple

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 700
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_map_tuple          go to state 1208
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 945

  824 optional_trailing_semicolon_cur_cur: ";}}" .

    $default  reduce using rule 824 (optional_trailing_semicolon_cur_cur)


State 946

  891 make_table_decl: "{{" make_table optional_trailing_semicolon_cur_cur .

    $default  reduce using rule 891 (make_table_decl)


State 947

  266 expression_keyword: "keyword" '<' $@8 . type_declaration_no_options_list '>' $@9 expr

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    type_declaration_no_options_list  go to state 1209
    name_in_namespace                 go to state 357
    basic_type_declaration            go to state 358
    structure_type_declaration        go to state 359
    auto_type_declaration             go to state 360
    bitfield_type_declaration         go to state 361
    type_declaration_no_options       go to state 362
    type_declaration                  go to state 1110


State 948

  255 expr_keyword: "keyword" expr expression_block .

    $default  reduce using rule 255 (expr_keyword)


State 949

  269 expression_keyword: "type function" '<' $@10 . type_declaration_no_options_list '>' $@11 optional_expr_list_in_braces

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    type_declaration_no_options_list  go to state 1210
    name_in_namespace                 go to state 357
    basic_type_declaration            go to state 358
    structure_type_declaration        go to state 359
    auto_type_declaration             go to state 360
    bitfield_type_declaration         go to state 361
    type_declaration_no_options       go to state 362
    type_declaration                  go to state 1110


State 950

   37 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 37 (string_builder)


State 951

   36 string_builder_body: string_builder_body "{" . expr optional_format_string "}"

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1211
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 952

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   35 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 227
    STRING_CHARACTER_ESC  shift, and go to state 228

    $default  reduce using rule 35 (string_builder_body)


State 953

  660 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  661                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  903 array_comprehension: "begin of code block" "for" variable_name_with_pos_list . "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "in"  shift, and go to state 1212
    ','   shift, and go to state 855


State 954

  890 make_table_decl: "begin of code block" optional_expr_map_tuple_list "end of code block" .

    $default  reduce using rule 890 (make_table_decl)


State 955

  889 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple
  898 optional_comma: ',' .

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    $default  reduce using rule 898 (optional_comma)

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 700
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_map_tuple          go to state 1213
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 956

  261 optional_expr_map_tuple_list: expr_map_tuple_list optional_comma .

    $default  reduce using rule 261 (optional_expr_map_tuple_list)


State 957

  227 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" . expressions "end of code block"

    $default  reduce using rule 252 (expressions)

    expressions  go to state 1214


State 958

  660 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  661                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  899 array_comprehension: '[' "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1215
    ','   shift, and go to state 855


State 959

  900 array_comprehension: '[' "iterator" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 627
    "name"  shift, and go to state 628

    variable_name_with_pos_list  go to state 1216


State 960

  866 make_dim_decl: '[' optional_expr_list ']' .

    $default  reduce using rule 866 (make_dim_decl)


State 961

  342 expr_list: expr_list ',' . expr
  898 optional_comma: ',' .

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    $default  reduce using rule 898 (optional_comma)

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1139
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 962

  257 optional_expr_list: expr_list optional_comma .

    $default  reduce using rule 257 (optional_expr_list)


State 963

  807 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  808                   | "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1217
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 964

  804 make_struct_fields: "name" ":=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1218
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 965

  803 make_struct_fields: "name" copy_or_move . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1219
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 966

  481 expr: '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1220


State 967

  805 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  806                   | make_struct_fields ',' . "name" ":=" expr
  809                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  810                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 1221
    "name"  shift, and go to state 1222


State 968

  482 expr: '(' make_struct_single ')' .

    $default  reduce using rule 482 (expr)


State 969

  416 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 1223


State 970

  541 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 1224


State 971

  420 func_addr_expr: '@' '@' '<' . $@23 type_declaration_no_options '>' $@24 func_addr_name
  423               | '@' '@' '<' . $@25 optional_function_argument_list optional_function_type '>' $@26 func_addr_name

    ':'       reduce using rule 421 ($@25)
    '>'       reduce using rule 421 ($@25)
    '('       reduce using rule 421 ($@25)
    $default  reduce using rule 418 ($@23)

    $@23  go to state 1225
    $@25  go to state 1226


State 972

  415 func_addr_name: name_in_namespace .

    $default  reduce using rule 415 (func_addr_name)


State 973

  417 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 417 (func_addr_expr)


State 974

   78 expression_if_then_else: if_or_static_if expr expression_block . expression_else

    "else"         shift, and go to state 1227
    "elif"         shift, and go to state 1228
    "static_elif"  shift, and go to state 1229

    $default  reduce using rule 65 (expression_else)

    elif_or_static_elif  go to state 1230
    expression_else      go to state 1231


State 975

   80 expression_if_then_else: expression_if_one_liner "if" $@4 . expr expression_else_one_liner "end of expression"

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1232
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 976

  363 expr_full_block_assumed_piped: block_or_lambda $@22 . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

    '['  shift, and go to state 15

    $default  reduce using rule 127 (optional_annotation_list)

    optional_annotation_list  go to state 1233


State 977

  435 expr_call: name_in_namespace '(' "uninitialized" . ')'
  437          | name_in_namespace '(' "uninitialized" . make_struct_single ')'

    "$f"    shift, and go to state 722
    "name"  shift, and go to state 1234
    ')'     shift, and go to state 1235

    make_struct_fields  go to state 725
    make_struct_single  go to state 1236


State 978

  411 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'
  866 make_dim_decl: '[' . optional_expr_list ']'
  899 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  900                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "for"                             shift, and go to state 717
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "iterator"                        shift, and go to state 718
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "$f"                              shift, and go to state 722
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 723
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    $default  reduce using rule 256 (optional_expr_list)

    string_builder          go to state 511
    expr_reader             go to state 512
    optional_expr_list      go to state 719
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 720
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 721
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_fields      go to state 1237
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 979

  434 expr_call: name_in_namespace '(' ')' .

    $default  reduce using rule 434 (expr_call)


State 980

  342 expr_list: expr_list . ',' expr
  412 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  438 expr_call: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 1238
    ')'  shift, and go to state 1239


State 981

  436 expr_call: name_in_namespace '(' make_struct_single . ')'

    ')'  shift, and go to state 1240


State 982

  313 tuple_expansion_variable_declaration: "[[" . tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  314                                     | "[[" . tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  317                                     | "[[" . tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr "end of expression"
  318                                     | "[[" . tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr_pipe

    "name"  shift, and go to state 1241

    tuple_expansion  go to state 1242


State 983

  315 tuple_expansion_variable_declaration: '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  316                                     | '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  319                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression"
  320                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr_pipe

    "name"  shift, and go to state 1241

    tuple_expansion  go to state 1243


State 984

  322 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 322 (expression_let)


State 985

  321 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 321 (expression_let)


State 986

  358 optional_capture_list: "capture" . '(' capture_list ')'

    '('  shift, and go to state 1244


State 987

  357 optional_capture_list: "[[" . capture_list ']' ']'

    "<-"    shift, and go to state 1245
    ":="    shift, and go to state 1246
    "name"  shift, and go to state 1247
    '='     shift, and go to state 1248
    '&'     shift, and go to state 1249

    capture_entry  go to state 1250
    capture_list   go to state 1251


State 988

  361 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 289

    $default  reduce using rule 129 (optional_function_argument_list)

    optional_function_argument_list  go to state 1252


State 989

  270 expr_pipe: expr_assign " <|" expr_block .

    $default  reduce using rule 270 (expr_pipe)


State 990

  500 expr: expr "is" "type" . '<' $@29 type_declaration_no_options '>' $@30

    '<'  shift, and go to state 1253


State 991

  540 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 1254


State 992

  502 expr: expr "is" "name" .

    $default  reduce using rule 502 (expr)


State 993

  501 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 501 (expr)


State 994

  506 expr: expr "as" "type" . '<' $@31 type_declaration '>' $@32

    '<'  shift, and go to state 1255


State 995

  538 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1256


State 996

  503 expr: expr "as" "name" .

    $default  reduce using rule 503 (expr)


State 997

  507 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 507 (expr)


State 998

  392 expr_assign_pipe_right: "$ <|" . expr_block

    "begin of code block"  shift, and go to state 291
    '$'                    shift, and go to state 509
    '@'                    shift, and go to state 683

    expression_block  go to state 684
    block_or_lambda   go to state 685
    expr_block        go to state 1257


State 999

  390 expr_assign_pipe_right: "@ <|" . expr_block

    "begin of code block"  shift, and go to state 291
    '$'                    shift, and go to state 509
    '@'                    shift, and go to state 683

    expression_block  go to state 684
    block_or_lambda   go to state 685
    expr_block        go to state 1258


State 1000

  391 expr_assign_pipe_right: "@@ <|" . expr_block

    "begin of code block"  shift, and go to state 291
    '$'                    shift, and go to state 509
    '@'                    shift, and go to state 683

    expression_block  go to state 684
    block_or_lambda   go to state 685
    expr_block        go to state 1259


State 1001

  393 expr_assign_pipe_right: expr_call_pipe .

    $default  reduce using rule 393 (expr_assign_pipe_right)


State 1002

  402 expr_assign_pipe: expr "+=" expr_assign_pipe_right .

    $default  reduce using rule 402 (expr_assign_pipe)


State 1003

  228 expr_call_pipe: expr . expr_full_block_assumed_piped
  381 expr_assign: expr "+=" expr .
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798
    '$'    shift, and go to state 509
    '@'    shift, and go to state 683

    $default  reduce using rule 381 (expr_assign)

    block_or_lambda                go to state 732
    expr_full_block_assumed_piped  go to state 799


State 1004

  403 expr_assign_pipe: expr "-=" expr_assign_pipe_right .

    $default  reduce using rule 403 (expr_assign_pipe)


State 1005

  228 expr_call_pipe: expr . expr_full_block_assumed_piped
  382 expr_assign: expr "-=" expr .
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798
    '$'    shift, and go to state 509
    '@'    shift, and go to state 683

    $default  reduce using rule 382 (expr_assign)

    block_or_lambda                go to state 732
    expr_full_block_assumed_piped  go to state 799


State 1006

  405 expr_assign_pipe: expr "/=" expr_assign_pipe_right .

    $default  reduce using rule 405 (expr_assign_pipe)


State 1007

  228 expr_call_pipe: expr . expr_full_block_assumed_piped
  384 expr_assign: expr "/=" expr .
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798
    '$'    shift, and go to state 509
    '@'    shift, and go to state 683

    $default  reduce using rule 384 (expr_assign)

    block_or_lambda                go to state 732
    expr_full_block_assumed_piped  go to state 799


State 1008

  404 expr_assign_pipe: expr "*=" expr_assign_pipe_right .

    $default  reduce using rule 404 (expr_assign_pipe)


State 1009

  228 expr_call_pipe: expr . expr_full_block_assumed_piped
  383 expr_assign: expr "*=" expr .
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798
    '$'    shift, and go to state 509
    '@'    shift, and go to state 683

    $default  reduce using rule 383 (expr_assign)

    block_or_lambda                go to state 732
    expr_full_block_assumed_piped  go to state 799


State 1010

  406 expr_assign_pipe: expr "%=" expr_assign_pipe_right .

    $default  reduce using rule 406 (expr_assign_pipe)


State 1011

  228 expr_call_pipe: expr . expr_full_block_assumed_piped
  385 expr_assign: expr "%=" expr .
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798
    '$'    shift, and go to state 509
    '@'    shift, and go to state 683

    $default  reduce using rule 385 (expr_assign)

    block_or_lambda                go to state 732
    expr_full_block_assumed_piped  go to state 799


State 1012

  396 expr_assign_pipe: expr "&=" expr_assign_pipe_right .

    $default  reduce using rule 396 (expr_assign_pipe)


State 1013

  228 expr_call_pipe: expr . expr_full_block_assumed_piped
  375 expr_assign: expr "&=" expr .
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798
    '$'    shift, and go to state 509
    '@'    shift, and go to state 683

    $default  reduce using rule 375 (expr_assign)

    block_or_lambda                go to state 732
    expr_full_block_assumed_piped  go to state 799


State 1014

  397 expr_assign_pipe: expr "|=" expr_assign_pipe_right .

    $default  reduce using rule 397 (expr_assign_pipe)


State 1015

  228 expr_call_pipe: expr . expr_full_block_assumed_piped
  376 expr_assign: expr "|=" expr .
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798
    '$'    shift, and go to state 509
    '@'    shift, and go to state 683

    $default  reduce using rule 376 (expr_assign)

    block_or_lambda                go to state 732
    expr_full_block_assumed_piped  go to state 799


State 1016

  398 expr_assign_pipe: expr "^=" expr_assign_pipe_right .

    $default  reduce using rule 398 (expr_assign_pipe)


State 1017

  228 expr_call_pipe: expr . expr_full_block_assumed_piped
  377 expr_assign: expr "^=" expr .
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798
    '$'    shift, and go to state 509
    '@'    shift, and go to state 683

    $default  reduce using rule 377 (expr_assign)

    block_or_lambda                go to state 732
    expr_full_block_assumed_piped  go to state 799


State 1018

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  455     | expr "<<" expr .
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 746
    "as"  shift, and go to state 747
    "++"  shift, and go to state 758
    "--"  shift, and go to state 759
    "->"  shift, and go to state 766
    "??"  shift, and go to state 768
    "?."  shift, and go to state 769
    "?["  shift, and go to state 770
    "<|"  shift, and go to state 771
    "|>"  shift, and go to state 772
    '-'   shift, and go to state 792
    '+'   shift, and go to state 793
    '*'   shift, and go to state 794
    '/'   shift, and go to state 795
    '%'   shift, and go to state 796
    '.'   shift, and go to state 797
    '['   shift, and go to state 798

    $default  reduce using rule 455 (expr)


State 1019

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  456     | expr ">>" expr .
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 746
    "as"  shift, and go to state 747
    "++"  shift, and go to state 758
    "--"  shift, and go to state 759
    "->"  shift, and go to state 766
    "??"  shift, and go to state 768
    "?."  shift, and go to state 769
    "?["  shift, and go to state 770
    "<|"  shift, and go to state 771
    "|>"  shift, and go to state 772
    '-'   shift, and go to state 792
    '+'   shift, and go to state 793
    '*'   shift, and go to state 794
    '/'   shift, and go to state 795
    '%'   shift, and go to state 796
    '.'   shift, and go to state 797
    '['   shift, and go to state 798

    $default  reduce using rule 456 (expr)


State 1020

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  468     | expr "<=" expr .
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    $default  reduce using rule 468 (expr)


State 1021

  407 expr_assign_pipe: expr "<<=" expr_assign_pipe_right .

    $default  reduce using rule 407 (expr_assign_pipe)


State 1022

  228 expr_call_pipe: expr . expr_full_block_assumed_piped
  386 expr_assign: expr "<<=" expr .
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798
    '$'    shift, and go to state 509
    '@'    shift, and go to state 683

    $default  reduce using rule 386 (expr_assign)

    block_or_lambda                go to state 732
    expr_full_block_assumed_piped  go to state 799


State 1023

  408 expr_assign_pipe: expr ">>=" expr_assign_pipe_right .

    $default  reduce using rule 408 (expr_assign_pipe)


State 1024

  228 expr_call_pipe: expr . expr_full_block_assumed_piped
  387 expr_assign: expr ">>=" expr .
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798
    '$'    shift, and go to state 509
    '@'    shift, and go to state 683

    $default  reduce using rule 387 (expr_assign)

    block_or_lambda                go to state 732
    expr_full_block_assumed_piped  go to state 799


State 1025

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  469     | expr ">=" expr .
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    $default  reduce using rule 469 (expr)


State 1026

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  466     | expr "==" expr .
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    $default  reduce using rule 466 (expr)


State 1027

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  467     | expr "!=" expr .
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    $default  reduce using rule 467 (expr)


State 1028

  413 expr_method_call: expr "->" "name" . '(' ')'
  414                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 1260


State 1029

  395 expr_assign_pipe: expr "<-" expr_assign_pipe_right .

    $default  reduce using rule 395 (expr_assign_pipe)


State 1030

  228 expr_call_pipe: expr . expr_full_block_assumed_piped
  373 expr_assign: expr "<-" expr .
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798
    '$'    shift, and go to state 509
    '@'    shift, and go to state 683

    $default  reduce using rule 373 (expr_assign)

    block_or_lambda                go to state 732
    expr_full_block_assumed_piped  go to state 799


State 1031

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  496     | expr "??" expr .
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 746
    "as"  shift, and go to state 747
    "++"  shift, and go to state 758
    "--"  shift, and go to state 759
    "->"  shift, and go to state 766
    "??"  shift, and go to state 768
    "?."  shift, and go to state 769
    "?["  shift, and go to state 770
    "<|"  shift, and go to state 771
    "|>"  shift, and go to state 772
    '.'   shift, and go to state 797
    '['   shift, and go to state 798

    $default  reduce using rule 496 (expr)


State 1032

  535 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1261


State 1033

  487 expr: expr "?." "name" .

    $default  reduce using rule 487 (expr)


State 1034

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  485     | expr "?[" expr . ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798
    ']'    shift, and go to state 1262


State 1035

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  520     | expr "<|" expr .
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 766
    "?."  shift, and go to state 769
    "?["  shift, and go to state 770
    '.'   shift, and go to state 797
    '['   shift, and go to state 798

    $default  reduce using rule 520 (expr)


State 1036

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  521     | expr "|>" expr .
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 766
    "?."  shift, and go to state 769
    "?["  shift, and go to state 770
    '.'   shift, and go to state 797
    '['   shift, and go to state 798

    $default  reduce using rule 521 (expr)


State 1037

  439 expr_call: basic_type_declaration . '(' ')'
  440          | basic_type_declaration . '(' expr_list ')'
  522 expr: expr "|>" basic_type_declaration .

    '('  shift, and go to state 800

    $default  reduce using rule 522 (expr)


State 1038

  374 expr_assign: expr ":=" expr .
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    $default  reduce using rule 374 (expr_assign)


State 1039

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  457     | expr "<<<" expr .
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 746
    "as"  shift, and go to state 747
    "++"  shift, and go to state 758
    "--"  shift, and go to state 759
    "->"  shift, and go to state 766
    "??"  shift, and go to state 768
    "?."  shift, and go to state 769
    "?["  shift, and go to state 770
    "<|"  shift, and go to state 771
    "|>"  shift, and go to state 772
    '-'   shift, and go to state 792
    '+'   shift, and go to state 793
    '*'   shift, and go to state 794
    '/'   shift, and go to state 795
    '%'   shift, and go to state 796
    '.'   shift, and go to state 797
    '['   shift, and go to state 798

    $default  reduce using rule 457 (expr)


State 1040

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  458     | expr ">>>" expr .
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 746
    "as"  shift, and go to state 747
    "++"  shift, and go to state 758
    "--"  shift, and go to state 759
    "->"  shift, and go to state 766
    "??"  shift, and go to state 768
    "?."  shift, and go to state 769
    "?["  shift, and go to state 770
    "<|"  shift, and go to state 771
    "|>"  shift, and go to state 772
    '-'   shift, and go to state 792
    '+'   shift, and go to state 793
    '*'   shift, and go to state 794
    '/'   shift, and go to state 795
    '%'   shift, and go to state 796
    '.'   shift, and go to state 797
    '['   shift, and go to state 798

    $default  reduce using rule 458 (expr)


State 1041

  409 expr_assign_pipe: expr "<<<=" expr_assign_pipe_right .

    $default  reduce using rule 409 (expr_assign_pipe)


State 1042

  228 expr_call_pipe: expr . expr_full_block_assumed_piped
  388 expr_assign: expr "<<<=" expr .
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798
    '$'    shift, and go to state 509
    '@'    shift, and go to state 683

    $default  reduce using rule 388 (expr_assign)

    block_or_lambda                go to state 732
    expr_full_block_assumed_piped  go to state 799


State 1043

  410 expr_assign_pipe: expr ">>>=" expr_assign_pipe_right .

    $default  reduce using rule 410 (expr_assign_pipe)


State 1044

  228 expr_call_pipe: expr . expr_full_block_assumed_piped
  389 expr_assign: expr ">>>=" expr .
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798
    '$'    shift, and go to state 509
    '@'    shift, and go to state 683

    $default  reduce using rule 389 (expr_assign)

    block_or_lambda                go to state 732
    expr_full_block_assumed_piped  go to state 799


State 1045

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  473     | expr "&&" expr .
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    $default  reduce using rule 473 (expr)


State 1046

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  474     | expr "||" expr .
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "^^"   shift, and go to state 780
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    $default  reduce using rule 474 (expr)


State 1047

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  475     | expr "^^" expr .
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    $default  reduce using rule 475 (expr)


State 1048

  399 expr_assign_pipe: expr "&&=" expr_assign_pipe_right .

    $default  reduce using rule 399 (expr_assign_pipe)


State 1049

  228 expr_call_pipe: expr . expr_full_block_assumed_piped
  378 expr_assign: expr "&&=" expr .
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798
    '$'    shift, and go to state 509
    '@'    shift, and go to state 683

    $default  reduce using rule 378 (expr_assign)

    block_or_lambda                go to state 732
    expr_full_block_assumed_piped  go to state 799


State 1050

  400 expr_assign_pipe: expr "||=" expr_assign_pipe_right .

    $default  reduce using rule 400 (expr_assign_pipe)


State 1051

  228 expr_call_pipe: expr . expr_full_block_assumed_piped
  379 expr_assign: expr "||=" expr .
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798
    '$'    shift, and go to state 509
    '@'    shift, and go to state 683

    $default  reduce using rule 379 (expr_assign)

    block_or_lambda                go to state 732
    expr_full_block_assumed_piped  go to state 799


State 1052

  401 expr_assign_pipe: expr "^^=" expr_assign_pipe_right .

    $default  reduce using rule 401 (expr_assign_pipe)


State 1053

  228 expr_call_pipe: expr . expr_full_block_assumed_piped
  380 expr_assign: expr "^^=" expr .
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798
    '$'    shift, and go to state 509
    '@'    shift, and go to state 683

    $default  reduce using rule 380 (expr_assign)

    block_or_lambda                go to state 732
    expr_full_block_assumed_piped  go to state 799


State 1054

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  476     | expr ".." expr .
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    ".."  error (nonassociative)

    $default  reduce using rule 476 (expr)


State 1055

  394 expr_assign_pipe: expr '=' expr_assign_pipe_right .

    $default  reduce using rule 394 (expr_assign_pipe)


State 1056

  228 expr_call_pipe: expr . expr_full_block_assumed_piped
  372 expr_assign: expr '=' expr .
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798
    '$'    shift, and go to state 509
    '@'    shift, and go to state 683

    $default  reduce using rule 372 (expr_assign)

    block_or_lambda                go to state 732
    expr_full_block_assumed_piped  go to state 799


State 1057

  508 expr: expr '?' "as" . "name"
  511     | expr '?' "as" . "type" '<' $@33 type_declaration '>' $@34
  512     | expr '?' "as" . basic_type_declaration
  539 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1263
    "bool"      shift, and go to state 322
    "void"      shift, and go to state 323
    "string"    shift, and go to state 324
    "int"       shift, and go to state 326
    "int2"      shift, and go to state 327
    "int3"      shift, and go to state 328
    "int4"      shift, and go to state 329
    "uint"      shift, and go to state 330
    "bitfield"  shift, and go to state 469
    "uint2"     shift, and go to state 332
    "uint3"     shift, and go to state 333
    "uint4"     shift, and go to state 334
    "float"     shift, and go to state 335
    "float2"    shift, and go to state 336
    "float3"    shift, and go to state 337
    "float4"    shift, and go to state 338
    "range"     shift, and go to state 339
    "urange"    shift, and go to state 340
    "range64"   shift, and go to state 341
    "urange64"  shift, and go to state 342
    "int64"     shift, and go to state 344
    "uint64"    shift, and go to state 345
    "double"    shift, and go to state 346
    "int8"      shift, and go to state 349
    "uint8"     shift, and go to state 350
    "int16"     shift, and go to state 351
    "uint16"    shift, and go to state 352
    "$f"        shift, and go to state 1264
    "name"      shift, and go to state 1265

    basic_type_declaration  go to state 1266


State 1058

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  497     | expr '?' expr . ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    ':'    shift, and go to state 1267
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798


State 1059

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  471     | expr '|' expr .
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    $default  reduce using rule 471 (expr)


State 1060

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  472     | expr '^' expr .
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    $default  reduce using rule 472 (expr)


State 1061

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  470     | expr '&' expr .
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    $default  reduce using rule 470 (expr)


State 1062

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  464     | expr '<' expr .
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    $default  reduce using rule 464 (expr)


State 1063

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  465     | expr '>' expr .
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    $default  reduce using rule 465 (expr)


State 1064

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  460     | expr '-' expr .
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 746
    "as"  shift, and go to state 747
    "++"  shift, and go to state 758
    "--"  shift, and go to state 759
    "->"  shift, and go to state 766
    "??"  shift, and go to state 768
    "?."  shift, and go to state 769
    "?["  shift, and go to state 770
    "<|"  shift, and go to state 771
    "|>"  shift, and go to state 772
    '*'   shift, and go to state 794
    '/'   shift, and go to state 795
    '%'   shift, and go to state 796
    '.'   shift, and go to state 797
    '['   shift, and go to state 798

    $default  reduce using rule 460 (expr)


State 1065

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  459     | expr '+' expr .
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 746
    "as"  shift, and go to state 747
    "++"  shift, and go to state 758
    "--"  shift, and go to state 759
    "->"  shift, and go to state 766
    "??"  shift, and go to state 768
    "?."  shift, and go to state 769
    "?["  shift, and go to state 770
    "<|"  shift, and go to state 771
    "|>"  shift, and go to state 772
    '*'   shift, and go to state 794
    '/'   shift, and go to state 795
    '%'   shift, and go to state 796
    '.'   shift, and go to state 797
    '['   shift, and go to state 798

    $default  reduce using rule 459 (expr)


State 1066

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  461     | expr '*' expr .
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 746
    "as"  shift, and go to state 747
    "++"  shift, and go to state 758
    "--"  shift, and go to state 759
    "->"  shift, and go to state 766
    "??"  shift, and go to state 768
    "?."  shift, and go to state 769
    "?["  shift, and go to state 770
    "<|"  shift, and go to state 771
    "|>"  shift, and go to state 772
    '.'   shift, and go to state 797
    '['   shift, and go to state 798

    $default  reduce using rule 461 (expr)


State 1067

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  462     | expr '/' expr .
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 746
    "as"  shift, and go to state 747
    "++"  shift, and go to state 758
    "--"  shift, and go to state 759
    "->"  shift, and go to state 766
    "??"  shift, and go to state 768
    "?."  shift, and go to state 769
    "?["  shift, and go to state 770
    "<|"  shift, and go to state 771
    "|>"  shift, and go to state 772
    '.'   shift, and go to state 797
    '['   shift, and go to state 798

    $default  reduce using rule 462 (expr)


State 1068

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  463     | expr '%' expr .
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 746
    "as"  shift, and go to state 747
    "++"  shift, and go to state 758
    "--"  shift, and go to state 759
    "->"  shift, and go to state 766
    "??"  shift, and go to state 768
    "?."  shift, and go to state 769
    "?["  shift, and go to state 770
    "<|"  shift, and go to state 771
    "|>"  shift, and go to state 772
    '.'   shift, and go to state 797
    '['   shift, and go to state 798

    $default  reduce using rule 463 (expr)


State 1069

  488 expr: expr '.' "?." . "name"
  537 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1268
    "name"  shift, and go to state 1269


State 1070

  486 expr: expr '.' "?[" . expr ']'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1270
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1071

  534 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1271


State 1072

  424 expr_field: expr '.' "name" .
  426           | expr '.' "name" . '(' ')'
  427           | expr '.' "name" . '(' expr_list ')'
  428           | expr '.' "name" . '(' '[' make_struct_fields ']' ')'

    '('  shift, and go to state 1272

    '('       [reduce using rule 424 (expr_field)]
    $default  reduce using rule 424 (expr_field)


State 1073

  425 expr_field: expr '.' '.' . "name"
  536 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1273
    "name"  shift, and go to state 1274


State 1074

  484 expr: expr '.' '[' . expr ']'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1275
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1075

  433 expr_field: expr '.' $@27 . error $@28

    error  shift, and go to state 1276


State 1076

  429 expr_field: expr '.' basic_type_declaration . '(' ')'
  430           | expr '.' basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 1277


State 1077

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  483     | expr '[' expr . ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798
    ']'    shift, and go to state 1278


State 1078

  439 expr_call: basic_type_declaration '(' ')' .

    $default  reduce using rule 439 (expr_call)


State 1079

  342 expr_list: expr_list . ',' expr
  440 expr_call: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 877
    ')'  shift, and go to state 1279


State 1080

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'
  619 enum_list: enum_list "name" '=' expr . "end of expression"

    "is"                 shift, and go to state 746
    "as"                 shift, and go to state 747
    "<<"                 shift, and go to state 756
    ">>"                 shift, and go to state 757
    "++"                 shift, and go to state 758
    "--"                 shift, and go to state 759
    "<="                 shift, and go to state 760
    ">="                 shift, and go to state 763
    "=="                 shift, and go to state 764
    "!="                 shift, and go to state 765
    "->"                 shift, and go to state 766
    "??"                 shift, and go to state 768
    "?."                 shift, and go to state 769
    "?["                 shift, and go to state 770
    "<|"                 shift, and go to state 771
    "|>"                 shift, and go to state 772
    "<<<"                shift, and go to state 774
    ">>>"                shift, and go to state 775
    "&&"                 shift, and go to state 778
    "||"                 shift, and go to state 779
    "^^"                 shift, and go to state 780
    ".."                 shift, and go to state 784
    "end of expression"  shift, and go to state 1280
    '?'                  shift, and go to state 786
    '|'                  shift, and go to state 787
    '^'                  shift, and go to state 788
    '&'                  shift, and go to state 789
    '<'                  shift, and go to state 790
    '>'                  shift, and go to state 791
    '-'                  shift, and go to state 792
    '+'                  shift, and go to state 793
    '*'                  shift, and go to state 794
    '/'                  shift, and go to state 795
    '%'                  shift, and go to state 796
    '.'                  shift, and go to state 797
    '['                  shift, and go to state 798


State 1081

  639 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@44 enum_list $@45 . "end of code block"

    "end of code block"  shift, and go to state 1281


State 1082

  126 annotation_list: annotation_list . ',' annotation_declaration
  128 optional_annotation_list: '[' annotation_list . ']'
  564 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list . ']' "end of expression"

    ','  shift, and go to state 109
    ']'  shift, and go to state 1282


State 1083

  561 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable "abstract" optional_constant $@36 function_declaration_header "end of expression"
  563                                 | struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@37 function_declaration_header expression_block

    "public"   shift, and go to state 1283
    "private"  shift, and go to state 1284

    $default  reduce using rule 550 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1285


State 1084

  555 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1286

    $default  reduce using rule 553 (optional_static_member_variable)

    optional_static_member_variable  go to state 1287


State 1085

  559 struct_variable_declaration_list: struct_variable_declaration_list $@35 structure_variable_declaration . "end of expression"

    "end of expression"  shift, and go to state 1288


State 1086

  494 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  495     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  719 type_declaration_no_options: type_declaration_no_options . dim_list
  720                            | type_declaration_no_options . '[' ']'
  728                            | type_declaration_no_options . '-' '[' ']'
  729                            | type_declaration_no_options . "explicit"
  730                            | type_declaration_no_options . "const"
  731                            | type_declaration_no_options . '-' "const"
  732                            | type_declaration_no_options . '&'
  733                            | type_declaration_no_options . '-' '&'
  734                            | type_declaration_no_options . '#'
  735                            | type_declaration_no_options . "implicit"
  736                            | type_declaration_no_options . '-' '#'
  737                            | type_declaration_no_options . "==" "const"
  738                            | type_declaration_no_options . "==" '&'
  739                            | type_declaration_no_options . '?'
  743                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "??"        shift, and go to state 416
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '>'         shift, and go to state 1289
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    dim_list  go to state 422


State 1087

  599 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 599 (let_variable_name_with_pos_list)


State 1088

  602 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 602 (let_variable_declaration)


State 1089

  228 expr_call_pipe: expr . expr_full_block_assumed_piped
  371 expr_assign: expr .
  372            | expr . '=' expr
  373            | expr . "<-" expr
  374            | expr . ":=" expr
  375            | expr . "&=" expr
  376            | expr . "|=" expr
  377            | expr . "^=" expr
  378            | expr . "&&=" expr
  379            | expr . "||=" expr
  380            | expr . "^^=" expr
  381            | expr . "+=" expr
  382            | expr . "-=" expr
  383            | expr . "*=" expr
  384            | expr . "/=" expr
  385            | expr . "%=" expr
  386            | expr . "<<=" expr
  387            | expr . ">>=" expr
  388            | expr . "<<<=" expr
  389            | expr . ">>>=" expr
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'
  601 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 746
    "as"                 shift, and go to state 747
    "+="                 shift, and go to state 878
    "-="                 shift, and go to state 879
    "/="                 shift, and go to state 880
    "*="                 shift, and go to state 881
    "%="                 shift, and go to state 882
    "&="                 shift, and go to state 883
    "|="                 shift, and go to state 884
    "^="                 shift, and go to state 885
    "<<"                 shift, and go to state 756
    ">>"                 shift, and go to state 757
    "++"                 shift, and go to state 758
    "--"                 shift, and go to state 759
    "<="                 shift, and go to state 760
    "<<="                shift, and go to state 886
    ">>="                shift, and go to state 887
    ">="                 shift, and go to state 763
    "=="                 shift, and go to state 764
    "!="                 shift, and go to state 765
    "->"                 shift, and go to state 766
    "<-"                 shift, and go to state 888
    "??"                 shift, and go to state 768
    "?."                 shift, and go to state 769
    "?["                 shift, and go to state 770
    "<|"                 shift, and go to state 771
    "|>"                 shift, and go to state 772
    ":="                 shift, and go to state 773
    "<<<"                shift, and go to state 774
    ">>>"                shift, and go to state 775
    "<<<="               shift, and go to state 889
    ">>>="               shift, and go to state 890
    "&&"                 shift, and go to state 778
    "||"                 shift, and go to state 779
    "^^"                 shift, and go to state 780
    "&&="                shift, and go to state 891
    "||="                shift, and go to state 892
    "^^="                shift, and go to state 893
    ".."                 shift, and go to state 784
    "end of expression"  shift, and go to state 1290
    '='                  shift, and go to state 894
    '?'                  shift, and go to state 786
    '|'                  shift, and go to state 787
    '^'                  shift, and go to state 788
    '&'                  shift, and go to state 789
    '<'                  shift, and go to state 790
    '>'                  shift, and go to state 791
    '-'                  shift, and go to state 792
    '+'                  shift, and go to state 793
    '*'                  shift, and go to state 794
    '/'                  shift, and go to state 795
    '%'                  shift, and go to state 796
    '.'                  shift, and go to state 797
    '['                  shift, and go to state 798
    '$'                  shift, and go to state 509
    '@'                  shift, and go to state 683

    $default  reduce using rule 371 (expr_assign)

    block_or_lambda                go to state 732
    expr_full_block_assumed_piped  go to state 799


State 1090

  603 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 603 (let_variable_declaration)


State 1091

  723 type_declaration_no_options: "type" '<' $@50 type_declaration '>' . $@51

    $default  reduce using rule 722 ($@51)

    $@51  go to state 1291


State 1092

  746 type_declaration_no_options: "array" '<' $@55 type_declaration '>' . $@56

    $default  reduce using rule 745 ($@56)

    $@56  go to state 1292


State 1093

  749 type_declaration_no_options: "table" '<' $@57 table_type_pair '>' . $@58

    $default  reduce using rule 748 ($@58)

    $@58  go to state 1293


State 1094

  712 table_type_pair: type_declaration c_or_s . type_declaration

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 362
    type_declaration             go to state 1294


State 1095

  752 type_declaration_no_options: "iterator" '<' $@59 type_declaration '>' . $@60

    $default  reduce using rule 751 ($@60)

    $@60  go to state 1295


State 1096

  742 type_declaration_no_options: "smart_ptr" '<' $@53 type_declaration '>' . $@54

    $default  reduce using rule 741 ($@54)

    $@54  go to state 1296


State 1097

  702 bitfield_bits: bitfield_bits "end of expression" . "name"

    "name"  shift, and go to state 1297


State 1098

  708 bitfield_type_declaration: "bitfield" '<' $@48 bitfield_bits '>' . $@49

    $default  reduce using rule 707 ($@49)

    $@49  go to state 1298


State 1099

  756 type_declaration_no_options: "block" '<' $@61 type_declaration '>' . $@62

    $default  reduce using rule 755 ($@62)

    $@62  go to state 1299


State 1100

  759 type_declaration_no_options: "block" '<' $@63 optional_function_argument_list optional_function_type . '>' $@64

    '>'  shift, and go to state 1300


State 1101

  763 type_declaration_no_options: "function" '<' $@65 type_declaration '>' . $@66

    $default  reduce using rule 762 ($@66)

    $@66  go to state 1301


State 1102

  766 type_declaration_no_options: "function" '<' $@67 optional_function_argument_list optional_function_type . '>' $@68

    '>'  shift, and go to state 1302


State 1103

  770 type_declaration_no_options: "lambda" '<' $@69 type_declaration '>' . $@70

    $default  reduce using rule 769 ($@70)

    $@70  go to state 1303


State 1104

  773 type_declaration_no_options: "lambda" '<' $@71 optional_function_argument_list optional_function_type . '>' $@72

    '>'  shift, and go to state 1304


State 1105

  776 type_declaration_no_options: "tuple" '<' $@73 tuple_type_list '>' . $@74

    $default  reduce using rule 775 ($@74)

    $@74  go to state 1305


State 1106

  572 tuple_type_list: tuple_type_list c_or_s . tuple_type

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 615
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    tuple_type                   go to state 1306
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 362
    type_declaration             go to state 620


State 1107

  779 type_declaration_no_options: "variant" '<' $@75 variant_type_list '>' . $@76

    $default  reduce using rule 778 ($@76)

    $@76  go to state 1307


State 1108

  578 variant_type_list: variant_type_list c_or_s . variant_type

    "name"  shift, and go to state 622

    variant_type  go to state 1308


State 1109

  263 type_declaration_no_options_list: type_declaration_no_options_list . c_or_s type_declaration
  727 type_declaration_no_options: '$' name_in_namespace '<' $@52 type_declaration_no_options_list . '>' '(' optional_expr_list ')'

    "end of expression"  shift, and go to state 616
    ','                  shift, and go to state 617
    '>'                  shift, and go to state 1309

    c_or_s  go to state 1310


State 1110

  262 type_declaration_no_options_list: type_declaration .
  781 type_declaration: type_declaration . '|' type_declaration_no_options
  782                 | type_declaration . '|' '#'

    '|'  shift, and go to state 423

    $default  reduce using rule 262 (type_declaration_no_options_list)


State 1111

  725 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list ')' .

    $default  reduce using rule 725 (type_declaration_no_options)


State 1112

  714 dim_list: dim_list '[' expr ']' .

    $default  reduce using rule 714 (dim_list)


State 1113

  570 tuple_type: "name" ':' type_declaration .
  781 type_declaration: type_declaration . '|' type_declaration_no_options
  782                 | type_declaration . '|' '#'

    '|'  shift, and go to state 423

    $default  reduce using rule 570 (tuple_type)


State 1114

  576 variant_type: "name" ':' type_declaration .
  781 type_declaration: type_declaration . '|' type_declaration_no_options
  782                 | type_declaration . '|' '#'

    '|'  shift, and go to state 423

    $default  reduce using rule 576 (variant_type)


State 1115

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'
  658 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798
    ')'    shift, and go to state 1311


State 1116

  659 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 659 (variable_name_with_pos_list)


State 1117

  660 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  661                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1312

    $default  reduce using rule 660 (variable_name_with_pos_list)


State 1118

  586 variable_declaration: variable_name_with_pos_list ':' type_declaration .
  587                     | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  781 type_declaration: type_declaration . '|' type_declaration_no_options
  782                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 854
    '='   shift, and go to state 856
    '|'   shift, and go to state 423

    $default  reduce using rule 586 (variable_declaration)

    copy_or_move  go to state 1313


State 1119

  589 variable_declaration: variable_name_with_pos_list copy_or_move expr_pipe .

    $default  reduce using rule 589 (variable_declaration)


State 1120

  228 expr_call_pipe: expr . expr_full_block_assumed_piped
  371 expr_assign: expr .
  372            | expr . '=' expr
  373            | expr . "<-" expr
  374            | expr . ":=" expr
  375            | expr . "&=" expr
  376            | expr . "|=" expr
  377            | expr . "^=" expr
  378            | expr . "&&=" expr
  379            | expr . "||=" expr
  380            | expr . "^^=" expr
  381            | expr . "+=" expr
  382            | expr . "-=" expr
  383            | expr . "*=" expr
  384            | expr . "/=" expr
  385            | expr . "%=" expr
  386            | expr . "<<=" expr
  387            | expr . ">>=" expr
  388            | expr . "<<<=" expr
  389            | expr . ">>>=" expr
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'
  588 variable_declaration: variable_name_with_pos_list copy_or_move expr .

    "is"    shift, and go to state 746
    "as"    shift, and go to state 747
    "+="    shift, and go to state 878
    "-="    shift, and go to state 879
    "/="    shift, and go to state 880
    "*="    shift, and go to state 881
    "%="    shift, and go to state 882
    "&="    shift, and go to state 883
    "|="    shift, and go to state 884
    "^="    shift, and go to state 885
    "<<"    shift, and go to state 756
    ">>"    shift, and go to state 757
    "++"    shift, and go to state 758
    "--"    shift, and go to state 759
    "<="    shift, and go to state 760
    "<<="   shift, and go to state 886
    ">>="   shift, and go to state 887
    ">="    shift, and go to state 763
    "=="    shift, and go to state 764
    "!="    shift, and go to state 765
    "->"    shift, and go to state 766
    "<-"    shift, and go to state 888
    "??"    shift, and go to state 768
    "?."    shift, and go to state 769
    "?["    shift, and go to state 770
    "<|"    shift, and go to state 771
    "|>"    shift, and go to state 772
    ":="    shift, and go to state 773
    "<<<"   shift, and go to state 774
    ">>>"   shift, and go to state 775
    "<<<="  shift, and go to state 889
    ">>>="  shift, and go to state 890
    "&&"    shift, and go to state 778
    "||"    shift, and go to state 779
    "^^"    shift, and go to state 780
    "&&="   shift, and go to state 891
    "||="   shift, and go to state 892
    "^^="   shift, and go to state 893
    ".."    shift, and go to state 784
    '='     shift, and go to state 894
    '?'     shift, and go to state 786
    '|'     shift, and go to state 787
    '^'     shift, and go to state 788
    '&'     shift, and go to state 789
    '<'     shift, and go to state 790
    '>'     shift, and go to state 791
    '-'     shift, and go to state 792
    '+'     shift, and go to state 793
    '*'     shift, and go to state 794
    '/'     shift, and go to state 795
    '%'     shift, and go to state 796
    '.'     shift, and go to state 797
    '['     shift, and go to state 798
    '$'     shift, and go to state 509
    '@'     shift, and go to state 683

    " <|"     reduce using rule 371 (expr_assign)
    $default  reduce using rule 588 (variable_declaration)

    block_or_lambda                go to state 732
    expr_full_block_assumed_piped  go to state 799


State 1121

  719 type_declaration_no_options: type_declaration_no_options . dim_list
  720                            | type_declaration_no_options . '[' ']'
  728                            | type_declaration_no_options . '-' '[' ']'
  729                            | type_declaration_no_options . "explicit"
  730                            | type_declaration_no_options . "const"
  731                            | type_declaration_no_options . '-' "const"
  732                            | type_declaration_no_options . '&'
  733                            | type_declaration_no_options . '-' '&'
  734                            | type_declaration_no_options . '#'
  735                            | type_declaration_no_options . "implicit"
  736                            | type_declaration_no_options . '-' '#'
  737                            | type_declaration_no_options . "==" "const"
  738                            | type_declaration_no_options . "==" '&'
  739                            | type_declaration_no_options . '?'
  743                            | type_declaration_no_options . "??"
  845 make_struct_decl: "struct" '<' $@89 type_declaration_no_options . '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "??"        shift, and go to state 416
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '>'         shift, and go to state 1314
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    dim_list  go to state 422


State 1122

  719 type_declaration_no_options: type_declaration_no_options . dim_list
  720                            | type_declaration_no_options . '[' ']'
  728                            | type_declaration_no_options . '-' '[' ']'
  729                            | type_declaration_no_options . "explicit"
  730                            | type_declaration_no_options . "const"
  731                            | type_declaration_no_options . '-' "const"
  732                            | type_declaration_no_options . '&'
  733                            | type_declaration_no_options . '-' '&'
  734                            | type_declaration_no_options . '#'
  735                            | type_declaration_no_options . "implicit"
  736                            | type_declaration_no_options . '-' '#'
  737                            | type_declaration_no_options . "==" "const"
  738                            | type_declaration_no_options . "==" '&'
  739                            | type_declaration_no_options . '?'
  743                            | type_declaration_no_options . "??"
  848 make_struct_decl: "class" '<' $@91 type_declaration_no_options . '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "??"        shift, and go to state 416
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '>'         shift, and go to state 1315
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    dim_list  go to state 422


State 1123

   82 expression_for_loop: "for" $@5 variable_name_with_pos_list "in" . expr_list expression_block

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 1316
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 721
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1124

  282 new_type_declaration: '<' $@12 type_declaration . '>' $@13
  781 type_declaration: type_declaration . '|' type_declaration_no_options
  782                 | type_declaration . '|' '#'

    '|'  shift, and go to state 423
    '>'  shift, and go to state 1317


State 1125

  288 expr_new: "new" new_type_declaration '(' "uninitialized" . make_struct_single ')'
  836 use_initializer: "uninitialized" .

    "$f"    shift, and go to state 722
    "name"  shift, and go to state 1234

    $default  reduce using rule 836 (use_initializer)

    make_struct_fields  go to state 725
    make_struct_single  go to state 1318


State 1126

  286 expr_new: "new" new_type_declaration '(' expr_list . ')'
  342 expr_list: expr_list . ',' expr

    ','  shift, and go to state 877
    ')'  shift, and go to state 1319


State 1127

  287 expr_new: "new" new_type_declaration '(' make_struct_single . ')'

    ')'  shift, and go to state 1320


State 1128

  285 expr_new: "new" new_type_declaration '(' use_initializer . ')'

    ')'  shift, and go to state 1321


State 1129

  336 expr_type_info: "typeinfo" '(' name_in_namespace '<' . "name" '>' expr ')'
  337               | "typeinfo" '(' name_in_namespace '<' . "name" c_or_s "name" '>' expr ')'

    "name"  shift, and go to state 1322


State 1130

  335 expr_type_info: "typeinfo" '(' name_in_namespace expr . ')'
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798
    ')'    shift, and go to state 1323


State 1131

  339 expr_type_info: "typeinfo" name_in_namespace '<' "name" . '>' '(' expr ')'
  340               | "typeinfo" name_in_namespace '<' "name" . "end of expression" "name" '>' '(' expr ')'

    "end of expression"  shift, and go to state 1324
    '>'                  shift, and go to state 1325


State 1132

  338 expr_type_info: "typeinfo" name_in_namespace '(' expr . ')'
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798
    ')'    shift, and go to state 1326


State 1133

  334 expr_type_decl: "type" '<' $@20 type_declaration . '>' $@21
  781 type_declaration: type_declaration . '|' type_declaration_no_options
  782                 | type_declaration . '|' '#'

    '|'  shift, and go to state 423
    '>'  shift, and go to state 1327


State 1134

  871 make_dim_decl: "array" "struct" '<' $@99 . type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 1328


State 1135

  874 make_dim_decl: "array" "tuple" '<' $@101 . type_declaration_no_options '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 1329


State 1136

  877 make_dim_decl: "array" "variant" '<' $@103 . type_declaration_no_options '>' $@104 '(' make_variant_dim ')'

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 1330


State 1137

  719 type_declaration_no_options: type_declaration_no_options . dim_list
  720                            | type_declaration_no_options . '[' ']'
  728                            | type_declaration_no_options . '-' '[' ']'
  729                            | type_declaration_no_options . "explicit"
  730                            | type_declaration_no_options . "const"
  731                            | type_declaration_no_options . '-' "const"
  732                            | type_declaration_no_options . '&'
  733                            | type_declaration_no_options . '-' '&'
  734                            | type_declaration_no_options . '#'
  735                            | type_declaration_no_options . "implicit"
  736                            | type_declaration_no_options . '-' '#'
  737                            | type_declaration_no_options . "==" "const"
  738                            | type_declaration_no_options . "==" '&'
  739                            | type_declaration_no_options . '?'
  743                            | type_declaration_no_options . "??"
  881 make_dim_decl: "array" '<' $@105 type_declaration_no_options . '>' $@106 '(' optional_expr_list ')'

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "??"        shift, and go to state 416
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '>'         shift, and go to state 1331
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    dim_list  go to state 422


State 1138

  878 make_dim_decl: "array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1332


State 1139

  342 expr_list: expr_list ',' expr .
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    $default  reduce using rule 342 (expr_list)


State 1140

  381 expr_assign: expr "+=" expr .
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    $default  reduce using rule 381 (expr_assign)


State 1141

  382 expr_assign: expr "-=" expr .
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    $default  reduce using rule 382 (expr_assign)


State 1142

  384 expr_assign: expr "/=" expr .
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    $default  reduce using rule 384 (expr_assign)


State 1143

  383 expr_assign: expr "*=" expr .
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    $default  reduce using rule 383 (expr_assign)


State 1144

  385 expr_assign: expr "%=" expr .
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    $default  reduce using rule 385 (expr_assign)


State 1145

  375 expr_assign: expr "&=" expr .
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    $default  reduce using rule 375 (expr_assign)


State 1146

  376 expr_assign: expr "|=" expr .
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    $default  reduce using rule 376 (expr_assign)


State 1147

  377 expr_assign: expr "^=" expr .
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    $default  reduce using rule 377 (expr_assign)


State 1148

  386 expr_assign: expr "<<=" expr .
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    $default  reduce using rule 386 (expr_assign)


State 1149

  387 expr_assign: expr ">>=" expr .
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    $default  reduce using rule 387 (expr_assign)


State 1150

  373 expr_assign: expr "<-" expr .
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    $default  reduce using rule 373 (expr_assign)


State 1151

  388 expr_assign: expr "<<<=" expr .
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    $default  reduce using rule 388 (expr_assign)


State 1152

  389 expr_assign: expr ">>>=" expr .
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    $default  reduce using rule 389 (expr_assign)


State 1153

  378 expr_assign: expr "&&=" expr .
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    $default  reduce using rule 378 (expr_assign)


State 1154

  379 expr_assign: expr "||=" expr .
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    $default  reduce using rule 379 (expr_assign)


State 1155

  380 expr_assign: expr "^^=" expr .
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    $default  reduce using rule 380 (expr_assign)


State 1156

  372 expr_assign: expr '=' expr .
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    $default  reduce using rule 372 (expr_assign)


State 1157

  303 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 303 (expression_try_catch)


State 1158

  893 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1333


State 1159

  894 make_table_decl: "table" '<' type_declaration_no_options c_or_s . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 1334


State 1160

  892 make_table_decl: "table" '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 892 (make_table_decl)


State 1161

  492 expr: "deref" '(' expr ')' .

    $default  reduce using rule 492 (expr)


State 1162

   87 expression_with_alias: "assume" "name" '=' $@6 . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1335
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1163

  325 expr_cast: "cast" '<' $@14 type_declaration_no_options . '>' $@15 expr
  719 type_declaration_no_options: type_declaration_no_options . dim_list
  720                            | type_declaration_no_options . '[' ']'
  728                            | type_declaration_no_options . '-' '[' ']'
  729                            | type_declaration_no_options . "explicit"
  730                            | type_declaration_no_options . "const"
  731                            | type_declaration_no_options . '-' "const"
  732                            | type_declaration_no_options . '&'
  733                            | type_declaration_no_options . '-' '&'
  734                            | type_declaration_no_options . '#'
  735                            | type_declaration_no_options . "implicit"
  736                            | type_declaration_no_options . '-' '#'
  737                            | type_declaration_no_options . "==" "const"
  738                            | type_declaration_no_options . "==" '&'
  739                            | type_declaration_no_options . '?'
  743                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "??"        shift, and go to state 416
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '>'         shift, and go to state 1336
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    dim_list  go to state 422


State 1164

  328 expr_cast: "upcast" '<' $@16 type_declaration_no_options . '>' $@17 expr
  719 type_declaration_no_options: type_declaration_no_options . dim_list
  720                            | type_declaration_no_options . '[' ']'
  728                            | type_declaration_no_options . '-' '[' ']'
  729                            | type_declaration_no_options . "explicit"
  730                            | type_declaration_no_options . "const"
  731                            | type_declaration_no_options . '-' "const"
  732                            | type_declaration_no_options . '&'
  733                            | type_declaration_no_options . '-' '&'
  734                            | type_declaration_no_options . '#'
  735                            | type_declaration_no_options . "implicit"
  736                            | type_declaration_no_options . '-' '#'
  737                            | type_declaration_no_options . "==" "const"
  738                            | type_declaration_no_options . "==" '&'
  739                            | type_declaration_no_options . '?'
  743                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "??"        shift, and go to state 416
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '>'         shift, and go to state 1337
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    dim_list  go to state 422


State 1165

  493 expr: "addr" '(' expr ')' .

    $default  reduce using rule 493 (expr)


State 1166

  331 expr_cast: "reinterpret" '<' $@18 type_declaration_no_options . '>' $@19 expr
  719 type_declaration_no_options: type_declaration_no_options . dim_list
  720                            | type_declaration_no_options . '[' ']'
  728                            | type_declaration_no_options . '-' '[' ']'
  729                            | type_declaration_no_options . "explicit"
  730                            | type_declaration_no_options . "const"
  731                            | type_declaration_no_options . '-' "const"
  732                            | type_declaration_no_options . '&'
  733                            | type_declaration_no_options . '-' '&'
  734                            | type_declaration_no_options . '#'
  735                            | type_declaration_no_options . "implicit"
  736                            | type_declaration_no_options . '-' '#'
  737                            | type_declaration_no_options . "==" "const"
  738                            | type_declaration_no_options . "==" '&'
  739                            | type_declaration_no_options . '?'
  743                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "??"        shift, and go to state 416
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '>'         shift, and go to state 1338
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    dim_list  go to state 422


State 1167

  524 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 524 (expr)


State 1168

  719 type_declaration_no_options: type_declaration_no_options . dim_list
  720                            | type_declaration_no_options . '[' ']'
  728                            | type_declaration_no_options . '-' '[' ']'
  729                            | type_declaration_no_options . "explicit"
  730                            | type_declaration_no_options . "const"
  731                            | type_declaration_no_options . '-' "const"
  732                            | type_declaration_no_options . '&'
  733                            | type_declaration_no_options . '-' '&'
  734                            | type_declaration_no_options . '#'
  735                            | type_declaration_no_options . "implicit"
  736                            | type_declaration_no_options . '-' '#'
  737                            | type_declaration_no_options . "==" "const"
  738                            | type_declaration_no_options . "==" '&'
  739                            | type_declaration_no_options . '?'
  743                            | type_declaration_no_options . "??"
  885 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options . '>' $@108 '(' expr_list optional_comma ')'

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "??"        shift, and go to state 416
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '>'         shift, and go to state 1339
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    dim_list  go to state 422


State 1169

  882 make_dim_decl: "fixed_array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1340


State 1170

  719 type_declaration_no_options: type_declaration_no_options . dim_list
  720                            | type_declaration_no_options . '[' ']'
  728                            | type_declaration_no_options . '-' '[' ']'
  729                            | type_declaration_no_options . "explicit"
  730                            | type_declaration_no_options . "const"
  731                            | type_declaration_no_options . '-' "const"
  732                            | type_declaration_no_options . '&'
  733                            | type_declaration_no_options . '-' '&'
  734                            | type_declaration_no_options . '#'
  735                            | type_declaration_no_options . "implicit"
  736                            | type_declaration_no_options . '-' '#'
  737                            | type_declaration_no_options . "==" "const"
  738                            | type_declaration_no_options . "==" '&'
  739                            | type_declaration_no_options . '?'
  743                            | type_declaration_no_options . "??"
  854 make_struct_decl: "default" '<' $@95 type_declaration_no_options . '>' $@96 use_initializer

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "??"        shift, and go to state 416
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '>'         shift, and go to state 1341
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    dim_list  go to state 422


State 1171

  719 type_declaration_no_options: type_declaration_no_options . dim_list
  720                            | type_declaration_no_options . '[' ']'
  728                            | type_declaration_no_options . '-' '[' ']'
  729                            | type_declaration_no_options . "explicit"
  730                            | type_declaration_no_options . "const"
  731                            | type_declaration_no_options . '-' "const"
  732                            | type_declaration_no_options . '&'
  733                            | type_declaration_no_options . '-' '&'
  734                            | type_declaration_no_options . '#'
  735                            | type_declaration_no_options . "implicit"
  736                            | type_declaration_no_options . '-' '#'
  737                            | type_declaration_no_options . "==" "const"
  738                            | type_declaration_no_options . "==" '&'
  739                            | type_declaration_no_options . '?'
  743                            | type_declaration_no_options . "??"
  863 make_tuple_call: "tuple" '<' $@97 type_declaration_no_options . '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "??"        shift, and go to state 416
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '>'         shift, and go to state 1342
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    dim_list  go to state 422


State 1172

  860 make_tuple_call: "tuple" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1343


State 1173

  719 type_declaration_no_options: type_declaration_no_options . dim_list
  720                            | type_declaration_no_options . '[' ']'
  728                            | type_declaration_no_options . '-' '[' ']'
  729                            | type_declaration_no_options . "explicit"
  730                            | type_declaration_no_options . "const"
  731                            | type_declaration_no_options . '-' "const"
  732                            | type_declaration_no_options . '&'
  733                            | type_declaration_no_options . '-' '&'
  734                            | type_declaration_no_options . '#'
  735                            | type_declaration_no_options . "implicit"
  736                            | type_declaration_no_options . '-' '#'
  737                            | type_declaration_no_options . "==" "const"
  738                            | type_declaration_no_options . "==" '&'
  739                            | type_declaration_no_options . '?'
  743                            | type_declaration_no_options . "??"
  851 make_struct_decl: "variant" '<' $@93 type_declaration_no_options . '>' $@94 '(' make_variant_dim ')'

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "??"        shift, and go to state 416
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '>'         shift, and go to state 1344
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    dim_list  go to state 422


State 1174

  230 expr_call_pipe: "generator" '<' type_declaration_no_options '>' . optional_capture_list expr_full_block_assumed_piped
  494 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  495     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'

    "capture"  shift, and go to state 986
    "[["       shift, and go to state 987

    $default  reduce using rule 356 (optional_capture_list)

    optional_capture_list  go to state 1345


State 1175

  360 expr_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 289

    $default  reduce using rule 129 (optional_function_argument_list)

    optional_function_argument_list  go to state 1346


State 1176

  526 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 526 (expr_mtag)


State 1177

  527 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 527 (expr_mtag)


State 1178

  528 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 528 (expr_mtag)


State 1179

  529 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 529 (expr_mtag)


State 1180

  530 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 530 (expr_mtag)


State 1181

  532 expr_mtag: "$c" '(' expr ')' . '(' ')'
  533          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1347


State 1182

  901 array_comprehension: "[[" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']' ']'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 1348
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 721
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1183

  822 optional_block: "where" expr_block .

    $default  reduce using rule 822 (optional_block)


State 1184

  728 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'
  866 make_dim_decl: '[' . optional_expr_list ']'
  899 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  900                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "for"                             shift, and go to state 717
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "iterator"                        shift, and go to state 718
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    ']'                               shift, and go to state 840
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    ']'  [reduce using rule 256 (optional_expr_list)]

    string_builder          go to state 511
    expr_reader             go to state 512
    optional_expr_list      go to state 719
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 720
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 721
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1185

  341 expr_list: expr .
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'
  713 dim_list: '[' expr . ']'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798
    ']'    shift, and go to state 841

    ']'       [reduce using rule 341 (expr_list)]
    $default  reduce using rule 341 (expr_list)


State 1186

  839 make_struct_decl: "[[" type_declaration_no_options '(' ')' . optional_block optional_trailing_delim_sqr_sqr
  840                 | "[[" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "where"  shift, and go to state 927
    "$f"     shift, and go to state 722
    "name"   shift, and go to state 1234

    $default  reduce using rule 821 (optional_block)

    make_struct_fields  go to state 932
    make_struct_dim     go to state 1349
    optional_block      go to state 1350


State 1187

  856 make_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1351
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1188

  814 make_struct_dim: make_struct_dim "end of expression" . make_struct_fields

    "$f"    shift, and go to state 722
    "name"  shift, and go to state 1234

    make_struct_fields  go to state 1352


State 1189

  837 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1190
    ",]]"  shift, and go to state 1191
    ']'    shift, and go to state 1192

    optional_trailing_delim_sqr_sqr  go to state 1353


State 1190

  830 optional_trailing_delim_sqr_sqr: ";]]" .

    $default  reduce using rule 830 (optional_trailing_delim_sqr_sqr)


State 1191

  831 optional_trailing_delim_sqr_sqr: ",]]" .

    $default  reduce using rule 831 (optional_trailing_delim_sqr_sqr)


State 1192

  829 optional_trailing_delim_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1354


State 1193

  838 make_struct_decl: "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 838 (make_struct_decl)


State 1194

  857 make_tuple: make_tuple ',' . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1355
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1195

  865 make_dim: make_dim "end of expression" . make_tuple

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 931
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple              go to state 1356
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1196

  828 optional_trailing_semicolon_sqr_sqr: ";]]" .

    $default  reduce using rule 828 (optional_trailing_semicolon_sqr_sqr)


State 1197

  827 optional_trailing_semicolon_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1357


State 1198

  867 make_dim_decl: "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr .

    $default  reduce using rule 867 (make_dim_decl)


State 1199

  902 array_comprehension: "[{" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 1358
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 721
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1200

  842 make_struct_decl: "[{" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "$f"    shift, and go to state 722
    "name"  shift, and go to state 1234

    make_struct_fields  go to state 932
    make_struct_dim     go to state 1359


State 1201

  841 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    "end of code block"  shift, and go to state 1360
    ";}]"                shift, and go to state 1361
    ",}]"                shift, and go to state 1362

    optional_trailing_delim_cur_sqr  go to state 1363


State 1202

  825 optional_trailing_semicolon_cur_sqr: "end of code block" . ']'

    ']'  shift, and go to state 1364


State 1203

  826 optional_trailing_semicolon_cur_sqr: ";}]" .

    $default  reduce using rule 826 (optional_trailing_semicolon_cur_sqr)


State 1204

  868 make_dim_decl: "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr .

    $default  reduce using rule 868 (make_dim_decl)


State 1205

  904 array_comprehension: "{{" "for" variable_name_with_pos_list "in" . expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 1365
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 721
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1206

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'
  858 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    $default  reduce using rule 858 (make_map_tuple)


State 1207

  823 optional_trailing_semicolon_cur_cur: "end of code block" "end of code block" .

    $default  reduce using rule 823 (optional_trailing_semicolon_cur_cur)


State 1208

  887 make_table: make_table "end of expression" make_map_tuple .

    $default  reduce using rule 887 (make_table)


State 1209

  263 type_declaration_no_options_list: type_declaration_no_options_list . c_or_s type_declaration
  266 expression_keyword: "keyword" '<' $@8 type_declaration_no_options_list . '>' $@9 expr

    "end of expression"  shift, and go to state 616
    ','                  shift, and go to state 617
    '>'                  shift, and go to state 1366

    c_or_s  go to state 1310


State 1210

  263 type_declaration_no_options_list: type_declaration_no_options_list . c_or_s type_declaration
  269 expression_keyword: "type function" '<' $@10 type_declaration_no_options_list . '>' $@11 optional_expr_list_in_braces

    "end of expression"  shift, and go to state 616
    ','                  shift, and go to state 617
    '>'                  shift, and go to state 1367

    c_or_s  go to state 1310


State 1211

   36 string_builder_body: string_builder_body "{" expr . optional_format_string "}"
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    ':'    shift, and go to state 1368
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    $default  reduce using rule 31 (optional_format_string)

    optional_format_string  go to state 1369


State 1212

  903 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" . expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 1370
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 721
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1213

  889 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 889 (expr_map_tuple_list)


State 1214

  227 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions . "end of code block"
  253 expressions: expressions . expression_any
  254            | expressions . error

    error                             shift, and go to state 436
    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 439
    "if"                              shift, and go to state 440
    "static_if"                       shift, and go to state 441
    "for"                             shift, and go to state 442
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "return"                          shift, and go to state 449
    "null"                            shift, and go to state 450
    "break"                           shift, and go to state 451
    "try"                             shift, and go to state 452
    "table"                           shift, and go to state 453
    "delete"                          shift, and go to state 454
    "deref"                           shift, and go to state 455
    "with"                            shift, and go to state 456
    "assume"                          shift, and go to state 457
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 460
    "continue"                        shift, and go to state 461
    "pass"                            shift, and go to state 462
    "reinterpret"                     shift, and go to state 463
    "label"                           shift, and go to state 464
    "goto"                            shift, and go to state 465
    "unsafe"                          shift, and go to state 466
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "yield"                           shift, and go to state 473
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 476
    "@ <|"                            shift, and go to state 477
    "@@ <|"                           shift, and go to state 478
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 496
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    "end of code block"               shift, and go to state 1371
    "end of expression"               shift, and go to state 501
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder             go to state 511
    expr_reader                go to state 512
    expression_label           go to state 513
    expression_goto            go to state 514
    if_or_static_if            go to state 515
    expression_if_one_liner    go to state 516
    expression_if_then_else    go to state 517
    expression_for_loop        go to state 518
    expression_unsafe          go to state 519
    expression_while_loop      go to state 520
    expression_with            go to state 521
    expression_with_alias      go to state 522
    expr_call_pipe             go to state 523
    expression_any             go to state 524
    expr_keyword               go to state 525
    expression_keyword         go to state 526
    expr_pipe                  go to state 527
    name_in_namespace          go to state 528
    expression_delete          go to state 529
    expr_new                   go to state 530
    expression_break           go to state 531
    expression_continue        go to state 532
    expression_return_no_pipe  go to state 533
    expression_return          go to state 534
    expression_yield_no_pipe   go to state 535
    expression_yield           go to state 536
    expression_try_catch       go to state 537
    kwd_let                    go to state 538
    expression_let             go to state 539
    expr_cast                  go to state 540
    expr_type_decl             go to state 541
    expr_type_info             go to state 542
    block_or_lambda            go to state 543
    expr_full_block            go to state 544
    expr_numeric_const         go to state 545
    expr_assign                go to state 546
    expr_assign_pipe           go to state 547
    expr_named_call            go to state 548
    expr_method_call           go to state 549
    func_addr_expr             go to state 550
    expr_field                 go to state 551
    expr_call                  go to state 552
    expr                       go to state 553
    expr_mtag                  go to state 554
    basic_type_declaration     go to state 555
    make_decl                  go to state 556
    make_struct_decl           go to state 557
    make_tuple_call            go to state 558
    make_dim_decl              go to state 559
    make_table_decl            go to state 560
    array_comprehension        go to state 561


State 1215

  899 array_comprehension: '[' "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 1372
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 721
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1216

  660 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  661                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  900 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1373
    ','   shift, and go to state 855


State 1217

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'
  807 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  808                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798
    ')'    shift, and go to state 1374


State 1218

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'
  804 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    $default  reduce using rule 804 (make_struct_fields)


State 1219

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'
  803 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    $default  reduce using rule 803 (make_struct_fields)


State 1220

  481 expr: '(' expr_list optional_comma ')' .

    $default  reduce using rule 481 (expr)


State 1221

  809 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  810                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1375


State 1222

  805 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  806                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 854
    ":="  shift, and go to state 1376
    '='   shift, and go to state 856

    copy_or_move  go to state 1377


State 1223

  416 func_addr_name: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1378
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1224

  541 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1379
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1225

  420 func_addr_expr: '@' '@' '<' $@23 . type_declaration_no_options '>' $@24 func_addr_name

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 1380


State 1226

  423 func_addr_expr: '@' '@' '<' $@25 . optional_function_argument_list optional_function_type '>' $@26 func_addr_name

    '('  shift, and go to state 289

    $default  reduce using rule 129 (optional_function_argument_list)

    optional_function_argument_list  go to state 1381


State 1227

   66 expression_else: "else" . expression_block

    "begin of code block"  shift, and go to state 291

    expression_block  go to state 1382


State 1228

   63 elif_or_static_elif: "elif" .

    $default  reduce using rule 63 (elif_or_static_elif)


State 1229

   64 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 64 (elif_or_static_elif)


State 1230

   67 expression_else: elif_or_static_elif . expr expression_block expression_else

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1383
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1231

   78 expression_if_then_else: if_or_static_if expr expression_block expression_else .

    $default  reduce using rule 78 (expression_if_then_else)


State 1232

   80 expression_if_then_else: expression_if_one_liner "if" $@4 expr . expression_else_one_liner "end of expression"
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "else"  shift, and go to state 1384
    "is"    shift, and go to state 746
    "as"    shift, and go to state 747
    "<<"    shift, and go to state 756
    ">>"    shift, and go to state 757
    "++"    shift, and go to state 758
    "--"    shift, and go to state 759
    "<="    shift, and go to state 760
    ">="    shift, and go to state 763
    "=="    shift, and go to state 764
    "!="    shift, and go to state 765
    "->"    shift, and go to state 766
    "??"    shift, and go to state 768
    "?."    shift, and go to state 769
    "?["    shift, and go to state 770
    "<|"    shift, and go to state 771
    "|>"    shift, and go to state 772
    "<<<"   shift, and go to state 774
    ">>>"   shift, and go to state 775
    "&&"    shift, and go to state 778
    "||"    shift, and go to state 779
    "^^"    shift, and go to state 780
    ".."    shift, and go to state 784
    '?'     shift, and go to state 786
    '|'     shift, and go to state 787
    '^'     shift, and go to state 788
    '&'     shift, and go to state 789
    '<'     shift, and go to state 790
    '>'     shift, and go to state 791
    '-'     shift, and go to state 792
    '+'     shift, and go to state 793
    '*'     shift, and go to state 794
    '/'     shift, and go to state 795
    '%'     shift, and go to state 796
    '.'     shift, and go to state 797
    '['     shift, and go to state 798

    $default  reduce using rule 70 (expression_else_one_liner)

    expression_else_one_liner  go to state 1385


State 1233

  363 expr_full_block_assumed_piped: block_or_lambda $@22 optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type expression_block

    "capture"  shift, and go to state 986
    "[["       shift, and go to state 987

    $default  reduce using rule 356 (optional_capture_list)

    optional_capture_list  go to state 1386


State 1234

  803 make_struct_fields: "name" . copy_or_move expr
  804                   | "name" . ":=" expr

    "<-"  shift, and go to state 854
    ":="  shift, and go to state 964
    '='   shift, and go to state 856

    copy_or_move  go to state 965


State 1235

  435 expr_call: name_in_namespace '(' "uninitialized" ')' .

    $default  reduce using rule 435 (expr_call)


State 1236

  437 expr_call: name_in_namespace '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1387


State 1237

  411 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  805 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  806                   | make_struct_fields . ',' "name" ":=" expr
  809                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  810                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 967
    ']'  shift, and go to state 1388


State 1238

  342 expr_list: expr_list ',' . expr
  412 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 1389
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1139
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1239

  438 expr_call: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 438 (expr_call)


State 1240

  436 expr_call: name_in_namespace '(' make_struct_single ')' .

    $default  reduce using rule 436 (expr_call)


State 1241

  311 tuple_expansion: "name" .

    $default  reduce using rule 311 (tuple_expansion)


State 1242

  312 tuple_expansion: tuple_expansion . ',' "name"
  313 tuple_expansion_variable_declaration: "[[" tuple_expansion . ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  314                                     | "[[" tuple_expansion . ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  317                                     | "[[" tuple_expansion . ']' ']' optional_ref copy_or_move_or_clone expr "end of expression"
  318                                     | "[[" tuple_expansion . ']' ']' optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 1390
    ']'  shift, and go to state 1391


State 1243

  312 tuple_expansion: tuple_expansion . ',' "name"
  315 tuple_expansion_variable_declaration: '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  316                                     | '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  319                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr "end of expression"
  320                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 1390
    ')'  shift, and go to state 1392


State 1244

  358 optional_capture_list: "capture" '(' . capture_list ')'

    "<-"    shift, and go to state 1245
    ":="    shift, and go to state 1246
    "name"  shift, and go to state 1247
    '='     shift, and go to state 1248
    '&'     shift, and go to state 1249

    capture_entry  go to state 1250
    capture_list   go to state 1393


State 1245

  351 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1394


State 1246

  352 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1395


State 1247

  353 capture_entry: "name" . '(' "name" ')'

    '('  shift, and go to state 1396


State 1248

  350 capture_entry: '=' . "name"

    "name"  shift, and go to state 1397


State 1249

  349 capture_entry: '&' . "name"

    "name"  shift, and go to state 1398


State 1250

  354 capture_list: capture_entry .

    $default  reduce using rule 354 (capture_list)


State 1251

  355 capture_list: capture_list . ',' capture_entry
  357 optional_capture_list: "[[" capture_list . ']' ']'

    ','  shift, and go to state 1399
    ']'  shift, and go to state 1400


State 1252

  361 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 379

    $default  reduce using rule 132 (optional_function_type)

    optional_function_type  go to state 1401


State 1253

  500 expr: expr "is" "type" '<' . $@29 type_declaration_no_options '>' $@30

    $default  reduce using rule 498 ($@29)

    $@29  go to state 1402


State 1254

  540 expr_mtag: expr "is" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1403
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1255

  506 expr: expr "as" "type" '<' . $@31 type_declaration '>' $@32

    $default  reduce using rule 504 ($@31)

    $@31  go to state 1404


State 1256

  538 expr_mtag: expr "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1405
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1257

  392 expr_assign_pipe_right: "$ <|" expr_block .

    $default  reduce using rule 392 (expr_assign_pipe_right)


State 1258

  390 expr_assign_pipe_right: "@ <|" expr_block .

    $default  reduce using rule 390 (expr_assign_pipe_right)


State 1259

  391 expr_assign_pipe_right: "@@ <|" expr_block .

    $default  reduce using rule 391 (expr_assign_pipe_right)


State 1260

  413 expr_method_call: expr "->" "name" '(' . ')'
  414                 | expr "->" "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    ')'                               shift, and go to state 1406
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 1407
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 721
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1261

  535 expr_mtag: expr "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1408
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1262

  485 expr: expr "?[" expr ']' .

    $default  reduce using rule 485 (expr)


State 1263

  511 expr: expr '?' "as" "type" . '<' $@33 type_declaration '>' $@34

    '<'  shift, and go to state 1409


State 1264

  539 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1410


State 1265

  508 expr: expr '?' "as" "name" .

    $default  reduce using rule 508 (expr)


State 1266

  512 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 512 (expr)


State 1267

  497 expr: expr '?' expr ':' . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1411
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1268

  537 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1412


State 1269

  488 expr: expr '.' "?." "name" .

    $default  reduce using rule 488 (expr)


State 1270

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  486     | expr '.' "?[" expr . ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798
    ']'    shift, and go to state 1413


State 1271

  534 expr_mtag: expr '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1414
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1272

  426 expr_field: expr '.' "name" '(' . ')'
  427           | expr '.' "name" '(' . expr_list ')'
  428           | expr '.' "name" '(' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 1415
    '('                               shift, and go to state 508
    ')'                               shift, and go to state 1416
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 1417
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 721
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1273

  536 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1418


State 1274

  425 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 425 (expr_field)


State 1275

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  484     | expr '.' '[' expr . ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798
    ']'    shift, and go to state 1419


State 1276

  433 expr_field: expr '.' $@27 error . $@28

    $default  reduce using rule 432 ($@28)

    $@28  go to state 1420


State 1277

  429 expr_field: expr '.' basic_type_declaration '(' . ')'
  430           | expr '.' basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    ')'                               shift, and go to state 1421
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 1422
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 721
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1278

  483 expr: expr '[' expr ']' .

    $default  reduce using rule 483 (expr)


State 1279

  440 expr_call: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 440 (expr_call)


State 1280

  619 enum_list: enum_list "name" '=' expr "end of expression" .

    $default  reduce using rule 619 (enum_list)


State 1281

  639 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@44 enum_list $@45 "end of code block" .

    $default  reduce using rule 639 (enum_declaration)


State 1282

  128 optional_annotation_list: '[' annotation_list ']' .
  564 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' . "end of expression"

    "end of expression"  shift, and go to state 1423

    $default  reduce using rule 128 (optional_annotation_list)


State 1283

  551 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 551 (optional_public_or_private_member_variable)


State 1284

  552 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 552 (optional_public_or_private_member_variable)


State 1285

  561 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . "abstract" optional_constant $@36 function_declaration_header "end of expression"
  563                                 | struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@37 function_declaration_header expression_block

    "abstract"  shift, and go to state 1424
    "static"    shift, and go to state 1286

    $default  reduce using rule 553 (optional_static_member_variable)

    optional_static_member_variable  go to state 1425


State 1286

  554 optional_static_member_variable: "static" .

    $default  reduce using rule 554 (optional_static_member_variable)


State 1287

  555 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1426
    "sealed"    shift, and go to state 1427

    $default  reduce using rule 545 (optional_override)

    optional_override  go to state 1428


State 1288

  559 struct_variable_declaration_list: struct_variable_declaration_list $@35 structure_variable_declaration "end of expression" .

    $default  reduce using rule 559 (struct_variable_declaration_list)


State 1289

  494 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  495     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'

    "capture"  shift, and go to state 986
    "[["       shift, and go to state 987

    $default  reduce using rule 356 (optional_capture_list)

    optional_capture_list  go to state 1429


State 1290

  601 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 601 (let_variable_declaration)


State 1291

  723 type_declaration_no_options: "type" '<' $@50 type_declaration '>' $@51 .

    $default  reduce using rule 723 (type_declaration_no_options)


State 1292

  746 type_declaration_no_options: "array" '<' $@55 type_declaration '>' $@56 .

    $default  reduce using rule 746 (type_declaration_no_options)


State 1293

  749 type_declaration_no_options: "table" '<' $@57 table_type_pair '>' $@58 .

    $default  reduce using rule 749 (type_declaration_no_options)


State 1294

  712 table_type_pair: type_declaration c_or_s type_declaration .
  781 type_declaration: type_declaration . '|' type_declaration_no_options
  782                 | type_declaration . '|' '#'

    '|'  shift, and go to state 423

    $default  reduce using rule 712 (table_type_pair)


State 1295

  752 type_declaration_no_options: "iterator" '<' $@59 type_declaration '>' $@60 .

    $default  reduce using rule 752 (type_declaration_no_options)


State 1296

  742 type_declaration_no_options: "smart_ptr" '<' $@53 type_declaration '>' $@54 .

    $default  reduce using rule 742 (type_declaration_no_options)


State 1297

  702 bitfield_bits: bitfield_bits "end of expression" "name" .

    $default  reduce using rule 702 (bitfield_bits)


State 1298

  708 bitfield_type_declaration: "bitfield" '<' $@48 bitfield_bits '>' $@49 .

    $default  reduce using rule 708 (bitfield_type_declaration)


State 1299

  756 type_declaration_no_options: "block" '<' $@61 type_declaration '>' $@62 .

    $default  reduce using rule 756 (type_declaration_no_options)


State 1300

  759 type_declaration_no_options: "block" '<' $@63 optional_function_argument_list optional_function_type '>' . $@64

    $default  reduce using rule 758 ($@64)

    $@64  go to state 1430


State 1301

  763 type_declaration_no_options: "function" '<' $@65 type_declaration '>' $@66 .

    $default  reduce using rule 763 (type_declaration_no_options)


State 1302

  766 type_declaration_no_options: "function" '<' $@67 optional_function_argument_list optional_function_type '>' . $@68

    $default  reduce using rule 765 ($@68)

    $@68  go to state 1431


State 1303

  770 type_declaration_no_options: "lambda" '<' $@69 type_declaration '>' $@70 .

    $default  reduce using rule 770 (type_declaration_no_options)


State 1304

  773 type_declaration_no_options: "lambda" '<' $@71 optional_function_argument_list optional_function_type '>' . $@72

    $default  reduce using rule 772 ($@72)

    $@72  go to state 1432


State 1305

  776 type_declaration_no_options: "tuple" '<' $@73 tuple_type_list '>' $@74 .

    $default  reduce using rule 776 (type_declaration_no_options)


State 1306

  572 tuple_type_list: tuple_type_list c_or_s tuple_type .

    $default  reduce using rule 572 (tuple_type_list)


State 1307

  779 type_declaration_no_options: "variant" '<' $@75 variant_type_list '>' $@76 .

    $default  reduce using rule 779 (type_declaration_no_options)


State 1308

  578 variant_type_list: variant_type_list c_or_s variant_type .

    $default  reduce using rule 578 (variant_type_list)


State 1309

  727 type_declaration_no_options: '$' name_in_namespace '<' $@52 type_declaration_no_options_list '>' . '(' optional_expr_list ')'

    '('  shift, and go to state 1433


State 1310

  263 type_declaration_no_options_list: type_declaration_no_options_list c_or_s . type_declaration

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 362
    type_declaration             go to state 1434


State 1311

  658 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 658 (variable_name_with_pos_list)


State 1312

  661 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1435


State 1313

  587 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1436
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1314

  845 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' . $@90 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 844 ($@90)

    $@90  go to state 1437


State 1315

  848 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' . $@92 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 847 ($@92)

    $@92  go to state 1438


State 1316

   82 expression_for_loop: "for" $@5 variable_name_with_pos_list "in" expr_list . expression_block
  342 expr_list: expr_list . ',' expr

    "begin of code block"  shift, and go to state 291
    ','                    shift, and go to state 877

    expression_block  go to state 1439


State 1317

  282 new_type_declaration: '<' $@12 type_declaration '>' . $@13

    $default  reduce using rule 281 ($@13)

    $@13  go to state 1440


State 1318

  288 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1441


State 1319

  286 expr_new: "new" new_type_declaration '(' expr_list ')' .

    $default  reduce using rule 286 (expr_new)


State 1320

  287 expr_new: "new" new_type_declaration '(' make_struct_single ')' .

    $default  reduce using rule 287 (expr_new)


State 1321

  285 expr_new: "new" new_type_declaration '(' use_initializer ')' .

    $default  reduce using rule 285 (expr_new)


State 1322

  336 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" . '>' expr ')'
  337               | "typeinfo" '(' name_in_namespace '<' "name" . c_or_s "name" '>' expr ')'

    "end of expression"  shift, and go to state 616
    ','                  shift, and go to state 617
    '>'                  shift, and go to state 1442

    c_or_s  go to state 1443


State 1323

  335 expr_type_info: "typeinfo" '(' name_in_namespace expr ')' .

    $default  reduce using rule 335 (expr_type_info)


State 1324

  340 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" . "name" '>' '(' expr ')'

    "name"  shift, and go to state 1444


State 1325

  339 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' . '(' expr ')'

    '('  shift, and go to state 1445


State 1326

  338 expr_type_info: "typeinfo" name_in_namespace '(' expr ')' .

    $default  reduce using rule 338 (expr_type_info)


State 1327

  334 expr_type_decl: "type" '<' $@20 type_declaration '>' . $@21

    $default  reduce using rule 333 ($@21)

    $@21  go to state 1446


State 1328

  719 type_declaration_no_options: type_declaration_no_options . dim_list
  720                            | type_declaration_no_options . '[' ']'
  728                            | type_declaration_no_options . '-' '[' ']'
  729                            | type_declaration_no_options . "explicit"
  730                            | type_declaration_no_options . "const"
  731                            | type_declaration_no_options . '-' "const"
  732                            | type_declaration_no_options . '&'
  733                            | type_declaration_no_options . '-' '&'
  734                            | type_declaration_no_options . '#'
  735                            | type_declaration_no_options . "implicit"
  736                            | type_declaration_no_options . '-' '#'
  737                            | type_declaration_no_options . "==" "const"
  738                            | type_declaration_no_options . "==" '&'
  739                            | type_declaration_no_options . '?'
  743                            | type_declaration_no_options . "??"
  871 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options . '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "??"        shift, and go to state 416
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '>'         shift, and go to state 1447
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    dim_list  go to state 422


State 1329

  719 type_declaration_no_options: type_declaration_no_options . dim_list
  720                            | type_declaration_no_options . '[' ']'
  728                            | type_declaration_no_options . '-' '[' ']'
  729                            | type_declaration_no_options . "explicit"
  730                            | type_declaration_no_options . "const"
  731                            | type_declaration_no_options . '-' "const"
  732                            | type_declaration_no_options . '&'
  733                            | type_declaration_no_options . '-' '&'
  734                            | type_declaration_no_options . '#'
  735                            | type_declaration_no_options . "implicit"
  736                            | type_declaration_no_options . '-' '#'
  737                            | type_declaration_no_options . "==" "const"
  738                            | type_declaration_no_options . "==" '&'
  739                            | type_declaration_no_options . '?'
  743                            | type_declaration_no_options . "??"
  874 make_dim_decl: "array" "tuple" '<' $@101 type_declaration_no_options . '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "??"        shift, and go to state 416
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '>'         shift, and go to state 1448
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    dim_list  go to state 422


State 1330

  719 type_declaration_no_options: type_declaration_no_options . dim_list
  720                            | type_declaration_no_options . '[' ']'
  728                            | type_declaration_no_options . '-' '[' ']'
  729                            | type_declaration_no_options . "explicit"
  730                            | type_declaration_no_options . "const"
  731                            | type_declaration_no_options . '-' "const"
  732                            | type_declaration_no_options . '&'
  733                            | type_declaration_no_options . '-' '&'
  734                            | type_declaration_no_options . '#'
  735                            | type_declaration_no_options . "implicit"
  736                            | type_declaration_no_options . '-' '#'
  737                            | type_declaration_no_options . "==" "const"
  738                            | type_declaration_no_options . "==" '&'
  739                            | type_declaration_no_options . '?'
  743                            | type_declaration_no_options . "??"
  877 make_dim_decl: "array" "variant" '<' $@103 type_declaration_no_options . '>' $@104 '(' make_variant_dim ')'

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "??"        shift, and go to state 416
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '>'         shift, and go to state 1449
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    dim_list  go to state 422


State 1331

  881 make_dim_decl: "array" '<' $@105 type_declaration_no_options '>' . $@106 '(' optional_expr_list ')'

    $default  reduce using rule 880 ($@106)

    $@106  go to state 1450


State 1332

  878 make_dim_decl: "array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 878 (make_dim_decl)


State 1333

  893 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    $default  reduce using rule 260 (optional_expr_map_tuple_list)

    string_builder                go to state 511
    expr_reader                   go to state 512
    optional_expr_map_tuple_list  go to state 1451
    expression_keyword            go to state 573
    name_in_namespace             go to state 528
    expr_new                      go to state 530
    expr_cast                     go to state 540
    expr_type_decl                go to state 541
    expr_type_info                go to state 542
    block_or_lambda               go to state 543
    expr_full_block               go to state 544
    expr_numeric_const            go to state 545
    expr_named_call               go to state 548
    expr_method_call              go to state 549
    func_addr_expr                go to state 550
    expr_field                    go to state 551
    expr_call                     go to state 552
    expr                          go to state 700
    expr_mtag                     go to state 554
    basic_type_declaration        go to state 555
    make_decl                     go to state 556
    make_struct_decl              go to state 557
    make_map_tuple                go to state 709
    make_tuple_call               go to state 558
    make_dim_decl                 go to state 559
    expr_map_tuple_list           go to state 710
    make_table_decl               go to state 560
    array_comprehension           go to state 561


State 1334

  719 type_declaration_no_options: type_declaration_no_options . dim_list
  720                            | type_declaration_no_options . '[' ']'
  728                            | type_declaration_no_options . '-' '[' ']'
  729                            | type_declaration_no_options . "explicit"
  730                            | type_declaration_no_options . "const"
  731                            | type_declaration_no_options . '-' "const"
  732                            | type_declaration_no_options . '&'
  733                            | type_declaration_no_options . '-' '&'
  734                            | type_declaration_no_options . '#'
  735                            | type_declaration_no_options . "implicit"
  736                            | type_declaration_no_options . '-' '#'
  737                            | type_declaration_no_options . "==" "const"
  738                            | type_declaration_no_options . "==" '&'
  739                            | type_declaration_no_options . '?'
  743                            | type_declaration_no_options . "??"
  894 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "??"        shift, and go to state 416
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '>'         shift, and go to state 1452
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    dim_list  go to state 422


State 1335

   87 expression_with_alias: "assume" "name" '=' $@6 expr .
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    $default  reduce using rule 87 (expression_with_alias)


State 1336

  325 expr_cast: "cast" '<' $@14 type_declaration_no_options '>' . $@15 expr

    $default  reduce using rule 324 ($@15)

    $@15  go to state 1453


State 1337

  328 expr_cast: "upcast" '<' $@16 type_declaration_no_options '>' . $@17 expr

    $default  reduce using rule 327 ($@17)

    $@17  go to state 1454


State 1338

  331 expr_cast: "reinterpret" '<' $@18 type_declaration_no_options '>' . $@19 expr

    $default  reduce using rule 330 ($@19)

    $@19  go to state 1455


State 1339

  885 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' . $@108 '(' expr_list optional_comma ')'

    $default  reduce using rule 884 ($@108)

    $@108  go to state 1456


State 1340

  882 make_dim_decl: "fixed_array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 882 (make_dim_decl)


State 1341

  854 make_struct_decl: "default" '<' $@95 type_declaration_no_options '>' . $@96 use_initializer

    $default  reduce using rule 853 ($@96)

    $@96  go to state 1457


State 1342

  863 make_tuple_call: "tuple" '<' $@97 type_declaration_no_options '>' . $@98 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 862 ($@98)

    $@98  go to state 1458


State 1343

  860 make_tuple_call: "tuple" '(' expr_list optional_comma ')' .

    $default  reduce using rule 860 (make_tuple_call)


State 1344

  851 make_struct_decl: "variant" '<' $@93 type_declaration_no_options '>' . $@94 '(' make_variant_dim ')'

    $default  reduce using rule 850 ($@94)

    $@94  go to state 1459


State 1345

  230 expr_call_pipe: "generator" '<' type_declaration_no_options '>' optional_capture_list . expr_full_block_assumed_piped
  494 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  495     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 1460
    '$'  shift, and go to state 509
    '@'  shift, and go to state 683

    block_or_lambda                go to state 732
    expr_full_block_assumed_piped  go to state 1461


State 1346

  360 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 379

    $default  reduce using rule 132 (optional_function_type)

    optional_function_type  go to state 1462


State 1347

  532 expr_mtag: "$c" '(' expr ')' '(' . ')'
  533          | "$c" '(' expr ')' '(' . expr_list ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    ')'                               shift, and go to state 1463
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 1464
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 721
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1348

  342 expr_list: expr_list . ',' expr
  901 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']' ']'

    "end of expression"  shift, and go to state 1465
    ','                  shift, and go to state 877


State 1349

  814 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  840 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"              shift, and go to state 927
    "end of expression"  shift, and go to state 1188

    $default  reduce using rule 821 (optional_block)

    optional_block  go to state 1466


State 1350

  839 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1190
    ",]]"  shift, and go to state 1191
    ']'    shift, and go to state 1192

    optional_trailing_delim_sqr_sqr  go to state 1467


State 1351

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'
  856 make_tuple: expr "=>" expr .

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    $default  reduce using rule 856 (make_tuple)


State 1352

  805 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  806                   | make_struct_fields . ',' "name" ":=" expr
  809                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  810                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  814 make_struct_dim: make_struct_dim "end of expression" make_struct_fields .

    ','  shift, and go to state 967

    $default  reduce using rule 814 (make_struct_dim)


State 1353

  837 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 837 (make_struct_decl)


State 1354

  829 optional_trailing_delim_sqr_sqr: ']' ']' .

    $default  reduce using rule 829 (optional_trailing_delim_sqr_sqr)


State 1355

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'
  857 make_tuple: make_tuple ',' expr .

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    $default  reduce using rule 857 (make_tuple)


State 1356

  857 make_tuple: make_tuple . ',' expr
  865 make_dim: make_dim "end of expression" make_tuple .

    ','  shift, and go to state 1194

    $default  reduce using rule 865 (make_dim)


State 1357

  827 optional_trailing_semicolon_sqr_sqr: ']' ']' .

    $default  reduce using rule 827 (optional_trailing_semicolon_sqr_sqr)


State 1358

  342 expr_list: expr_list . ',' expr
  902 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where "end of code block" ']'

    "end of expression"  shift, and go to state 1468
    ','                  shift, and go to state 877


State 1359

  814 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  842 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"              shift, and go to state 927
    "end of expression"  shift, and go to state 1188

    $default  reduce using rule 821 (optional_block)

    optional_block  go to state 1469


State 1360

  832 optional_trailing_delim_cur_sqr: "end of code block" . ']'

    ']'  shift, and go to state 1470


State 1361

  833 optional_trailing_delim_cur_sqr: ";}]" .

    $default  reduce using rule 833 (optional_trailing_delim_cur_sqr)


State 1362

  834 optional_trailing_delim_cur_sqr: ",}]" .

    $default  reduce using rule 834 (optional_trailing_delim_cur_sqr)


State 1363

  841 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 841 (make_struct_decl)


State 1364

  825 optional_trailing_semicolon_cur_sqr: "end of code block" ']' .

    $default  reduce using rule 825 (optional_trailing_semicolon_cur_sqr)


State 1365

  342 expr_list: expr_list . ',' expr
  904 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list . "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "end of expression"  shift, and go to state 1471
    ','                  shift, and go to state 877


State 1366

  266 expression_keyword: "keyword" '<' $@8 type_declaration_no_options_list '>' . $@9 expr

    $default  reduce using rule 265 ($@9)

    $@9  go to state 1472


State 1367

  269 expression_keyword: "type function" '<' $@10 type_declaration_no_options_list '>' . $@11 optional_expr_list_in_braces

    $default  reduce using rule 268 ($@11)

    $@11  go to state 1473


State 1368

   33 optional_format_string: ':' . $@1 format_string

    $default  reduce using rule 32 ($@1)

    $@1  go to state 1474


State 1369

   36 string_builder_body: string_builder_body "{" expr optional_format_string . "}"

    "}"  shift, and go to state 1475


State 1370

  342 expr_list: expr_list . ',' expr
  903 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list . "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1476
    ','                  shift, and go to state 877


State 1371

  227 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions "end of code block" .

    $default  reduce using rule 227 (expression_block)


State 1372

  342 expr_list: expr_list . ',' expr
  899 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1477
    ','                  shift, and go to state 877


State 1373

  900 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 1478
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 721
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1374

  807 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  808                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 854
    ":="  shift, and go to state 1479
    '='   shift, and go to state 856

    copy_or_move  go to state 1480


State 1375

  809 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  810                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1481
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1376

  806 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1482
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1377

  805 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1483
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1378

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  416 func_addr_name: "$i" '(' expr . ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798
    ')'    shift, and go to state 1484


State 1379

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'
  541          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798
    ')'    shift, and go to state 1485


State 1380

  420 func_addr_expr: '@' '@' '<' $@23 type_declaration_no_options . '>' $@24 func_addr_name
  719 type_declaration_no_options: type_declaration_no_options . dim_list
  720                            | type_declaration_no_options . '[' ']'
  728                            | type_declaration_no_options . '-' '[' ']'
  729                            | type_declaration_no_options . "explicit"
  730                            | type_declaration_no_options . "const"
  731                            | type_declaration_no_options . '-' "const"
  732                            | type_declaration_no_options . '&'
  733                            | type_declaration_no_options . '-' '&'
  734                            | type_declaration_no_options . '#'
  735                            | type_declaration_no_options . "implicit"
  736                            | type_declaration_no_options . '-' '#'
  737                            | type_declaration_no_options . "==" "const"
  738                            | type_declaration_no_options . "==" '&'
  739                            | type_declaration_no_options . '?'
  743                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "??"        shift, and go to state 416
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '>'         shift, and go to state 1486
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    dim_list  go to state 422


State 1381

  423 func_addr_expr: '@' '@' '<' $@25 optional_function_argument_list . optional_function_type '>' $@26 func_addr_name

    ':'  shift, and go to state 379

    $default  reduce using rule 132 (optional_function_type)

    optional_function_type  go to state 1487


State 1382

   66 expression_else: "else" expression_block .

    $default  reduce using rule 66 (expression_else)


State 1383

   67 expression_else: elif_or_static_elif expr . expression_block expression_else
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 746
    "as"                   shift, and go to state 747
    "<<"                   shift, and go to state 756
    ">>"                   shift, and go to state 757
    "++"                   shift, and go to state 758
    "--"                   shift, and go to state 759
    "<="                   shift, and go to state 760
    ">="                   shift, and go to state 763
    "=="                   shift, and go to state 764
    "!="                   shift, and go to state 765
    "->"                   shift, and go to state 766
    "??"                   shift, and go to state 768
    "?."                   shift, and go to state 769
    "?["                   shift, and go to state 770
    "<|"                   shift, and go to state 771
    "|>"                   shift, and go to state 772
    "<<<"                  shift, and go to state 774
    ">>>"                  shift, and go to state 775
    "&&"                   shift, and go to state 778
    "||"                   shift, and go to state 779
    "^^"                   shift, and go to state 780
    ".."                   shift, and go to state 784
    "begin of code block"  shift, and go to state 291
    '?'                    shift, and go to state 786
    '|'                    shift, and go to state 787
    '^'                    shift, and go to state 788
    '&'                    shift, and go to state 789
    '<'                    shift, and go to state 790
    '>'                    shift, and go to state 791
    '-'                    shift, and go to state 792
    '+'                    shift, and go to state 793
    '*'                    shift, and go to state 794
    '/'                    shift, and go to state 795
    '%'                    shift, and go to state 796
    '.'                    shift, and go to state 797
    '['                    shift, and go to state 798

    expression_block  go to state 1488


State 1384

   72 expression_else_one_liner: "else" . $@3 expression_if_one_liner

    $default  reduce using rule 71 ($@3)

    $@3  go to state 1489


State 1385

   80 expression_if_then_else: expression_if_one_liner "if" $@4 expr expression_else_one_liner . "end of expression"

    "end of expression"  shift, and go to state 1490


State 1386

  363 expr_full_block_assumed_piped: block_or_lambda $@22 optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type expression_block

    '('  shift, and go to state 289

    $default  reduce using rule 129 (optional_function_argument_list)

    optional_function_argument_list  go to state 1491


State 1387

  437 expr_call: name_in_namespace '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 437 (expr_call)


State 1388

  411 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1492


State 1389

  412 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'
  866 make_dim_decl: '[' . optional_expr_list ']'
  899 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  900                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "for"                             shift, and go to state 717
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "iterator"                        shift, and go to state 718
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "$f"                              shift, and go to state 722
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 723
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    $default  reduce using rule 256 (optional_expr_list)

    string_builder          go to state 511
    expr_reader             go to state 512
    optional_expr_list      go to state 719
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 720
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 721
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_fields      go to state 1493
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1390

  312 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1494


State 1391

  313 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' . ']' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  314                                     | "[[" tuple_expansion ']' . ']' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  317                                     | "[[" tuple_expansion ']' . ']' optional_ref copy_or_move_or_clone expr "end of expression"
  318                                     | "[[" tuple_expansion ']' . ']' optional_ref copy_or_move_or_clone expr_pipe

    ']'  shift, and go to state 1495


State 1392

  315 tuple_expansion_variable_declaration: '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  316                                     | '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  319                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr "end of expression"
  320                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr_pipe

    ':'  shift, and go to state 1496
    '&'  shift, and go to state 395

    $default  reduce using rule 593 (optional_ref)

    optional_ref  go to state 1497


State 1393

  355 capture_list: capture_list . ',' capture_entry
  358 optional_capture_list: "capture" '(' capture_list . ')'

    ','  shift, and go to state 1399
    ')'  shift, and go to state 1498


State 1394

  351 capture_entry: "<-" "name" .

    $default  reduce using rule 351 (capture_entry)


State 1395

  352 capture_entry: ":=" "name" .

    $default  reduce using rule 352 (capture_entry)


State 1396

  353 capture_entry: "name" '(' . "name" ')'

    "name"  shift, and go to state 1499


State 1397

  350 capture_entry: '=' "name" .

    $default  reduce using rule 350 (capture_entry)


State 1398

  349 capture_entry: '&' "name" .

    $default  reduce using rule 349 (capture_entry)


State 1399

  355 capture_list: capture_list ',' . capture_entry

    "<-"    shift, and go to state 1245
    ":="    shift, and go to state 1246
    "name"  shift, and go to state 1247
    '='     shift, and go to state 1248
    '&'     shift, and go to state 1249

    capture_entry  go to state 1500


State 1400

  357 optional_capture_list: "[[" capture_list ']' . ']'

    ']'  shift, and go to state 1501


State 1401

  361 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"                   shift, and go to state 1502
    "begin of code block"  shift, and go to state 291

    expression_block       go to state 1503
    block_or_simple_block  go to state 1504


State 1402

  500 expr: expr "is" "type" '<' $@29 . type_declaration_no_options '>' $@30

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 1505


State 1403

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'
  540          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798
    ')'    shift, and go to state 1506


State 1404

  506 expr: expr "as" "type" '<' $@31 . type_declaration '>' $@32

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 362
    type_declaration             go to state 1507


State 1405

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  538          | expr "as" "$f" '(' expr . ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798
    ')'    shift, and go to state 1508


State 1406

  413 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 413 (expr_method_call)


State 1407

  342 expr_list: expr_list . ',' expr
  414 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 877
    ')'  shift, and go to state 1509


State 1408

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  535          | expr "?." "$f" '(' expr . ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798
    ')'    shift, and go to state 1510


State 1409

  511 expr: expr '?' "as" "type" '<' . $@33 type_declaration '>' $@34

    $default  reduce using rule 509 ($@33)

    $@33  go to state 1511


State 1410

  539 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1512
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1411

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  497     | expr '?' expr ':' expr .
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    $default  reduce using rule 497 (expr)


State 1412

  537 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1513
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1413

  486 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 486 (expr)


State 1414

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  534          | expr '.' "$f" '(' expr . ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798
    ')'    shift, and go to state 1514


State 1415

  428 expr_field: expr '.' "name" '(' '[' . make_struct_fields ']' ')'
  866 make_dim_decl: '[' . optional_expr_list ']'
  899 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  900                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "for"                             shift, and go to state 717
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "iterator"                        shift, and go to state 718
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "$f"                              shift, and go to state 722
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 723
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    $default  reduce using rule 256 (optional_expr_list)

    string_builder          go to state 511
    expr_reader             go to state 512
    optional_expr_list      go to state 719
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 720
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 721
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_fields      go to state 1515
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1416

  426 expr_field: expr '.' "name" '(' ')' .

    $default  reduce using rule 426 (expr_field)


State 1417

  342 expr_list: expr_list . ',' expr
  427 expr_field: expr '.' "name" '(' expr_list . ')'

    ','  shift, and go to state 877
    ')'  shift, and go to state 1516


State 1418

  536 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1517
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1419

  484 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 484 (expr)


State 1420

  433 expr_field: expr '.' $@27 error $@28 .

    $default  reduce using rule 433 (expr_field)


State 1421

  429 expr_field: expr '.' basic_type_declaration '(' ')' .

    $default  reduce using rule 429 (expr_field)


State 1422

  342 expr_list: expr_list . ',' expr
  430 expr_field: expr '.' basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 877
    ')'  shift, and go to state 1518


State 1423

  564 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' "end of expression" .

    $default  reduce using rule 564 (struct_variable_declaration_list)


State 1424

  561 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" . optional_constant $@36 function_declaration_header "end of expression"

    "const"  shift, and go to state 1519

    $default  reduce using rule 548 (optional_constant)

    optional_constant  go to state 1520


State 1425

  563 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@37 function_declaration_header expression_block

    "override"  shift, and go to state 1426
    "sealed"    shift, and go to state 1427

    $default  reduce using rule 545 (optional_override)

    optional_override  go to state 1521


State 1426

  546 optional_override: "override" .

    $default  reduce using rule 546 (optional_override)


State 1427

  547 optional_override: "sealed" .

    $default  reduce using rule 547 (optional_override)


State 1428

  555 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1283
    "private"  shift, and go to state 1284

    $default  reduce using rule 550 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1522


State 1429

  494 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  495     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 1460


State 1430

  759 type_declaration_no_options: "block" '<' $@63 optional_function_argument_list optional_function_type '>' $@64 .

    $default  reduce using rule 759 (type_declaration_no_options)


State 1431

  766 type_declaration_no_options: "function" '<' $@67 optional_function_argument_list optional_function_type '>' $@68 .

    $default  reduce using rule 766 (type_declaration_no_options)


State 1432

  773 type_declaration_no_options: "lambda" '<' $@71 optional_function_argument_list optional_function_type '>' $@72 .

    $default  reduce using rule 773 (type_declaration_no_options)


State 1433

  727 type_declaration_no_options: '$' name_in_namespace '<' $@52 type_declaration_no_options_list '>' '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    $default  reduce using rule 256 (optional_expr_list)

    string_builder          go to state 511
    expr_reader             go to state 512
    optional_expr_list      go to state 1523
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 720
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 721
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1434

  263 type_declaration_no_options_list: type_declaration_no_options_list c_or_s type_declaration .
  781 type_declaration: type_declaration . '|' type_declaration_no_options
  782                 | type_declaration . '|' '#'

    '|'  shift, and go to state 423

    $default  reduce using rule 263 (type_declaration_no_options_list)


State 1435

  661 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 661 (variable_name_with_pos_list)


State 1436

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'
  587 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    $default  reduce using rule 587 (variable_declaration)


State 1437

  845 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' $@90 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1524


State 1438

  848 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' $@92 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1525


State 1439

   82 expression_for_loop: "for" $@5 variable_name_with_pos_list "in" expr_list expression_block .

    $default  reduce using rule 82 (expression_for_loop)


State 1440

  282 new_type_declaration: '<' $@12 type_declaration '>' $@13 .

    $default  reduce using rule 282 (new_type_declaration)


State 1441

  288 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 288 (expr_new)


State 1442

  336 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1526
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1443

  337 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s . "name" '>' expr ')'

    "name"  shift, and go to state 1527


State 1444

  340 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" . '>' '(' expr ')'

    '>'  shift, and go to state 1528


State 1445

  339 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1529
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1446

  334 expr_type_decl: "type" '<' $@20 type_declaration '>' $@21 .

    $default  reduce using rule 334 (expr_type_decl)


State 1447

  871 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' . $@100 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 870 ($@100)

    $@100  go to state 1530


State 1448

  874 make_dim_decl: "array" "tuple" '<' $@101 type_declaration_no_options '>' . $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 873 ($@102)

    $@102  go to state 1531


State 1449

  877 make_dim_decl: "array" "variant" '<' $@103 type_declaration_no_options '>' . $@104 '(' make_variant_dim ')'

    $default  reduce using rule 876 ($@104)

    $@104  go to state 1532


State 1450

  881 make_dim_decl: "array" '<' $@105 type_declaration_no_options '>' $@106 . '(' optional_expr_list ')'

    '('  shift, and go to state 1533


State 1451

  893 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1534


State 1452

  894 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1535


State 1453

  325 expr_cast: "cast" '<' $@14 type_declaration_no_options '>' $@15 . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1536
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1454

  328 expr_cast: "upcast" '<' $@16 type_declaration_no_options '>' $@17 . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1537
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1455

  331 expr_cast: "reinterpret" '<' $@18 type_declaration_no_options '>' $@19 . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1538
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1456

  885 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' $@108 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1539


State 1457

  854 make_struct_decl: "default" '<' $@95 type_declaration_no_options '>' $@96 . use_initializer

    "uninitialized"  shift, and go to state 1540

    $default  reduce using rule 835 (use_initializer)

    use_initializer  go to state 1541


State 1458

  863 make_tuple_call: "tuple" '<' $@97 type_declaration_no_options '>' $@98 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1542


State 1459

  851 make_struct_decl: "variant" '<' $@93 type_declaration_no_options '>' $@94 . '(' make_variant_dim ')'

    '('  shift, and go to state 1543


State 1460

  494 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  495     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    ')'                               shift, and go to state 1544
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1545
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1461

  230 expr_call_pipe: "generator" '<' type_declaration_no_options '>' optional_capture_list expr_full_block_assumed_piped .

    $default  reduce using rule 230 (expr_call_pipe)


State 1462

  360 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"                   shift, and go to state 1502
    "begin of code block"  shift, and go to state 291

    expression_block       go to state 1503
    block_or_simple_block  go to state 1546


State 1463

  532 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 532 (expr_mtag)


State 1464

  342 expr_list: expr_list . ',' expr
  533 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 877
    ')'  shift, and go to state 1547


State 1465

  901 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']' ']'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1548
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1466

  840 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1190
    ",]]"  shift, and go to state 1191
    ']'    shift, and go to state 1192

    optional_trailing_delim_sqr_sqr  go to state 1549


State 1467

  839 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 839 (make_struct_decl)


State 1468

  902 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where "end of code block" ']'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1550
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1469

  842 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    "end of code block"  shift, and go to state 1360
    ";}]"                shift, and go to state 1361
    ",}]"                shift, and go to state 1362

    optional_trailing_delim_cur_sqr  go to state 1551


State 1470

  832 optional_trailing_delim_cur_sqr: "end of code block" ']' .

    $default  reduce using rule 832 (optional_trailing_delim_cur_sqr)


State 1471

  904 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" . make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 700
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_map_tuple          go to state 1552
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1472

  266 expression_keyword: "keyword" '<' $@8 type_declaration_no_options_list '>' $@9 . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1553
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1473

  269 expression_keyword: "type function" '<' $@10 type_declaration_no_options_list '>' $@11 . optional_expr_list_in_braces

    '('  shift, and go to state 1554

    '('       [reduce using rule 258 (optional_expr_list_in_braces)]
    $default  reduce using rule 258 (optional_expr_list_in_braces)

    optional_expr_list_in_braces  go to state 1555


State 1474

   33 optional_format_string: ':' $@1 . format_string

    $default  reduce using rule 29 (format_string)

    format_string  go to state 1556


State 1475

   36 string_builder_body: string_builder_body "{" expr optional_format_string "}" .

    $default  reduce using rule 36 (string_builder_body)


State 1476

  903 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" . make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 700
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_map_tuple          go to state 1557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1477

  899 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1558
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1478

  342 expr_list: expr_list . ',' expr
  900 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1559
    ','                  shift, and go to state 877


State 1479

  808 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1560
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1480

  807 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1561
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1481

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'
  809 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  810                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798
    ')'    shift, and go to state 1562


State 1482

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'
  806 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    $default  reduce using rule 806 (make_struct_fields)


State 1483

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'
  805 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    $default  reduce using rule 805 (make_struct_fields)


State 1484

  416 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 416 (func_addr_name)


State 1485

  541 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 541 (expr_mtag)


State 1486

  420 func_addr_expr: '@' '@' '<' $@23 type_declaration_no_options '>' . $@24 func_addr_name

    $default  reduce using rule 419 ($@24)

    $@24  go to state 1563


State 1487

  423 func_addr_expr: '@' '@' '<' $@25 optional_function_argument_list optional_function_type . '>' $@26 func_addr_name

    '>'  shift, and go to state 1564


State 1488

   67 expression_else: elif_or_static_elif expr expression_block . expression_else

    "else"         shift, and go to state 1227
    "elif"         shift, and go to state 1228
    "static_elif"  shift, and go to state 1229

    $default  reduce using rule 65 (expression_else)

    elif_or_static_elif  go to state 1230
    expression_else      go to state 1565


State 1489

   72 expression_else_one_liner: "else" $@3 . expression_if_one_liner

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "return"                          shift, and go to state 1566
    "null"                            shift, and go to state 450
    "break"                           shift, and go to state 451
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "continue"                        shift, and go to state 461
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "yield"                           shift, and go to state 1567
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder             go to state 511
    expr_reader                go to state 512
    expression_if_one_liner    go to state 1568
    expression_keyword         go to state 573
    name_in_namespace          go to state 528
    expr_new                   go to state 530
    expression_break           go to state 1569
    expression_continue        go to state 1570
    expression_return_no_pipe  go to state 1571
    expression_yield_no_pipe   go to state 1572
    expr_cast                  go to state 540
    expr_type_decl             go to state 541
    expr_type_info             go to state 542
    block_or_lambda            go to state 543
    expr_full_block            go to state 544
    expr_numeric_const         go to state 545
    expr_named_call            go to state 548
    expr_method_call           go to state 549
    func_addr_expr             go to state 550
    expr_field                 go to state 551
    expr_call                  go to state 552
    expr                       go to state 1573
    expr_mtag                  go to state 554
    basic_type_declaration     go to state 555
    make_decl                  go to state 556
    make_struct_decl           go to state 557
    make_tuple_call            go to state 558
    make_dim_decl              go to state 559
    make_table_decl            go to state 560
    array_comprehension        go to state 561


State 1490

   80 expression_if_then_else: expression_if_one_liner "if" $@4 expr expression_else_one_liner "end of expression" .

    $default  reduce using rule 80 (expression_if_then_else)


State 1491

  363 expr_full_block_assumed_piped: block_or_lambda $@22 optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type expression_block

    ':'  shift, and go to state 379

    $default  reduce using rule 132 (optional_function_type)

    optional_function_type  go to state 1574


State 1492

  411 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 411 (expr_named_call)


State 1493

  412 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  805 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  806                   | make_struct_fields . ',' "name" ":=" expr
  809                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  810                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 967
    ']'  shift, and go to state 1575


State 1494

  312 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 312 (tuple_expansion)


State 1495

  313 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  314                                     | "[[" tuple_expansion ']' ']' . ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  317                                     | "[[" tuple_expansion ']' ']' . optional_ref copy_or_move_or_clone expr "end of expression"
  318                                     | "[[" tuple_expansion ']' ']' . optional_ref copy_or_move_or_clone expr_pipe

    ':'  shift, and go to state 1576
    '&'  shift, and go to state 395

    $default  reduce using rule 593 (optional_ref)

    optional_ref  go to state 1577


State 1496

  315 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  316                                     | '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr_pipe

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 1578


State 1497

  319 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr "end of expression"
  320                                     | '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 578
    ":="  shift, and go to state 579
    '='   shift, and go to state 580

    copy_or_move_or_clone  go to state 1579


State 1498

  358 optional_capture_list: "capture" '(' capture_list ')' .

    $default  reduce using rule 358 (optional_capture_list)


State 1499

  353 capture_entry: "name" '(' "name" . ')'

    ')'  shift, and go to state 1580


State 1500

  355 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 355 (capture_list)


State 1501

  357 optional_capture_list: "[[" capture_list ']' ']' .

    $default  reduce using rule 357 (optional_capture_list)


State 1502

  344 block_or_simple_block: "=>" . expr
  345                      | "=>" . "<-" expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "<-"                              shift, and go to state 1581
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1582
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1503

  343 block_or_simple_block: expression_block .

    $default  reduce using rule 343 (block_or_simple_block)


State 1504

  361 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 361 (expr_full_block)


State 1505

  500 expr: expr "is" "type" '<' $@29 type_declaration_no_options . '>' $@30
  719 type_declaration_no_options: type_declaration_no_options . dim_list
  720                            | type_declaration_no_options . '[' ']'
  728                            | type_declaration_no_options . '-' '[' ']'
  729                            | type_declaration_no_options . "explicit"
  730                            | type_declaration_no_options . "const"
  731                            | type_declaration_no_options . '-' "const"
  732                            | type_declaration_no_options . '&'
  733                            | type_declaration_no_options . '-' '&'
  734                            | type_declaration_no_options . '#'
  735                            | type_declaration_no_options . "implicit"
  736                            | type_declaration_no_options . '-' '#'
  737                            | type_declaration_no_options . "==" "const"
  738                            | type_declaration_no_options . "==" '&'
  739                            | type_declaration_no_options . '?'
  743                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "??"        shift, and go to state 416
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '>'         shift, and go to state 1583
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    dim_list  go to state 422


State 1506

  540 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 540 (expr_mtag)


State 1507

  506 expr: expr "as" "type" '<' $@31 type_declaration . '>' $@32
  781 type_declaration: type_declaration . '|' type_declaration_no_options
  782                 | type_declaration . '|' '#'

    '|'  shift, and go to state 423
    '>'  shift, and go to state 1584


State 1508

  538 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 538 (expr_mtag)


State 1509

  414 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 414 (expr_method_call)


State 1510

  535 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 535 (expr_mtag)


State 1511

  511 expr: expr '?' "as" "type" '<' $@33 . type_declaration '>' $@34

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 362
    type_declaration             go to state 1585


State 1512

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  539          | expr '?' "as" "$f" '(' expr . ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798
    ')'    shift, and go to state 1586


State 1513

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  537          | expr '.' "?." "$f" '(' expr . ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798
    ')'    shift, and go to state 1587


State 1514

  534 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 534 (expr_mtag)


State 1515

  428 expr_field: expr '.' "name" '(' '[' make_struct_fields . ']' ')'
  805 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  806                   | make_struct_fields . ',' "name" ":=" expr
  809                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  810                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 967
    ']'  shift, and go to state 1588


State 1516

  427 expr_field: expr '.' "name" '(' expr_list ')' .

    $default  reduce using rule 427 (expr_field)


State 1517

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  536          | expr '.' '.' "$f" '(' expr . ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798
    ')'    shift, and go to state 1589


State 1518

  430 expr_field: expr '.' basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 430 (expr_field)


State 1519

  549 optional_constant: "const" .

    $default  reduce using rule 549 (optional_constant)


State 1520

  561 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant . $@36 function_declaration_header "end of expression"

    $default  reduce using rule 560 ($@36)

    $@36  go to state 1590


State 1521

  563 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@37 function_declaration_header expression_block

    "const"  shift, and go to state 1519

    $default  reduce using rule 548 (optional_constant)

    optional_constant  go to state 1591


State 1522

  555 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 627
    "name"  shift, and go to state 628

    variable_declaration         go to state 1592
    variable_name_with_pos_list  go to state 630


State 1523

  727 type_declaration_no_options: '$' name_in_namespace '<' $@52 type_declaration_no_options_list '>' '(' optional_expr_list . ')'

    ')'  shift, and go to state 1593


State 1524

  845 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' $@90 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1540

    $default  reduce using rule 835 (use_initializer)

    use_initializer  go to state 1594


State 1525

  848 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' $@92 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1540

    $default  reduce using rule 835 (use_initializer)

    use_initializer  go to state 1595


State 1526

  336 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr . ')'
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798
    ')'    shift, and go to state 1596


State 1527

  337 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" . '>' expr ')'

    '>'  shift, and go to state 1597


State 1528

  340 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' . '(' expr ')'

    '('  shift, and go to state 1598


State 1529

  339 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr . ')'
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798
    ')'    shift, and go to state 1599


State 1530

  871 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' $@100 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1600


State 1531

  874 make_dim_decl: "array" "tuple" '<' $@101 type_declaration_no_options '>' $@102 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1601


State 1532

  877 make_dim_decl: "array" "variant" '<' $@103 type_declaration_no_options '>' $@104 . '(' make_variant_dim ')'

    '('  shift, and go to state 1602


State 1533

  881 make_dim_decl: "array" '<' $@105 type_declaration_no_options '>' $@106 '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    $default  reduce using rule 256 (optional_expr_list)

    string_builder          go to state 511
    expr_reader             go to state 512
    optional_expr_list      go to state 1603
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 720
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 721
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1534

  893 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 893 (make_table_decl)


State 1535

  894 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    $default  reduce using rule 260 (optional_expr_map_tuple_list)

    string_builder                go to state 511
    expr_reader                   go to state 512
    optional_expr_map_tuple_list  go to state 1604
    expression_keyword            go to state 573
    name_in_namespace             go to state 528
    expr_new                      go to state 530
    expr_cast                     go to state 540
    expr_type_decl                go to state 541
    expr_type_info                go to state 542
    block_or_lambda               go to state 543
    expr_full_block               go to state 544
    expr_numeric_const            go to state 545
    expr_named_call               go to state 548
    expr_method_call              go to state 549
    func_addr_expr                go to state 550
    expr_field                    go to state 551
    expr_call                     go to state 552
    expr                          go to state 700
    expr_mtag                     go to state 554
    basic_type_declaration        go to state 555
    make_decl                     go to state 556
    make_struct_decl              go to state 557
    make_map_tuple                go to state 709
    make_tuple_call               go to state 558
    make_dim_decl                 go to state 559
    expr_map_tuple_list           go to state 710
    make_table_decl               go to state 560
    array_comprehension           go to state 561


State 1536

  325 expr_cast: "cast" '<' $@14 type_declaration_no_options '>' $@15 expr .
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    $default  reduce using rule 325 (expr_cast)


State 1537

  328 expr_cast: "upcast" '<' $@16 type_declaration_no_options '>' $@17 expr .
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    $default  reduce using rule 328 (expr_cast)


State 1538

  331 expr_cast: "reinterpret" '<' $@18 type_declaration_no_options '>' $@19 expr .
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    $default  reduce using rule 331 (expr_cast)


State 1539

  885 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' $@108 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 1605
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 721
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1540

  836 use_initializer: "uninitialized" .

    $default  reduce using rule 836 (use_initializer)


State 1541

  854 make_struct_decl: "default" '<' $@95 type_declaration_no_options '>' $@96 use_initializer .

    $default  reduce using rule 854 (make_struct_decl)


State 1542

  863 make_tuple_call: "tuple" '<' $@97 type_declaration_no_options '>' $@98 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1540

    $default  reduce using rule 835 (use_initializer)

    use_initializer  go to state 1606


State 1543

  851 make_struct_decl: "variant" '<' $@93 type_declaration_no_options '>' $@94 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 722
    "name"  shift, and go to state 1234

    make_struct_fields  go to state 1607
    make_variant_dim    go to state 1608


State 1544

  494 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 494 (expr)


State 1545

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  495     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798
    ')'    shift, and go to state 1609


State 1546

  360 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 360 (expr_block)


State 1547

  533 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 533 (expr_mtag)


State 1548

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'
  901 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']' ']'

    "is"                 shift, and go to state 746
    "as"                 shift, and go to state 747
    "<<"                 shift, and go to state 756
    ">>"                 shift, and go to state 757
    "++"                 shift, and go to state 758
    "--"                 shift, and go to state 759
    "<="                 shift, and go to state 760
    ">="                 shift, and go to state 763
    "=="                 shift, and go to state 764
    "!="                 shift, and go to state 765
    "->"                 shift, and go to state 766
    "??"                 shift, and go to state 768
    "?."                 shift, and go to state 769
    "?["                 shift, and go to state 770
    "<|"                 shift, and go to state 771
    "|>"                 shift, and go to state 772
    "<<<"                shift, and go to state 774
    ">>>"                shift, and go to state 775
    "&&"                 shift, and go to state 778
    "||"                 shift, and go to state 779
    "^^"                 shift, and go to state 780
    ".."                 shift, and go to state 784
    "end of expression"  shift, and go to state 1610
    '?'                  shift, and go to state 786
    '|'                  shift, and go to state 787
    '^'                  shift, and go to state 788
    '&'                  shift, and go to state 789
    '<'                  shift, and go to state 790
    '>'                  shift, and go to state 791
    '-'                  shift, and go to state 792
    '+'                  shift, and go to state 793
    '*'                  shift, and go to state 794
    '/'                  shift, and go to state 795
    '%'                  shift, and go to state 796
    '.'                  shift, and go to state 797
    '['                  shift, and go to state 798

    $default  reduce using rule 895 (array_comprehension_where)

    array_comprehension_where  go to state 1611


State 1549

  840 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 840 (make_struct_decl)


State 1550

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'
  902 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where "end of code block" ']'

    "is"                 shift, and go to state 746
    "as"                 shift, and go to state 747
    "<<"                 shift, and go to state 756
    ">>"                 shift, and go to state 757
    "++"                 shift, and go to state 758
    "--"                 shift, and go to state 759
    "<="                 shift, and go to state 760
    ">="                 shift, and go to state 763
    "=="                 shift, and go to state 764
    "!="                 shift, and go to state 765
    "->"                 shift, and go to state 766
    "??"                 shift, and go to state 768
    "?."                 shift, and go to state 769
    "?["                 shift, and go to state 770
    "<|"                 shift, and go to state 771
    "|>"                 shift, and go to state 772
    "<<<"                shift, and go to state 774
    ">>>"                shift, and go to state 775
    "&&"                 shift, and go to state 778
    "||"                 shift, and go to state 779
    "^^"                 shift, and go to state 780
    ".."                 shift, and go to state 784
    "end of expression"  shift, and go to state 1610
    '?'                  shift, and go to state 786
    '|'                  shift, and go to state 787
    '^'                  shift, and go to state 788
    '&'                  shift, and go to state 789
    '<'                  shift, and go to state 790
    '>'                  shift, and go to state 791
    '-'                  shift, and go to state 792
    '+'                  shift, and go to state 793
    '*'                  shift, and go to state 794
    '/'                  shift, and go to state 795
    '%'                  shift, and go to state 796
    '.'                  shift, and go to state 797
    '['                  shift, and go to state 798

    $default  reduce using rule 895 (array_comprehension_where)

    array_comprehension_where  go to state 1612


State 1551

  842 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 842 (make_struct_decl)


State 1552

  904 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple . array_comprehension_where "end of code block" "end of code block"

    "end of expression"  shift, and go to state 1610

    $default  reduce using rule 895 (array_comprehension_where)

    array_comprehension_where  go to state 1613


State 1553

  266 expression_keyword: "keyword" '<' $@8 type_declaration_no_options_list '>' $@9 expr .
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    $default  reduce using rule 266 (expression_keyword)


State 1554

  259 optional_expr_list_in_braces: '(' . optional_expr_list optional_comma ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    $default  reduce using rule 256 (optional_expr_list)

    string_builder          go to state 511
    expr_reader             go to state 512
    optional_expr_list      go to state 1614
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 720
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 721
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1555

  269 expression_keyword: "type function" '<' $@10 type_declaration_no_options_list '>' $@11 optional_expr_list_in_braces .

    $default  reduce using rule 269 (expression_keyword)


State 1556

   30 format_string: format_string . STRING_CHARACTER
   33 optional_format_string: ':' $@1 format_string .

    STRING_CHARACTER  shift, and go to state 1615

    $default  reduce using rule 33 (optional_format_string)


State 1557

  903 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple . array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1610

    $default  reduce using rule 895 (array_comprehension_where)

    array_comprehension_where  go to state 1616


State 1558

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'
  899 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 746
    "as"                 shift, and go to state 747
    "<<"                 shift, and go to state 756
    ">>"                 shift, and go to state 757
    "++"                 shift, and go to state 758
    "--"                 shift, and go to state 759
    "<="                 shift, and go to state 760
    ">="                 shift, and go to state 763
    "=="                 shift, and go to state 764
    "!="                 shift, and go to state 765
    "->"                 shift, and go to state 766
    "??"                 shift, and go to state 768
    "?."                 shift, and go to state 769
    "?["                 shift, and go to state 770
    "<|"                 shift, and go to state 771
    "|>"                 shift, and go to state 772
    "<<<"                shift, and go to state 774
    ">>>"                shift, and go to state 775
    "&&"                 shift, and go to state 778
    "||"                 shift, and go to state 779
    "^^"                 shift, and go to state 780
    ".."                 shift, and go to state 784
    "end of expression"  shift, and go to state 1610
    '?'                  shift, and go to state 786
    '|'                  shift, and go to state 787
    '^'                  shift, and go to state 788
    '&'                  shift, and go to state 789
    '<'                  shift, and go to state 790
    '>'                  shift, and go to state 791
    '-'                  shift, and go to state 792
    '+'                  shift, and go to state 793
    '*'                  shift, and go to state 794
    '/'                  shift, and go to state 795
    '%'                  shift, and go to state 796
    '.'                  shift, and go to state 797
    '['                  shift, and go to state 798

    $default  reduce using rule 895 (array_comprehension_where)

    array_comprehension_where  go to state 1617


State 1559

  900 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1618
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1560

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'
  808 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    $default  reduce using rule 808 (make_struct_fields)


State 1561

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'
  807 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    $default  reduce using rule 807 (make_struct_fields)


State 1562

  809 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  810                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 854
    ":="  shift, and go to state 1619
    '='   shift, and go to state 856

    copy_or_move  go to state 1620


State 1563

  420 func_addr_expr: '@' '@' '<' $@23 type_declaration_no_options '>' $@24 . func_addr_name

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 969
    "name"  shift, and go to state 59

    name_in_namespace  go to state 972
    func_addr_name     go to state 1621


State 1564

  423 func_addr_expr: '@' '@' '<' $@25 optional_function_argument_list optional_function_type '>' . $@26 func_addr_name

    $default  reduce using rule 422 ($@26)

    $@26  go to state 1622


State 1565

   67 expression_else: elif_or_static_elif expr expression_block expression_else .

    $default  reduce using rule 67 (expression_else)


State 1566

  292 expression_return_no_pipe: "return" .
  293                          | "return" . expr_list
  294                          | "return" . "<-" expr_list

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "<-"                              shift, and go to state 1623
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    $default  reduce using rule 292 (expression_return_no_pipe)

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 650
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 721
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1567

  298 expression_yield_no_pipe: "yield" . expr
  299                         | "yield" . "<-" expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "<-"                              shift, and go to state 1624
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1625
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1568

   72 expression_else_one_liner: "else" $@3 expression_if_one_liner .

    $default  reduce using rule 72 (expression_else_one_liner)


State 1569

   76 expression_if_one_liner: expression_break .

    $default  reduce using rule 76 (expression_if_one_liner)


State 1570

   77 expression_if_one_liner: expression_continue .

    $default  reduce using rule 77 (expression_if_one_liner)


State 1571

   74 expression_if_one_liner: expression_return_no_pipe .

    $default  reduce using rule 74 (expression_if_one_liner)


State 1572

   75 expression_if_one_liner: expression_yield_no_pipe .

    $default  reduce using rule 75 (expression_if_one_liner)


State 1573

   73 expression_if_one_liner: expr .
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    $default  reduce using rule 73 (expression_if_one_liner)


State 1574

  363 expr_full_block_assumed_piped: block_or_lambda $@22 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . expression_block

    "begin of code block"  shift, and go to state 291

    expression_block  go to state 1626


State 1575

  412 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1627


State 1576

  313 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  314                                     | "[[" tuple_expansion ']' ']' ':' . type_declaration_no_options copy_or_move_or_clone expr_pipe

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 1628


State 1577

  317 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref . copy_or_move_or_clone expr "end of expression"
  318                                     | "[[" tuple_expansion ']' ']' optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 578
    ":="  shift, and go to state 579
    '='   shift, and go to state 580

    copy_or_move_or_clone  go to state 1629


State 1578

  315 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"
  316                                     | '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr_pipe
  719 type_declaration_no_options: type_declaration_no_options . dim_list
  720                            | type_declaration_no_options . '[' ']'
  728                            | type_declaration_no_options . '-' '[' ']'
  729                            | type_declaration_no_options . "explicit"
  730                            | type_declaration_no_options . "const"
  731                            | type_declaration_no_options . '-' "const"
  732                            | type_declaration_no_options . '&'
  733                            | type_declaration_no_options . '-' '&'
  734                            | type_declaration_no_options . '#'
  735                            | type_declaration_no_options . "implicit"
  736                            | type_declaration_no_options . '-' '#'
  737                            | type_declaration_no_options . "==" "const"
  738                            | type_declaration_no_options . "==" '&'
  739                            | type_declaration_no_options . '?'
  743                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "<-"        shift, and go to state 578
    "??"        shift, and go to state 416
    ":="        shift, and go to state 579
    '='         shift, and go to state 580
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    copy_or_move_or_clone  go to state 1630
    dim_list               go to state 422


State 1579

  319 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr "end of expression"
  320                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 476
    "@ <|"                            shift, and go to state 477
    "@@ <|"                           shift, and go to state 478
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 523
    expression_keyword      go to state 526
    expr_pipe               go to state 1631
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign             go to state 651
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1632
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1580

  353 capture_entry: "name" '(' "name" ')' .

    $default  reduce using rule 353 (capture_entry)


State 1581

  345 block_or_simple_block: "=>" "<-" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1633
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1582

  344 block_or_simple_block: "=>" expr .
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    ".."  error (nonassociative)

    $default  reduce using rule 344 (block_or_simple_block)


State 1583

  500 expr: expr "is" "type" '<' $@29 type_declaration_no_options '>' . $@30

    $default  reduce using rule 499 ($@30)

    $@30  go to state 1634


State 1584

  506 expr: expr "as" "type" '<' $@31 type_declaration '>' . $@32

    $default  reduce using rule 505 ($@32)

    $@32  go to state 1635


State 1585

  511 expr: expr '?' "as" "type" '<' $@33 type_declaration . '>' $@34
  781 type_declaration: type_declaration . '|' type_declaration_no_options
  782                 | type_declaration . '|' '#'

    '|'  shift, and go to state 423
    '>'  shift, and go to state 1636


State 1586

  539 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 539 (expr_mtag)


State 1587

  537 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 537 (expr_mtag)


State 1588

  428 expr_field: expr '.' "name" '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1637


State 1589

  536 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 536 (expr_mtag)


State 1590

  561 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@36 . function_declaration_header "end of expression"

    "operator"  shift, and go to state 186
    "bool"      shift, and go to state 187
    "string"    shift, and go to state 188
    "int"       shift, and go to state 189
    "int2"      shift, and go to state 190
    "int3"      shift, and go to state 191
    "int4"      shift, and go to state 192
    "uint"      shift, and go to state 193
    "uint2"     shift, and go to state 194
    "uint3"     shift, and go to state 195
    "uint4"     shift, and go to state 196
    "float"     shift, and go to state 197
    "float2"    shift, and go to state 198
    "float3"    shift, and go to state 199
    "float4"    shift, and go to state 200
    "range"     shift, and go to state 201
    "urange"    shift, and go to state 202
    "range64"   shift, and go to state 203
    "urange64"  shift, and go to state 204
    "int64"     shift, and go to state 205
    "uint64"    shift, and go to state 206
    "double"    shift, and go to state 207
    "int8"      shift, and go to state 208
    "uint8"     shift, and go to state 209
    "int16"     shift, and go to state 210
    "uint16"    shift, and go to state 211
    "++"        shift, and go to state 212
    "--"        shift, and go to state 213
    "name"      shift, and go to state 214

    function_name                go to state 215
    function_declaration_header  go to state 1638


State 1591

  563 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@37 function_declaration_header expression_block

    $default  reduce using rule 562 ($@37)

    $@37  go to state 1639


State 1592

  555 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 555 (structure_variable_declaration)


State 1593

  727 type_declaration_no_options: '$' name_in_namespace '<' $@52 type_declaration_no_options_list '>' '(' optional_expr_list ')' .

    $default  reduce using rule 727 (type_declaration_no_options)


State 1594

  845 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 722
    "name"  shift, and go to state 1234
    '('     shift, and go to state 1640

    $default  reduce using rule 820 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1641
    make_struct_dim_list           go to state 1642
    make_struct_dim_decl           go to state 1643
    optional_make_struct_dim_decl  go to state 1644


State 1595

  848 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' $@92 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 722
    "name"  shift, and go to state 1234
    '('     shift, and go to state 1640

    $default  reduce using rule 820 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1641
    make_struct_dim_list           go to state 1642
    make_struct_dim_decl           go to state 1643
    optional_make_struct_dim_decl  go to state 1645


State 1596

  336 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')' .

    $default  reduce using rule 336 (expr_type_info)


State 1597

  337 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" '>' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1646
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1598

  340 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1647
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1599

  339 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')' .

    $default  reduce using rule 339 (expr_type_info)


State 1600

  871 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' $@100 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1540

    $default  reduce using rule 835 (use_initializer)

    use_initializer  go to state 1648


State 1601

  874 make_dim_decl: "array" "tuple" '<' $@101 type_declaration_no_options '>' $@102 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1540

    $default  reduce using rule 835 (use_initializer)

    use_initializer  go to state 1649


State 1602

  877 make_dim_decl: "array" "variant" '<' $@103 type_declaration_no_options '>' $@104 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 722
    "name"  shift, and go to state 1234

    make_struct_fields  go to state 1607
    make_variant_dim    go to state 1650


State 1603

  881 make_dim_decl: "array" '<' $@105 type_declaration_no_options '>' $@106 '(' optional_expr_list . ')'

    ')'  shift, and go to state 1651


State 1604

  894 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1652


State 1605

  342 expr_list: expr_list . ',' expr
  885 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' $@108 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 961

    $default  reduce using rule 897 (optional_comma)

    optional_comma  go to state 1653


State 1606

  863 make_tuple_call: "tuple" '<' $@97 type_declaration_no_options '>' $@98 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 722
    "name"  shift, and go to state 1234
    '('     shift, and go to state 1640

    $default  reduce using rule 820 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1641
    make_struct_dim_list           go to state 1642
    make_struct_dim_decl           go to state 1643
    optional_make_struct_dim_decl  go to state 1654


State 1607

  805 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  806                   | make_struct_fields . ',' "name" ":=" expr
  809                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  810                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  811 make_variant_dim: make_struct_fields .

    ','  shift, and go to state 967

    $default  reduce using rule 811 (make_variant_dim)


State 1608

  851 make_struct_decl: "variant" '<' $@93 type_declaration_no_options '>' $@94 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1655


State 1609

  495 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 495 (expr)


State 1610

  896 array_comprehension_where: "end of expression" . "where" expr

    "where"  shift, and go to state 1656


State 1611

  901 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']' ']'

    ']'  shift, and go to state 1657


State 1612

  902 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . "end of code block" ']'

    "end of code block"  shift, and go to state 1658


State 1613

  904 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where . "end of code block" "end of code block"

    "end of code block"  shift, and go to state 1659


State 1614

  259 optional_expr_list_in_braces: '(' optional_expr_list . optional_comma ')'

    ','  shift, and go to state 1660

    $default  reduce using rule 897 (optional_comma)

    optional_comma  go to state 1661


State 1615

   30 format_string: format_string STRING_CHARACTER .

    $default  reduce using rule 30 (format_string)


State 1616

  903 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where . "end of code block"

    "end of code block"  shift, and go to state 1662


State 1617

  899 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1663


State 1618

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'
  900 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 746
    "as"                 shift, and go to state 747
    "<<"                 shift, and go to state 756
    ">>"                 shift, and go to state 757
    "++"                 shift, and go to state 758
    "--"                 shift, and go to state 759
    "<="                 shift, and go to state 760
    ">="                 shift, and go to state 763
    "=="                 shift, and go to state 764
    "!="                 shift, and go to state 765
    "->"                 shift, and go to state 766
    "??"                 shift, and go to state 768
    "?."                 shift, and go to state 769
    "?["                 shift, and go to state 770
    "<|"                 shift, and go to state 771
    "|>"                 shift, and go to state 772
    "<<<"                shift, and go to state 774
    ">>>"                shift, and go to state 775
    "&&"                 shift, and go to state 778
    "||"                 shift, and go to state 779
    "^^"                 shift, and go to state 780
    ".."                 shift, and go to state 784
    "end of expression"  shift, and go to state 1610
    '?'                  shift, and go to state 786
    '|'                  shift, and go to state 787
    '^'                  shift, and go to state 788
    '&'                  shift, and go to state 789
    '<'                  shift, and go to state 790
    '>'                  shift, and go to state 791
    '-'                  shift, and go to state 792
    '+'                  shift, and go to state 793
    '*'                  shift, and go to state 794
    '/'                  shift, and go to state 795
    '%'                  shift, and go to state 796
    '.'                  shift, and go to state 797
    '['                  shift, and go to state 798

    $default  reduce using rule 895 (array_comprehension_where)

    array_comprehension_where  go to state 1664


State 1619

  810 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1665
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1620

  809 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1666
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1621

  420 func_addr_expr: '@' '@' '<' $@23 type_declaration_no_options '>' $@24 func_addr_name .

    $default  reduce using rule 420 (func_addr_expr)


State 1622

  423 func_addr_expr: '@' '@' '<' $@25 optional_function_argument_list optional_function_type '>' $@26 . func_addr_name

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 969
    "name"  shift, and go to state 59

    name_in_namespace  go to state 972
    func_addr_name     go to state 1667


State 1623

  294 expression_return_no_pipe: "return" "<-" . expr_list

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 876
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 721
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1624

  299 expression_yield_no_pipe: "yield" "<-" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1668
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1625

  298 expression_yield_no_pipe: "yield" expr .
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    $default  reduce using rule 298 (expression_yield_no_pipe)


State 1626

  363 expr_full_block_assumed_piped: block_or_lambda $@22 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block .

    $default  reduce using rule 363 (expr_full_block_assumed_piped)


State 1627

  412 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 412 (expr_named_call)


State 1628

  313 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"
  314                                     | "[[" tuple_expansion ']' ']' ':' type_declaration_no_options . copy_or_move_or_clone expr_pipe
  719 type_declaration_no_options: type_declaration_no_options . dim_list
  720                            | type_declaration_no_options . '[' ']'
  728                            | type_declaration_no_options . '-' '[' ']'
  729                            | type_declaration_no_options . "explicit"
  730                            | type_declaration_no_options . "const"
  731                            | type_declaration_no_options . '-' "const"
  732                            | type_declaration_no_options . '&'
  733                            | type_declaration_no_options . '-' '&'
  734                            | type_declaration_no_options . '#'
  735                            | type_declaration_no_options . "implicit"
  736                            | type_declaration_no_options . '-' '#'
  737                            | type_declaration_no_options . "==" "const"
  738                            | type_declaration_no_options . "==" '&'
  739                            | type_declaration_no_options . '?'
  743                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "<-"        shift, and go to state 578
    "??"        shift, and go to state 416
    ":="        shift, and go to state 579
    '='         shift, and go to state 580
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    copy_or_move_or_clone  go to state 1669
    dim_list               go to state 422


State 1629

  317 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone . expr "end of expression"
  318                                     | "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 476
    "@ <|"                            shift, and go to state 477
    "@@ <|"                           shift, and go to state 478
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 523
    expression_keyword      go to state 526
    expr_pipe               go to state 1670
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign             go to state 651
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1671
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1630

  315 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"
  316                                     | '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 476
    "@ <|"                            shift, and go to state 477
    "@@ <|"                           shift, and go to state 478
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 523
    expression_keyword      go to state 526
    expr_pipe               go to state 1672
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign             go to state 651
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1673
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1631

  320 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 320 (tuple_expansion_variable_declaration)


State 1632

  228 expr_call_pipe: expr . expr_full_block_assumed_piped
  319 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr . "end of expression"
  371 expr_assign: expr .
  372            | expr . '=' expr
  373            | expr . "<-" expr
  374            | expr . ":=" expr
  375            | expr . "&=" expr
  376            | expr . "|=" expr
  377            | expr . "^=" expr
  378            | expr . "&&=" expr
  379            | expr . "||=" expr
  380            | expr . "^^=" expr
  381            | expr . "+=" expr
  382            | expr . "-=" expr
  383            | expr . "*=" expr
  384            | expr . "/=" expr
  385            | expr . "%=" expr
  386            | expr . "<<=" expr
  387            | expr . ">>=" expr
  388            | expr . "<<<=" expr
  389            | expr . ">>>=" expr
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 746
    "as"                 shift, and go to state 747
    "+="                 shift, and go to state 878
    "-="                 shift, and go to state 879
    "/="                 shift, and go to state 880
    "*="                 shift, and go to state 881
    "%="                 shift, and go to state 882
    "&="                 shift, and go to state 883
    "|="                 shift, and go to state 884
    "^="                 shift, and go to state 885
    "<<"                 shift, and go to state 756
    ">>"                 shift, and go to state 757
    "++"                 shift, and go to state 758
    "--"                 shift, and go to state 759
    "<="                 shift, and go to state 760
    "<<="                shift, and go to state 886
    ">>="                shift, and go to state 887
    ">="                 shift, and go to state 763
    "=="                 shift, and go to state 764
    "!="                 shift, and go to state 765
    "->"                 shift, and go to state 766
    "<-"                 shift, and go to state 888
    "??"                 shift, and go to state 768
    "?."                 shift, and go to state 769
    "?["                 shift, and go to state 770
    "<|"                 shift, and go to state 771
    "|>"                 shift, and go to state 772
    ":="                 shift, and go to state 773
    "<<<"                shift, and go to state 774
    ">>>"                shift, and go to state 775
    "<<<="               shift, and go to state 889
    ">>>="               shift, and go to state 890
    "&&"                 shift, and go to state 778
    "||"                 shift, and go to state 779
    "^^"                 shift, and go to state 780
    "&&="                shift, and go to state 891
    "||="                shift, and go to state 892
    "^^="                shift, and go to state 893
    ".."                 shift, and go to state 784
    "end of expression"  shift, and go to state 1674
    '='                  shift, and go to state 894
    '?'                  shift, and go to state 786
    '|'                  shift, and go to state 787
    '^'                  shift, and go to state 788
    '&'                  shift, and go to state 789
    '<'                  shift, and go to state 790
    '>'                  shift, and go to state 791
    '-'                  shift, and go to state 792
    '+'                  shift, and go to state 793
    '*'                  shift, and go to state 794
    '/'                  shift, and go to state 795
    '%'                  shift, and go to state 796
    '.'                  shift, and go to state 797
    '['                  shift, and go to state 798
    '$'                  shift, and go to state 509
    '@'                  shift, and go to state 683

    $default  reduce using rule 371 (expr_assign)

    block_or_lambda                go to state 732
    expr_full_block_assumed_piped  go to state 799


State 1633

  345 block_or_simple_block: "=>" "<-" expr .
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    $default  reduce using rule 345 (block_or_simple_block)


State 1634

  500 expr: expr "is" "type" '<' $@29 type_declaration_no_options '>' $@30 .

    $default  reduce using rule 500 (expr)


State 1635

  506 expr: expr "as" "type" '<' $@31 type_declaration '>' $@32 .

    $default  reduce using rule 506 (expr)


State 1636

  511 expr: expr '?' "as" "type" '<' $@33 type_declaration '>' . $@34

    $default  reduce using rule 510 ($@34)

    $@34  go to state 1675


State 1637

  428 expr_field: expr '.' "name" '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 428 (expr_field)


State 1638

  561 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@36 function_declaration_header . "end of expression"

    "end of expression"  shift, and go to state 1676


State 1639

  563 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@37 . function_declaration_header expression_block

    "operator"  shift, and go to state 186
    "bool"      shift, and go to state 187
    "string"    shift, and go to state 188
    "int"       shift, and go to state 189
    "int2"      shift, and go to state 190
    "int3"      shift, and go to state 191
    "int4"      shift, and go to state 192
    "uint"      shift, and go to state 193
    "uint2"     shift, and go to state 194
    "uint3"     shift, and go to state 195
    "uint4"     shift, and go to state 196
    "float"     shift, and go to state 197
    "float2"    shift, and go to state 198
    "float3"    shift, and go to state 199
    "float4"    shift, and go to state 200
    "range"     shift, and go to state 201
    "urange"    shift, and go to state 202
    "range64"   shift, and go to state 203
    "urange64"  shift, and go to state 204
    "int64"     shift, and go to state 205
    "uint64"    shift, and go to state 206
    "double"    shift, and go to state 207
    "int8"      shift, and go to state 208
    "uint8"     shift, and go to state 209
    "int16"     shift, and go to state 210
    "uint16"    shift, and go to state 211
    "++"        shift, and go to state 212
    "--"        shift, and go to state 213
    "name"      shift, and go to state 214

    function_name                go to state 215
    function_declaration_header  go to state 1677


State 1640

  815 make_struct_dim_list: '(' . make_struct_fields ')'

    "$f"    shift, and go to state 722
    "name"  shift, and go to state 1234

    make_struct_fields  go to state 1678


State 1641

  805 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  806                   | make_struct_fields . ',' "name" ":=" expr
  809                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  810                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  817 make_struct_dim_decl: make_struct_fields .

    ','  shift, and go to state 967

    $default  reduce using rule 817 (make_struct_dim_decl)


State 1642

  816 make_struct_dim_list: make_struct_dim_list . ',' '(' make_struct_fields ')'
  818 make_struct_dim_decl: make_struct_dim_list . optional_comma

    ','  shift, and go to state 1679

    $default  reduce using rule 897 (optional_comma)

    optional_comma  go to state 1680


State 1643

  819 optional_make_struct_dim_decl: make_struct_dim_decl .

    $default  reduce using rule 819 (optional_make_struct_dim_decl)


State 1644

  845 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1681


State 1645

  848 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1682


State 1646

  337 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" '>' expr . ')'
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798
    ')'    shift, and go to state 1683


State 1647

  340 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr . ')'
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798
    ')'    shift, and go to state 1684


State 1648

  871 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' $@100 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 722
    "name"  shift, and go to state 1234
    '('     shift, and go to state 1640

    $default  reduce using rule 820 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1641
    make_struct_dim_list           go to state 1642
    make_struct_dim_decl           go to state 1643
    optional_make_struct_dim_decl  go to state 1685


State 1649

  874 make_dim_decl: "array" "tuple" '<' $@101 type_declaration_no_options '>' $@102 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 722
    "name"  shift, and go to state 1234
    '('     shift, and go to state 1640

    $default  reduce using rule 820 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1641
    make_struct_dim_list           go to state 1642
    make_struct_dim_decl           go to state 1643
    optional_make_struct_dim_decl  go to state 1686


State 1650

  877 make_dim_decl: "array" "variant" '<' $@103 type_declaration_no_options '>' $@104 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1687


State 1651

  881 make_dim_decl: "array" '<' $@105 type_declaration_no_options '>' $@106 '(' optional_expr_list ')' .

    $default  reduce using rule 881 (make_dim_decl)


State 1652

  894 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 894 (make_table_decl)


State 1653

  885 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' $@108 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1688


State 1654

  863 make_tuple_call: "tuple" '<' $@97 type_declaration_no_options '>' $@98 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1689


State 1655

  851 make_struct_decl: "variant" '<' $@93 type_declaration_no_options '>' $@94 '(' make_variant_dim ')' .

    $default  reduce using rule 851 (make_struct_decl)


State 1656

  896 array_comprehension_where: "end of expression" "where" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1690
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1657

  901 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' . ']'

    ']'  shift, and go to state 1691


State 1658

  902 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" . ']'

    ']'  shift, and go to state 1692


State 1659

  904 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" . "end of code block"

    "end of code block"  shift, and go to state 1693


State 1660

  898 optional_comma: ',' .

    $default  reduce using rule 898 (optional_comma)


State 1661

  259 optional_expr_list_in_braces: '(' optional_expr_list optional_comma . ')'

    ')'  shift, and go to state 1694


State 1662

  903 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" .

    $default  reduce using rule 903 (array_comprehension)


State 1663

  899 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 899 (array_comprehension)


State 1664

  900 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1695


State 1665

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'
  810 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    $default  reduce using rule 810 (make_struct_fields)


State 1666

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'
  809 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    $default  reduce using rule 809 (make_struct_fields)


State 1667

  423 func_addr_expr: '@' '@' '<' $@25 optional_function_argument_list optional_function_type '>' $@26 func_addr_name .

    $default  reduce using rule 423 (func_addr_expr)


State 1668

  299 expression_yield_no_pipe: "yield" "<-" expr .
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    $default  reduce using rule 299 (expression_yield_no_pipe)


State 1669

  313 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"
  314                                     | "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 476
    "@ <|"                            shift, and go to state 477
    "@@ <|"                           shift, and go to state 478
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 523
    expression_keyword      go to state 526
    expr_pipe               go to state 1696
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign             go to state 651
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1697
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1670

  318 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 318 (tuple_expansion_variable_declaration)


State 1671

  228 expr_call_pipe: expr . expr_full_block_assumed_piped
  317 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr . "end of expression"
  371 expr_assign: expr .
  372            | expr . '=' expr
  373            | expr . "<-" expr
  374            | expr . ":=" expr
  375            | expr . "&=" expr
  376            | expr . "|=" expr
  377            | expr . "^=" expr
  378            | expr . "&&=" expr
  379            | expr . "||=" expr
  380            | expr . "^^=" expr
  381            | expr . "+=" expr
  382            | expr . "-=" expr
  383            | expr . "*=" expr
  384            | expr . "/=" expr
  385            | expr . "%=" expr
  386            | expr . "<<=" expr
  387            | expr . ">>=" expr
  388            | expr . "<<<=" expr
  389            | expr . ">>>=" expr
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 746
    "as"                 shift, and go to state 747
    "+="                 shift, and go to state 878
    "-="                 shift, and go to state 879
    "/="                 shift, and go to state 880
    "*="                 shift, and go to state 881
    "%="                 shift, and go to state 882
    "&="                 shift, and go to state 883
    "|="                 shift, and go to state 884
    "^="                 shift, and go to state 885
    "<<"                 shift, and go to state 756
    ">>"                 shift, and go to state 757
    "++"                 shift, and go to state 758
    "--"                 shift, and go to state 759
    "<="                 shift, and go to state 760
    "<<="                shift, and go to state 886
    ">>="                shift, and go to state 887
    ">="                 shift, and go to state 763
    "=="                 shift, and go to state 764
    "!="                 shift, and go to state 765
    "->"                 shift, and go to state 766
    "<-"                 shift, and go to state 888
    "??"                 shift, and go to state 768
    "?."                 shift, and go to state 769
    "?["                 shift, and go to state 770
    "<|"                 shift, and go to state 771
    "|>"                 shift, and go to state 772
    ":="                 shift, and go to state 773
    "<<<"                shift, and go to state 774
    ">>>"                shift, and go to state 775
    "<<<="               shift, and go to state 889
    ">>>="               shift, and go to state 890
    "&&"                 shift, and go to state 778
    "||"                 shift, and go to state 779
    "^^"                 shift, and go to state 780
    "&&="                shift, and go to state 891
    "||="                shift, and go to state 892
    "^^="                shift, and go to state 893
    ".."                 shift, and go to state 784
    "end of expression"  shift, and go to state 1698
    '='                  shift, and go to state 894
    '?'                  shift, and go to state 786
    '|'                  shift, and go to state 787
    '^'                  shift, and go to state 788
    '&'                  shift, and go to state 789
    '<'                  shift, and go to state 790
    '>'                  shift, and go to state 791
    '-'                  shift, and go to state 792
    '+'                  shift, and go to state 793
    '*'                  shift, and go to state 794
    '/'                  shift, and go to state 795
    '%'                  shift, and go to state 796
    '.'                  shift, and go to state 797
    '['                  shift, and go to state 798
    '$'                  shift, and go to state 509
    '@'                  shift, and go to state 683

    $default  reduce using rule 371 (expr_assign)

    block_or_lambda                go to state 732
    expr_full_block_assumed_piped  go to state 799


State 1672

  316 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 316 (tuple_expansion_variable_declaration)


State 1673

  228 expr_call_pipe: expr . expr_full_block_assumed_piped
  315 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"
  371 expr_assign: expr .
  372            | expr . '=' expr
  373            | expr . "<-" expr
  374            | expr . ":=" expr
  375            | expr . "&=" expr
  376            | expr . "|=" expr
  377            | expr . "^=" expr
  378            | expr . "&&=" expr
  379            | expr . "||=" expr
  380            | expr . "^^=" expr
  381            | expr . "+=" expr
  382            | expr . "-=" expr
  383            | expr . "*=" expr
  384            | expr . "/=" expr
  385            | expr . "%=" expr
  386            | expr . "<<=" expr
  387            | expr . ">>=" expr
  388            | expr . "<<<=" expr
  389            | expr . ">>>=" expr
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 746
    "as"                 shift, and go to state 747
    "+="                 shift, and go to state 878
    "-="                 shift, and go to state 879
    "/="                 shift, and go to state 880
    "*="                 shift, and go to state 881
    "%="                 shift, and go to state 882
    "&="                 shift, and go to state 883
    "|="                 shift, and go to state 884
    "^="                 shift, and go to state 885
    "<<"                 shift, and go to state 756
    ">>"                 shift, and go to state 757
    "++"                 shift, and go to state 758
    "--"                 shift, and go to state 759
    "<="                 shift, and go to state 760
    "<<="                shift, and go to state 886
    ">>="                shift, and go to state 887
    ">="                 shift, and go to state 763
    "=="                 shift, and go to state 764
    "!="                 shift, and go to state 765
    "->"                 shift, and go to state 766
    "<-"                 shift, and go to state 888
    "??"                 shift, and go to state 768
    "?."                 shift, and go to state 769
    "?["                 shift, and go to state 770
    "<|"                 shift, and go to state 771
    "|>"                 shift, and go to state 772
    ":="                 shift, and go to state 773
    "<<<"                shift, and go to state 774
    ">>>"                shift, and go to state 775
    "<<<="               shift, and go to state 889
    ">>>="               shift, and go to state 890
    "&&"                 shift, and go to state 778
    "||"                 shift, and go to state 779
    "^^"                 shift, and go to state 780
    "&&="                shift, and go to state 891
    "||="                shift, and go to state 892
    "^^="                shift, and go to state 893
    ".."                 shift, and go to state 784
    "end of expression"  shift, and go to state 1699
    '='                  shift, and go to state 894
    '?'                  shift, and go to state 786
    '|'                  shift, and go to state 787
    '^'                  shift, and go to state 788
    '&'                  shift, and go to state 789
    '<'                  shift, and go to state 790
    '>'                  shift, and go to state 791
    '-'                  shift, and go to state 792
    '+'                  shift, and go to state 793
    '*'                  shift, and go to state 794
    '/'                  shift, and go to state 795
    '%'                  shift, and go to state 796
    '.'                  shift, and go to state 797
    '['                  shift, and go to state 798
    '$'                  shift, and go to state 509
    '@'                  shift, and go to state 683

    $default  reduce using rule 371 (expr_assign)

    block_or_lambda                go to state 732
    expr_full_block_assumed_piped  go to state 799


State 1674

  319 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 319 (tuple_expansion_variable_declaration)


State 1675

  511 expr: expr '?' "as" "type" '<' $@33 type_declaration '>' $@34 .

    $default  reduce using rule 511 (expr)


State 1676

  561 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@36 function_declaration_header "end of expression" .

    $default  reduce using rule 561 (struct_variable_declaration_list)


State 1677

  563 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@37 function_declaration_header . expression_block

    "begin of code block"  shift, and go to state 291

    expression_block  go to state 1700


State 1678

  805 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  806                   | make_struct_fields . ',' "name" ":=" expr
  809                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  810                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  815 make_struct_dim_list: '(' make_struct_fields . ')'

    ','  shift, and go to state 967
    ')'  shift, and go to state 1701


State 1679

  816 make_struct_dim_list: make_struct_dim_list ',' . '(' make_struct_fields ')'
  898 optional_comma: ',' .

    '('  shift, and go to state 1702

    $default  reduce using rule 898 (optional_comma)


State 1680

  818 make_struct_dim_decl: make_struct_dim_list optional_comma .

    $default  reduce using rule 818 (make_struct_dim_decl)


State 1681

  845 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 845 (make_struct_decl)


State 1682

  848 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 848 (make_struct_decl)


State 1683

  337 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" '>' expr ')' .

    $default  reduce using rule 337 (expr_type_info)


State 1684

  340 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr ')' .

    $default  reduce using rule 340 (expr_type_info)


State 1685

  871 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1703


State 1686

  874 make_dim_decl: "array" "tuple" '<' $@101 type_declaration_no_options '>' $@102 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1704


State 1687

  877 make_dim_decl: "array" "variant" '<' $@103 type_declaration_no_options '>' $@104 '(' make_variant_dim ')' .

    $default  reduce using rule 877 (make_dim_decl)


State 1688

  885 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' $@108 '(' expr_list optional_comma ')' .

    $default  reduce using rule 885 (make_dim_decl)


State 1689

  863 make_tuple_call: "tuple" '<' $@97 type_declaration_no_options '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 863 (make_tuple_call)


State 1690

  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'
  896 array_comprehension_where: "end of expression" "where" expr .

    "is"   shift, and go to state 746
    "as"   shift, and go to state 747
    "<<"   shift, and go to state 756
    ">>"   shift, and go to state 757
    "++"   shift, and go to state 758
    "--"   shift, and go to state 759
    "<="   shift, and go to state 760
    ">="   shift, and go to state 763
    "=="   shift, and go to state 764
    "!="   shift, and go to state 765
    "->"   shift, and go to state 766
    "??"   shift, and go to state 768
    "?."   shift, and go to state 769
    "?["   shift, and go to state 770
    "<|"   shift, and go to state 771
    "|>"   shift, and go to state 772
    "<<<"  shift, and go to state 774
    ">>>"  shift, and go to state 775
    "&&"   shift, and go to state 778
    "||"   shift, and go to state 779
    "^^"   shift, and go to state 780
    ".."   shift, and go to state 784
    '?'    shift, and go to state 786
    '|'    shift, and go to state 787
    '^'    shift, and go to state 788
    '&'    shift, and go to state 789
    '<'    shift, and go to state 790
    '>'    shift, and go to state 791
    '-'    shift, and go to state 792
    '+'    shift, and go to state 793
    '*'    shift, and go to state 794
    '/'    shift, and go to state 795
    '%'    shift, and go to state 796
    '.'    shift, and go to state 797
    '['    shift, and go to state 798

    $default  reduce using rule 896 (array_comprehension_where)


State 1691

  901 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']' .

    $default  reduce using rule 901 (array_comprehension)


State 1692

  902 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']' .

    $default  reduce using rule 902 (array_comprehension)


State 1693

  904 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block" .

    $default  reduce using rule 904 (array_comprehension)


State 1694

  259 optional_expr_list_in_braces: '(' optional_expr_list optional_comma ')' .

    $default  reduce using rule 259 (optional_expr_list_in_braces)


State 1695

  900 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 900 (array_comprehension)


State 1696

  314 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 314 (tuple_expansion_variable_declaration)


State 1697

  228 expr_call_pipe: expr . expr_full_block_assumed_piped
  313 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"
  371 expr_assign: expr .
  372            | expr . '=' expr
  373            | expr . "<-" expr
  374            | expr . ":=" expr
  375            | expr . "&=" expr
  376            | expr . "|=" expr
  377            | expr . "^=" expr
  378            | expr . "&&=" expr
  379            | expr . "||=" expr
  380            | expr . "^^=" expr
  381            | expr . "+=" expr
  382            | expr . "-=" expr
  383            | expr . "*=" expr
  384            | expr . "/=" expr
  385            | expr . "%=" expr
  386            | expr . "<<=" expr
  387            | expr . ">>=" expr
  388            | expr . "<<<=" expr
  389            | expr . ">>>=" expr
  413 expr_method_call: expr . "->" "name" '(' ')'
  414                 | expr . "->" "name" '(' expr_list ')'
  424 expr_field: expr . '.' "name"
  425           | expr . '.' '.' "name"
  426           | expr . '.' "name" '(' ')'
  427           | expr . '.' "name" '(' expr_list ')'
  428           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  429           | expr . '.' basic_type_declaration '(' ')'
  430           | expr . '.' basic_type_declaration '(' expr_list ')'
  433           | expr . '.' $@27 error $@28
  455 expr: expr . "<<" expr
  456     | expr . ">>" expr
  457     | expr . "<<<" expr
  458     | expr . ">>>" expr
  459     | expr . '+' expr
  460     | expr . '-' expr
  461     | expr . '*' expr
  462     | expr . '/' expr
  463     | expr . '%' expr
  464     | expr . '<' expr
  465     | expr . '>' expr
  466     | expr . "==" expr
  467     | expr . "!=" expr
  468     | expr . "<=" expr
  469     | expr . ">=" expr
  470     | expr . '&' expr
  471     | expr . '|' expr
  472     | expr . '^' expr
  473     | expr . "&&" expr
  474     | expr . "||" expr
  475     | expr . "^^" expr
  476     | expr . ".." expr
  479     | expr . "++"
  480     | expr . "--"
  483     | expr . '[' expr ']'
  484     | expr . '.' '[' expr ']'
  485     | expr . "?[" expr ']'
  486     | expr . '.' "?[" expr ']'
  487     | expr . "?." "name"
  488     | expr . '.' "?." "name"
  496     | expr . "??" expr
  497     | expr . '?' expr ':' expr
  500     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  501     | expr . "is" basic_type_declaration
  502     | expr . "is" "name"
  503     | expr . "as" "name"
  506     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  507     | expr . "as" basic_type_declaration
  508     | expr . '?' "as" "name"
  511     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  512     | expr . '?' "as" basic_type_declaration
  520     | expr . "<|" expr
  521     | expr . "|>" expr
  522     | expr . "|>" basic_type_declaration
  534 expr_mtag: expr . '.' "$f" '(' expr ')'
  535          | expr . "?." "$f" '(' expr ')'
  536          | expr . '.' '.' "$f" '(' expr ')'
  537          | expr . '.' "?." "$f" '(' expr ')'
  538          | expr . "as" "$f" '(' expr ')'
  539          | expr . '?' "as" "$f" '(' expr ')'
  540          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 746
    "as"                 shift, and go to state 747
    "+="                 shift, and go to state 878
    "-="                 shift, and go to state 879
    "/="                 shift, and go to state 880
    "*="                 shift, and go to state 881
    "%="                 shift, and go to state 882
    "&="                 shift, and go to state 883
    "|="                 shift, and go to state 884
    "^="                 shift, and go to state 885
    "<<"                 shift, and go to state 756
    ">>"                 shift, and go to state 757
    "++"                 shift, and go to state 758
    "--"                 shift, and go to state 759
    "<="                 shift, and go to state 760
    "<<="                shift, and go to state 886
    ">>="                shift, and go to state 887
    ">="                 shift, and go to state 763
    "=="                 shift, and go to state 764
    "!="                 shift, and go to state 765
    "->"                 shift, and go to state 766
    "<-"                 shift, and go to state 888
    "??"                 shift, and go to state 768
    "?."                 shift, and go to state 769
    "?["                 shift, and go to state 770
    "<|"                 shift, and go to state 771
    "|>"                 shift, and go to state 772
    ":="                 shift, and go to state 773
    "<<<"                shift, and go to state 774
    ">>>"                shift, and go to state 775
    "<<<="               shift, and go to state 889
    ">>>="               shift, and go to state 890
    "&&"                 shift, and go to state 778
    "||"                 shift, and go to state 779
    "^^"                 shift, and go to state 780
    "&&="                shift, and go to state 891
    "||="                shift, and go to state 892
    "^^="                shift, and go to state 893
    ".."                 shift, and go to state 784
    "end of expression"  shift, and go to state 1705
    '='                  shift, and go to state 894
    '?'                  shift, and go to state 786
    '|'                  shift, and go to state 787
    '^'                  shift, and go to state 788
    '&'                  shift, and go to state 789
    '<'                  shift, and go to state 790
    '>'                  shift, and go to state 791
    '-'                  shift, and go to state 792
    '+'                  shift, and go to state 793
    '*'                  shift, and go to state 794
    '/'                  shift, and go to state 795
    '%'                  shift, and go to state 796
    '.'                  shift, and go to state 797
    '['                  shift, and go to state 798
    '$'                  shift, and go to state 509
    '@'                  shift, and go to state 683

    $default  reduce using rule 371 (expr_assign)

    block_or_lambda                go to state 732
    expr_full_block_assumed_piped  go to state 799


State 1698

  317 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 317 (tuple_expansion_variable_declaration)


State 1699

  315 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 315 (tuple_expansion_variable_declaration)


State 1700

  563 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@37 function_declaration_header expression_block .

    $default  reduce using rule 563 (struct_variable_declaration_list)


State 1701

  815 make_struct_dim_list: '(' make_struct_fields ')' .

    $default  reduce using rule 815 (make_struct_dim_list)


State 1702

  816 make_struct_dim_list: make_struct_dim_list ',' '(' . make_struct_fields ')'

    "$f"    shift, and go to state 722
    "name"  shift, and go to state 1234

    make_struct_fields  go to state 1706


State 1703

  871 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 871 (make_dim_decl)


State 1704

  874 make_dim_decl: "array" "tuple" '<' $@101 type_declaration_no_options '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 874 (make_dim_decl)


State 1705

  313 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 313 (tuple_expansion_variable_declaration)


State 1706

  805 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  806                   | make_struct_fields . ',' "name" ":=" expr
  809                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  810                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  816 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields . ')'

    ','  shift, and go to state 967
    ')'  shift, and go to state 1707


State 1707

  816 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields ')' .

    $default  reduce using rule 816 (make_struct_dim_list)
