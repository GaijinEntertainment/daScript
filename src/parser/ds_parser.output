Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"


State 63 conflicts: 1 shift/reduce
State 336 conflicts: 1 shift/reduce
State 373 conflicts: 2 shift/reduce
State 438 conflicts: 1 shift/reduce
State 556 conflicts: 2 shift/reduce
State 558 conflicts: 2 shift/reduce
State 668 conflicts: 1 shift/reduce
State 751 conflicts: 1 shift/reduce
State 963 conflicts: 1 shift/reduce
State 1107 conflicts: 1 shift/reduce
State 1223 conflicts: 1 shift/reduce
State 1224 conflicts: 1 shift/reduce
State 1520 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration
    9        | program options_declaration
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program tuple_alias_declaration
   13        | program bitfield_alias_declaration
   14        | program top_level_reader_macro
   15        | program semicolon

   16 top_level_reader_macro: expr_reader semicolon

   17 optional_public_or_private_module: %empty
   18                                  | "public"
   19                                  | "private"

   20 module_name: '$'
   21            | "name"

   22 optional_not_required: %empty
   23                      | '!' "inscope"

   24 module_declaration: "module" module_name optional_shared optional_public_or_private_module optional_not_required

   25 character_sequence: STRING_CHARACTER
   26                   | STRING_CHARACTER_ESC
   27                   | character_sequence STRING_CHARACTER
   28                   | character_sequence STRING_CHARACTER_ESC

   29 string_constant: "start of the string" character_sequence "end of the string"
   30                | "start of the string" "end of the string"

   31 format_string: %empty
   32              | format_string STRING_CHARACTER

   33 optional_format_string: %empty

   34 $@1: %empty

   35 optional_format_string: ':' $@1 format_string

   36 string_builder_body: %empty
   37                    | string_builder_body character_sequence
   38                    | string_builder_body "{" expr optional_format_string "}"

   39 string_builder: "start of the string" string_builder_body "end of the string"

   40 reader_character_sequence: STRING_CHARACTER
   41                          | reader_character_sequence STRING_CHARACTER

   42 $@2: %empty

   43 expr_reader: '%' name_in_namespace $@2 reader_character_sequence

   44 options_declaration: "options" annotation_argument_list

   45 require_declaration: "require" require_module

   46 keyword_or_name: "name"
   47                | "keyword"
   48                | "type function"

   49 require_module_name: keyword_or_name
   50                    | '%' require_module_name
   51                    | require_module_name '.' keyword_or_name
   52                    | require_module_name '/' keyword_or_name

   53 require_module: require_module_name is_public_module
   54               | require_module_name "as" "name" is_public_module

   55 is_public_module: %empty
   56                 | "public"

   57 expect_declaration: "expect" expect_list

   58 expect_list: expect_error
   59            | expect_list ',' expect_error

   60 expect_error: "integer constant"
   61             | "integer constant" ':' "integer constant"

   62 expression_label: "label" "integer constant" ':'

   63 expression_goto: "goto" "label" "integer constant"
   64                | "goto" expr

   65 elif_or_static_elif: "elif"
   66                    | "static_elif"

   67 expression_else: %empty
   68                | "else" expression_block
   69                | elif_or_static_elif expr expression_block expression_else

   70 semicolon: "end of line"
   71          | "end of expression"

   72 if_or_static_if: "if"
   73                | "static_if"

   74 expression_else_one_liner: %empty

   75 $@3: %empty

   76 expression_else_one_liner: "else" $@3 expression_if_one_liner

   77 expression_if_one_liner: expr
   78                        | expression_return_no_pipe
   79                        | expression_yield_no_pipe
   80                        | expression_break
   81                        | expression_continue

   82 expression_if_then_else: if_or_static_if expr expression_block expression_else

   83 $@4: %empty

   84 expression_if_then_else: expression_if_one_liner "if" $@4 expr expression_else_one_liner semicolon

   85 $@5: %empty

   86 expression_for_loop: "for" $@5 variable_name_with_pos_list "in" expr_list expression_block

   87 expression_unsafe: "unsafe" expression_block

   88 expression_while_loop: "while" expr expression_block

   89 expression_with: "with" expr expression_block

   90 $@6: %empty

   91 expression_with_alias: "assume" "name" '=' $@6 expr

   92 $@7: %empty

   93 expression_with_alias: "typedef" $@7 "name" '=' type_declaration

   94 annotation_argument_value: string_constant
   95                          | "name"
   96                          | "integer constant"
   97                          | "floating point constant"
   98                          | "true"
   99                          | "false"

  100 annotation_argument_value_list: annotation_argument_value
  101                               | annotation_argument_value_list ',' annotation_argument_value

  102 annotation_argument_name: "name"
  103                         | "type"
  104                         | "in"

  105 annotation_argument: annotation_argument_name '=' string_constant
  106                    | annotation_argument_name '=' "name"
  107                    | annotation_argument_name '=' "integer constant"
  108                    | annotation_argument_name '=' "floating point constant"
  109                    | annotation_argument_name '=' "true"
  110                    | annotation_argument_name '=' "false"
  111                    | annotation_argument_name
  112                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

  113 annotation_argument_list: annotation_argument
  114                         | annotation_argument_list ',' annotation_argument

  115 metadata_argument_list: '@' annotation_argument
  116                       | metadata_argument_list '@' annotation_argument
  117                       | metadata_argument_list semicolon

  118 annotation_declaration_name: name_in_namespace
  119                            | "require"
  120                            | "private"
  121                            | "template"

  122 annotation_declaration_basic: annotation_declaration_name
  123                             | annotation_declaration_name '(' annotation_argument_list ')'

  124 annotation_declaration: annotation_declaration_basic
  125                       | '!' annotation_declaration
  126                       | annotation_declaration "&&" annotation_declaration
  127                       | annotation_declaration "||" annotation_declaration
  128                       | annotation_declaration "^^" annotation_declaration
  129                       | '(' annotation_declaration ')'
  130                       | "|>" annotation_declaration

  131 annotation_list: annotation_declaration
  132                | annotation_list ',' annotation_declaration

  133 optional_annotation_list: %empty
  134                         | '[' annotation_list ']'

  135 optional_function_argument_list: %empty
  136                                | '(' ')'
  137                                | '(' function_argument_list ')'

  138 optional_function_type: %empty
  139                       | ':' type_declaration

  140 function_name: "name"
  141              | "operator" '!'
  142              | "operator" '~'
  143              | "operator" "+="
  144              | "operator" "-="
  145              | "operator" "*="
  146              | "operator" "/="
  147              | "operator" "%="
  148              | "operator" "&="
  149              | "operator" "|="
  150              | "operator" "^="
  151              | "operator" "&&="
  152              | "operator" "||="
  153              | "operator" "^^="
  154              | "operator" "&&"
  155              | "operator" "||"
  156              | "operator" "^^"
  157              | "operator" '+'
  158              | "operator" '-'
  159              | "operator" '*'
  160              | "operator" '/'
  161              | "operator" '%'
  162              | "operator" '<'
  163              | "operator" '>'
  164              | "operator" ".."
  165              | "operator" "=="
  166              | "operator" "!="
  167              | "operator" "<="
  168              | "operator" ">="
  169              | "operator" '&'
  170              | "operator" '|'
  171              | "operator" '^'
  172              | "++" "operator"
  173              | "--" "operator"
  174              | "operator" "++"
  175              | "operator" "--"
  176              | "operator" "<<"
  177              | "operator" ">>"
  178              | "operator" "<<="
  179              | "operator" ">>="
  180              | "operator" "<<<"
  181              | "operator" ">>>"
  182              | "operator" "<<<="
  183              | "operator" ">>>="
  184              | "operator" '[' ']'
  185              | "operator" "?[" ']'
  186              | "operator" '.'
  187              | "operator" "?."
  188              | "operator" '.' "name"
  189              | "operator" '.' "name" ":="
  190              | "operator" '.' "name" "+="
  191              | "operator" '.' "name" "-="
  192              | "operator" '.' "name" "*="
  193              | "operator" '.' "name" "/="
  194              | "operator" '.' "name" "%="
  195              | "operator" '.' "name" "&="
  196              | "operator" '.' "name" "|="
  197              | "operator" '.' "name" "^="
  198              | "operator" '.' "name" "&&="
  199              | "operator" '.' "name" "||="
  200              | "operator" '.' "name" "^^="
  201              | "operator" "?." "name"
  202              | "operator" ":="
  203              | "operator" "delete"
  204              | "operator" "??"
  205              | "operator" "is"
  206              | "operator" "as"
  207              | "operator" "is" "name"
  208              | "operator" "as" "name"
  209              | "operator" '?' "as"
  210              | "operator" '?' "as" "name"
  211              | "bool"
  212              | "string"
  213              | "int"
  214              | "int2"
  215              | "int3"
  216              | "int4"
  217              | "uint"
  218              | "uint2"
  219              | "uint3"
  220              | "uint4"
  221              | "float"
  222              | "float2"
  223              | "float3"
  224              | "float4"
  225              | "range"
  226              | "urange"
  227              | "range64"
  228              | "urange64"
  229              | "int64"
  230              | "uint64"
  231              | "double"
  232              | "int8"
  233              | "uint8"
  234              | "int16"
  235              | "uint16"

  236 global_function_declaration: optional_annotation_list "def" function_declaration

  237 optional_public_or_private_function: %empty
  238                                    | "private"
  239                                    | "public"

  240 function_declaration_header: function_name optional_function_argument_list optional_function_type

  241 $@8: %empty

  242 function_declaration: optional_public_or_private_function $@8 function_declaration_header expression_block

  243 open_block: "begin of code block"
  244           | "new scope"

  245 close_block: "end of code block"
  246            | "close scope"

  247 expression_block: open_block expressions close_block
  248                 | open_block expressions close_block "finally" open_block expressions close_block

  249 expr_call_pipe: expr expr_full_block_assumed_piped
  250               | expression_keyword expr_full_block_assumed_piped
  251               | "generator" '<' type_declaration_no_options '>' optional_capture_list expr_full_block_assumed_piped

  252 expression_any: semicolon
  253               | expr_pipe
  254               | expr_keyword
  255               | expr_assign_pipe
  256               | expr_assign semicolon
  257               | expression_delete semicolon
  258               | expression_let
  259               | expression_while_loop
  260               | expression_unsafe
  261               | expression_with
  262               | expression_with_alias
  263               | expression_for_loop
  264               | expression_break semicolon
  265               | expression_continue semicolon
  266               | expression_return
  267               | expression_yield
  268               | expression_if_then_else
  269               | expression_try_catch
  270               | expression_label semicolon
  271               | expression_goto semicolon
  272               | "pass" semicolon

  273 expressions: %empty
  274            | expressions expression_any
  275            | expressions error

  276 expr_keyword: "keyword" expr expression_block

  277 optional_expr_list: %empty
  278                   | expr_list optional_comma

  279 optional_expr_list_in_braces: %empty
  280                             | '(' optional_expr_list optional_comma ')'

  281 optional_expr_map_tuple_list: %empty
  282                             | expr_map_tuple_list optional_comma

  283 type_declaration_no_options_list: type_declaration
  284                                 | type_declaration_no_options_list c_or_s type_declaration

  285 $@9: %empty

  286 $@10: %empty

  287 expression_keyword: "keyword" '<' $@9 type_declaration_no_options_list '>' $@10 expr

  288 $@11: %empty

  289 $@12: %empty

  290 expression_keyword: "type function" '<' $@11 type_declaration_no_options_list '>' $@12 optional_expr_list_in_braces

  291 expr_pipe: expr_assign " <|" expr_block
  292          | "@ <|" expr_block
  293          | "@@ <|" expr_block
  294          | "$ <|" expr_block
  295          | expr_call_pipe

  296 name_in_namespace: "name"
  297                  | "name" "::" "name"
  298                  | "::" "name"

  299 expression_delete: "delete" expr
  300                  | "delete" "explicit" expr

  301 $@13: %empty

  302 $@14: %empty

  303 new_type_declaration: '<' $@13 type_declaration '>' $@14
  304                     | structure_type_declaration

  305 expr_new: "new" new_type_declaration
  306         | "new" new_type_declaration '(' use_initializer ')'
  307         | "new" new_type_declaration '(' expr_list ')'
  308         | "new" new_type_declaration '(' make_struct_single ')'
  309         | "new" new_type_declaration '(' "uninitialized" make_struct_single ')'
  310         | "new" make_decl

  311 expression_break: "break"

  312 expression_continue: "continue"

  313 expression_return_no_pipe: "return"
  314                          | "return" expr_list
  315                          | "return" "<-" expr_list

  316 expression_return: expression_return_no_pipe semicolon
  317                  | "return" expr_pipe
  318                  | "return" "<-" expr_pipe

  319 expression_yield_no_pipe: "yield" expr
  320                         | "yield" "<-" expr

  321 expression_yield: expression_yield_no_pipe semicolon
  322                 | "yield" expr_pipe
  323                 | "yield" "<-" expr_pipe

  324 expression_try_catch: "try" expression_block "recover" expression_block

  325 kwd_let_var_or_nothing: "let"
  326                       | "var"
  327                       | %empty

  328 kwd_let: "let"
  329        | "var"

  330 optional_in_scope: "inscope"
  331                  | %empty

  332 tuple_expansion: "name"
  333                | tuple_expansion ',' "name"

  334 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  335                                     | "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  336                                     | '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  337                                     | '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  338                                     | "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr semicolon
  339                                     | "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr_pipe
  340                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr semicolon
  341                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr_pipe

  342 expression_let: kwd_let optional_in_scope let_variable_declaration
  343               | kwd_let optional_in_scope tuple_expansion_variable_declaration

  344 $@15: %empty

  345 $@16: %empty

  346 expr_cast: "cast" '<' $@15 type_declaration_no_options '>' $@16 expr

  347 $@17: %empty

  348 $@18: %empty

  349 expr_cast: "upcast" '<' $@17 type_declaration_no_options '>' $@18 expr

  350 $@19: %empty

  351 $@20: %empty

  352 expr_cast: "reinterpret" '<' $@19 type_declaration_no_options '>' $@20 expr

  353 $@21: %empty

  354 $@22: %empty

  355 expr_type_decl: "type" '<' $@21 type_declaration '>' $@22

  356 expr_type_info: "typeinfo" '(' name_in_namespace expr ')'
  357               | "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')'
  358               | "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" '>' expr ')'
  359               | "typeinfo" name_in_namespace '(' expr ')'
  360               | "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')'
  361               | "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr ')'

  362 expr_list: expr
  363          | expr_list ',' expr

  364 block_or_simple_block: expression_block
  365                      | "=>" expr
  366                      | "=>" "<-" expr

  367 block_or_lambda: '$'
  368                | '@'
  369                | '@' '@'

  370 capture_entry: '&' "name"
  371              | '=' "name"
  372              | "<-" "name"
  373              | ":=" "name"
  374              | "name" '(' "name" ')'

  375 capture_list: capture_entry
  376             | capture_list ',' capture_entry

  377 optional_capture_list: %empty
  378                      | "[[" capture_list ']' ']'
  379                      | "capture" '(' capture_list ')'

  380 expr_block: expression_block
  381           | block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  382 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  383 $@23: %empty

  384 expr_full_block_assumed_piped: block_or_lambda $@23 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

  385 expr_numeric_const: "integer constant"
  386                   | "unsigned integer constant"
  387                   | "long integer constant"
  388                   | "unsigned long integer constant"
  389                   | "unsigned int8 constant"
  390                   | "floating point constant"
  391                   | "double constant"

  392 expr_assign: expr
  393            | expr '=' expr
  394            | expr "<-" expr
  395            | expr ":=" expr
  396            | expr "&=" expr
  397            | expr "|=" expr
  398            | expr "^=" expr
  399            | expr "&&=" expr
  400            | expr "||=" expr
  401            | expr "^^=" expr
  402            | expr "+=" expr
  403            | expr "-=" expr
  404            | expr "*=" expr
  405            | expr "/=" expr
  406            | expr "%=" expr
  407            | expr "<<=" expr
  408            | expr ">>=" expr
  409            | expr "<<<=" expr
  410            | expr ">>>=" expr

  411 expr_assign_pipe_right: "@ <|" expr_block
  412                       | "@@ <|" expr_block
  413                       | "$ <|" expr_block
  414                       | expr_call_pipe

  415 expr_assign_pipe: expr '=' expr_assign_pipe_right
  416                 | expr "<-" expr_assign_pipe_right
  417                 | expr "&=" expr_assign_pipe_right
  418                 | expr "|=" expr_assign_pipe_right
  419                 | expr "^=" expr_assign_pipe_right
  420                 | expr "&&=" expr_assign_pipe_right
  421                 | expr "||=" expr_assign_pipe_right
  422                 | expr "^^=" expr_assign_pipe_right
  423                 | expr "+=" expr_assign_pipe_right
  424                 | expr "-=" expr_assign_pipe_right
  425                 | expr "*=" expr_assign_pipe_right
  426                 | expr "/=" expr_assign_pipe_right
  427                 | expr "%=" expr_assign_pipe_right
  428                 | expr "<<=" expr_assign_pipe_right
  429                 | expr ">>=" expr_assign_pipe_right
  430                 | expr "<<<=" expr_assign_pipe_right
  431                 | expr ">>>=" expr_assign_pipe_right

  432 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  433                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  434 expr_method_call: expr "->" "name" '(' ')'
  435                 | expr "->" "name" '(' expr_list ')'

  436 func_addr_name: name_in_namespace
  437               | "$i" '(' expr ')'

  438 func_addr_expr: '@' '@' func_addr_name

  439 $@24: %empty

  440 $@25: %empty

  441 func_addr_expr: '@' '@' '<' $@24 type_declaration_no_options '>' $@25 func_addr_name

  442 $@26: %empty

  443 $@27: %empty

  444 func_addr_expr: '@' '@' '<' $@26 optional_function_argument_list optional_function_type '>' $@27 func_addr_name

  445 expr_field: expr '.' "name"
  446           | expr '.' '.' "name"
  447           | expr '.' "name" '(' ')'
  448           | expr '.' "name" '(' expr_list ')'
  449           | expr '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr '.' basic_type_declaration '(' ')'
  451           | expr '.' basic_type_declaration '(' expr_list ')'

  452 $@28: %empty

  453 $@29: %empty

  454 expr_field: expr '.' $@28 error $@29

  455 expr_call: name_in_namespace '(' ')'
  456          | name_in_namespace '(' "uninitialized" ')'
  457          | name_in_namespace '(' make_struct_single ')'
  458          | name_in_namespace '(' "uninitialized" make_struct_single ')'
  459          | name_in_namespace '(' expr_list ')'
  460          | basic_type_declaration '(' ')'
  461          | basic_type_declaration '(' expr_list ')'

  462 expr: "null"
  463     | name_in_namespace
  464     | expr_numeric_const
  465     | expr_reader
  466     | string_builder
  467     | make_decl
  468     | "true"
  469     | "false"
  470     | expr_field
  471     | expr_mtag
  472     | '!' expr
  473     | '~' expr
  474     | '+' expr
  475     | '-' expr
  476     | expr "<<" expr
  477     | expr ">>" expr
  478     | expr "<<<" expr
  479     | expr ">>>" expr
  480     | expr '+' expr
  481     | expr '-' expr
  482     | expr '*' expr
  483     | expr '/' expr
  484     | expr '%' expr
  485     | expr '<' expr
  486     | expr '>' expr
  487     | expr "==" expr
  488     | expr "!=" expr
  489     | expr "<=" expr
  490     | expr ">=" expr
  491     | expr '&' expr
  492     | expr '|' expr
  493     | expr '^' expr
  494     | expr "&&" expr
  495     | expr "||" expr
  496     | expr "^^" expr
  497     | expr ".." expr
  498     | "++" expr
  499     | "--" expr
  500     | expr "++"
  501     | expr "--"
  502     | '(' expr_list optional_comma ')'
  503     | '(' make_struct_single ')'
  504     | expr '[' expr ']'
  505     | expr '.' '[' expr ']'
  506     | expr "?[" expr ']'
  507     | expr '.' "?[" expr ']'
  508     | expr "?." "name"
  509     | expr '.' "?." "name"
  510     | func_addr_expr
  511     | expr_call
  512     | '*' expr
  513     | "deref" '(' expr ')'
  514     | "addr" '(' expr ')'
  515     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  516     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  517     | expr "??" expr
  518     | expr '?' expr ':' expr

  519 $@30: %empty

  520 $@31: %empty

  521 expr: expr "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr "is" basic_type_declaration
  523     | expr "is" "name"
  524     | expr "as" "name"

  525 $@32: %empty

  526 $@33: %empty

  527 expr: expr "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr "as" basic_type_declaration
  529     | expr '?' "as" "name"

  530 $@34: %empty

  531 $@35: %empty

  532 expr: expr '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr '?' "as" basic_type_declaration
  534     | expr_type_info
  535     | expr_type_decl
  536     | expr_cast
  537     | expr_new
  538     | expr_method_call
  539     | expr_named_call
  540     | expr_full_block
  541     | expr "<|" expr
  542     | expr "|>" expr
  543     | expr "|>" basic_type_declaration
  544     | name_in_namespace "name"
  545     | "unsafe" '(' expr ')'
  546     | expression_keyword

  547 expr_mtag: "$$" '(' expr ')'
  548          | "$i" '(' expr ')'
  549          | "$v" '(' expr ')'
  550          | "$b" '(' expr ')'
  551          | "$a" '(' expr ')'
  552          | "..."
  553          | "$c" '(' expr ')' '(' ')'
  554          | "$c" '(' expr ')' '(' expr_list ')'
  555          | expr '.' "$f" '(' expr ')'
  556          | expr "?." "$f" '(' expr ')'
  557          | expr '.' '.' "$f" '(' expr ')'
  558          | expr '.' "?." "$f" '(' expr ')'
  559          | expr "as" "$f" '(' expr ')'
  560          | expr '?' "as" "$f" '(' expr ')'
  561          | expr "is" "$f" '(' expr ')'
  562          | '@' '@' "$c" '(' expr ')'

  563 optional_field_annotation: %empty
  564                          | "[[" annotation_argument_list ']' ']'
  565                          | metadata_argument_list

  566 optional_override: %empty
  567                  | "override"
  568                  | "sealed"

  569 optional_constant: %empty
  570                  | "const"

  571 optional_public_or_private_member_variable: %empty
  572                                           | "public"
  573                                           | "private"

  574 optional_static_member_variable: %empty
  575                                | "static"

  576 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  577 struct_variable_declaration_list: %empty
  578                                 | struct_variable_declaration_list semicolon

  579 $@36: %empty

  580 struct_variable_declaration_list: struct_variable_declaration_list "typedef" $@36 "name" '=' type_declaration semicolon

  581 $@37: %empty

  582 struct_variable_declaration_list: struct_variable_declaration_list $@37 structure_variable_declaration semicolon

  583 $@38: %empty

  584 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@38 function_declaration_header semicolon

  585 $@39: %empty

  586 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@39 function_declaration_header expression_block
  587                                 | struct_variable_declaration_list '[' annotation_list ']' semicolon

  588 function_argument_declaration_no_type: optional_field_annotation kwd_let_var_or_nothing variable_declaration_no_type

  589 function_argument_declaration_type: optional_field_annotation kwd_let_var_or_nothing variable_declaration_type
  590                                   | "$a" '(' expr ')'

  591 function_argument_list: function_argument_declaration_no_type
  592                       | function_argument_declaration_type
  593                       | function_argument_declaration_no_type semicolon function_argument_list
  594                       | function_argument_declaration_type semicolon function_argument_list
  595                       | function_argument_declaration_type ',' function_argument_list

  596 tuple_type: type_declaration
  597           | "name" ':' type_declaration

  598 tuple_type_list: tuple_type
  599                | tuple_type_list c_or_s tuple_type

  600 tuple_alias_type_list: %empty
  601                      | tuple_alias_type_list c_or_s
  602                      | tuple_alias_type_list tuple_type c_or_s

  603 variant_type: "name" ':' type_declaration

  604 variant_type_list: variant_type
  605                  | variant_type_list c_or_s variant_type

  606 variant_alias_type_list: %empty
  607                        | variant_alias_type_list c_or_s
  608                        | variant_alias_type_list variant_type c_or_s

  609 copy_or_move: '='
  610             | "<-"

  611 variable_declaration_no_type: variable_name_with_pos_list
  612                             | variable_name_with_pos_list '&'
  613                             | variable_name_with_pos_list copy_or_move expr

  614 variable_declaration_type: variable_name_with_pos_list ':' type_declaration
  615                          | variable_name_with_pos_list ':' type_declaration copy_or_move expr

  616 variable_declaration: variable_declaration_type
  617                     | variable_declaration_no_type

  618 copy_or_move_or_clone: '='
  619                      | "<-"
  620                      | ":="

  621 optional_ref: %empty
  622             | '&'

  623 let_variable_name_with_pos_list: "name"
  624                                | "$i" '(' expr ')'
  625                                | "name" "aka" "name"
  626                                | let_variable_name_with_pos_list ',' "name"
  627                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  628 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options semicolon
  629                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  630                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  631                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr semicolon
  632                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe

  633 global_variable_declaration_list: %empty
  634                                 | global_variable_declaration_list "end of line"

  635 $@40: %empty

  636 global_variable_declaration_list: global_variable_declaration_list $@40 optional_field_annotation let_variable_declaration

  637 optional_shared: %empty
  638                | "shared"

  639 optional_public_or_private_variable: %empty
  640                                    | "private"
  641                                    | "public"

  642 global_let: kwd_let optional_shared optional_public_or_private_variable open_block global_variable_declaration_list close_block

  643 $@41: %empty

  644 global_let: kwd_let optional_shared optional_public_or_private_variable $@41 optional_field_annotation let_variable_declaration

  645 enum_list: %empty
  646          | enum_list semicolon
  647          | enum_list "name" semicolon
  648          | enum_list "name" '=' expr semicolon

  649 optional_public_or_private_alias: %empty
  650                                 | "private"
  651                                 | "public"

  652 $@42: %empty

  653 single_alias: optional_public_or_private_alias "name" $@42 '=' type_declaration

  654 alias_list: single_alias semicolon
  655           | alias_list single_alias semicolon

  656 alias_declaration: "typedef" open_block alias_list close_block

  657 $@43: %empty

  658 alias_declaration: "typedef" $@43 single_alias semicolon

  659 optional_public_or_private_enum: %empty
  660                                | "private"
  661                                | "public"

  662 enum_name: "name"

  663 $@44: %empty

  664 $@45: %empty

  665 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name open_block $@44 enum_list $@45 close_block

  666 $@46: %empty

  667 $@47: %empty

  668 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration open_block $@46 enum_list $@47 close_block

  669 optional_structure_parent: %empty
  670                          | ':' name_in_namespace

  671 optional_sealed: %empty
  672                | "sealed"

  673 structure_name: optional_sealed "name" optional_structure_parent

  674 class_or_struct: "class"
  675                | "struct"
  676                | "template" "class"
  677                | "template" "struct"

  678 optional_public_or_private_structure: %empty
  679                                     | "private"
  680                                     | "public"

  681 optional_struct_variable_declaration_list: %empty
  682                                          | open_block struct_variable_declaration_list close_block

  683 $@48: %empty

  684 $@49: %empty

  685 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@48 structure_name $@49 optional_struct_variable_declaration_list

  686 variable_name_with_pos_list: "name"
  687                            | "$i" '(' expr ')'
  688                            | "name" "aka" "name"
  689                            | variable_name_with_pos_list ',' "name"
  690                            | variable_name_with_pos_list ',' "name" "aka" "name"

  691 basic_type_declaration: "bool"
  692                       | "string"
  693                       | "int"
  694                       | "int8"
  695                       | "int16"
  696                       | "int64"
  697                       | "int2"
  698                       | "int3"
  699                       | "int4"
  700                       | "uint"
  701                       | "uint8"
  702                       | "uint16"
  703                       | "uint64"
  704                       | "uint2"
  705                       | "uint3"
  706                       | "uint4"
  707                       | "float"
  708                       | "float2"
  709                       | "float3"
  710                       | "float4"
  711                       | "void"
  712                       | "range"
  713                       | "urange"
  714                       | "range64"
  715                       | "urange64"
  716                       | "double"
  717                       | "bitfield"

  718 enum_basic_type_declaration: "int"
  719                            | "int8"
  720                            | "int16"
  721                            | "uint"
  722                            | "uint8"
  723                            | "uint16"
  724                            | "int64"
  725                            | "uint64"

  726 structure_type_declaration: name_in_namespace

  727 auto_type_declaration: "auto"
  728                      | "auto" '(' "name" ')'
  729                      | "$t" '(' expr ')'

  730 bitfield_bits: "name"
  731              | bitfield_bits semicolon "name"

  732 bitfield_alias_bits: %empty
  733                    | bitfield_alias_bits semicolon
  734                    | bitfield_alias_bits "name" semicolon
  735                    | bitfield_alias_bits "name" '=' expr semicolon

  736 bitfield_basic_type_declaration: %empty
  737                                | ':' "uint8"
  738                                | ':' "uint16"
  739                                | ':' "uint"
  740                                | ':' "uint64"

  741 $@50: %empty

  742 $@51: %empty

  743 bitfield_type_declaration: "bitfield" bitfield_basic_type_declaration '<' $@50 bitfield_bits '>' $@51

  744 c_or_s: ','
  745       | semicolon

  746 table_type_pair: type_declaration
  747                | type_declaration c_or_s type_declaration

  748 dim_list: '[' expr ']'
  749         | dim_list '[' expr ']'

  750 type_declaration_no_options: basic_type_declaration
  751                            | auto_type_declaration
  752                            | bitfield_type_declaration
  753                            | structure_type_declaration
  754                            | type_declaration_no_options dim_list
  755                            | type_declaration_no_options '[' ']'

  756 $@52: %empty

  757 $@53: %empty

  758 type_declaration_no_options: "type" '<' $@52 type_declaration '>' $@53
  759                            | "typedecl" '(' expr ')'
  760                            | '$' name_in_namespace '(' optional_expr_list ')'

  761 $@54: %empty

  762 type_declaration_no_options: '$' name_in_namespace '<' $@54 type_declaration_no_options_list '>' '(' optional_expr_list ')'
  763                            | type_declaration_no_options '-' '[' ']'
  764                            | type_declaration_no_options "explicit"
  765                            | type_declaration_no_options "const"
  766                            | type_declaration_no_options '-' "const"
  767                            | type_declaration_no_options '&'
  768                            | type_declaration_no_options '-' '&'
  769                            | type_declaration_no_options '#'
  770                            | type_declaration_no_options "implicit"
  771                            | type_declaration_no_options '-' '#'
  772                            | type_declaration_no_options "==" "const"
  773                            | type_declaration_no_options "==" '&'
  774                            | type_declaration_no_options '?'

  775 $@55: %empty

  776 $@56: %empty

  777 type_declaration_no_options: "smart_ptr" '<' $@55 type_declaration '>' $@56
  778                            | type_declaration_no_options "??"

  779 $@57: %empty

  780 $@58: %empty

  781 type_declaration_no_options: "array" '<' $@57 type_declaration '>' $@58

  782 $@59: %empty

  783 $@60: %empty

  784 type_declaration_no_options: "table" '<' $@59 table_type_pair '>' $@60

  785 $@61: %empty

  786 $@62: %empty

  787 type_declaration_no_options: "iterator" '<' $@61 type_declaration '>' $@62
  788                            | "block"

  789 $@63: %empty

  790 $@64: %empty

  791 type_declaration_no_options: "block" '<' $@63 type_declaration '>' $@64

  792 $@65: %empty

  793 $@66: %empty

  794 type_declaration_no_options: "block" '<' $@65 optional_function_argument_list optional_function_type '>' $@66
  795                            | "function"

  796 $@67: %empty

  797 $@68: %empty

  798 type_declaration_no_options: "function" '<' $@67 type_declaration '>' $@68

  799 $@69: %empty

  800 $@70: %empty

  801 type_declaration_no_options: "function" '<' $@69 optional_function_argument_list optional_function_type '>' $@70
  802                            | "lambda"

  803 $@71: %empty

  804 $@72: %empty

  805 type_declaration_no_options: "lambda" '<' $@71 type_declaration '>' $@72

  806 $@73: %empty

  807 $@74: %empty

  808 type_declaration_no_options: "lambda" '<' $@73 optional_function_argument_list optional_function_type '>' $@74

  809 $@75: %empty

  810 $@76: %empty

  811 type_declaration_no_options: "tuple" '<' $@75 tuple_type_list '>' $@76

  812 $@77: %empty

  813 $@78: %empty

  814 type_declaration_no_options: "variant" '<' $@77 variant_type_list '>' $@78

  815 type_declaration: type_declaration_no_options
  816                 | type_declaration '|' type_declaration_no_options
  817                 | type_declaration '|' '#'

  818 $@79: %empty

  819 $@80: %empty

  820 $@81: %empty

  821 $@82: %empty

  822 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@79 "name" $@80 open_block $@81 tuple_alias_type_list $@82 close_block

  823 $@83: %empty

  824 $@84: %empty

  825 $@85: %empty

  826 $@86: %empty

  827 variant_alias_declaration: "variant" optional_public_or_private_alias $@83 "name" $@84 open_block $@85 variant_alias_type_list $@86 close_block

  828 $@87: %empty

  829 $@88: %empty

  830 $@89: %empty

  831 $@90: %empty

  832 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@87 "name" $@88 bitfield_basic_type_declaration open_block $@89 bitfield_alias_bits $@90 close_block

  833 make_decl: make_struct_decl
  834          | make_dim_decl
  835          | make_table_decl
  836          | array_comprehension
  837          | make_tuple_call

  838 make_struct_fields: "name" copy_or_move expr
  839                   | "name" ":=" expr
  840                   | make_struct_fields ',' "name" copy_or_move expr
  841                   | make_struct_fields ',' "name" ":=" expr
  842                   | "$f" '(' expr ')' copy_or_move expr
  843                   | "$f" '(' expr ')' ":=" expr
  844                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  845                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  846 make_variant_dim: %empty
  847                 | make_struct_fields

  848 make_struct_single: make_struct_fields optional_comma

  849 make_struct_dim: make_struct_fields
  850                | make_struct_dim "end of expression" make_struct_fields

  851 make_struct_dim_list: '(' make_struct_fields ')'
  852                     | make_struct_dim_list ',' '(' make_struct_fields ')'

  853 make_struct_dim_decl: make_struct_fields
  854                     | make_struct_dim_list optional_comma

  855 optional_make_struct_dim_decl: make_struct_dim_decl
  856                              | %empty

  857 optional_block: %empty
  858               | "where" expr_block

  859 optional_trailing_semicolon_cur_cur: "end of code block" "end of code block"
  860                                    | ";}}"

  861 optional_trailing_semicolon_cur_sqr: "end of code block" ']'
  862                                    | ";}]"

  863 optional_trailing_semicolon_sqr_sqr: ']' ']'
  864                                    | ";]]"

  865 optional_trailing_delim_sqr_sqr: ']' ']'
  866                                | ";]]"
  867                                | ",]]"

  868 optional_trailing_delim_cur_sqr: "end of code block" ']'
  869                                | ";}]"
  870                                | ",}]"

  871 use_initializer: %empty
  872                | "uninitialized"

  873 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  874                 | "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  875                 | "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  876                 | "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  877                 | "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  878                 | "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

  879 $@91: %empty

  880 $@92: %empty

  881 make_struct_decl: "struct" '<' $@91 type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')'

  882 $@93: %empty

  883 $@94: %empty

  884 make_struct_decl: "class" '<' $@93 type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')'

  885 $@95: %empty

  886 $@96: %empty

  887 make_struct_decl: "variant" '<' $@95 variant_type_list '>' $@96 '(' use_initializer make_variant_dim ')'

  888 $@97: %empty

  889 $@98: %empty

  890 make_struct_decl: "default" '<' $@97 type_declaration_no_options '>' $@98 use_initializer

  891 make_tuple: expr
  892           | expr "=>" expr
  893           | make_tuple ',' expr

  894 make_map_tuple: expr "=>" expr
  895               | expr

  896 make_tuple_call: "tuple" '(' expr_list optional_comma ')'

  897 $@99: %empty

  898 $@100: %empty

  899 make_tuple_call: "tuple" '<' $@99 tuple_type_list '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'

  900 make_dim: make_tuple
  901         | make_dim "end of expression" make_tuple

  902 make_dim_decl: '[' optional_expr_list ']'
  903              | "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  904              | "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr

  905 $@101: %empty

  906 $@102: %empty

  907 make_dim_decl: "array" "struct" '<' $@101 type_declaration_no_options '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

  908 $@103: %empty

  909 $@104: %empty

  910 make_dim_decl: "array" "tuple" '<' $@103 tuple_type_list '>' $@104 '(' use_initializer optional_make_struct_dim_decl ')'

  911 $@105: %empty

  912 $@106: %empty

  913 make_dim_decl: "array" "variant" '<' $@105 variant_type_list '>' $@106 '(' make_variant_dim ')'
  914              | "array" '(' expr_list optional_comma ')'

  915 $@107: %empty

  916 $@108: %empty

  917 make_dim_decl: "array" '<' $@107 type_declaration_no_options '>' $@108 '(' optional_expr_list ')'
  918              | "fixed_array" '(' expr_list optional_comma ')'

  919 $@109: %empty

  920 $@110: %empty

  921 make_dim_decl: "fixed_array" '<' $@109 type_declaration_no_options '>' $@110 '(' expr_list optional_comma ')'

  922 make_table: make_map_tuple
  923           | make_table "end of expression" make_map_tuple

  924 expr_map_tuple_list: make_map_tuple
  925                    | expr_map_tuple_list ',' make_map_tuple

  926 make_table_decl: "begin of code block" optional_expr_map_tuple_list "end of code block"
  927                | "{{" make_table optional_trailing_semicolon_cur_cur
  928                | "table" '(' optional_expr_map_tuple_list ')'
  929                | "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  930                | "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

  931 array_comprehension_where: %empty
  932                          | "end of expression" "where" expr

  933 optional_comma: %empty
  934               | ','

  935 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  936                    | '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  937                    | "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']'
  938                    | "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'
  939                    | "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"
  940                    | "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 23 125 141 472
    '#' (35) 769 771 817
    '$' (36) 20 367 760 762
    '%' (37) 43 50 161 484
    '&' (38) 169 370 491 612 622 767 768 773
    '(' (40) 112 123 129 136 137 280 306 307 308 309 336 337 340 341 356 357 358 359 360 361 374 379 432 433 434 435 437 447 448 449 450 451 455 456 457 458 459 460 461 502 503 513 514 515 516 545 547 548 549 550 551 553 554 555 556 557 558 559 560 561 562 590 624 687 728 729 759 760 762 842 843 844 845 851 852 875 876 878 881 884 887 896 899 907 910 913 914 917 918 921 928 929 930
    ')' (41) 112 123 129 136 137 280 306 307 308 309 336 337 340 341 356 357 358 359 360 361 374 379 432 433 434 435 437 447 448 449 450 451 455 456 457 458 459 460 461 502 503 513 514 515 516 545 547 548 549 550 551 553 554 555 556 557 558 559 560 561 562 590 624 687 728 729 759 760 762 842 843 844 845 851 852 875 876 878 881 884 887 896 899 907 910 913 914 917 918 921 928 929 930
    '*' (42) 159 482 512
    '+' (43) 157 474 480
    ',' (44) 59 101 114 132 333 363 376 433 595 626 627 689 690 744 840 841 844 845 852 893 925 934
    '-' (45) 158 475 481 763 766 768 771
    '.' (46) 51 186 188 189 190 191 192 193 194 195 196 197 198 199 200 445 446 447 448 449 450 451 454 505 507 509 555 557 558
    '/' (47) 52 160 483
    ':' (58) 35 61 62 139 334 335 336 337 518 597 603 614 615 628 629 630 668 670 737 738 739 740
    "end of expression" (59) 71 361 850 901 923 932 935 936 937 938 939 940
    '<' (60) 162 251 287 290 303 346 349 352 355 357 358 360 361 441 444 485 515 516 521 527 532 743 758 762 777 781 784 787 791 794 798 801 805 808 811 814 881 884 887 890 899 907 910 913 917 921 929 930
    '=' (61) 91 93 105 106 107 108 109 110 112 371 393 415 580 609 618 648 653 735
    '>' (62) 163 251 287 290 303 346 349 352 355 357 358 360 361 441 444 486 515 516 521 527 532 743 758 762 777 781 784 787 791 794 798 801 805 808 811 814 881 884 887 890 899 907 910 913 917 921 929 930
    '?' (63) 209 210 518 529 532 533 560 774
    '@' (64) 115 116 368 369 438 441 444 562
    '[' (91) 134 184 432 433 449 504 505 587 748 749 755 763 902 935 936
    ']' (93) 134 184 185 334 335 338 339 378 432 433 449 504 505 506 507 564 587 748 749 755 763 861 863 865 868 902 935 936 937 938
    '^' (94) 171 493
    "begin of code block" (123) 243 926 939
    '|' (124) 170 492 816 817
    "end of code block" (125) 245 859 861 868 926 938 939 940
    '~' (126) 142 473
    error (256) 275 454
    "lexer error" (258)
    "capture" (259) 379
    "struct" (260) 675 677 881 907
    "class" (261) 674 676 884
    "let" (262) 325 328
    "def" (263) 236 584 586
    "while" (264) 88
    "if" (265) 72 84
    "static_if" (266) 73
    "else" (267) 68 76
    "for" (268) 86 935 936 937 938 939 940
    "recover" (269) 324
    "true" (270) 98 109 468
    "false" (271) 99 110 469
    "new" (272) 305 306 307 308 309 310
    "typeinfo" (273) 356 357 358 359 360 361
    "type" (274) 103 355 521 527 532 758
    "in" (275) 86 104 935 936 937 938 939 940
    "is" (276) 205 207 521 522 523 561
    "as" (277) 54 206 208 209 210 524 527 528 529 532 533 559 560
    "elif" (278) 65
    "static_elif" (279) 66
    "array" (280) 781 907 910 913 914 917
    "return" (281) 313 314 315 317 318
    "null" (282) 462
    "break" (283) 311
    "try" (284) 324
    "options" (285) 44
    "table" (286) 784 928 929 930
    "expect" (287) 57
    "const" (288) 570 765 766 772
    "require" (289) 45 119
    "operator" (290) 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210
    "enum" (291) 665 668
    "finally" (292) 248
    "delete" (293) 203 299 300
    "deref" (294) 513
    "typedef" (295) 93 580 656 658
    "typedecl" (296) 759
    "with" (297) 89
    "aka" (298) 625 627 688 690
    "assume" (299) 91
    "cast" (300) 346
    "override" (301) 567
    "abstract" (302) 584
    "upcast" (303) 349
    "iterator" (304) 787 936
    "var" (305) 326 329
    "addr" (306) 514
    "continue" (307) 312
    "where" (308) 858 932
    "pass" (309) 272
    "reinterpret" (310) 352
    "module" (311) 24
    "public" (312) 18 56 239 572 641 651 661 680
    "label" (313) 62 63
    "goto" (314) 63 64
    "implicit" (315) 770
    "explicit" (316) 300 764
    "shared" (317) 638
    "private" (318) 19 120 238 573 640 650 660 679
    "smart_ptr" (319) 777
    "unsafe" (320) 87 545
    "inscope" (321) 23 330
    "static" (322) 575
    "fixed_array" (323) 918 921
    "default" (324) 890
    "uninitialized" (325) 309 456 458 872
    "bool" (326) 211 691
    "void" (327) 711
    "string" (328) 212 692
    "auto" (329) 727 728
    "int" (330) 213 693 718
    "int2" (331) 214 697
    "int3" (332) 215 698
    "int4" (333) 216 699
    "uint" (334) 217 700 721 739
    "bitfield" (335) 717 743 832
    "uint2" (336) 218 704
    "uint3" (337) 219 705
    "uint4" (338) 220 706
    "float" (339) 221 707
    "float2" (340) 222 708
    "float3" (341) 223 709
    "float4" (342) 224 710
    "range" (343) 225 712
    "urange" (344) 226 713
    "range64" (345) 227 714
    "urange64" (346) 228 715
    "block" (347) 788 791 794
    "int64" (348) 229 696 724
    "uint64" (349) 230 703 725 740
    "double" (350) 231 716
    "function" (351) 795 798 801
    "lambda" (352) 802 805 808
    "int8" (353) 232 694 719
    "uint8" (354) 233 701 722 737
    "int16" (355) 234 695 720
    "uint16" (356) 235 702 723 738
    "tuple" (357) 811 822 896 899 910
    "variant" (358) 814 827 887 913
    "generator" (359) 251 515 516
    "yield" (360) 319 320 322 323
    "sealed" (361) 568 672
    "template" (362) 121 676 677
    "+=" (363) 143 190 402 423
    "-=" (364) 144 191 403 424
    "/=" (365) 146 193 405 426
    "*=" (366) 145 192 404 425
    "%=" (367) 147 194 406 427
    "&=" (368) 148 195 396 417
    "|=" (369) 149 196 397 418
    "^=" (370) 150 197 398 419
    "<<" (371) 176 476
    ">>" (372) 177 477
    "++" (373) 172 174 498 500
    "--" (374) 173 175 499 501
    "<=" (375) 167 489
    "<<=" (376) 178 407 428
    ">>=" (377) 179 408 429
    ">=" (378) 168 490
    "==" (379) 165 487 772 773
    "!=" (380) 166 488
    "->" (381) 434 435
    "<-" (382) 315 318 320 323 366 372 394 416 610 619
    "??" (383) 204 517 778
    "?." (384) 187 201 508 509 556 558
    "?[" (385) 185 506 507
    "<|" (386) 541
    " <|" (387) 291
    "$ <|" (388) 294 413
    "@ <|" (389) 292 411
    "@@ <|" (390) 293 412
    "|>" (391) 130 542 543
    ":=" (392) 189 202 373 395 620 839 841 843 845
    "<<<" (393) 180 478
    ">>>" (394) 181 479
    "<<<=" (395) 182 409 430
    ">>>=" (396) 183 410 431
    "=>" (397) 365 366 892 894
    "::" (398) 297 298
    "&&" (399) 126 154 494
    "||" (400) 127 155 495
    "^^" (401) 128 156 496
    "&&=" (402) 151 198 399 420
    "||=" (403) 152 199 400 421
    "^^=" (404) 153 200 401 422
    ".." (405) 164 497
    "$$" (406) 547
    "$i" (407) 437 548 624 687
    "$v" (408) 549
    "$b" (409) 550
    "$a" (410) 551 590
    "$t" (411) 729
    "$c" (412) 553 554 562
    "$f" (413) 555 556 557 558 559 560 561 842 843 844 845
    "..." (414) 552
    "[[" (415) 334 335 338 339 378 564 873 874 875 876 903 937
    "[{" (416) 877 878 904 938
    "{{" (417) 927 940
    "new scope" <i> (418) 244
    "close scope" <i> (419) 246
    "end of line" (420) 70 634
    "integer constant" <i> (421) 60 61 62 63 96 107 385
    "long integer constant" <i64> (422) 387
    "unsigned integer constant" <ui> (423) 386
    "unsigned long integer constant" <ui64> (424) 388
    "unsigned int8 constant" <ui> (425) 389
    "floating point constant" <fd> (426) 97 108 390
    "double constant" <d> (427) 391
    "name" <s> (428) 21 46 54 91 93 95 102 106 140 188 189 190 191 192 193 194 195 196 197 198 199 200 201 207 208 210 296 297 298 332 333 357 358 360 361 370 371 372 373 374 434 435 445 446 447 448 449 508 509 523 524 529 544 580 597 603 623 625 626 627 647 648 653 662 673 686 688 689 690 728 730 731 734 735 822 827 832 838 839 840 841
    "keyword" <s> (429) 47 276 287
    "type function" <s> (430) 48 290
    "start of the string" (431) 29 30 39
    STRING_CHARACTER <ch> (432) 25 27 32 40 41
    STRING_CHARACTER_ESC (433) 26 28
    "end of the string" (434) 29 30 39
    "{" (435) 38
    "}" (436) 38
    "end of failed eader macro" (437)
    ";}}" (438) 860
    ";}]" (439) 862 869
    ";]]" (440) 864 866
    ",]]" (441) 867
    ",}]" (442) 870
    UNARY_MINUS (443)
    UNARY_PLUS (444)
    PRE_INC (445)
    PRE_DEC (446)
    POST_INC (447)
    POST_DEC (448)
    DEREF (449)


Nonterminals, with rules where they appear

    $accept (222)
        on left: 0
    program (223)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    top_level_reader_macro (224)
        on left: 16
        on right: 14
    optional_public_or_private_module <b> (225)
        on left: 17 18 19
        on right: 24
    module_name <s> (226)
        on left: 20 21
        on right: 24
    optional_not_required <b> (227)
        on left: 22 23
        on right: 24
    module_declaration (228)
        on left: 24
        on right: 2
    character_sequence <s> (229)
        on left: 25 26 27 28
        on right: 27 28 29 37
    string_constant <s> (230)
        on left: 29 30
        on right: 94 105
    format_string <s> (231)
        on left: 31 32
        on right: 32 35
    optional_format_string <s> (232)
        on left: 33 35
        on right: 38
    $@1 (233)
        on left: 34
        on right: 35
    string_builder_body <pExpression> (234)
        on left: 36 37 38
        on right: 37 38 39
    string_builder <pExpression> (235)
        on left: 39
        on right: 466
    reader_character_sequence (236)
        on left: 40 41
        on right: 41 43
    expr_reader <pExpression> (237)
        on left: 43
        on right: 16 465
    $@2 (238)
        on left: 42
        on right: 43
    options_declaration (239)
        on left: 44
        on right: 9
    require_declaration (240)
        on left: 45
        on right: 8
    keyword_or_name <s> (241)
        on left: 46 47 48
        on right: 49 51 52
    require_module_name <s> (242)
        on left: 49 50 51 52
        on right: 50 51 52 53 54
    require_module (243)
        on left: 53 54
        on right: 45
    is_public_module <b> (244)
        on left: 55 56
        on right: 53 54
    expect_declaration (245)
        on left: 57
        on right: 7
    expect_list (246)
        on left: 58 59
        on right: 57 59
    expect_error (247)
        on left: 60 61
        on right: 58 59
    expression_label <pExpression> (248)
        on left: 62
        on right: 270
    expression_goto <pExpression> (249)
        on left: 63 64
        on right: 271
    elif_or_static_elif <b> (250)
        on left: 65 66
        on right: 69
    expression_else <pExpression> (251)
        on left: 67 68 69
        on right: 69 82
    semicolon (252)
        on left: 70 71
        on right: 15 16 84 117 252 256 257 264 265 270 271 272 316 321 334 336 338 340 578 580 582 584 587 593 594 628 629 631 646 647 648 654 655 658 731 733 734 735 745
    if_or_static_if <b> (253)
        on left: 72 73
        on right: 82
    expression_else_one_liner <pExpression> (254)
        on left: 74 76
        on right: 84
    $@3 (255)
        on left: 75
        on right: 76
    expression_if_one_liner <pExpression> (256)
        on left: 77 78 79 80 81
        on right: 76 84
    expression_if_then_else <pExpression> (257)
        on left: 82 84
        on right: 268
    $@4 (258)
        on left: 83
        on right: 84
    expression_for_loop <pExpression> (259)
        on left: 86
        on right: 263
    $@5 (260)
        on left: 85
        on right: 86
    expression_unsafe <pExpression> (261)
        on left: 87
        on right: 260
    expression_while_loop <pExpression> (262)
        on left: 88
        on right: 259
    expression_with <pExpression> (263)
        on left: 89
        on right: 261
    expression_with_alias <pExpression> (264)
        on left: 91 93
        on right: 262
    $@6 (265)
        on left: 90
        on right: 91
    $@7 (266)
        on left: 92
        on right: 93
    annotation_argument_value <aa> (267)
        on left: 94 95 96 97 98 99
        on right: 100 101
    annotation_argument_value_list <aaList> (268)
        on left: 100 101
        on right: 101 112
    annotation_argument_name <s> (269)
        on left: 102 103 104
        on right: 105 106 107 108 109 110 111 112
    annotation_argument <aa> (270)
        on left: 105 106 107 108 109 110 111 112
        on right: 113 114 115 116
    annotation_argument_list <aaList> (271)
        on left: 113 114
        on right: 44 114 123 564
    metadata_argument_list <aaList> (272)
        on left: 115 116 117
        on right: 116 117 565
    annotation_declaration_name <s> (273)
        on left: 118 119 120 121
        on right: 122 123
    annotation_declaration_basic <fa> (274)
        on left: 122 123
        on right: 124
    annotation_declaration <fa> (275)
        on left: 124 125 126 127 128 129 130
        on right: 125 126 127 128 129 130 131 132
    annotation_list <faList> (276)
        on left: 131 132
        on right: 132 134 587
    optional_annotation_list <faList> (277)
        on left: 133 134
        on right: 236 381 382 384 584 586 665 668 685
    optional_function_argument_list <pVarDeclList> (278)
        on left: 135 136 137
        on right: 240 381 382 384 444 794 801 808
    optional_function_type <pTypeDecl> (279)
        on left: 138 139
        on right: 240 381 382 384 444 794 801 808
    function_name <s> (280)
        on left: 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235
        on right: 240
    global_function_declaration (281)
        on left: 236
        on right: 6
    optional_public_or_private_function <b> (282)
        on left: 237 238 239
        on right: 242
    function_declaration_header <pFuncDecl> (283)
        on left: 240
        on right: 242 584 586
    function_declaration <pFuncDecl> (284)
        on left: 242
        on right: 236
    $@8 (285)
        on left: 241
        on right: 242
    open_block (286)
        on left: 243 244
        on right: 247 248 642 656 665 668 682 822 827 832
    close_block (287)
        on left: 245 246
        on right: 247 248 642 656 665 668 682 822 827 832
    expression_block <pExpression> (288)
        on left: 247 248
        on right: 68 69 82 86 87 88 89 242 276 324 364 380 384 586
    expr_call_pipe <pExpression> (289)
        on left: 249 250 251
        on right: 295 414
    expression_any <pExpression> (290)
        on left: 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272
        on right: 274
    expressions <pExpression> (291)
        on left: 273 274 275
        on right: 247 248 274 275
    expr_keyword <pExpression> (292)
        on left: 276
        on right: 254
    optional_expr_list <pExpression> (293)
        on left: 277 278
        on right: 280 760 762 902 917
    optional_expr_list_in_braces <pExpression> (294)
        on left: 279 280
        on right: 290
    optional_expr_map_tuple_list <pExpression> (295)
        on left: 281 282
        on right: 926 928 929 930
    type_declaration_no_options_list <pTypeDeclList> (296)
        on left: 283 284
        on right: 284 287 290 762
    expression_keyword <pExpression> (297)
        on left: 287 290
        on right: 250 546
    $@9 (298)
        on left: 285
        on right: 287
    $@10 (299)
        on left: 286
        on right: 287
    $@11 (300)
        on left: 288
        on right: 290
    $@12 (301)
        on left: 289
        on right: 290
    expr_pipe <pExpression> (302)
        on left: 291 292 293 294 295
        on right: 253 317 318 322 323 335 337 339 341 630 632
    name_in_namespace <s> (303)
        on left: 296 297 298
        on right: 43 118 356 357 358 359 360 361 432 433 436 455 456 457 458 459 463 544 670 726 760 762
    expression_delete <pExpression> (304)
        on left: 299 300
        on right: 257
    new_type_declaration <pTypeDecl> (305)
        on left: 303 304
        on right: 305 306 307 308 309
    $@13 (306)
        on left: 301
        on right: 303
    $@14 (307)
        on left: 302
        on right: 303
    expr_new <pExpression> (308)
        on left: 305 306 307 308 309 310
        on right: 537
    expression_break <pExpression> (309)
        on left: 311
        on right: 80 264
    expression_continue <pExpression> (310)
        on left: 312
        on right: 81 265
    expression_return_no_pipe <pExpression> (311)
        on left: 313 314 315
        on right: 78 316
    expression_return <pExpression> (312)
        on left: 316 317 318
        on right: 266
    expression_yield_no_pipe <pExpression> (313)
        on left: 319 320
        on right: 79 321
    expression_yield <pExpression> (314)
        on left: 321 322 323
        on right: 267
    expression_try_catch <pExpression> (315)
        on left: 324
        on right: 269
    kwd_let_var_or_nothing <b> (316)
        on left: 325 326 327
        on right: 588 589
    kwd_let <b> (317)
        on left: 328 329
        on right: 342 343 642 644
    optional_in_scope <b> (318)
        on left: 330 331
        on right: 342 343
    tuple_expansion <pNameList> (319)
        on left: 332 333
        on right: 333 334 335 336 337 338 339 340 341
    tuple_expansion_variable_declaration <pVarDecl> (320)
        on left: 334 335 336 337 338 339 340 341
        on right: 343
    expression_let <pExpression> (321)
        on left: 342 343
        on right: 258
    expr_cast <pExpression> (322)
        on left: 346 349 352
        on right: 536
    $@15 (323)
        on left: 344
        on right: 346
    $@16 (324)
        on left: 345
        on right: 346
    $@17 (325)
        on left: 347
        on right: 349
    $@18 (326)
        on left: 348
        on right: 349
    $@19 (327)
        on left: 350
        on right: 352
    $@20 (328)
        on left: 351
        on right: 352
    expr_type_decl <pExpression> (329)
        on left: 355
        on right: 535
    $@21 (330)
        on left: 353
        on right: 355
    $@22 (331)
        on left: 354
        on right: 355
    expr_type_info <pExpression> (332)
        on left: 356 357 358 359 360 361
        on right: 534
    expr_list <pExpression> (333)
        on left: 362 363
        on right: 86 278 307 314 315 363 433 435 448 451 459 461 502 554 896 914 918 921 935 936 937 938 939 940
    block_or_simple_block <pExpression> (334)
        on left: 364 365 366
        on right: 381 382
    block_or_lambda <i> (335)
        on left: 367 368 369
        on right: 381 382 384
    capture_entry <pCapt> (336)
        on left: 370 371 372 373 374
        on right: 375 376
    capture_list <pCaptList> (337)
        on left: 375 376
        on right: 376 378 379
    optional_capture_list <pCaptList> (338)
        on left: 377 378 379
        on right: 251 381 382 384 515 516
    expr_block <pExpression> (339)
        on left: 380 381
        on right: 291 292 293 294 411 412 413 858
    expr_full_block <pExpression> (340)
        on left: 382
        on right: 540
    expr_full_block_assumed_piped <pExpression> (341)
        on left: 384
        on right: 249 250 251
    $@23 (342)
        on left: 383
        on right: 384
    expr_numeric_const <pExpression> (343)
        on left: 385 386 387 388 389 390 391
        on right: 464
    expr_assign <pExpression> (344)
        on left: 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410
        on right: 256 291
    expr_assign_pipe_right <pExpression> (345)
        on left: 411 412 413 414
        on right: 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431
    expr_assign_pipe <pExpression> (346)
        on left: 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431
        on right: 255
    expr_named_call <pExpression> (347)
        on left: 432 433
        on right: 539
    expr_method_call <pExpression> (348)
        on left: 434 435
        on right: 538
    func_addr_name <pExpression> (349)
        on left: 436 437
        on right: 438 441 444
    func_addr_expr <pExpression> (350)
        on left: 438 441 444
        on right: 510
    $@24 (351)
        on left: 439
        on right: 441
    $@25 (352)
        on left: 440
        on right: 441
    $@26 (353)
        on left: 442
        on right: 444
    $@27 (354)
        on left: 443
        on right: 444
    expr_field <pExpression> (355)
        on left: 445 446 447 448 449 450 451 454
        on right: 470
    $@28 (356)
        on left: 452
        on right: 454
    $@29 (357)
        on left: 453
        on right: 454
    expr_call <pExpression> (358)
        on left: 455 456 457 458 459 460 461
        on right: 511
    expr <pExpression> (359)
        on left: 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 521 522 523 524 527 528 529 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546
        on right
    $@30 (360)
        on left: 519
        on right: 521
    $@31 (361)
        on left: 520
        on right: 521
    $@32 (362)
        on left: 525
        on right: 527
    $@33 (363)
        on left: 526
        on right: 527
    $@34 (364)
        on left: 530
        on right: 532
    $@35 (365)
        on left: 531
        on right: 532
    expr_mtag <pExpression> (366)
        on left: 547 548 549 550 551 552 553 554 555 556 557 558 559 560 561 562
        on right: 471
    optional_field_annotation <aaList> (367)
        on left: 563 564 565
        on right: 576 588 589 636 644
    optional_override <i> (368)
        on left: 566 567 568
        on right: 576 586
    optional_constant <b> (369)
        on left: 569 570
        on right: 584 586
    optional_public_or_private_member_variable <b> (370)
        on left: 571 572 573
        on right: 576 584 586
    optional_static_member_variable <b> (371)
        on left: 574 575
        on right: 576 586
    structure_variable_declaration <pVarDecl> (372)
        on left: 576
        on right: 582
    struct_variable_declaration_list <pVarDeclList> (373)
        on left: 577 578 580 582 584 586 587
        on right: 578 580 582 584 586 587 682
    $@36 (374)
        on left: 579
        on right: 580
    $@37 (375)
        on left: 581
        on right: 582
    $@38 (376)
        on left: 583
        on right: 584
    $@39 (377)
        on left: 585
        on right: 586
    function_argument_declaration_no_type <pVarDecl> (378)
        on left: 588
        on right: 591 593
    function_argument_declaration_type <pVarDecl> (379)
        on left: 589 590
        on right: 592 594 595
    function_argument_list <pVarDeclList> (380)
        on left: 591 592 593 594 595
        on right: 137 593 594 595
    tuple_type <pVarDecl> (381)
        on left: 596 597
        on right: 598 599 602
    tuple_type_list <pVarDeclList> (382)
        on left: 598 599
        on right: 599 811 899 910
    tuple_alias_type_list <pVarDeclList> (383)
        on left: 600 601 602
        on right: 601 602 822
    variant_type <pVarDecl> (384)
        on left: 603
        on right: 604 605 608
    variant_type_list <pVarDeclList> (385)
        on left: 604 605
        on right: 605 814 887 913
    variant_alias_type_list <pVarDeclList> (386)
        on left: 606 607 608
        on right: 607 608 827
    copy_or_move <b> (387)
        on left: 609 610
        on right: 613 615 838 840 842 844
    variable_declaration_no_type <pVarDecl> (388)
        on left: 611 612 613
        on right: 588 617
    variable_declaration_type <pVarDecl> (389)
        on left: 614 615
        on right: 589 616
    variable_declaration <pVarDecl> (390)
        on left: 616 617
        on right: 576
    copy_or_move_or_clone <i> (391)
        on left: 618 619 620
        on right: 334 335 336 337 338 339 340 341 629 630 631 632
    optional_ref <b> (392)
        on left: 621 622
        on right: 338 339 340 341 631 632
    let_variable_name_with_pos_list <pNameWithPosList> (393)
        on left: 623 624 625 626 627
        on right: 626 627 628 629 630 631 632
    let_variable_declaration <pVarDecl> (394)
        on left: 628 629 630 631 632
        on right: 342 636 644
    global_variable_declaration_list <pVarDeclList> (395)
        on left: 633 634 636
        on right: 634 636 642
    $@40 (396)
        on left: 635
        on right: 636
    optional_shared <b> (397)
        on left: 637 638
        on right: 24 642 644
    optional_public_or_private_variable <b> (398)
        on left: 639 640 641
        on right: 642 644
    global_let (399)
        on left: 642 644
        on right: 5
    $@41 (400)
        on left: 643
        on right: 644
    enum_list <pEnum> (401)
        on left: 645 646 647 648
        on right: 646 647 648 665 668
    optional_public_or_private_alias <b> (402)
        on left: 649 650 651
        on right: 653 822 827 832
    single_alias (403)
        on left: 653
        on right: 654 655 658
    $@42 (404)
        on left: 652
        on right: 653
    alias_list (405)
        on left: 654 655
        on right: 655 656
    alias_declaration (406)
        on left: 656 658
        on right: 10
    $@43 (407)
        on left: 657
        on right: 658
    optional_public_or_private_enum <b> (408)
        on left: 659 660 661
        on right: 665 668
    enum_name <pEnum> (409)
        on left: 662
        on right: 665 668
    enum_declaration (410)
        on left: 665 668
        on right: 4
    $@44 (411)
        on left: 663
        on right: 665
    $@45 (412)
        on left: 664
        on right: 665
    $@46 (413)
        on left: 666
        on right: 668
    $@47 (414)
        on left: 667
        on right: 668
    optional_structure_parent <s> (415)
        on left: 669 670
        on right: 673
    optional_sealed <b> (416)
        on left: 671 672
        on right: 673
    structure_name <pStructure> (417)
        on left: 673
        on right: 685
    class_or_struct <i> (418)
        on left: 674 675 676 677
        on right: 685
    optional_public_or_private_structure <b> (419)
        on left: 678 679 680
        on right: 685
    optional_struct_variable_declaration_list <pVarDeclList> (420)
        on left: 681 682
        on right: 685
    structure_declaration (421)
        on left: 685
        on right: 3
    $@48 (422)
        on left: 683
        on right: 685
    $@49 (423)
        on left: 684
        on right: 685
    variable_name_with_pos_list <pNameWithPosList> (424)
        on left: 686 687 688 689 690
        on right: 86 611 612 613 614 615 689 690 935 936 937 938 939 940
    basic_type_declaration <type> (425)
        on left: 691 692 693 694 695 696 697 698 699 700 701 702 703 704 705 706 707 708 709 710 711 712 713 714 715 716 717
        on right: 450 451 460 461 522 528 533 543 750
    enum_basic_type_declaration <type> (426)
        on left: 718 719 720 721 722 723 724 725
        on right: 668
    structure_type_declaration <pTypeDecl> (427)
        on left: 726
        on right: 304 753
    auto_type_declaration <pTypeDecl> (428)
        on left: 727 728 729
        on right: 751
    bitfield_bits <pNameList> (429)
        on left: 730 731
        on right: 731 743
    bitfield_alias_bits <pNameExprList> (430)
        on left: 732 733 734 735
        on right: 733 734 735 832
    bitfield_basic_type_declaration <type> (431)
        on left: 736 737 738 739 740
        on right: 743 832
    bitfield_type_declaration <pTypeDecl> (432)
        on left: 743
        on right: 752
    $@50 (433)
        on left: 741
        on right: 743
    $@51 (434)
        on left: 742
        on right: 743
    c_or_s (435)
        on left: 744 745
        on right: 284 358 599 601 602 605 607 608 747 930
    table_type_pair <aTypePair> (436)
        on left: 746 747
        on right: 784
    dim_list <pTypeDecl> (437)
        on left: 748 749
        on right: 749 754
    type_declaration_no_options <pTypeDecl> (438)
        on left: 750 751 752 753 754 755 758 759 760 762 763 764 765 766 767 768 769 770 771 772 773 774 777 778 781 784 787 788 791 794 795 798 801 802 805 808 811 814
        on right: 251 334 335 336 337 346 349 352 441 515 516 521 628 629 630 754 755 763 764 765 766 767 768 769 770 771 772 773 774 778 815 816 873 874 875 876 877 878 881 884 890 903 904 907 917 921 929 930
    $@52 (439)
        on left: 756
        on right: 758
    $@53 (440)
        on left: 757
        on right: 758
    $@54 (441)
        on left: 761
        on right: 762
    $@55 (442)
        on left: 775
        on right: 777
    $@56 (443)
        on left: 776
        on right: 777
    $@57 (444)
        on left: 779
        on right: 781
    $@58 (445)
        on left: 780
        on right: 781
    $@59 (446)
        on left: 782
        on right: 784
    $@60 (447)
        on left: 783
        on right: 784
    $@61 (448)
        on left: 785
        on right: 787
    $@62 (449)
        on left: 786
        on right: 787
    $@63 (450)
        on left: 789
        on right: 791
    $@64 (451)
        on left: 790
        on right: 791
    $@65 (452)
        on left: 792
        on right: 794
    $@66 (453)
        on left: 793
        on right: 794
    $@67 (454)
        on left: 796
        on right: 798
    $@68 (455)
        on left: 797
        on right: 798
    $@69 (456)
        on left: 799
        on right: 801
    $@70 (457)
        on left: 800
        on right: 801
    $@71 (458)
        on left: 803
        on right: 805
    $@72 (459)
        on left: 804
        on right: 805
    $@73 (460)
        on left: 806
        on right: 808
    $@74 (461)
        on left: 807
        on right: 808
    $@75 (462)
        on left: 809
        on right: 811
    $@76 (463)
        on left: 810
        on right: 811
    $@77 (464)
        on left: 812
        on right: 814
    $@78 (465)
        on left: 813
        on right: 814
    type_declaration <pTypeDecl> (466)
        on left: 815 816 817
        on right: 93 139 283 284 303 355 527 532 580 596 597 603 614 615 653 746 747 758 777 781 787 791 798 805 816 817
    tuple_alias_declaration (467)
        on left: 822
        on right: 12
    $@79 (468)
        on left: 818
        on right: 822
    $@80 (469)
        on left: 819
        on right: 822
    $@81 (470)
        on left: 820
        on right: 822
    $@82 (471)
        on left: 821
        on right: 822
    variant_alias_declaration (472)
        on left: 827
        on right: 11
    $@83 (473)
        on left: 823
        on right: 827
    $@84 (474)
        on left: 824
        on right: 827
    $@85 (475)
        on left: 825
        on right: 827
    $@86 (476)
        on left: 826
        on right: 827
    bitfield_alias_declaration (477)
        on left: 832
        on right: 13
    $@87 (478)
        on left: 828
        on right: 832
    $@88 (479)
        on left: 829
        on right: 832
    $@89 (480)
        on left: 830
        on right: 832
    $@90 (481)
        on left: 831
        on right: 832
    make_decl <pExpression> (482)
        on left: 833 834 835 836 837
        on right: 310 467
    make_struct_fields <pMakeStruct> (483)
        on left: 838 839 840 841 842 843 844 845
        on right: 432 433 449 840 841 844 845 847 848 849 850 851 852 853
    make_variant_dim <pExpression> (484)
        on left: 846 847
        on right: 887 913
    make_struct_single <pExpression> (485)
        on left: 848
        on right: 308 309 457 458 503
    make_struct_dim <pExpression> (486)
        on left: 849 850
        on right: 850 873 876 877 878
    make_struct_dim_list <pExpression> (487)
        on left: 851 852
        on right: 852 854
    make_struct_dim_decl <pExpression> (488)
        on left: 853 854
        on right: 855
    optional_make_struct_dim_decl <pExpression> (489)
        on left: 855 856
        on right: 881 884 899 907 910
    optional_block <pExpression> (490)
        on left: 857 858
        on right: 873 874 875 876 877 878
    optional_trailing_semicolon_cur_cur (491)
        on left: 859 860
        on right: 927
    optional_trailing_semicolon_cur_sqr (492)
        on left: 861 862
        on right: 904
    optional_trailing_semicolon_sqr_sqr (493)
        on left: 863 864
        on right: 903
    optional_trailing_delim_sqr_sqr (494)
        on left: 865 866 867
        on right: 873 874 875 876
    optional_trailing_delim_cur_sqr (495)
        on left: 868 869 870
        on right: 877 878
    use_initializer <b> (496)
        on left: 871 872
        on right: 306 881 884 887 890 899 907 910
    make_struct_decl <pExpression> (497)
        on left: 873 874 875 876 877 878 881 884 887 890
        on right: 833
    $@91 (498)
        on left: 879
        on right: 881
    $@92 (499)
        on left: 880
        on right: 881
    $@93 (500)
        on left: 882
        on right: 884
    $@94 (501)
        on left: 883
        on right: 884
    $@95 (502)
        on left: 885
        on right: 887
    $@96 (503)
        on left: 886
        on right: 887
    $@97 (504)
        on left: 888
        on right: 890
    $@98 (505)
        on left: 889
        on right: 890
    make_tuple <pExpression> (506)
        on left: 891 892 893
        on right: 893 900 901
    make_map_tuple <pExpression> (507)
        on left: 894 895
        on right: 922 923 924 925 939 940
    make_tuple_call <pExpression> (508)
        on left: 896 899
        on right: 837
    $@99 (509)
        on left: 897
        on right: 899
    $@100 (510)
        on left: 898
        on right: 899
    make_dim <pExpression> (511)
        on left: 900 901
        on right: 901 903 904
    make_dim_decl <pExpression> (512)
        on left: 902 903 904 907 910 913 914 917 918 921
        on right: 834
    $@101 (513)
        on left: 905
        on right: 907
    $@102 (514)
        on left: 906
        on right: 907
    $@103 (515)
        on left: 908
        on right: 910
    $@104 (516)
        on left: 909
        on right: 910
    $@105 (517)
        on left: 911
        on right: 913
    $@106 (518)
        on left: 912
        on right: 913
    $@107 (519)
        on left: 915
        on right: 917
    $@108 (520)
        on left: 916
        on right: 917
    $@109 (521)
        on left: 919
        on right: 921
    $@110 (522)
        on left: 920
        on right: 921
    make_table <pExpression> (523)
        on left: 922 923
        on right: 923 927
    expr_map_tuple_list <pExpression> (524)
        on left: 924 925
        on right: 282 925
    make_table_decl <pExpression> (525)
        on left: 926 927 928 929 930
        on right: 835
    array_comprehension_where <pExpression> (526)
        on left: 931 932
        on right: 935 936 937 938 939 940
    optional_comma <b> (527)
        on left: 933 934
        on right: 278 280 282 502 848 854 896 914 918 921
    array_comprehension <pExpression> (528)
        on left: 935 936 937 938 939 940
        on right: 836


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration
    9        | program . options_declaration
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . tuple_alias_declaration
   13        | program . bitfield_alias_declaration
   14        | program . top_level_reader_macro
   15        | program . semicolon

    $end                 shift, and go to state 2
    "let"                shift, and go to state 3
    "options"            shift, and go to state 4
    "expect"             shift, and go to state 5
    "require"            shift, and go to state 6
    "typedef"            shift, and go to state 7
    "var"                shift, and go to state 8
    "module"             shift, and go to state 9
    "bitfield"           shift, and go to state 10
    "tuple"              shift, and go to state 11
    "variant"            shift, and go to state 12
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '%'                  shift, and go to state 15
    '['                  shift, and go to state 16

    $default  reduce using rule 133 (optional_annotation_list)

    top_level_reader_macro       go to state 17
    module_declaration           go to state 18
    expr_reader                  go to state 19
    options_declaration          go to state 20
    require_declaration          go to state 21
    expect_declaration           go to state 22
    semicolon                    go to state 23
    optional_annotation_list     go to state 24
    global_function_declaration  go to state 25
    kwd_let                      go to state 26
    global_let                   go to state 27
    alias_declaration            go to state 28
    enum_declaration             go to state 29
    structure_declaration        go to state 30
    tuple_alias_declaration      go to state 31
    variant_alias_declaration    go to state 32
    bitfield_alias_declaration   go to state 33


State 2

    0 $accept: program $end .

    $default  accept


State 3

  328 kwd_let: "let" .

    $default  reduce using rule 328 (kwd_let)


State 4

   44 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 38
    annotation_argument_list  go to state 39


State 5

   57 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 40

    expect_list   go to state 41
    expect_error  go to state 42


State 6

   45 require_declaration: "require" . require_module

    "name"           shift, and go to state 43
    "keyword"        shift, and go to state 44
    "type function"  shift, and go to state 45
    '%'              shift, and go to state 46

    keyword_or_name      go to state 47
    require_module_name  go to state 48
    require_module       go to state 49


State 7

  656 alias_declaration: "typedef" . open_block alias_list close_block
  658                  | "typedef" . $@43 single_alias semicolon

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    $default  reduce using rule 657 ($@43)

    open_block  go to state 52
    $@43        go to state 53


State 8

  329 kwd_let: "var" .

    $default  reduce using rule 329 (kwd_let)


State 9

   24 module_declaration: "module" . module_name optional_shared optional_public_or_private_module optional_not_required

    "name"  shift, and go to state 54
    '$'     shift, and go to state 55

    module_name  go to state 56


State 10

  832 bitfield_alias_declaration: "bitfield" . optional_public_or_private_alias $@87 "name" $@88 bitfield_basic_type_declaration open_block $@89 bitfield_alias_bits $@90 close_block

    "public"   shift, and go to state 57
    "private"  shift, and go to state 58

    $default  reduce using rule 649 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 59


State 11

  822 tuple_alias_declaration: "tuple" . optional_public_or_private_alias $@79 "name" $@80 open_block $@81 tuple_alias_type_list $@82 close_block

    "public"   shift, and go to state 57
    "private"  shift, and go to state 58

    $default  reduce using rule 649 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 60


State 12

  827 variant_alias_declaration: "variant" . optional_public_or_private_alias $@83 "name" $@84 open_block $@85 variant_alias_type_list $@86 close_block

    "public"   shift, and go to state 57
    "private"  shift, and go to state 58

    $default  reduce using rule 649 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 61


State 13

   70 semicolon: "end of line" .

    $default  reduce using rule 70 (semicolon)


State 14

   71 semicolon: "end of expression" .

    $default  reduce using rule 71 (semicolon)


State 15

   43 expr_reader: '%' . name_in_namespace $@2 reader_character_sequence

    "::"    shift, and go to state 62
    "name"  shift, and go to state 63

    name_in_namespace  go to state 64


State 16

  134 optional_annotation_list: '[' . annotation_list ']'

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 73
    annotation_list               go to state 74
    name_in_namespace             go to state 75


State 17

   14 program: program top_level_reader_macro .

    $default  reduce using rule 14 (program)


State 18

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 19

   16 top_level_reader_macro: expr_reader . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 76


State 20

    9 program: program options_declaration .

    $default  reduce using rule 9 (program)


State 21

    8 program: program require_declaration .

    $default  reduce using rule 8 (program)


State 22

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 23

   15 program: program semicolon .

    $default  reduce using rule 15 (program)


State 24

  236 global_function_declaration: optional_annotation_list . "def" function_declaration
  665 enum_declaration: optional_annotation_list . "enum" optional_public_or_private_enum enum_name open_block $@44 enum_list $@45 close_block
  668                 | optional_annotation_list . "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration open_block $@46 enum_list $@47 close_block
  685 structure_declaration: optional_annotation_list . class_or_struct optional_public_or_private_structure $@48 structure_name $@49 optional_struct_variable_declaration_list

    "struct"    shift, and go to state 77
    "class"     shift, and go to state 78
    "def"       shift, and go to state 79
    "enum"      shift, and go to state 80
    "template"  shift, and go to state 81

    class_or_struct  go to state 82


State 25

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 26

  642 global_let: kwd_let . optional_shared optional_public_or_private_variable open_block global_variable_declaration_list close_block
  644           | kwd_let . optional_shared optional_public_or_private_variable $@41 optional_field_annotation let_variable_declaration

    "shared"  shift, and go to state 83

    $default  reduce using rule 637 (optional_shared)

    optional_shared  go to state 84


State 27

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 28

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 29

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 30

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 31

   12 program: program tuple_alias_declaration .

    $default  reduce using rule 12 (program)


State 32

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 33

   13 program: program bitfield_alias_declaration .

    $default  reduce using rule 13 (program)


State 34

  103 annotation_argument_name: "type" .

    $default  reduce using rule 103 (annotation_argument_name)


State 35

  104 annotation_argument_name: "in" .

    $default  reduce using rule 104 (annotation_argument_name)


State 36

  102 annotation_argument_name: "name" .

    $default  reduce using rule 102 (annotation_argument_name)


State 37

  105 annotation_argument: annotation_argument_name . '=' string_constant
  106                    | annotation_argument_name . '=' "name"
  107                    | annotation_argument_name . '=' "integer constant"
  108                    | annotation_argument_name . '=' "floating point constant"
  109                    | annotation_argument_name . '=' "true"
  110                    | annotation_argument_name . '=' "false"
  111                    | annotation_argument_name .
  112                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 85

    $default  reduce using rule 111 (annotation_argument)


State 38

  113 annotation_argument_list: annotation_argument .

    $default  reduce using rule 113 (annotation_argument_list)


State 39

   44 options_declaration: "options" annotation_argument_list .
  114 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 86

    $default  reduce using rule 44 (options_declaration)


State 40

   60 expect_error: "integer constant" .
   61             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 87

    $default  reduce using rule 60 (expect_error)


State 41

   57 expect_declaration: "expect" expect_list .
   59 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 88

    $default  reduce using rule 57 (expect_declaration)


State 42

   58 expect_list: expect_error .

    $default  reduce using rule 58 (expect_list)


State 43

   46 keyword_or_name: "name" .

    $default  reduce using rule 46 (keyword_or_name)


State 44

   47 keyword_or_name: "keyword" .

    $default  reduce using rule 47 (keyword_or_name)


State 45

   48 keyword_or_name: "type function" .

    $default  reduce using rule 48 (keyword_or_name)


State 46

   50 require_module_name: '%' . require_module_name

    "name"           shift, and go to state 43
    "keyword"        shift, and go to state 44
    "type function"  shift, and go to state 45
    '%'              shift, and go to state 46

    keyword_or_name      go to state 47
    require_module_name  go to state 89


State 47

   49 require_module_name: keyword_or_name .

    $default  reduce using rule 49 (require_module_name)


State 48

   51 require_module_name: require_module_name . '.' keyword_or_name
   52                    | require_module_name . '/' keyword_or_name
   53 require_module: require_module_name . is_public_module
   54               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 90
    "public"  shift, and go to state 91
    '/'       shift, and go to state 92
    '.'       shift, and go to state 93

    $default  reduce using rule 55 (is_public_module)

    is_public_module  go to state 94


State 49

   45 require_declaration: "require" require_module .

    $default  reduce using rule 45 (require_declaration)


State 50

  244 open_block: "new scope" .

    $default  reduce using rule 244 (open_block)


State 51

  243 open_block: "begin of code block" .

    $default  reduce using rule 243 (open_block)


State 52

  656 alias_declaration: "typedef" open_block . alias_list close_block

    "public"   shift, and go to state 57
    "private"  shift, and go to state 58

    $default  reduce using rule 649 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 95
    single_alias                      go to state 96
    alias_list                        go to state 97


State 53

  658 alias_declaration: "typedef" $@43 . single_alias semicolon

    "public"   shift, and go to state 57
    "private"  shift, and go to state 58

    $default  reduce using rule 649 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 95
    single_alias                      go to state 98


State 54

   21 module_name: "name" .

    $default  reduce using rule 21 (module_name)


State 55

   20 module_name: '$' .

    $default  reduce using rule 20 (module_name)


State 56

   24 module_declaration: "module" module_name . optional_shared optional_public_or_private_module optional_not_required

    "shared"  shift, and go to state 83

    $default  reduce using rule 637 (optional_shared)

    optional_shared  go to state 99


State 57

  651 optional_public_or_private_alias: "public" .

    $default  reduce using rule 651 (optional_public_or_private_alias)


State 58

  650 optional_public_or_private_alias: "private" .

    $default  reduce using rule 650 (optional_public_or_private_alias)


State 59

  832 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias . $@87 "name" $@88 bitfield_basic_type_declaration open_block $@89 bitfield_alias_bits $@90 close_block

    $default  reduce using rule 828 ($@87)

    $@87  go to state 100


State 60

  822 tuple_alias_declaration: "tuple" optional_public_or_private_alias . $@79 "name" $@80 open_block $@81 tuple_alias_type_list $@82 close_block

    $default  reduce using rule 818 ($@79)

    $@79  go to state 101


State 61

  827 variant_alias_declaration: "variant" optional_public_or_private_alias . $@83 "name" $@84 open_block $@85 variant_alias_type_list $@86 close_block

    $default  reduce using rule 823 ($@83)

    $@83  go to state 102


State 62

  298 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 103


State 63

  296 name_in_namespace: "name" .
  297                  | "name" . "::" "name"

    "::"  shift, and go to state 104

    "::"      [reduce using rule 296 (name_in_namespace)]
    $default  reduce using rule 296 (name_in_namespace)


State 64

   43 expr_reader: '%' name_in_namespace . $@2 reader_character_sequence

    $default  reduce using rule 42 ($@2)

    $@2  go to state 105


State 65

  119 annotation_declaration_name: "require" .

    $default  reduce using rule 119 (annotation_declaration_name)


State 66

  120 annotation_declaration_name: "private" .

    $default  reduce using rule 120 (annotation_declaration_name)


State 67

  121 annotation_declaration_name: "template" .

    $default  reduce using rule 121 (annotation_declaration_name)


State 68

  130 annotation_declaration: "|>" . annotation_declaration

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 106
    name_in_namespace             go to state 75


State 69

  125 annotation_declaration: '!' . annotation_declaration

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 107
    name_in_namespace             go to state 75


State 70

  129 annotation_declaration: '(' . annotation_declaration ')'

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 108
    name_in_namespace             go to state 75


State 71

  122 annotation_declaration_basic: annotation_declaration_name .
  123                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 109

    $default  reduce using rule 122 (annotation_declaration_basic)


State 72

  124 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 124 (annotation_declaration)


State 73

  126 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  127                       | annotation_declaration . "||" annotation_declaration
  128                       | annotation_declaration . "^^" annotation_declaration
  131 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 110
    "||"  shift, and go to state 111
    "^^"  shift, and go to state 112

    $default  reduce using rule 131 (annotation_list)


State 74

  132 annotation_list: annotation_list . ',' annotation_declaration
  134 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 113
    ']'  shift, and go to state 114


State 75

  118 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 118 (annotation_declaration_name)


State 76

   16 top_level_reader_macro: expr_reader semicolon .

    $default  reduce using rule 16 (top_level_reader_macro)


State 77

  675 class_or_struct: "struct" .

    $default  reduce using rule 675 (class_or_struct)


State 78

  674 class_or_struct: "class" .

    $default  reduce using rule 674 (class_or_struct)


State 79

  236 global_function_declaration: optional_annotation_list "def" . function_declaration

    "public"   shift, and go to state 115
    "private"  shift, and go to state 116

    $default  reduce using rule 237 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 117
    function_declaration                 go to state 118


State 80

  665 enum_declaration: optional_annotation_list "enum" . optional_public_or_private_enum enum_name open_block $@44 enum_list $@45 close_block
  668                 | optional_annotation_list "enum" . optional_public_or_private_enum enum_name ':' enum_basic_type_declaration open_block $@46 enum_list $@47 close_block

    "public"   shift, and go to state 119
    "private"  shift, and go to state 120

    $default  reduce using rule 659 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 121


State 81

  676 class_or_struct: "template" . "class"
  677                | "template" . "struct"

    "struct"  shift, and go to state 122
    "class"   shift, and go to state 123


State 82

  685 structure_declaration: optional_annotation_list class_or_struct . optional_public_or_private_structure $@48 structure_name $@49 optional_struct_variable_declaration_list

    "public"   shift, and go to state 124
    "private"  shift, and go to state 125

    $default  reduce using rule 678 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 126


State 83

  638 optional_shared: "shared" .

    $default  reduce using rule 638 (optional_shared)


State 84

  642 global_let: kwd_let optional_shared . optional_public_or_private_variable open_block global_variable_declaration_list close_block
  644           | kwd_let optional_shared . optional_public_or_private_variable $@41 optional_field_annotation let_variable_declaration

    "public"   shift, and go to state 127
    "private"  shift, and go to state 128

    $default  reduce using rule 639 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 129


State 85

  105 annotation_argument: annotation_argument_name '=' . string_constant
  106                    | annotation_argument_name '=' . "name"
  107                    | annotation_argument_name '=' . "integer constant"
  108                    | annotation_argument_name '=' . "floating point constant"
  109                    | annotation_argument_name '=' . "true"
  110                    | annotation_argument_name '=' . "false"
  112                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 130
    "false"                    shift, and go to state 131
    "integer constant"         shift, and go to state 132
    "floating point constant"  shift, and go to state 133
    "name"                     shift, and go to state 134
    "start of the string"      shift, and go to state 135
    '('                        shift, and go to state 136

    string_constant  go to state 137


State 86

  114 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 138


State 87

   61 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 139


State 88

   59 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 40

    expect_error  go to state 140


State 89

   50 require_module_name: '%' require_module_name .
   51                    | require_module_name . '.' keyword_or_name
   52                    | require_module_name . '/' keyword_or_name

    '.'  shift, and go to state 93

    $default  reduce using rule 50 (require_module_name)


State 90

   54 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 141


State 91

   56 is_public_module: "public" .

    $default  reduce using rule 56 (is_public_module)


State 92

   52 require_module_name: require_module_name '/' . keyword_or_name

    "name"           shift, and go to state 43
    "keyword"        shift, and go to state 44
    "type function"  shift, and go to state 45

    keyword_or_name  go to state 142


State 93

   51 require_module_name: require_module_name '.' . keyword_or_name

    "name"           shift, and go to state 43
    "keyword"        shift, and go to state 44
    "type function"  shift, and go to state 45

    keyword_or_name  go to state 143


State 94

   53 require_module: require_module_name is_public_module .

    $default  reduce using rule 53 (require_module)


State 95

  653 single_alias: optional_public_or_private_alias . "name" $@42 '=' type_declaration

    "name"  shift, and go to state 144


State 96

  654 alias_list: single_alias . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 145


State 97

  655 alias_list: alias_list . single_alias semicolon
  656 alias_declaration: "typedef" open_block alias_list . close_block

    "public"             shift, and go to state 57
    "private"            shift, and go to state 58
    "close scope"        shift, and go to state 146
    "end of code block"  shift, and go to state 147

    $default  reduce using rule 649 (optional_public_or_private_alias)

    close_block                       go to state 148
    optional_public_or_private_alias  go to state 95
    single_alias                      go to state 149


State 98

  658 alias_declaration: "typedef" $@43 single_alias . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 150


State 99

   24 module_declaration: "module" module_name optional_shared . optional_public_or_private_module optional_not_required

    "public"   shift, and go to state 151
    "private"  shift, and go to state 152

    $default  reduce using rule 17 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 153


State 100

  832 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@87 . "name" $@88 bitfield_basic_type_declaration open_block $@89 bitfield_alias_bits $@90 close_block

    "name"  shift, and go to state 154


State 101

  822 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@79 . "name" $@80 open_block $@81 tuple_alias_type_list $@82 close_block

    "name"  shift, and go to state 155


State 102

  827 variant_alias_declaration: "variant" optional_public_or_private_alias $@83 . "name" $@84 open_block $@85 variant_alias_type_list $@86 close_block

    "name"  shift, and go to state 156


State 103

  298 name_in_namespace: "::" "name" .

    $default  reduce using rule 298 (name_in_namespace)


State 104

  297 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 157


State 105

   43 expr_reader: '%' name_in_namespace $@2 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 158

    reader_character_sequence  go to state 159


State 106

  126 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  127                       | annotation_declaration . "||" annotation_declaration
  128                       | annotation_declaration . "^^" annotation_declaration
  130                       | "|>" annotation_declaration .

    $default  reduce using rule 130 (annotation_declaration)


State 107

  125 annotation_declaration: '!' annotation_declaration .
  126                       | annotation_declaration . "&&" annotation_declaration
  127                       | annotation_declaration . "||" annotation_declaration
  128                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 125 (annotation_declaration)


State 108

  126 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  127                       | annotation_declaration . "||" annotation_declaration
  128                       | annotation_declaration . "^^" annotation_declaration
  129                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 110
    "||"  shift, and go to state 111
    "^^"  shift, and go to state 112
    ')'   shift, and go to state 160


State 109

  123 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 38
    annotation_argument_list  go to state 161


State 110

  126 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 162
    name_in_namespace             go to state 75


State 111

  127 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 163
    name_in_namespace             go to state 75


State 112

  128 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 164
    name_in_namespace             go to state 75


State 113

  132 annotation_list: annotation_list ',' . annotation_declaration

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 165
    name_in_namespace             go to state 75


State 114

  134 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 134 (optional_annotation_list)


State 115

  239 optional_public_or_private_function: "public" .

    $default  reduce using rule 239 (optional_public_or_private_function)


State 116

  238 optional_public_or_private_function: "private" .

    $default  reduce using rule 238 (optional_public_or_private_function)


State 117

  242 function_declaration: optional_public_or_private_function . $@8 function_declaration_header expression_block

    $default  reduce using rule 241 ($@8)

    $@8  go to state 166


State 118

  236 global_function_declaration: optional_annotation_list "def" function_declaration .

    $default  reduce using rule 236 (global_function_declaration)


State 119

  661 optional_public_or_private_enum: "public" .

    $default  reduce using rule 661 (optional_public_or_private_enum)


State 120

  660 optional_public_or_private_enum: "private" .

    $default  reduce using rule 660 (optional_public_or_private_enum)


State 121

  665 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum . enum_name open_block $@44 enum_list $@45 close_block
  668                 | optional_annotation_list "enum" optional_public_or_private_enum . enum_name ':' enum_basic_type_declaration open_block $@46 enum_list $@47 close_block

    "name"  shift, and go to state 167

    enum_name  go to state 168


State 122

  677 class_or_struct: "template" "struct" .

    $default  reduce using rule 677 (class_or_struct)


State 123

  676 class_or_struct: "template" "class" .

    $default  reduce using rule 676 (class_or_struct)


State 124

  680 optional_public_or_private_structure: "public" .

    $default  reduce using rule 680 (optional_public_or_private_structure)


State 125

  679 optional_public_or_private_structure: "private" .

    $default  reduce using rule 679 (optional_public_or_private_structure)


State 126

  685 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure . $@48 structure_name $@49 optional_struct_variable_declaration_list

    $default  reduce using rule 683 ($@48)

    $@48  go to state 169


State 127

  641 optional_public_or_private_variable: "public" .

    $default  reduce using rule 641 (optional_public_or_private_variable)


State 128

  640 optional_public_or_private_variable: "private" .

    $default  reduce using rule 640 (optional_public_or_private_variable)


State 129

  642 global_let: kwd_let optional_shared optional_public_or_private_variable . open_block global_variable_declaration_list close_block
  644           | kwd_let optional_shared optional_public_or_private_variable . $@41 optional_field_annotation let_variable_declaration

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    $default  reduce using rule 643 ($@41)

    open_block  go to state 170
    $@41        go to state 171


State 130

  109 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 109 (annotation_argument)


State 131

  110 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 110 (annotation_argument)


State 132

  107 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 107 (annotation_argument)


State 133

  108 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 108 (annotation_argument)


State 134

  106 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 106 (annotation_argument)


State 135

   29 string_constant: "start of the string" . character_sequence "end of the string"
   30                | "start of the string" . "end of the string"

    STRING_CHARACTER      shift, and go to state 172
    STRING_CHARACTER_ESC  shift, and go to state 173
    "end of the string"   shift, and go to state 174

    character_sequence  go to state 175


State 136

  112 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 176
    "false"                    shift, and go to state 177
    "integer constant"         shift, and go to state 178
    "floating point constant"  shift, and go to state 179
    "name"                     shift, and go to state 180
    "start of the string"      shift, and go to state 135

    string_constant                 go to state 181
    annotation_argument_value       go to state 182
    annotation_argument_value_list  go to state 183


State 137

  105 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 105 (annotation_argument)


State 138

  114 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 114 (annotation_argument_list)


State 139

   61 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 61 (expect_error)


State 140

   59 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 59 (expect_list)


State 141

   54 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 91

    $default  reduce using rule 55 (is_public_module)

    is_public_module  go to state 184


State 142

   52 require_module_name: require_module_name '/' keyword_or_name .

    $default  reduce using rule 52 (require_module_name)


State 143

   51 require_module_name: require_module_name '.' keyword_or_name .

    $default  reduce using rule 51 (require_module_name)


State 144

  653 single_alias: optional_public_or_private_alias "name" . $@42 '=' type_declaration

    $default  reduce using rule 652 ($@42)

    $@42  go to state 185


State 145

  654 alias_list: single_alias semicolon .

    $default  reduce using rule 654 (alias_list)


State 146

  246 close_block: "close scope" .

    $default  reduce using rule 246 (close_block)


State 147

  245 close_block: "end of code block" .

    $default  reduce using rule 245 (close_block)


State 148

  656 alias_declaration: "typedef" open_block alias_list close_block .

    $default  reduce using rule 656 (alias_declaration)


State 149

  655 alias_list: alias_list single_alias . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 186


State 150

  658 alias_declaration: "typedef" $@43 single_alias semicolon .

    $default  reduce using rule 658 (alias_declaration)


State 151

   18 optional_public_or_private_module: "public" .

    $default  reduce using rule 18 (optional_public_or_private_module)


State 152

   19 optional_public_or_private_module: "private" .

    $default  reduce using rule 19 (optional_public_or_private_module)


State 153

   24 module_declaration: "module" module_name optional_shared optional_public_or_private_module . optional_not_required

    '!'  shift, and go to state 187

    $default  reduce using rule 22 (optional_not_required)

    optional_not_required  go to state 188


State 154

  832 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@87 "name" . $@88 bitfield_basic_type_declaration open_block $@89 bitfield_alias_bits $@90 close_block

    $default  reduce using rule 829 ($@88)

    $@88  go to state 189


State 155

  822 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@79 "name" . $@80 open_block $@81 tuple_alias_type_list $@82 close_block

    $default  reduce using rule 819 ($@80)

    $@80  go to state 190


State 156

  827 variant_alias_declaration: "variant" optional_public_or_private_alias $@83 "name" . $@84 open_block $@85 variant_alias_type_list $@86 close_block

    $default  reduce using rule 824 ($@84)

    $@84  go to state 191


State 157

  297 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 297 (name_in_namespace)


State 158

   40 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 40 (reader_character_sequence)


State 159

   41 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   43 expr_reader: '%' name_in_namespace $@2 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 192

    $default  reduce using rule 43 (expr_reader)


State 160

  129 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 129 (annotation_declaration)


State 161

  114 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  123 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 86
    ')'  shift, and go to state 193


State 162

  126 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  126                       | annotation_declaration "&&" annotation_declaration .
  127                       | annotation_declaration . "||" annotation_declaration
  128                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 126 (annotation_declaration)


State 163

  126 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  127                       | annotation_declaration . "||" annotation_declaration
  127                       | annotation_declaration "||" annotation_declaration .
  128                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 110
    "^^"  shift, and go to state 112

    $default  reduce using rule 127 (annotation_declaration)


State 164

  126 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  127                       | annotation_declaration . "||" annotation_declaration
  128                       | annotation_declaration . "^^" annotation_declaration
  128                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 110

    $default  reduce using rule 128 (annotation_declaration)


State 165

  126 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  127                       | annotation_declaration . "||" annotation_declaration
  128                       | annotation_declaration . "^^" annotation_declaration
  132 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 110
    "||"  shift, and go to state 111
    "^^"  shift, and go to state 112

    $default  reduce using rule 132 (annotation_list)


State 166

  242 function_declaration: optional_public_or_private_function $@8 . function_declaration_header expression_block

    "operator"  shift, and go to state 194
    "bool"      shift, and go to state 195
    "string"    shift, and go to state 196
    "int"       shift, and go to state 197
    "int2"      shift, and go to state 198
    "int3"      shift, and go to state 199
    "int4"      shift, and go to state 200
    "uint"      shift, and go to state 201
    "uint2"     shift, and go to state 202
    "uint3"     shift, and go to state 203
    "uint4"     shift, and go to state 204
    "float"     shift, and go to state 205
    "float2"    shift, and go to state 206
    "float3"    shift, and go to state 207
    "float4"    shift, and go to state 208
    "range"     shift, and go to state 209
    "urange"    shift, and go to state 210
    "range64"   shift, and go to state 211
    "urange64"  shift, and go to state 212
    "int64"     shift, and go to state 213
    "uint64"    shift, and go to state 214
    "double"    shift, and go to state 215
    "int8"      shift, and go to state 216
    "uint8"     shift, and go to state 217
    "int16"     shift, and go to state 218
    "uint16"    shift, and go to state 219
    "++"        shift, and go to state 220
    "--"        shift, and go to state 221
    "name"      shift, and go to state 222

    function_name                go to state 223
    function_declaration_header  go to state 224


State 167

  662 enum_name: "name" .

    $default  reduce using rule 662 (enum_name)


State 168

  665 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name . open_block $@44 enum_list $@45 close_block
  668                 | optional_annotation_list "enum" optional_public_or_private_enum enum_name . ':' enum_basic_type_declaration open_block $@46 enum_list $@47 close_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    ':'                    shift, and go to state 225

    open_block  go to state 226


State 169

  685 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@48 . structure_name $@49 optional_struct_variable_declaration_list

    "sealed"  shift, and go to state 227

    $default  reduce using rule 671 (optional_sealed)

    optional_sealed  go to state 228
    structure_name   go to state 229


State 170

  642 global_let: kwd_let optional_shared optional_public_or_private_variable open_block . global_variable_declaration_list close_block

    $default  reduce using rule 633 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 230


State 171

  644 global_let: kwd_let optional_shared optional_public_or_private_variable $@41 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 231
    '@'   shift, and go to state 232

    $default  reduce using rule 563 (optional_field_annotation)

    metadata_argument_list     go to state 233
    optional_field_annotation  go to state 234


State 172

   25 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 25 (character_sequence)


State 173

   26 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 26 (character_sequence)


State 174

   30 string_constant: "start of the string" "end of the string" .

    $default  reduce using rule 30 (string_constant)


State 175

   27 character_sequence: character_sequence . STRING_CHARACTER
   28                   | character_sequence . STRING_CHARACTER_ESC
   29 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 235
    STRING_CHARACTER_ESC  shift, and go to state 236
    "end of the string"   shift, and go to state 237


State 176

   98 annotation_argument_value: "true" .

    $default  reduce using rule 98 (annotation_argument_value)


State 177

   99 annotation_argument_value: "false" .

    $default  reduce using rule 99 (annotation_argument_value)


State 178

   96 annotation_argument_value: "integer constant" .

    $default  reduce using rule 96 (annotation_argument_value)


State 179

   97 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 97 (annotation_argument_value)


State 180

   95 annotation_argument_value: "name" .

    $default  reduce using rule 95 (annotation_argument_value)


State 181

   94 annotation_argument_value: string_constant .

    $default  reduce using rule 94 (annotation_argument_value)


State 182

  100 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 100 (annotation_argument_value_list)


State 183

  101 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
  112 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 238
    ')'  shift, and go to state 239


State 184

   54 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 54 (require_module)


State 185

  653 single_alias: optional_public_or_private_alias "name" $@42 . '=' type_declaration

    '='  shift, and go to state 240


State 186

  655 alias_list: alias_list single_alias semicolon .

    $default  reduce using rule 655 (alias_list)


State 187

   23 optional_not_required: '!' . "inscope"

    "inscope"  shift, and go to state 241


State 188

   24 module_declaration: "module" module_name optional_shared optional_public_or_private_module optional_not_required .

    $default  reduce using rule 24 (module_declaration)


State 189

  832 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@87 "name" $@88 . bitfield_basic_type_declaration open_block $@89 bitfield_alias_bits $@90 close_block

    ':'  shift, and go to state 242

    $default  reduce using rule 736 (bitfield_basic_type_declaration)

    bitfield_basic_type_declaration  go to state 243


State 190

  822 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@79 "name" $@80 . open_block $@81 tuple_alias_type_list $@82 close_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block  go to state 244


State 191

  827 variant_alias_declaration: "variant" optional_public_or_private_alias $@83 "name" $@84 . open_block $@85 variant_alias_type_list $@86 close_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block  go to state 245


State 192

   41 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 41 (reader_character_sequence)


State 193

  123 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 123 (annotation_declaration_basic)


State 194

  141 function_name: "operator" . '!'
  142              | "operator" . '~'
  143              | "operator" . "+="
  144              | "operator" . "-="
  145              | "operator" . "*="
  146              | "operator" . "/="
  147              | "operator" . "%="
  148              | "operator" . "&="
  149              | "operator" . "|="
  150              | "operator" . "^="
  151              | "operator" . "&&="
  152              | "operator" . "||="
  153              | "operator" . "^^="
  154              | "operator" . "&&"
  155              | "operator" . "||"
  156              | "operator" . "^^"
  157              | "operator" . '+'
  158              | "operator" . '-'
  159              | "operator" . '*'
  160              | "operator" . '/'
  161              | "operator" . '%'
  162              | "operator" . '<'
  163              | "operator" . '>'
  164              | "operator" . ".."
  165              | "operator" . "=="
  166              | "operator" . "!="
  167              | "operator" . "<="
  168              | "operator" . ">="
  169              | "operator" . '&'
  170              | "operator" . '|'
  171              | "operator" . '^'
  174              | "operator" . "++"
  175              | "operator" . "--"
  176              | "operator" . "<<"
  177              | "operator" . ">>"
  178              | "operator" . "<<="
  179              | "operator" . ">>="
  180              | "operator" . "<<<"
  181              | "operator" . ">>>"
  182              | "operator" . "<<<="
  183              | "operator" . ">>>="
  184              | "operator" . '[' ']'
  185              | "operator" . "?[" ']'
  186              | "operator" . '.'
  187              | "operator" . "?."
  188              | "operator" . '.' "name"
  189              | "operator" . '.' "name" ":="
  190              | "operator" . '.' "name" "+="
  191              | "operator" . '.' "name" "-="
  192              | "operator" . '.' "name" "*="
  193              | "operator" . '.' "name" "/="
  194              | "operator" . '.' "name" "%="
  195              | "operator" . '.' "name" "&="
  196              | "operator" . '.' "name" "|="
  197              | "operator" . '.' "name" "^="
  198              | "operator" . '.' "name" "&&="
  199              | "operator" . '.' "name" "||="
  200              | "operator" . '.' "name" "^^="
  201              | "operator" . "?." "name"
  202              | "operator" . ":="
  203              | "operator" . "delete"
  204              | "operator" . "??"
  205              | "operator" . "is"
  206              | "operator" . "as"
  207              | "operator" . "is" "name"
  208              | "operator" . "as" "name"
  209              | "operator" . '?' "as"
  210              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 246
    "as"      shift, and go to state 247
    "delete"  shift, and go to state 248
    "+="      shift, and go to state 249
    "-="      shift, and go to state 250
    "/="      shift, and go to state 251
    "*="      shift, and go to state 252
    "%="      shift, and go to state 253
    "&="      shift, and go to state 254
    "|="      shift, and go to state 255
    "^="      shift, and go to state 256
    "<<"      shift, and go to state 257
    ">>"      shift, and go to state 258
    "++"      shift, and go to state 259
    "--"      shift, and go to state 260
    "<="      shift, and go to state 261
    "<<="     shift, and go to state 262
    ">>="     shift, and go to state 263
    ">="      shift, and go to state 264
    "=="      shift, and go to state 265
    "!="      shift, and go to state 266
    "??"      shift, and go to state 267
    "?."      shift, and go to state 268
    "?["      shift, and go to state 269
    ":="      shift, and go to state 270
    "<<<"     shift, and go to state 271
    ">>>"     shift, and go to state 272
    "<<<="    shift, and go to state 273
    ">>>="    shift, and go to state 274
    "&&"      shift, and go to state 275
    "||"      shift, and go to state 276
    "^^"      shift, and go to state 277
    "&&="     shift, and go to state 278
    "||="     shift, and go to state 279
    "^^="     shift, and go to state 280
    ".."      shift, and go to state 281
    '?'       shift, and go to state 282
    '|'       shift, and go to state 283
    '^'       shift, and go to state 284
    '&'       shift, and go to state 285
    '<'       shift, and go to state 286
    '>'       shift, and go to state 287
    '-'       shift, and go to state 288
    '+'       shift, and go to state 289
    '*'       shift, and go to state 290
    '/'       shift, and go to state 291
    '%'       shift, and go to state 292
    '~'       shift, and go to state 293
    '!'       shift, and go to state 294
    '.'       shift, and go to state 295
    '['       shift, and go to state 296


State 195

  211 function_name: "bool" .

    $default  reduce using rule 211 (function_name)


State 196

  212 function_name: "string" .

    $default  reduce using rule 212 (function_name)


State 197

  213 function_name: "int" .

    $default  reduce using rule 213 (function_name)


State 198

  214 function_name: "int2" .

    $default  reduce using rule 214 (function_name)


State 199

  215 function_name: "int3" .

    $default  reduce using rule 215 (function_name)


State 200

  216 function_name: "int4" .

    $default  reduce using rule 216 (function_name)


State 201

  217 function_name: "uint" .

    $default  reduce using rule 217 (function_name)


State 202

  218 function_name: "uint2" .

    $default  reduce using rule 218 (function_name)


State 203

  219 function_name: "uint3" .

    $default  reduce using rule 219 (function_name)


State 204

  220 function_name: "uint4" .

    $default  reduce using rule 220 (function_name)


State 205

  221 function_name: "float" .

    $default  reduce using rule 221 (function_name)


State 206

  222 function_name: "float2" .

    $default  reduce using rule 222 (function_name)


State 207

  223 function_name: "float3" .

    $default  reduce using rule 223 (function_name)


State 208

  224 function_name: "float4" .

    $default  reduce using rule 224 (function_name)


State 209

  225 function_name: "range" .

    $default  reduce using rule 225 (function_name)


State 210

  226 function_name: "urange" .

    $default  reduce using rule 226 (function_name)


State 211

  227 function_name: "range64" .

    $default  reduce using rule 227 (function_name)


State 212

  228 function_name: "urange64" .

    $default  reduce using rule 228 (function_name)


State 213

  229 function_name: "int64" .

    $default  reduce using rule 229 (function_name)


State 214

  230 function_name: "uint64" .

    $default  reduce using rule 230 (function_name)


State 215

  231 function_name: "double" .

    $default  reduce using rule 231 (function_name)


State 216

  232 function_name: "int8" .

    $default  reduce using rule 232 (function_name)


State 217

  233 function_name: "uint8" .

    $default  reduce using rule 233 (function_name)


State 218

  234 function_name: "int16" .

    $default  reduce using rule 234 (function_name)


State 219

  235 function_name: "uint16" .

    $default  reduce using rule 235 (function_name)


State 220

  172 function_name: "++" . "operator"

    "operator"  shift, and go to state 297


State 221

  173 function_name: "--" . "operator"

    "operator"  shift, and go to state 298


State 222

  140 function_name: "name" .

    $default  reduce using rule 140 (function_name)


State 223

  240 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 299

    $default  reduce using rule 135 (optional_function_argument_list)

    optional_function_argument_list  go to state 300


State 224

  242 function_declaration: optional_public_or_private_function $@8 function_declaration_header . expression_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block        go to state 301
    expression_block  go to state 302


State 225

  668 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' . enum_basic_type_declaration open_block $@46 enum_list $@47 close_block

    "int"     shift, and go to state 303
    "uint"    shift, and go to state 304
    "int64"   shift, and go to state 305
    "uint64"  shift, and go to state 306
    "int8"    shift, and go to state 307
    "uint8"   shift, and go to state 308
    "int16"   shift, and go to state 309
    "uint16"  shift, and go to state 310

    enum_basic_type_declaration  go to state 311


State 226

  665 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name open_block . $@44 enum_list $@45 close_block

    $default  reduce using rule 663 ($@44)

    $@44  go to state 312


State 227

  672 optional_sealed: "sealed" .

    $default  reduce using rule 672 (optional_sealed)


State 228

  673 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 313


State 229

  685 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@48 structure_name . $@49 optional_struct_variable_declaration_list

    $default  reduce using rule 684 ($@49)

    $@49  go to state 314


State 230

  634 global_variable_declaration_list: global_variable_declaration_list . "end of line"
  636                                 | global_variable_declaration_list . $@40 optional_field_annotation let_variable_declaration
  642 global_let: kwd_let optional_shared optional_public_or_private_variable open_block global_variable_declaration_list . close_block

    "close scope"        shift, and go to state 146
    "end of line"        shift, and go to state 315
    "end of code block"  shift, and go to state 147

    $default  reduce using rule 635 ($@40)

    close_block  go to state 316
    $@40         go to state 317


State 231

  564 optional_field_annotation: "[[" . annotation_argument_list ']' ']'

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 38
    annotation_argument_list  go to state 318


State 232

  115 metadata_argument_list: '@' . annotation_argument

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 319


State 233

  116 metadata_argument_list: metadata_argument_list . '@' annotation_argument
  117                       | metadata_argument_list . semicolon
  565 optional_field_annotation: metadata_argument_list .

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '@'                  shift, and go to state 320

    $default  reduce using rule 565 (optional_field_annotation)

    semicolon  go to state 321


State 234

  644 global_let: kwd_let optional_shared optional_public_or_private_variable $@41 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 322
    "name"  shift, and go to state 323

    let_variable_name_with_pos_list  go to state 324
    let_variable_declaration         go to state 325


State 235

   27 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 27 (character_sequence)


State 236

   28 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 28 (character_sequence)


State 237

   29 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 29 (string_constant)


State 238

  101 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 176
    "false"                    shift, and go to state 177
    "integer constant"         shift, and go to state 178
    "floating point constant"  shift, and go to state 179
    "name"                     shift, and go to state 180
    "start of the string"      shift, and go to state 135

    string_constant            go to state 181
    annotation_argument_value  go to state 326


State 239

  112 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 112 (annotation_argument)


State 240

  653 single_alias: optional_public_or_private_alias "name" $@42 '=' . type_declaration

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 374


State 241

   23 optional_not_required: '!' "inscope" .

    $default  reduce using rule 23 (optional_not_required)


State 242

  737 bitfield_basic_type_declaration: ':' . "uint8"
  738                                | ':' . "uint16"
  739                                | ':' . "uint"
  740                                | ':' . "uint64"

    "uint"    shift, and go to state 375
    "uint64"  shift, and go to state 376
    "uint8"   shift, and go to state 377
    "uint16"  shift, and go to state 378


State 243

  832 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@87 "name" $@88 bitfield_basic_type_declaration . open_block $@89 bitfield_alias_bits $@90 close_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block  go to state 379


State 244

  822 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@79 "name" $@80 open_block . $@81 tuple_alias_type_list $@82 close_block

    $default  reduce using rule 820 ($@81)

    $@81  go to state 380


State 245

  827 variant_alias_declaration: "variant" optional_public_or_private_alias $@83 "name" $@84 open_block . $@85 variant_alias_type_list $@86 close_block

    $default  reduce using rule 825 ($@85)

    $@85  go to state 381


State 246

  205 function_name: "operator" "is" .
  207              | "operator" "is" . "name"

    "name"  shift, and go to state 382

    $default  reduce using rule 205 (function_name)


State 247

  206 function_name: "operator" "as" .
  208              | "operator" "as" . "name"

    "name"  shift, and go to state 383

    $default  reduce using rule 206 (function_name)


State 248

  203 function_name: "operator" "delete" .

    $default  reduce using rule 203 (function_name)


State 249

  143 function_name: "operator" "+=" .

    $default  reduce using rule 143 (function_name)


State 250

  144 function_name: "operator" "-=" .

    $default  reduce using rule 144 (function_name)


State 251

  146 function_name: "operator" "/=" .

    $default  reduce using rule 146 (function_name)


State 252

  145 function_name: "operator" "*=" .

    $default  reduce using rule 145 (function_name)


State 253

  147 function_name: "operator" "%=" .

    $default  reduce using rule 147 (function_name)


State 254

  148 function_name: "operator" "&=" .

    $default  reduce using rule 148 (function_name)


State 255

  149 function_name: "operator" "|=" .

    $default  reduce using rule 149 (function_name)


State 256

  150 function_name: "operator" "^=" .

    $default  reduce using rule 150 (function_name)


State 257

  176 function_name: "operator" "<<" .

    $default  reduce using rule 176 (function_name)


State 258

  177 function_name: "operator" ">>" .

    $default  reduce using rule 177 (function_name)


State 259

  174 function_name: "operator" "++" .

    $default  reduce using rule 174 (function_name)


State 260

  175 function_name: "operator" "--" .

    $default  reduce using rule 175 (function_name)


State 261

  167 function_name: "operator" "<=" .

    $default  reduce using rule 167 (function_name)


State 262

  178 function_name: "operator" "<<=" .

    $default  reduce using rule 178 (function_name)


State 263

  179 function_name: "operator" ">>=" .

    $default  reduce using rule 179 (function_name)


State 264

  168 function_name: "operator" ">=" .

    $default  reduce using rule 168 (function_name)


State 265

  165 function_name: "operator" "==" .

    $default  reduce using rule 165 (function_name)


State 266

  166 function_name: "operator" "!=" .

    $default  reduce using rule 166 (function_name)


State 267

  204 function_name: "operator" "??" .

    $default  reduce using rule 204 (function_name)


State 268

  187 function_name: "operator" "?." .
  201              | "operator" "?." . "name"

    "name"  shift, and go to state 384

    $default  reduce using rule 187 (function_name)


State 269

  185 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 385


State 270

  202 function_name: "operator" ":=" .

    $default  reduce using rule 202 (function_name)


State 271

  180 function_name: "operator" "<<<" .

    $default  reduce using rule 180 (function_name)


State 272

  181 function_name: "operator" ">>>" .

    $default  reduce using rule 181 (function_name)


State 273

  182 function_name: "operator" "<<<=" .

    $default  reduce using rule 182 (function_name)


State 274

  183 function_name: "operator" ">>>=" .

    $default  reduce using rule 183 (function_name)


State 275

  154 function_name: "operator" "&&" .

    $default  reduce using rule 154 (function_name)


State 276

  155 function_name: "operator" "||" .

    $default  reduce using rule 155 (function_name)


State 277

  156 function_name: "operator" "^^" .

    $default  reduce using rule 156 (function_name)


State 278

  151 function_name: "operator" "&&=" .

    $default  reduce using rule 151 (function_name)


State 279

  152 function_name: "operator" "||=" .

    $default  reduce using rule 152 (function_name)


State 280

  153 function_name: "operator" "^^=" .

    $default  reduce using rule 153 (function_name)


State 281

  164 function_name: "operator" ".." .

    $default  reduce using rule 164 (function_name)


State 282

  209 function_name: "operator" '?' . "as"
  210              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 386


State 283

  170 function_name: "operator" '|' .

    $default  reduce using rule 170 (function_name)


State 284

  171 function_name: "operator" '^' .

    $default  reduce using rule 171 (function_name)


State 285

  169 function_name: "operator" '&' .

    $default  reduce using rule 169 (function_name)


State 286

  162 function_name: "operator" '<' .

    $default  reduce using rule 162 (function_name)


State 287

  163 function_name: "operator" '>' .

    $default  reduce using rule 163 (function_name)


State 288

  158 function_name: "operator" '-' .

    $default  reduce using rule 158 (function_name)


State 289

  157 function_name: "operator" '+' .

    $default  reduce using rule 157 (function_name)


State 290

  159 function_name: "operator" '*' .

    $default  reduce using rule 159 (function_name)


State 291

  160 function_name: "operator" '/' .

    $default  reduce using rule 160 (function_name)


State 292

  161 function_name: "operator" '%' .

    $default  reduce using rule 161 (function_name)


State 293

  142 function_name: "operator" '~' .

    $default  reduce using rule 142 (function_name)


State 294

  141 function_name: "operator" '!' .

    $default  reduce using rule 141 (function_name)


State 295

  186 function_name: "operator" '.' .
  188              | "operator" '.' . "name"
  189              | "operator" '.' . "name" ":="
  190              | "operator" '.' . "name" "+="
  191              | "operator" '.' . "name" "-="
  192              | "operator" '.' . "name" "*="
  193              | "operator" '.' . "name" "/="
  194              | "operator" '.' . "name" "%="
  195              | "operator" '.' . "name" "&="
  196              | "operator" '.' . "name" "|="
  197              | "operator" '.' . "name" "^="
  198              | "operator" '.' . "name" "&&="
  199              | "operator" '.' . "name" "||="
  200              | "operator" '.' . "name" "^^="

    "name"  shift, and go to state 387

    $default  reduce using rule 186 (function_name)


State 296

  184 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 388


State 297

  172 function_name: "++" "operator" .

    $default  reduce using rule 172 (function_name)


State 298

  173 function_name: "--" "operator" .

    $default  reduce using rule 173 (function_name)


State 299

  136 optional_function_argument_list: '(' . ')'
  137                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 389
    "[["  shift, and go to state 231
    ')'   shift, and go to state 390
    '@'   shift, and go to state 232

    $default  reduce using rule 563 (optional_field_annotation)

    metadata_argument_list                 go to state 233
    optional_field_annotation              go to state 391
    function_argument_declaration_no_type  go to state 392
    function_argument_declaration_type     go to state 393
    function_argument_list                 go to state 394


State 300

  240 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 395

    $default  reduce using rule 138 (optional_function_type)

    optional_function_type  go to state 396


State 301

  247 expression_block: open_block . expressions close_block
  248                 | open_block . expressions close_block "finally" open_block expressions close_block

    $default  reduce using rule 273 (expressions)

    expressions  go to state 397


State 302

  242 function_declaration: optional_public_or_private_function $@8 function_declaration_header expression_block .

    $default  reduce using rule 242 (function_declaration)


State 303

  718 enum_basic_type_declaration: "int" .

    $default  reduce using rule 718 (enum_basic_type_declaration)


State 304

  721 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 721 (enum_basic_type_declaration)


State 305

  724 enum_basic_type_declaration: "int64" .

    $default  reduce using rule 724 (enum_basic_type_declaration)


State 306

  725 enum_basic_type_declaration: "uint64" .

    $default  reduce using rule 725 (enum_basic_type_declaration)


State 307

  719 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 719 (enum_basic_type_declaration)


State 308

  722 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 722 (enum_basic_type_declaration)


State 309

  720 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 720 (enum_basic_type_declaration)


State 310

  723 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 723 (enum_basic_type_declaration)


State 311

  668 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration . open_block $@46 enum_list $@47 close_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block  go to state 398


State 312

  665 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name open_block $@44 . enum_list $@45 close_block

    $default  reduce using rule 645 (enum_list)

    enum_list  go to state 399


State 313

  673 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 400

    $default  reduce using rule 669 (optional_structure_parent)

    optional_structure_parent  go to state 401


State 314

  685 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@48 structure_name $@49 . optional_struct_variable_declaration_list

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    $default  reduce using rule 681 (optional_struct_variable_declaration_list)

    open_block                                 go to state 402
    optional_struct_variable_declaration_list  go to state 403


State 315

  634 global_variable_declaration_list: global_variable_declaration_list "end of line" .

    $default  reduce using rule 634 (global_variable_declaration_list)


State 316

  642 global_let: kwd_let optional_shared optional_public_or_private_variable open_block global_variable_declaration_list close_block .

    $default  reduce using rule 642 (global_let)


State 317

  636 global_variable_declaration_list: global_variable_declaration_list $@40 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 231
    '@'   shift, and go to state 232

    $default  reduce using rule 563 (optional_field_annotation)

    metadata_argument_list     go to state 233
    optional_field_annotation  go to state 404


State 318

  114 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  564 optional_field_annotation: "[[" annotation_argument_list . ']' ']'

    ','  shift, and go to state 86
    ']'  shift, and go to state 405


State 319

  115 metadata_argument_list: '@' annotation_argument .

    $default  reduce using rule 115 (metadata_argument_list)


State 320

  116 metadata_argument_list: metadata_argument_list '@' . annotation_argument

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 406


State 321

  117 metadata_argument_list: metadata_argument_list semicolon .

    $default  reduce using rule 117 (metadata_argument_list)


State 322

  624 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 407


State 323

  623 let_variable_name_with_pos_list: "name" .
  625                                | "name" . "aka" "name"

    "aka"  shift, and go to state 408

    $default  reduce using rule 623 (let_variable_name_with_pos_list)


State 324

  626 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  627                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  628 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options semicolon
  629                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  630                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  631                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr semicolon
  632                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 409
    ':'  shift, and go to state 410
    '&'  shift, and go to state 411

    $default  reduce using rule 621 (optional_ref)

    optional_ref  go to state 412


State 325

  644 global_let: kwd_let optional_shared optional_public_or_private_variable $@41 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 644 (global_let)


State 326

  101 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 101 (annotation_argument_value_list)


State 327

  758 type_declaration_no_options: "type" . '<' $@52 type_declaration '>' $@53

    '<'  shift, and go to state 413


State 328

  781 type_declaration_no_options: "array" . '<' $@57 type_declaration '>' $@58

    '<'  shift, and go to state 414


State 329

  784 type_declaration_no_options: "table" . '<' $@59 table_type_pair '>' $@60

    '<'  shift, and go to state 415


State 330

  759 type_declaration_no_options: "typedecl" . '(' expr ')'

    '('  shift, and go to state 416


State 331

  787 type_declaration_no_options: "iterator" . '<' $@61 type_declaration '>' $@62

    '<'  shift, and go to state 417


State 332

  777 type_declaration_no_options: "smart_ptr" . '<' $@55 type_declaration '>' $@56

    '<'  shift, and go to state 418


State 333

  691 basic_type_declaration: "bool" .

    $default  reduce using rule 691 (basic_type_declaration)


State 334

  711 basic_type_declaration: "void" .

    $default  reduce using rule 711 (basic_type_declaration)


State 335

  692 basic_type_declaration: "string" .

    $default  reduce using rule 692 (basic_type_declaration)


State 336

  727 auto_type_declaration: "auto" .
  728                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 419

    '('       [reduce using rule 727 (auto_type_declaration)]
    $default  reduce using rule 727 (auto_type_declaration)


State 337

  693 basic_type_declaration: "int" .

    $default  reduce using rule 693 (basic_type_declaration)


State 338

  697 basic_type_declaration: "int2" .

    $default  reduce using rule 697 (basic_type_declaration)


State 339

  698 basic_type_declaration: "int3" .

    $default  reduce using rule 698 (basic_type_declaration)


State 340

  699 basic_type_declaration: "int4" .

    $default  reduce using rule 699 (basic_type_declaration)


State 341

  700 basic_type_declaration: "uint" .

    $default  reduce using rule 700 (basic_type_declaration)


State 342

  717 basic_type_declaration: "bitfield" .
  743 bitfield_type_declaration: "bitfield" . bitfield_basic_type_declaration '<' $@50 bitfield_bits '>' $@51

    ':'  shift, and go to state 242

    '<'       reduce using rule 736 (bitfield_basic_type_declaration)
    $default  reduce using rule 717 (basic_type_declaration)

    bitfield_basic_type_declaration  go to state 420


State 343

  704 basic_type_declaration: "uint2" .

    $default  reduce using rule 704 (basic_type_declaration)


State 344

  705 basic_type_declaration: "uint3" .

    $default  reduce using rule 705 (basic_type_declaration)


State 345

  706 basic_type_declaration: "uint4" .

    $default  reduce using rule 706 (basic_type_declaration)


State 346

  707 basic_type_declaration: "float" .

    $default  reduce using rule 707 (basic_type_declaration)


State 347

  708 basic_type_declaration: "float2" .

    $default  reduce using rule 708 (basic_type_declaration)


State 348

  709 basic_type_declaration: "float3" .

    $default  reduce using rule 709 (basic_type_declaration)


State 349

  710 basic_type_declaration: "float4" .

    $default  reduce using rule 710 (basic_type_declaration)


State 350

  712 basic_type_declaration: "range" .

    $default  reduce using rule 712 (basic_type_declaration)


State 351

  713 basic_type_declaration: "urange" .

    $default  reduce using rule 713 (basic_type_declaration)


State 352

  714 basic_type_declaration: "range64" .

    $default  reduce using rule 714 (basic_type_declaration)


State 353

  715 basic_type_declaration: "urange64" .

    $default  reduce using rule 715 (basic_type_declaration)


State 354

  788 type_declaration_no_options: "block" .
  791                            | "block" . '<' $@63 type_declaration '>' $@64
  794                            | "block" . '<' $@65 optional_function_argument_list optional_function_type '>' $@66

    '<'  shift, and go to state 421

    $default  reduce using rule 788 (type_declaration_no_options)


State 355

  696 basic_type_declaration: "int64" .

    $default  reduce using rule 696 (basic_type_declaration)


State 356

  703 basic_type_declaration: "uint64" .

    $default  reduce using rule 703 (basic_type_declaration)


State 357

  716 basic_type_declaration: "double" .

    $default  reduce using rule 716 (basic_type_declaration)


State 358

  795 type_declaration_no_options: "function" .
  798                            | "function" . '<' $@67 type_declaration '>' $@68
  801                            | "function" . '<' $@69 optional_function_argument_list optional_function_type '>' $@70

    '<'  shift, and go to state 422

    $default  reduce using rule 795 (type_declaration_no_options)


State 359

  802 type_declaration_no_options: "lambda" .
  805                            | "lambda" . '<' $@71 type_declaration '>' $@72
  808                            | "lambda" . '<' $@73 optional_function_argument_list optional_function_type '>' $@74

    '<'  shift, and go to state 423

    $default  reduce using rule 802 (type_declaration_no_options)


State 360

  694 basic_type_declaration: "int8" .

    $default  reduce using rule 694 (basic_type_declaration)


State 361

  701 basic_type_declaration: "uint8" .

    $default  reduce using rule 701 (basic_type_declaration)


State 362

  695 basic_type_declaration: "int16" .

    $default  reduce using rule 695 (basic_type_declaration)


State 363

  702 basic_type_declaration: "uint16" .

    $default  reduce using rule 702 (basic_type_declaration)


State 364

  811 type_declaration_no_options: "tuple" . '<' $@75 tuple_type_list '>' $@76

    '<'  shift, and go to state 424


State 365

  814 type_declaration_no_options: "variant" . '<' $@77 variant_type_list '>' $@78

    '<'  shift, and go to state 425


State 366

  729 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 426


State 367

  760 type_declaration_no_options: '$' . name_in_namespace '(' optional_expr_list ')'
  762                            | '$' . name_in_namespace '<' $@54 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "::"    shift, and go to state 62
    "name"  shift, and go to state 63

    name_in_namespace  go to state 427


State 368

  726 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 726 (structure_type_declaration)


State 369

  750 type_declaration_no_options: basic_type_declaration .

    $default  reduce using rule 750 (type_declaration_no_options)


State 370

  753 type_declaration_no_options: structure_type_declaration .

    $default  reduce using rule 753 (type_declaration_no_options)


State 371

  751 type_declaration_no_options: auto_type_declaration .

    $default  reduce using rule 751 (type_declaration_no_options)


State 372

  752 type_declaration_no_options: bitfield_type_declaration .

    $default  reduce using rule 752 (type_declaration_no_options)


State 373

  754 type_declaration_no_options: type_declaration_no_options . dim_list
  755                            | type_declaration_no_options . '[' ']'
  763                            | type_declaration_no_options . '-' '[' ']'
  764                            | type_declaration_no_options . "explicit"
  765                            | type_declaration_no_options . "const"
  766                            | type_declaration_no_options . '-' "const"
  767                            | type_declaration_no_options . '&'
  768                            | type_declaration_no_options . '-' '&'
  769                            | type_declaration_no_options . '#'
  770                            | type_declaration_no_options . "implicit"
  771                            | type_declaration_no_options . '-' '#'
  772                            | type_declaration_no_options . "==" "const"
  773                            | type_declaration_no_options . "==" '&'
  774                            | type_declaration_no_options . '?'
  778                            | type_declaration_no_options . "??"
  815 type_declaration: type_declaration_no_options .

    "const"     shift, and go to state 428
    "implicit"  shift, and go to state 429
    "explicit"  shift, and go to state 430
    "=="        shift, and go to state 431
    "??"        shift, and go to state 432
    '?'         shift, and go to state 433
    '&'         shift, and go to state 434
    '-'         shift, and go to state 435
    '['         shift, and go to state 436
    '#'         shift, and go to state 437

    '-'       [reduce using rule 815 (type_declaration)]
    '['       [reduce using rule 815 (type_declaration)]
    $default  reduce using rule 815 (type_declaration)

    dim_list  go to state 438


State 374

  653 single_alias: optional_public_or_private_alias "name" $@42 '=' type_declaration .
  816 type_declaration: type_declaration . '|' type_declaration_no_options
  817                 | type_declaration . '|' '#'

    '|'  shift, and go to state 439

    $default  reduce using rule 653 (single_alias)


State 375

  739 bitfield_basic_type_declaration: ':' "uint" .

    $default  reduce using rule 739 (bitfield_basic_type_declaration)


State 376

  740 bitfield_basic_type_declaration: ':' "uint64" .

    $default  reduce using rule 740 (bitfield_basic_type_declaration)


State 377

  737 bitfield_basic_type_declaration: ':' "uint8" .

    $default  reduce using rule 737 (bitfield_basic_type_declaration)


State 378

  738 bitfield_basic_type_declaration: ':' "uint16" .

    $default  reduce using rule 738 (bitfield_basic_type_declaration)


State 379

  832 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@87 "name" $@88 bitfield_basic_type_declaration open_block . $@89 bitfield_alias_bits $@90 close_block

    $default  reduce using rule 830 ($@89)

    $@89  go to state 440


State 380

  822 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@79 "name" $@80 open_block $@81 . tuple_alias_type_list $@82 close_block

    $default  reduce using rule 600 (tuple_alias_type_list)

    tuple_alias_type_list  go to state 441


State 381

  827 variant_alias_declaration: "variant" optional_public_or_private_alias $@83 "name" $@84 open_block $@85 . variant_alias_type_list $@86 close_block

    $default  reduce using rule 606 (variant_alias_type_list)

    variant_alias_type_list  go to state 442


State 382

  207 function_name: "operator" "is" "name" .

    $default  reduce using rule 207 (function_name)


State 383

  208 function_name: "operator" "as" "name" .

    $default  reduce using rule 208 (function_name)


State 384

  201 function_name: "operator" "?." "name" .

    $default  reduce using rule 201 (function_name)


State 385

  185 function_name: "operator" "?[" ']' .

    $default  reduce using rule 185 (function_name)


State 386

  209 function_name: "operator" '?' "as" .
  210              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 443

    $default  reduce using rule 209 (function_name)


State 387

  188 function_name: "operator" '.' "name" .
  189              | "operator" '.' "name" . ":="
  190              | "operator" '.' "name" . "+="
  191              | "operator" '.' "name" . "-="
  192              | "operator" '.' "name" . "*="
  193              | "operator" '.' "name" . "/="
  194              | "operator" '.' "name" . "%="
  195              | "operator" '.' "name" . "&="
  196              | "operator" '.' "name" . "|="
  197              | "operator" '.' "name" . "^="
  198              | "operator" '.' "name" . "&&="
  199              | "operator" '.' "name" . "||="
  200              | "operator" '.' "name" . "^^="

    "+="   shift, and go to state 444
    "-="   shift, and go to state 445
    "/="   shift, and go to state 446
    "*="   shift, and go to state 447
    "%="   shift, and go to state 448
    "&="   shift, and go to state 449
    "|="   shift, and go to state 450
    "^="   shift, and go to state 451
    ":="   shift, and go to state 452
    "&&="  shift, and go to state 453
    "||="  shift, and go to state 454
    "^^="  shift, and go to state 455

    $default  reduce using rule 188 (function_name)


State 388

  184 function_name: "operator" '[' ']' .

    $default  reduce using rule 184 (function_name)


State 389

  590 function_argument_declaration_type: "$a" . '(' expr ')'

    '('  shift, and go to state 456


State 390

  136 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 136 (optional_function_argument_list)


State 391

  588 function_argument_declaration_no_type: optional_field_annotation . kwd_let_var_or_nothing variable_declaration_no_type
  589 function_argument_declaration_type: optional_field_annotation . kwd_let_var_or_nothing variable_declaration_type

    "let"  shift, and go to state 457
    "var"  shift, and go to state 458

    $default  reduce using rule 327 (kwd_let_var_or_nothing)

    kwd_let_var_or_nothing  go to state 459


State 392

  591 function_argument_list: function_argument_declaration_no_type .
  593                       | function_argument_declaration_no_type . semicolon function_argument_list

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 591 (function_argument_list)

    semicolon  go to state 460


State 393

  592 function_argument_list: function_argument_declaration_type .
  594                       | function_argument_declaration_type . semicolon function_argument_list
  595                       | function_argument_declaration_type . ',' function_argument_list

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 461

    $default  reduce using rule 592 (function_argument_list)

    semicolon  go to state 462


State 394

  137 optional_function_argument_list: '(' function_argument_list . ')'

    ')'  shift, and go to state 463


State 395

  139 optional_function_type: ':' . type_declaration

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 464


State 396

  240 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 240 (function_declaration_header)


State 397

  247 expression_block: open_block expressions . close_block
  248                 | open_block expressions . close_block "finally" open_block expressions close_block
  274 expressions: expressions . expression_any
  275            | expressions . error

    error                             shift, and go to state 465
    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 468
    "if"                              shift, and go to state 469
    "static_if"                       shift, and go to state 470
    "for"                             shift, and go to state 471
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "return"                          shift, and go to state 478
    "null"                            shift, and go to state 479
    "break"                           shift, and go to state 480
    "try"                             shift, and go to state 481
    "table"                           shift, and go to state 482
    "delete"                          shift, and go to state 483
    "deref"                           shift, and go to state 484
    "typedef"                         shift, and go to state 485
    "with"                            shift, and go to state 486
    "assume"                          shift, and go to state 487
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 490
    "continue"                        shift, and go to state 491
    "pass"                            shift, and go to state 492
    "reinterpret"                     shift, and go to state 493
    "label"                           shift, and go to state 494
    "goto"                            shift, and go to state 495
    "unsafe"                          shift, and go to state 496
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 502
    "yield"                           shift, and go to state 503
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "$ <|"                            shift, and go to state 506
    "@ <|"                            shift, and go to state 507
    "@@ <|"                           shift, and go to state 508
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "close scope"                     shift, and go to state 146
    "end of line"                     shift, and go to state 13
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 526
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    "end of code block"               shift, and go to state 147
    "end of expression"               shift, and go to state 14
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder             go to state 539
    expr_reader                go to state 540
    expression_label           go to state 541
    expression_goto            go to state 542
    semicolon                  go to state 543
    if_or_static_if            go to state 544
    expression_if_one_liner    go to state 545
    expression_if_then_else    go to state 546
    expression_for_loop        go to state 547
    expression_unsafe          go to state 548
    expression_while_loop      go to state 549
    expression_with            go to state 550
    expression_with_alias      go to state 551
    close_block                go to state 552
    expr_call_pipe             go to state 553
    expression_any             go to state 554
    expr_keyword               go to state 555
    expression_keyword         go to state 556
    expr_pipe                  go to state 557
    name_in_namespace          go to state 558
    expression_delete          go to state 559
    expr_new                   go to state 560
    expression_break           go to state 561
    expression_continue        go to state 562
    expression_return_no_pipe  go to state 563
    expression_return          go to state 564
    expression_yield_no_pipe   go to state 565
    expression_yield           go to state 566
    expression_try_catch       go to state 567
    kwd_let                    go to state 568
    expression_let             go to state 569
    expr_cast                  go to state 570
    expr_type_decl             go to state 571
    expr_type_info             go to state 572
    block_or_lambda            go to state 573
    expr_full_block            go to state 574
    expr_numeric_const         go to state 575
    expr_assign                go to state 576
    expr_assign_pipe           go to state 577
    expr_named_call            go to state 578
    expr_method_call           go to state 579
    func_addr_expr             go to state 580
    expr_field                 go to state 581
    expr_call                  go to state 582
    expr                       go to state 583
    expr_mtag                  go to state 584
    basic_type_declaration     go to state 585
    make_decl                  go to state 586
    make_struct_decl           go to state 587
    make_tuple_call            go to state 588
    make_dim_decl              go to state 589
    make_table_decl            go to state 590
    array_comprehension        go to state 591


State 398

  668 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration open_block . $@46 enum_list $@47 close_block

    $default  reduce using rule 666 ($@46)

    $@46  go to state 592


State 399

  646 enum_list: enum_list . semicolon
  647          | enum_list . "name" semicolon
  648          | enum_list . "name" '=' expr semicolon
  665 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name open_block $@44 enum_list . $@45 close_block

    "end of line"        shift, and go to state 13
    "name"               shift, and go to state 593
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 664 ($@45)

    semicolon  go to state 594
    $@45       go to state 595


State 400

  670 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 62
    "name"  shift, and go to state 63

    name_in_namespace  go to state 596


State 401

  673 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 673 (structure_name)


State 402

  682 optional_struct_variable_declaration_list: open_block . struct_variable_declaration_list close_block

    $default  reduce using rule 577 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 597


State 403

  685 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@48 structure_name $@49 optional_struct_variable_declaration_list .

    $default  reduce using rule 685 (structure_declaration)


State 404

  636 global_variable_declaration_list: global_variable_declaration_list $@40 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 322
    "name"  shift, and go to state 323

    let_variable_name_with_pos_list  go to state 324
    let_variable_declaration         go to state 598


State 405

  564 optional_field_annotation: "[[" annotation_argument_list ']' . ']'

    ']'  shift, and go to state 599


State 406

  116 metadata_argument_list: metadata_argument_list '@' annotation_argument .

    $default  reduce using rule 116 (metadata_argument_list)


State 407

  624 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 604
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 408

  625 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 605


State 409

  626 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  627                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 606


State 410

  628 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options semicolon
  629                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr semicolon
  630                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr_pipe

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 607


State 411

  622 optional_ref: '&' .

    $default  reduce using rule 622 (optional_ref)


State 412

  631 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr semicolon
  632                         | let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 608
    ":="  shift, and go to state 609
    '='   shift, and go to state 610

    copy_or_move_or_clone  go to state 611


State 413

  758 type_declaration_no_options: "type" '<' . $@52 type_declaration '>' $@53

    $default  reduce using rule 756 ($@52)

    $@52  go to state 612


State 414

  781 type_declaration_no_options: "array" '<' . $@57 type_declaration '>' $@58

    $default  reduce using rule 779 ($@57)

    $@57  go to state 613


State 415

  784 type_declaration_no_options: "table" '<' . $@59 table_type_pair '>' $@60

    $default  reduce using rule 782 ($@59)

    $@59  go to state 614


State 416

  759 type_declaration_no_options: "typedecl" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 615
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 417

  787 type_declaration_no_options: "iterator" '<' . $@61 type_declaration '>' $@62

    $default  reduce using rule 785 ($@61)

    $@61  go to state 616


State 418

  777 type_declaration_no_options: "smart_ptr" '<' . $@55 type_declaration '>' $@56

    $default  reduce using rule 775 ($@55)

    $@55  go to state 617


State 419

  728 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 618


State 420

  743 bitfield_type_declaration: "bitfield" bitfield_basic_type_declaration . '<' $@50 bitfield_bits '>' $@51

    '<'  shift, and go to state 619


State 421

  791 type_declaration_no_options: "block" '<' . $@63 type_declaration '>' $@64
  794                            | "block" '<' . $@65 optional_function_argument_list optional_function_type '>' $@66

    ':'       reduce using rule 792 ($@65)
    '>'       reduce using rule 792 ($@65)
    '('       reduce using rule 792 ($@65)
    $default  reduce using rule 789 ($@63)

    $@63  go to state 620
    $@65  go to state 621


State 422

  798 type_declaration_no_options: "function" '<' . $@67 type_declaration '>' $@68
  801                            | "function" '<' . $@69 optional_function_argument_list optional_function_type '>' $@70

    ':'       reduce using rule 799 ($@69)
    '>'       reduce using rule 799 ($@69)
    '('       reduce using rule 799 ($@69)
    $default  reduce using rule 796 ($@67)

    $@67  go to state 622
    $@69  go to state 623


State 423

  805 type_declaration_no_options: "lambda" '<' . $@71 type_declaration '>' $@72
  808                            | "lambda" '<' . $@73 optional_function_argument_list optional_function_type '>' $@74

    ':'       reduce using rule 806 ($@73)
    '>'       reduce using rule 806 ($@73)
    '('       reduce using rule 806 ($@73)
    $default  reduce using rule 803 ($@71)

    $@71  go to state 624
    $@73  go to state 625


State 424

  811 type_declaration_no_options: "tuple" '<' . $@75 tuple_type_list '>' $@76

    $default  reduce using rule 809 ($@75)

    $@75  go to state 626


State 425

  814 type_declaration_no_options: "variant" '<' . $@77 variant_type_list '>' $@78

    $default  reduce using rule 812 ($@77)

    $@77  go to state 627


State 426

  729 auto_type_declaration: "$t" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 628
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 427

  760 type_declaration_no_options: '$' name_in_namespace . '(' optional_expr_list ')'
  762                            | '$' name_in_namespace . '<' $@54 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    '<'  shift, and go to state 629
    '('  shift, and go to state 630


State 428

  765 type_declaration_no_options: type_declaration_no_options "const" .

    $default  reduce using rule 765 (type_declaration_no_options)


State 429

  770 type_declaration_no_options: type_declaration_no_options "implicit" .

    $default  reduce using rule 770 (type_declaration_no_options)


State 430

  764 type_declaration_no_options: type_declaration_no_options "explicit" .

    $default  reduce using rule 764 (type_declaration_no_options)


State 431

  772 type_declaration_no_options: type_declaration_no_options "==" . "const"
  773                            | type_declaration_no_options "==" . '&'

    "const"  shift, and go to state 631
    '&'      shift, and go to state 632


State 432

  778 type_declaration_no_options: type_declaration_no_options "??" .

    $default  reduce using rule 778 (type_declaration_no_options)


State 433

  774 type_declaration_no_options: type_declaration_no_options '?' .

    $default  reduce using rule 774 (type_declaration_no_options)


State 434

  767 type_declaration_no_options: type_declaration_no_options '&' .

    $default  reduce using rule 767 (type_declaration_no_options)


State 435

  763 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  766                            | type_declaration_no_options '-' . "const"
  768                            | type_declaration_no_options '-' . '&'
  771                            | type_declaration_no_options '-' . '#'

    "const"  shift, and go to state 633
    '&'      shift, and go to state 634
    '['      shift, and go to state 635
    '#'      shift, and go to state 636


State 436

  748 dim_list: '[' . expr ']'
  755 type_declaration_no_options: type_declaration_no_options '[' . ']'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    ']'                               shift, and go to state 637
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 638
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 437

  769 type_declaration_no_options: type_declaration_no_options '#' .

    $default  reduce using rule 769 (type_declaration_no_options)


State 438

  749 dim_list: dim_list . '[' expr ']'
  754 type_declaration_no_options: type_declaration_no_options dim_list .

    '['  shift, and go to state 639

    '['       [reduce using rule 754 (type_declaration_no_options)]
    $default  reduce using rule 754 (type_declaration_no_options)


State 439

  816 type_declaration: type_declaration '|' . type_declaration_no_options
  817                 | type_declaration '|' . '#'

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367
    '#'          shift, and go to state 640

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 641


State 440

  832 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@87 "name" $@88 bitfield_basic_type_declaration open_block $@89 . bitfield_alias_bits $@90 close_block

    $default  reduce using rule 732 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 642


State 441

  601 tuple_alias_type_list: tuple_alias_type_list . c_or_s
  602                      | tuple_alias_type_list . tuple_type c_or_s
  822 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@79 "name" $@80 open_block $@81 tuple_alias_type_list . $@82 close_block

    "type"               shift, and go to state 327
    "array"              shift, and go to state 328
    "table"              shift, and go to state 329
    "typedecl"           shift, and go to state 330
    "iterator"           shift, and go to state 331
    "smart_ptr"          shift, and go to state 332
    "bool"               shift, and go to state 333
    "void"               shift, and go to state 334
    "string"             shift, and go to state 335
    "auto"               shift, and go to state 336
    "int"                shift, and go to state 337
    "int2"               shift, and go to state 338
    "int3"               shift, and go to state 339
    "int4"               shift, and go to state 340
    "uint"               shift, and go to state 341
    "bitfield"           shift, and go to state 342
    "uint2"              shift, and go to state 343
    "uint3"              shift, and go to state 344
    "uint4"              shift, and go to state 345
    "float"              shift, and go to state 346
    "float2"             shift, and go to state 347
    "float3"             shift, and go to state 348
    "float4"             shift, and go to state 349
    "range"              shift, and go to state 350
    "urange"             shift, and go to state 351
    "range64"            shift, and go to state 352
    "urange64"           shift, and go to state 353
    "block"              shift, and go to state 354
    "int64"              shift, and go to state 355
    "uint64"             shift, and go to state 356
    "double"             shift, and go to state 357
    "function"           shift, and go to state 358
    "lambda"             shift, and go to state 359
    "int8"               shift, and go to state 360
    "uint8"              shift, and go to state 361
    "int16"              shift, and go to state 362
    "uint16"             shift, and go to state 363
    "tuple"              shift, and go to state 364
    "variant"            shift, and go to state 365
    "::"                 shift, and go to state 62
    "$t"                 shift, and go to state 366
    "end of line"        shift, and go to state 13
    "name"               shift, and go to state 643
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 644
    '$'                  shift, and go to state 367

    $default  reduce using rule 821 ($@82)

    semicolon                    go to state 645
    name_in_namespace            go to state 368
    tuple_type                   go to state 646
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    c_or_s                       go to state 647
    type_declaration_no_options  go to state 373
    type_declaration             go to state 648
    $@82                         go to state 649


State 442

  607 variant_alias_type_list: variant_alias_type_list . c_or_s
  608                        | variant_alias_type_list . variant_type c_or_s
  827 variant_alias_declaration: "variant" optional_public_or_private_alias $@83 "name" $@84 open_block $@85 variant_alias_type_list . $@86 close_block

    "end of line"        shift, and go to state 13
    "name"               shift, and go to state 650
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 644

    $default  reduce using rule 826 ($@86)

    semicolon     go to state 645
    variant_type  go to state 651
    c_or_s        go to state 652
    $@86          go to state 653


State 443

  210 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 210 (function_name)


State 444

  190 function_name: "operator" '.' "name" "+=" .

    $default  reduce using rule 190 (function_name)


State 445

  191 function_name: "operator" '.' "name" "-=" .

    $default  reduce using rule 191 (function_name)


State 446

  193 function_name: "operator" '.' "name" "/=" .

    $default  reduce using rule 193 (function_name)


State 447

  192 function_name: "operator" '.' "name" "*=" .

    $default  reduce using rule 192 (function_name)


State 448

  194 function_name: "operator" '.' "name" "%=" .

    $default  reduce using rule 194 (function_name)


State 449

  195 function_name: "operator" '.' "name" "&=" .

    $default  reduce using rule 195 (function_name)


State 450

  196 function_name: "operator" '.' "name" "|=" .

    $default  reduce using rule 196 (function_name)


State 451

  197 function_name: "operator" '.' "name" "^=" .

    $default  reduce using rule 197 (function_name)


State 452

  189 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 189 (function_name)


State 453

  198 function_name: "operator" '.' "name" "&&=" .

    $default  reduce using rule 198 (function_name)


State 454

  199 function_name: "operator" '.' "name" "||=" .

    $default  reduce using rule 199 (function_name)


State 455

  200 function_name: "operator" '.' "name" "^^=" .

    $default  reduce using rule 200 (function_name)


State 456

  590 function_argument_declaration_type: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 654
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 457

  325 kwd_let_var_or_nothing: "let" .

    $default  reduce using rule 325 (kwd_let_var_or_nothing)


State 458

  326 kwd_let_var_or_nothing: "var" .

    $default  reduce using rule 326 (kwd_let_var_or_nothing)


State 459

  588 function_argument_declaration_no_type: optional_field_annotation kwd_let_var_or_nothing . variable_declaration_no_type
  589 function_argument_declaration_type: optional_field_annotation kwd_let_var_or_nothing . variable_declaration_type

    "$i"    shift, and go to state 655
    "name"  shift, and go to state 656

    variable_declaration_no_type  go to state 657
    variable_declaration_type     go to state 658
    variable_name_with_pos_list   go to state 659


State 460

  593 function_argument_list: function_argument_declaration_no_type semicolon . function_argument_list

    "$a"  shift, and go to state 389
    "[["  shift, and go to state 231
    '@'   shift, and go to state 232

    $default  reduce using rule 563 (optional_field_annotation)

    metadata_argument_list                 go to state 233
    optional_field_annotation              go to state 391
    function_argument_declaration_no_type  go to state 392
    function_argument_declaration_type     go to state 393
    function_argument_list                 go to state 660


State 461

  595 function_argument_list: function_argument_declaration_type ',' . function_argument_list

    "$a"  shift, and go to state 389
    "[["  shift, and go to state 231
    '@'   shift, and go to state 232

    $default  reduce using rule 563 (optional_field_annotation)

    metadata_argument_list                 go to state 233
    optional_field_annotation              go to state 391
    function_argument_declaration_no_type  go to state 392
    function_argument_declaration_type     go to state 393
    function_argument_list                 go to state 661


State 462

  594 function_argument_list: function_argument_declaration_type semicolon . function_argument_list

    "$a"  shift, and go to state 389
    "[["  shift, and go to state 231
    '@'   shift, and go to state 232

    $default  reduce using rule 563 (optional_field_annotation)

    metadata_argument_list                 go to state 233
    optional_field_annotation              go to state 391
    function_argument_declaration_no_type  go to state 392
    function_argument_declaration_type     go to state 393
    function_argument_list                 go to state 662


State 463

  137 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 137 (optional_function_argument_list)


State 464

  139 optional_function_type: ':' type_declaration .
  816 type_declaration: type_declaration . '|' type_declaration_no_options
  817                 | type_declaration . '|' '#'

    '|'  shift, and go to state 439

    $default  reduce using rule 139 (optional_function_type)


State 465

  275 expressions: expressions error .

    $default  reduce using rule 275 (expressions)


State 466

  881 make_struct_decl: "struct" . '<' $@91 type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 663


State 467

  884 make_struct_decl: "class" . '<' $@93 type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 664


State 468

   88 expression_while_loop: "while" . expr expression_block

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 665
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 469

   72 if_or_static_if: "if" .

    $default  reduce using rule 72 (if_or_static_if)


State 470

   73 if_or_static_if: "static_if" .

    $default  reduce using rule 73 (if_or_static_if)


State 471

   86 expression_for_loop: "for" . $@5 variable_name_with_pos_list "in" expr_list expression_block

    $default  reduce using rule 85 ($@5)

    $@5  go to state 666


State 472

  468 expr: "true" .

    $default  reduce using rule 468 (expr)


State 473

  469 expr: "false" .

    $default  reduce using rule 469 (expr)


State 474

  305 expr_new: "new" . new_type_declaration
  306         | "new" . new_type_declaration '(' use_initializer ')'
  307         | "new" . new_type_declaration '(' expr_list ')'
  308         | "new" . new_type_declaration '(' make_struct_single ')'
  309         | "new" . new_type_declaration '(' "uninitialized" make_struct_single ')'
  310         | "new" . make_decl

    "struct"               shift, and go to state 466
    "class"                shift, and go to state 467
    "array"                shift, and go to state 477
    "table"                shift, and go to state 482
    "fixed_array"          shift, and go to state 497
    "default"              shift, and go to state 498
    "tuple"                shift, and go to state 500
    "variant"              shift, and go to state 501
    "::"                   shift, and go to state 62
    "[["                   shift, and go to state 516
    "[{"                   shift, and go to state 517
    "{{"                   shift, and go to state 518
    "name"                 shift, and go to state 63
    "begin of code block"  shift, and go to state 529
    '<'                    shift, and go to state 667
    '['                    shift, and go to state 535

    name_in_namespace           go to state 368
    new_type_declaration        go to state 668
    structure_type_declaration  go to state 669
    make_decl                   go to state 670
    make_struct_decl            go to state 587
    make_tuple_call             go to state 588
    make_dim_decl               go to state 589
    make_table_decl             go to state 590
    array_comprehension         go to state 591


State 475

  356 expr_type_info: "typeinfo" . '(' name_in_namespace expr ')'
  357               | "typeinfo" . '(' name_in_namespace '<' "name" '>' expr ')'
  358               | "typeinfo" . '(' name_in_namespace '<' "name" c_or_s "name" '>' expr ')'
  359               | "typeinfo" . name_in_namespace '(' expr ')'
  360               | "typeinfo" . name_in_namespace '<' "name" '>' '(' expr ')'
  361               | "typeinfo" . name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr ')'

    "::"    shift, and go to state 62
    "name"  shift, and go to state 63
    '('     shift, and go to state 671

    name_in_namespace  go to state 672


State 476

  355 expr_type_decl: "type" . '<' $@21 type_declaration '>' $@22

    '<'  shift, and go to state 673


State 477

  907 make_dim_decl: "array" . "struct" '<' $@101 type_declaration_no_options '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'
  910              | "array" . "tuple" '<' $@103 tuple_type_list '>' $@104 '(' use_initializer optional_make_struct_dim_decl ')'
  913              | "array" . "variant" '<' $@105 variant_type_list '>' $@106 '(' make_variant_dim ')'
  914              | "array" . '(' expr_list optional_comma ')'
  917              | "array" . '<' $@107 type_declaration_no_options '>' $@108 '(' optional_expr_list ')'

    "struct"   shift, and go to state 674
    "tuple"    shift, and go to state 675
    "variant"  shift, and go to state 676
    '<'        shift, and go to state 677
    '('        shift, and go to state 678


State 478

  313 expression_return_no_pipe: "return" .
  314                          | "return" . expr_list
  315                          | "return" . "<-" expr_list
  317 expression_return: "return" . expr_pipe
  318                  | "return" . "<-" expr_pipe

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 502
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "<-"                              shift, and go to state 679
    "$ <|"                            shift, and go to state 506
    "@ <|"                            shift, and go to state 507
    "@@ <|"                           shift, and go to state 508
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    $default  reduce using rule 313 (expression_return_no_pipe)

    string_builder          go to state 539
    expr_reader             go to state 540
    expr_call_pipe          go to state 553
    expression_keyword      go to state 556
    expr_pipe               go to state 680
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    expr_list               go to state 681
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_assign             go to state 682
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 683
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 479

  462 expr: "null" .

    $default  reduce using rule 462 (expr)


State 480

  311 expression_break: "break" .

    $default  reduce using rule 311 (expression_break)


State 481

  324 expression_try_catch: "try" . expression_block "recover" expression_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block        go to state 301
    expression_block  go to state 684


State 482

  928 make_table_decl: "table" . '(' optional_expr_map_tuple_list ')'
  929                | "table" . '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  930                | "table" . '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    '<'  shift, and go to state 685
    '('  shift, and go to state 686


State 483

  299 expression_delete: "delete" . expr
  300                  | "delete" . "explicit" expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "explicit"                        shift, and go to state 687
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 688
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 484

  513 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 689


State 485

   93 expression_with_alias: "typedef" . $@7 "name" '=' type_declaration

    $default  reduce using rule 92 ($@7)

    $@7  go to state 690


State 486

   89 expression_with: "with" . expr expression_block

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 691
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 487

   91 expression_with_alias: "assume" . "name" '=' $@6 expr

    "name"  shift, and go to state 692


State 488

  346 expr_cast: "cast" . '<' $@15 type_declaration_no_options '>' $@16 expr

    '<'  shift, and go to state 693


State 489

  349 expr_cast: "upcast" . '<' $@17 type_declaration_no_options '>' $@18 expr

    '<'  shift, and go to state 694


State 490

  514 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 695


State 491

  312 expression_continue: "continue" .

    $default  reduce using rule 312 (expression_continue)


State 492

  272 expression_any: "pass" . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 696


State 493

  352 expr_cast: "reinterpret" . '<' $@19 type_declaration_no_options '>' $@20 expr

    '<'  shift, and go to state 697


State 494

   62 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 698


State 495

   63 expression_goto: "goto" . "label" "integer constant"
   64                | "goto" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "label"                           shift, and go to state 699
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 700
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 496

   87 expression_unsafe: "unsafe" . expression_block
  545 expr: "unsafe" . '(' expr ')'

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '('                    shift, and go to state 701

    open_block        go to state 301
    expression_block  go to state 702


State 497

  918 make_dim_decl: "fixed_array" . '(' expr_list optional_comma ')'
  921              | "fixed_array" . '<' $@109 type_declaration_no_options '>' $@110 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 703
    '('  shift, and go to state 704


State 498

  890 make_struct_decl: "default" . '<' $@97 type_declaration_no_options '>' $@98 use_initializer

    '<'  shift, and go to state 705


State 499

  717 basic_type_declaration: "bitfield" .

    $default  reduce using rule 717 (basic_type_declaration)


State 500

  896 make_tuple_call: "tuple" . '(' expr_list optional_comma ')'
  899                | "tuple" . '<' $@99 tuple_type_list '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 706
    '('  shift, and go to state 707


State 501

  887 make_struct_decl: "variant" . '<' $@95 variant_type_list '>' $@96 '(' use_initializer make_variant_dim ')'

    '<'  shift, and go to state 708


State 502

  251 expr_call_pipe: "generator" . '<' type_declaration_no_options '>' optional_capture_list expr_full_block_assumed_piped
  515 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  516     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 709


State 503

  319 expression_yield_no_pipe: "yield" . expr
  320                         | "yield" . "<-" expr
  322 expression_yield: "yield" . expr_pipe
  323                 | "yield" . "<-" expr_pipe

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 502
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "<-"                              shift, and go to state 710
    "$ <|"                            shift, and go to state 506
    "@ <|"                            shift, and go to state 507
    "@@ <|"                           shift, and go to state 508
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expr_call_pipe          go to state 553
    expression_keyword      go to state 556
    expr_pipe               go to state 711
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_assign             go to state 682
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 712
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 504

  498 expr: "++" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 713
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 505

  499 expr: "--" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 714
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 506

  294 expr_pipe: "$ <|" . expr_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '$'                    shift, and go to state 537
    '@'                    shift, and go to state 715

    open_block        go to state 301
    expression_block  go to state 716
    block_or_lambda   go to state 717
    expr_block        go to state 718


State 507

  292 expr_pipe: "@ <|" . expr_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '$'                    shift, and go to state 537
    '@'                    shift, and go to state 715

    open_block        go to state 301
    expression_block  go to state 716
    block_or_lambda   go to state 717
    expr_block        go to state 719


State 508

  293 expr_pipe: "@@ <|" . expr_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '$'                    shift, and go to state 537
    '@'                    shift, and go to state 715

    open_block        go to state 301
    expression_block  go to state 716
    block_or_lambda   go to state 717
    expr_block        go to state 720


State 509

  547 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 721


State 510

  548 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 722


State 511

  549 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 723


State 512

  550 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 724


State 513

  551 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 725


State 514

  553 expr_mtag: "$c" . '(' expr ')' '(' ')'
  554          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 726


State 515

  552 expr_mtag: "..." .

    $default  reduce using rule 552 (expr_mtag)


State 516

  873 make_struct_decl: "[[" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  874                 | "[[" . type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  875                 | "[[" . type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  876                 | "[[" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  903 make_dim_decl: "[[" . type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  937 array_comprehension: "[[" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']'

    "for"        shift, and go to state 727
    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 728


State 517

  877 make_struct_decl: "[{" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  878                 | "[{" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  904 make_dim_decl: "[{" . type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr
  938 array_comprehension: "[{" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "for"        shift, and go to state 729
    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 730


State 518

  927 make_table_decl: "{{" . make_table optional_trailing_semicolon_cur_cur
  940 array_comprehension: "{{" . "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "for"                             shift, and go to state 731
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 732
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_map_tuple          go to state 733
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table              go to state 734
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 519

  385 expr_numeric_const: "integer constant" .

    $default  reduce using rule 385 (expr_numeric_const)


State 520

  387 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 387 (expr_numeric_const)


State 521

  386 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 386 (expr_numeric_const)


State 522

  388 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 388 (expr_numeric_const)


State 523

  389 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 389 (expr_numeric_const)


State 524

  390 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 390 (expr_numeric_const)


State 525

  391 expr_numeric_const: "double constant" .

    $default  reduce using rule 391 (expr_numeric_const)


State 526

  276 expr_keyword: "keyword" . expr expression_block
  287 expression_keyword: "keyword" . '<' $@9 type_declaration_no_options_list '>' $@10 expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '<'                               shift, and go to state 735
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 736
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 527

  290 expression_keyword: "type function" . '<' $@11 type_declaration_no_options_list '>' $@12 optional_expr_list_in_braces

    '<'  shift, and go to state 737


State 528

   39 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 36 (string_builder_body)

    string_builder_body  go to state 738


State 529

  926 make_table_decl: "begin of code block" . optional_expr_map_tuple_list "end of code block"
  939 array_comprehension: "begin of code block" . "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "for"                             shift, and go to state 739
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    $default  reduce using rule 281 (optional_expr_map_tuple_list)

    string_builder                go to state 539
    expr_reader                   go to state 540
    optional_expr_map_tuple_list  go to state 740
    expression_keyword            go to state 603
    name_in_namespace             go to state 558
    expr_new                      go to state 560
    expr_cast                     go to state 570
    expr_type_decl                go to state 571
    expr_type_info                go to state 572
    block_or_lambda               go to state 573
    expr_full_block               go to state 574
    expr_numeric_const            go to state 575
    expr_named_call               go to state 578
    expr_method_call              go to state 579
    func_addr_expr                go to state 580
    expr_field                    go to state 581
    expr_call                     go to state 582
    expr                          go to state 732
    expr_mtag                     go to state 584
    basic_type_declaration        go to state 585
    make_decl                     go to state 586
    make_struct_decl              go to state 587
    make_map_tuple                go to state 741
    make_tuple_call               go to state 588
    make_dim_decl                 go to state 589
    expr_map_tuple_list           go to state 742
    make_table_decl               go to state 590
    array_comprehension           go to state 591


State 530

  475 expr: '-' . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 743
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 531

  474 expr: '+' . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 744
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 532

  512 expr: '*' . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 745
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 533

  473 expr: '~' . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 746
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 534

  472 expr: '!' . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 747
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 535

  902 make_dim_decl: '[' . optional_expr_list ']'
  935 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  936                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "for"                             shift, and go to state 748
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "iterator"                        shift, and go to state 749
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    $default  reduce using rule 277 (optional_expr_list)

    string_builder          go to state 539
    expr_reader             go to state 540
    optional_expr_list      go to state 750
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    expr_list               go to state 751
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 752
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 536

  502 expr: '(' . expr_list optional_comma ')'
  503     | '(' . make_struct_single ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "$f"                              shift, and go to state 753
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 754
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    expr_list               go to state 755
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 752
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_fields      go to state 756
    make_struct_single      go to state 757
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 537

  367 block_or_lambda: '$' .

    $default  reduce using rule 367 (block_or_lambda)


State 538

  368 block_or_lambda: '@' .
  369                | '@' . '@'
  438 func_addr_expr: '@' . '@' func_addr_name
  441               | '@' . '@' '<' $@24 type_declaration_no_options '>' $@25 func_addr_name
  444               | '@' . '@' '<' $@26 optional_function_argument_list optional_function_type '>' $@27 func_addr_name
  562 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 758

    $default  reduce using rule 368 (block_or_lambda)


State 539

  466 expr: string_builder .

    $default  reduce using rule 466 (expr)


State 540

  465 expr: expr_reader .

    $default  reduce using rule 465 (expr)


State 541

  270 expression_any: expression_label . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 759


State 542

  271 expression_any: expression_goto . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 760


State 543

  252 expression_any: semicolon .

    $default  reduce using rule 252 (expression_any)


State 544

   82 expression_if_then_else: if_or_static_if . expr expression_block expression_else

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 761
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 545

   84 expression_if_then_else: expression_if_one_liner . "if" $@4 expr expression_else_one_liner semicolon

    "if"  shift, and go to state 762


State 546

  268 expression_any: expression_if_then_else .

    $default  reduce using rule 268 (expression_any)


State 547

  263 expression_any: expression_for_loop .

    $default  reduce using rule 263 (expression_any)


State 548

  260 expression_any: expression_unsafe .

    $default  reduce using rule 260 (expression_any)


State 549

  259 expression_any: expression_while_loop .

    $default  reduce using rule 259 (expression_any)


State 550

  261 expression_any: expression_with .

    $default  reduce using rule 261 (expression_any)


State 551

  262 expression_any: expression_with_alias .

    $default  reduce using rule 262 (expression_any)


State 552

  247 expression_block: open_block expressions close_block .
  248                 | open_block expressions close_block . "finally" open_block expressions close_block

    "finally"  shift, and go to state 763

    $default  reduce using rule 247 (expression_block)


State 553

  295 expr_pipe: expr_call_pipe .

    $default  reduce using rule 295 (expr_pipe)


State 554

  274 expressions: expressions expression_any .

    $default  reduce using rule 274 (expressions)


State 555

  254 expression_any: expr_keyword .

    $default  reduce using rule 254 (expression_any)


State 556

  250 expr_call_pipe: expression_keyword . expr_full_block_assumed_piped
  546 expr: expression_keyword .

    '$'  shift, and go to state 537
    '@'  shift, and go to state 715

    '$'       [reduce using rule 546 (expr)]
    '@'       [reduce using rule 546 (expr)]
    $default  reduce using rule 546 (expr)

    block_or_lambda                go to state 764
    expr_full_block_assumed_piped  go to state 765


State 557

  253 expression_any: expr_pipe .

    $default  reduce using rule 253 (expression_any)


State 558

  432 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  433                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  455 expr_call: name_in_namespace . '(' ')'
  456          | name_in_namespace . '(' "uninitialized" ')'
  457          | name_in_namespace . '(' make_struct_single ')'
  458          | name_in_namespace . '(' "uninitialized" make_struct_single ')'
  459          | name_in_namespace . '(' expr_list ')'
  463 expr: name_in_namespace .
  544     | name_in_namespace . "name"

    "name"  shift, and go to state 766
    '('     shift, and go to state 767

    "name"    [reduce using rule 463 (expr)]
    '('       [reduce using rule 463 (expr)]
    $default  reduce using rule 463 (expr)


State 559

  257 expression_any: expression_delete . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 768


State 560

  537 expr: expr_new .

    $default  reduce using rule 537 (expr)


State 561

   80 expression_if_one_liner: expression_break .
  264 expression_any: expression_break . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 80 (expression_if_one_liner)

    semicolon  go to state 769


State 562

   81 expression_if_one_liner: expression_continue .
  265 expression_any: expression_continue . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 81 (expression_if_one_liner)

    semicolon  go to state 770


State 563

   78 expression_if_one_liner: expression_return_no_pipe .
  316 expression_return: expression_return_no_pipe . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 78 (expression_if_one_liner)

    semicolon  go to state 771


State 564

  266 expression_any: expression_return .

    $default  reduce using rule 266 (expression_any)


State 565

   79 expression_if_one_liner: expression_yield_no_pipe .
  321 expression_yield: expression_yield_no_pipe . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 79 (expression_if_one_liner)

    semicolon  go to state 772


State 566

  267 expression_any: expression_yield .

    $default  reduce using rule 267 (expression_any)


State 567

  269 expression_any: expression_try_catch .

    $default  reduce using rule 269 (expression_any)


State 568

  342 expression_let: kwd_let . optional_in_scope let_variable_declaration
  343               | kwd_let . optional_in_scope tuple_expansion_variable_declaration

    "inscope"  shift, and go to state 773

    $default  reduce using rule 331 (optional_in_scope)

    optional_in_scope  go to state 774


State 569

  258 expression_any: expression_let .

    $default  reduce using rule 258 (expression_any)


State 570

  536 expr: expr_cast .

    $default  reduce using rule 536 (expr)


State 571

  535 expr: expr_type_decl .

    $default  reduce using rule 535 (expr)


State 572

  534 expr: expr_type_info .

    $default  reduce using rule 534 (expr)


State 573

  382 expr_full_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 16

    $default  reduce using rule 133 (optional_annotation_list)

    optional_annotation_list  go to state 775


State 574

  540 expr: expr_full_block .

    $default  reduce using rule 540 (expr)


State 575

  464 expr: expr_numeric_const .

    $default  reduce using rule 464 (expr)


State 576

  256 expression_any: expr_assign . semicolon
  291 expr_pipe: expr_assign . " <|" expr_block

    " <|"                shift, and go to state 776
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 777


State 577

  255 expression_any: expr_assign_pipe .

    $default  reduce using rule 255 (expression_any)


State 578

  539 expr: expr_named_call .

    $default  reduce using rule 539 (expr)


State 579

  538 expr: expr_method_call .

    $default  reduce using rule 538 (expr)


State 580

  510 expr: func_addr_expr .

    $default  reduce using rule 510 (expr)


State 581

  470 expr: expr_field .

    $default  reduce using rule 470 (expr)


State 582

  511 expr: expr_call .

    $default  reduce using rule 511 (expr)


State 583

   77 expression_if_one_liner: expr .
  249 expr_call_pipe: expr . expr_full_block_assumed_piped
  392 expr_assign: expr .
  393            | expr . '=' expr
  394            | expr . "<-" expr
  395            | expr . ":=" expr
  396            | expr . "&=" expr
  397            | expr . "|=" expr
  398            | expr . "^=" expr
  399            | expr . "&&=" expr
  400            | expr . "||=" expr
  401            | expr . "^^=" expr
  402            | expr . "+=" expr
  403            | expr . "-=" expr
  404            | expr . "*=" expr
  405            | expr . "/=" expr
  406            | expr . "%=" expr
  407            | expr . "<<=" expr
  408            | expr . ">>=" expr
  409            | expr . "<<<=" expr
  410            | expr . ">>>=" expr
  415 expr_assign_pipe: expr . '=' expr_assign_pipe_right
  416                 | expr . "<-" expr_assign_pipe_right
  417                 | expr . "&=" expr_assign_pipe_right
  418                 | expr . "|=" expr_assign_pipe_right
  419                 | expr . "^=" expr_assign_pipe_right
  420                 | expr . "&&=" expr_assign_pipe_right
  421                 | expr . "||=" expr_assign_pipe_right
  422                 | expr . "^^=" expr_assign_pipe_right
  423                 | expr . "+=" expr_assign_pipe_right
  424                 | expr . "-=" expr_assign_pipe_right
  425                 | expr . "*=" expr_assign_pipe_right
  426                 | expr . "/=" expr_assign_pipe_right
  427                 | expr . "%=" expr_assign_pipe_right
  428                 | expr . "<<=" expr_assign_pipe_right
  429                 | expr . ">>=" expr_assign_pipe_right
  430                 | expr . "<<<=" expr_assign_pipe_right
  431                 | expr . ">>>=" expr_assign_pipe_right
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 778
    "as"    shift, and go to state 779
    "+="    shift, and go to state 780
    "-="    shift, and go to state 781
    "/="    shift, and go to state 782
    "*="    shift, and go to state 783
    "%="    shift, and go to state 784
    "&="    shift, and go to state 785
    "|="    shift, and go to state 786
    "^="    shift, and go to state 787
    "<<"    shift, and go to state 788
    ">>"    shift, and go to state 789
    "++"    shift, and go to state 790
    "--"    shift, and go to state 791
    "<="    shift, and go to state 792
    "<<="   shift, and go to state 793
    ">>="   shift, and go to state 794
    ">="    shift, and go to state 795
    "=="    shift, and go to state 796
    "!="    shift, and go to state 797
    "->"    shift, and go to state 798
    "<-"    shift, and go to state 799
    "??"    shift, and go to state 800
    "?."    shift, and go to state 801
    "?["    shift, and go to state 802
    "<|"    shift, and go to state 803
    "|>"    shift, and go to state 804
    ":="    shift, and go to state 805
    "<<<"   shift, and go to state 806
    ">>>"   shift, and go to state 807
    "<<<="  shift, and go to state 808
    ">>>="  shift, and go to state 809
    "&&"    shift, and go to state 810
    "||"    shift, and go to state 811
    "^^"    shift, and go to state 812
    "&&="   shift, and go to state 813
    "||="   shift, and go to state 814
    "^^="   shift, and go to state 815
    ".."    shift, and go to state 816
    '='     shift, and go to state 817
    '?'     shift, and go to state 818
    '|'     shift, and go to state 819
    '^'     shift, and go to state 820
    '&'     shift, and go to state 821
    '<'     shift, and go to state 822
    '>'     shift, and go to state 823
    '-'     shift, and go to state 824
    '+'     shift, and go to state 825
    '*'     shift, and go to state 826
    '/'     shift, and go to state 827
    '%'     shift, and go to state 828
    '.'     shift, and go to state 829
    '['     shift, and go to state 830
    '$'     shift, and go to state 537
    '@'     shift, and go to state 715

    "if"      reduce using rule 77 (expression_if_one_liner)
    $default  reduce using rule 392 (expr_assign)

    block_or_lambda                go to state 764
    expr_full_block_assumed_piped  go to state 831


State 584

  471 expr: expr_mtag .

    $default  reduce using rule 471 (expr)


State 585

  460 expr_call: basic_type_declaration . '(' ')'
  461          | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 832


State 586

  467 expr: make_decl .

    $default  reduce using rule 467 (expr)


State 587

  833 make_decl: make_struct_decl .

    $default  reduce using rule 833 (make_decl)


State 588

  837 make_decl: make_tuple_call .

    $default  reduce using rule 837 (make_decl)


State 589

  834 make_decl: make_dim_decl .

    $default  reduce using rule 834 (make_decl)


State 590

  835 make_decl: make_table_decl .

    $default  reduce using rule 835 (make_decl)


State 591

  836 make_decl: array_comprehension .

    $default  reduce using rule 836 (make_decl)


State 592

  668 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration open_block $@46 . enum_list $@47 close_block

    $default  reduce using rule 645 (enum_list)

    enum_list  go to state 833


State 593

  647 enum_list: enum_list "name" . semicolon
  648          | enum_list "name" . '=' expr semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '='                  shift, and go to state 834

    semicolon  go to state 835


State 594

  646 enum_list: enum_list semicolon .

    $default  reduce using rule 646 (enum_list)


State 595

  665 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name open_block $@44 enum_list $@45 . close_block

    "close scope"        shift, and go to state 146
    "end of code block"  shift, and go to state 147

    close_block  go to state 836


State 596

  670 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 670 (optional_structure_parent)


State 597

  578 struct_variable_declaration_list: struct_variable_declaration_list . semicolon
  580                                 | struct_variable_declaration_list . "typedef" $@36 "name" '=' type_declaration semicolon
  582                                 | struct_variable_declaration_list . $@37 structure_variable_declaration semicolon
  584                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@38 function_declaration_header semicolon
  586                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@39 function_declaration_header expression_block
  587                                 | struct_variable_declaration_list . '[' annotation_list ']' semicolon
  682 optional_struct_variable_declaration_list: open_block struct_variable_declaration_list . close_block

    "typedef"            shift, and go to state 837
    "close scope"        shift, and go to state 146
    "end of line"        shift, and go to state 13
    "end of code block"  shift, and go to state 147
    "end of expression"  shift, and go to state 14
    '['                  shift, and go to state 838

    "def"     reduce using rule 133 (optional_annotation_list)
    $default  reduce using rule 581 ($@37)

    semicolon                 go to state 839
    optional_annotation_list  go to state 840
    close_block               go to state 841
    $@37                      go to state 842


State 598

  636 global_variable_declaration_list: global_variable_declaration_list $@40 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 636 (global_variable_declaration_list)


State 599

  564 optional_field_annotation: "[[" annotation_argument_list ']' ']' .

    $default  reduce using rule 564 (optional_field_annotation)


State 600

  545 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 701


State 601

  515 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  516     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 843


State 602

  287 expression_keyword: "keyword" . '<' $@9 type_declaration_no_options_list '>' $@10 expr

    '<'  shift, and go to state 735


State 603

  546 expr: expression_keyword .

    $default  reduce using rule 546 (expr)


State 604

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'
  624 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830
    ')'    shift, and go to state 844


State 605

  625 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 625 (let_variable_name_with_pos_list)


State 606

  626 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  627                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 845

    $default  reduce using rule 626 (let_variable_name_with_pos_list)


State 607

  628 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . semicolon
  629                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr semicolon
  630                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr_pipe
  754 type_declaration_no_options: type_declaration_no_options . dim_list
  755                            | type_declaration_no_options . '[' ']'
  763                            | type_declaration_no_options . '-' '[' ']'
  764                            | type_declaration_no_options . "explicit"
  765                            | type_declaration_no_options . "const"
  766                            | type_declaration_no_options . '-' "const"
  767                            | type_declaration_no_options . '&'
  768                            | type_declaration_no_options . '-' '&'
  769                            | type_declaration_no_options . '#'
  770                            | type_declaration_no_options . "implicit"
  771                            | type_declaration_no_options . '-' '#'
  772                            | type_declaration_no_options . "==" "const"
  773                            | type_declaration_no_options . "==" '&'
  774                            | type_declaration_no_options . '?'
  778                            | type_declaration_no_options . "??"

    "const"              shift, and go to state 428
    "implicit"           shift, and go to state 429
    "explicit"           shift, and go to state 430
    "=="                 shift, and go to state 431
    "<-"                 shift, and go to state 608
    "??"                 shift, and go to state 432
    ":="                 shift, and go to state 609
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '='                  shift, and go to state 610
    '?'                  shift, and go to state 433
    '&'                  shift, and go to state 434
    '-'                  shift, and go to state 435
    '['                  shift, and go to state 436
    '#'                  shift, and go to state 437

    semicolon              go to state 846
    copy_or_move_or_clone  go to state 847
    dim_list               go to state 438


State 608

  619 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 619 (copy_or_move_or_clone)


State 609

  620 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 620 (copy_or_move_or_clone)


State 610

  618 copy_or_move_or_clone: '=' .

    $default  reduce using rule 618 (copy_or_move_or_clone)


State 611

  631 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr semicolon
  632                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 502
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "$ <|"                            shift, and go to state 506
    "@ <|"                            shift, and go to state 507
    "@@ <|"                           shift, and go to state 508
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expr_call_pipe          go to state 553
    expression_keyword      go to state 556
    expr_pipe               go to state 848
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_assign             go to state 682
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 849
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 612

  758 type_declaration_no_options: "type" '<' $@52 . type_declaration '>' $@53

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 850


State 613

  781 type_declaration_no_options: "array" '<' $@57 . type_declaration '>' $@58

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 851


State 614

  784 type_declaration_no_options: "table" '<' $@59 . table_type_pair '>' $@60

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    table_type_pair              go to state 852
    type_declaration_no_options  go to state 373
    type_declaration             go to state 853


State 615

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'
  759 type_declaration_no_options: "typedecl" '(' expr . ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830
    ')'    shift, and go to state 854


State 616

  787 type_declaration_no_options: "iterator" '<' $@61 . type_declaration '>' $@62

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 855


State 617

  777 type_declaration_no_options: "smart_ptr" '<' $@55 . type_declaration '>' $@56

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 856


State 618

  728 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 857


State 619

  743 bitfield_type_declaration: "bitfield" bitfield_basic_type_declaration '<' . $@50 bitfield_bits '>' $@51

    $default  reduce using rule 741 ($@50)

    $@50  go to state 858


State 620

  791 type_declaration_no_options: "block" '<' $@63 . type_declaration '>' $@64

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 859


State 621

  794 type_declaration_no_options: "block" '<' $@65 . optional_function_argument_list optional_function_type '>' $@66

    '('  shift, and go to state 299

    $default  reduce using rule 135 (optional_function_argument_list)

    optional_function_argument_list  go to state 860


State 622

  798 type_declaration_no_options: "function" '<' $@67 . type_declaration '>' $@68

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 861


State 623

  801 type_declaration_no_options: "function" '<' $@69 . optional_function_argument_list optional_function_type '>' $@70

    '('  shift, and go to state 299

    $default  reduce using rule 135 (optional_function_argument_list)

    optional_function_argument_list  go to state 862


State 624

  805 type_declaration_no_options: "lambda" '<' $@71 . type_declaration '>' $@72

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 863


State 625

  808 type_declaration_no_options: "lambda" '<' $@73 . optional_function_argument_list optional_function_type '>' $@74

    '('  shift, and go to state 299

    $default  reduce using rule 135 (optional_function_argument_list)

    optional_function_argument_list  go to state 864


State 626

  811 type_declaration_no_options: "tuple" '<' $@75 . tuple_type_list '>' $@76

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 643
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    tuple_type                   go to state 865
    tuple_type_list              go to state 866
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 648


State 627

  814 type_declaration_no_options: "variant" '<' $@77 . variant_type_list '>' $@78

    "name"  shift, and go to state 650

    variant_type       go to state 867
    variant_type_list  go to state 868


State 628

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'
  729 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830
    ')'    shift, and go to state 869


State 629

  762 type_declaration_no_options: '$' name_in_namespace '<' . $@54 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    $default  reduce using rule 761 ($@54)

    $@54  go to state 870


State 630

  760 type_declaration_no_options: '$' name_in_namespace '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    $default  reduce using rule 277 (optional_expr_list)

    string_builder          go to state 539
    expr_reader             go to state 540
    optional_expr_list      go to state 871
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    expr_list               go to state 751
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 752
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 631

  772 type_declaration_no_options: type_declaration_no_options "==" "const" .

    $default  reduce using rule 772 (type_declaration_no_options)


State 632

  773 type_declaration_no_options: type_declaration_no_options "==" '&' .

    $default  reduce using rule 773 (type_declaration_no_options)


State 633

  766 type_declaration_no_options: type_declaration_no_options '-' "const" .

    $default  reduce using rule 766 (type_declaration_no_options)


State 634

  768 type_declaration_no_options: type_declaration_no_options '-' '&' .

    $default  reduce using rule 768 (type_declaration_no_options)


State 635

  763 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'

    ']'  shift, and go to state 872


State 636

  771 type_declaration_no_options: type_declaration_no_options '-' '#' .

    $default  reduce using rule 771 (type_declaration_no_options)


State 637

  755 type_declaration_no_options: type_declaration_no_options '[' ']' .

    $default  reduce using rule 755 (type_declaration_no_options)


State 638

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'
  748 dim_list: '[' expr . ']'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830
    ']'    shift, and go to state 873


State 639

  749 dim_list: dim_list '[' . expr ']'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 874
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 640

  817 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 817 (type_declaration)


State 641

  754 type_declaration_no_options: type_declaration_no_options . dim_list
  755                            | type_declaration_no_options . '[' ']'
  763                            | type_declaration_no_options . '-' '[' ']'
  764                            | type_declaration_no_options . "explicit"
  765                            | type_declaration_no_options . "const"
  766                            | type_declaration_no_options . '-' "const"
  767                            | type_declaration_no_options . '&'
  768                            | type_declaration_no_options . '-' '&'
  769                            | type_declaration_no_options . '#'
  770                            | type_declaration_no_options . "implicit"
  771                            | type_declaration_no_options . '-' '#'
  772                            | type_declaration_no_options . "==" "const"
  773                            | type_declaration_no_options . "==" '&'
  774                            | type_declaration_no_options . '?'
  778                            | type_declaration_no_options . "??"
  816 type_declaration: type_declaration '|' type_declaration_no_options .

    "const"     shift, and go to state 428
    "implicit"  shift, and go to state 429
    "explicit"  shift, and go to state 430
    "=="        shift, and go to state 431
    "??"        shift, and go to state 432
    '?'         shift, and go to state 433
    '&'         shift, and go to state 434
    '-'         shift, and go to state 435
    '['         shift, and go to state 436
    '#'         shift, and go to state 437

    $default  reduce using rule 816 (type_declaration)

    dim_list  go to state 438


State 642

  733 bitfield_alias_bits: bitfield_alias_bits . semicolon
  734                    | bitfield_alias_bits . "name" semicolon
  735                    | bitfield_alias_bits . "name" '=' expr semicolon
  832 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@87 "name" $@88 bitfield_basic_type_declaration open_block $@89 bitfield_alias_bits . $@90 close_block

    "end of line"        shift, and go to state 13
    "name"               shift, and go to state 875
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 831 ($@90)

    semicolon  go to state 876
    $@90       go to state 877


State 643

  296 name_in_namespace: "name" .
  297                  | "name" . "::" "name"
  597 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 104
    ':'   shift, and go to state 878

    $default  reduce using rule 296 (name_in_namespace)


State 644

  744 c_or_s: ',' .

    $default  reduce using rule 744 (c_or_s)


State 645

  745 c_or_s: semicolon .

    $default  reduce using rule 745 (c_or_s)


State 646

  602 tuple_alias_type_list: tuple_alias_type_list tuple_type . c_or_s

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 644

    semicolon  go to state 645
    c_or_s     go to state 879


State 647

  601 tuple_alias_type_list: tuple_alias_type_list c_or_s .

    $default  reduce using rule 601 (tuple_alias_type_list)


State 648

  596 tuple_type: type_declaration .
  816 type_declaration: type_declaration . '|' type_declaration_no_options
  817                 | type_declaration . '|' '#'

    '|'  shift, and go to state 439

    $default  reduce using rule 596 (tuple_type)


State 649

  822 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@79 "name" $@80 open_block $@81 tuple_alias_type_list $@82 . close_block

    "close scope"        shift, and go to state 146
    "end of code block"  shift, and go to state 147

    close_block  go to state 880


State 650

  603 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 881


State 651

  608 variant_alias_type_list: variant_alias_type_list variant_type . c_or_s

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 644

    semicolon  go to state 645
    c_or_s     go to state 882


State 652

  607 variant_alias_type_list: variant_alias_type_list c_or_s .

    $default  reduce using rule 607 (variant_alias_type_list)


State 653

  827 variant_alias_declaration: "variant" optional_public_or_private_alias $@83 "name" $@84 open_block $@85 variant_alias_type_list $@86 . close_block

    "close scope"        shift, and go to state 146
    "end of code block"  shift, and go to state 147

    close_block  go to state 883


State 654

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'
  590 function_argument_declaration_type: "$a" '(' expr . ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830
    ')'    shift, and go to state 884


State 655

  687 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 885


State 656

  686 variable_name_with_pos_list: "name" .
  688                            | "name" . "aka" "name"

    "aka"  shift, and go to state 886

    $default  reduce using rule 686 (variable_name_with_pos_list)


State 657

  588 function_argument_declaration_no_type: optional_field_annotation kwd_let_var_or_nothing variable_declaration_no_type .

    $default  reduce using rule 588 (function_argument_declaration_no_type)


State 658

  589 function_argument_declaration_type: optional_field_annotation kwd_let_var_or_nothing variable_declaration_type .

    $default  reduce using rule 589 (function_argument_declaration_type)


State 659

  611 variable_declaration_no_type: variable_name_with_pos_list .
  612                             | variable_name_with_pos_list . '&'
  613                             | variable_name_with_pos_list . copy_or_move expr
  614 variable_declaration_type: variable_name_with_pos_list . ':' type_declaration
  615                          | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  689 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  690                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 887
    ','   shift, and go to state 888
    '='   shift, and go to state 889
    ':'   shift, and go to state 890
    '&'   shift, and go to state 891

    $default  reduce using rule 611 (variable_declaration_no_type)

    copy_or_move  go to state 892


State 660

  593 function_argument_list: function_argument_declaration_no_type semicolon function_argument_list .

    $default  reduce using rule 593 (function_argument_list)


State 661

  595 function_argument_list: function_argument_declaration_type ',' function_argument_list .

    $default  reduce using rule 595 (function_argument_list)


State 662

  594 function_argument_list: function_argument_declaration_type semicolon function_argument_list .

    $default  reduce using rule 594 (function_argument_list)


State 663

  881 make_struct_decl: "struct" '<' . $@91 type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 879 ($@91)

    $@91  go to state 893


State 664

  884 make_struct_decl: "class" '<' . $@93 type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 882 ($@93)

    $@93  go to state 894


State 665

   88 expression_while_loop: "while" expr . expression_block
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 778
    "as"                   shift, and go to state 779
    "<<"                   shift, and go to state 788
    ">>"                   shift, and go to state 789
    "++"                   shift, and go to state 790
    "--"                   shift, and go to state 791
    "<="                   shift, and go to state 792
    ">="                   shift, and go to state 795
    "=="                   shift, and go to state 796
    "!="                   shift, and go to state 797
    "->"                   shift, and go to state 798
    "??"                   shift, and go to state 800
    "?."                   shift, and go to state 801
    "?["                   shift, and go to state 802
    "<|"                   shift, and go to state 803
    "|>"                   shift, and go to state 804
    "<<<"                  shift, and go to state 806
    ">>>"                  shift, and go to state 807
    "&&"                   shift, and go to state 810
    "||"                   shift, and go to state 811
    "^^"                   shift, and go to state 812
    ".."                   shift, and go to state 816
    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '?'                    shift, and go to state 818
    '|'                    shift, and go to state 819
    '^'                    shift, and go to state 820
    '&'                    shift, and go to state 821
    '<'                    shift, and go to state 822
    '>'                    shift, and go to state 823
    '-'                    shift, and go to state 824
    '+'                    shift, and go to state 825
    '*'                    shift, and go to state 826
    '/'                    shift, and go to state 827
    '%'                    shift, and go to state 828
    '.'                    shift, and go to state 829
    '['                    shift, and go to state 830

    open_block        go to state 301
    expression_block  go to state 895


State 666

   86 expression_for_loop: "for" $@5 . variable_name_with_pos_list "in" expr_list expression_block

    "$i"    shift, and go to state 655
    "name"  shift, and go to state 656

    variable_name_with_pos_list  go to state 896


State 667

  303 new_type_declaration: '<' . $@13 type_declaration '>' $@14

    $default  reduce using rule 301 ($@13)

    $@13  go to state 897


State 668

  305 expr_new: "new" new_type_declaration .
  306         | "new" new_type_declaration . '(' use_initializer ')'
  307         | "new" new_type_declaration . '(' expr_list ')'
  308         | "new" new_type_declaration . '(' make_struct_single ')'
  309         | "new" new_type_declaration . '(' "uninitialized" make_struct_single ')'

    '('  shift, and go to state 898

    '('       [reduce using rule 305 (expr_new)]
    $default  reduce using rule 305 (expr_new)


State 669

  304 new_type_declaration: structure_type_declaration .

    $default  reduce using rule 304 (new_type_declaration)


State 670

  310 expr_new: "new" make_decl .

    $default  reduce using rule 310 (expr_new)


State 671

  356 expr_type_info: "typeinfo" '(' . name_in_namespace expr ')'
  357               | "typeinfo" '(' . name_in_namespace '<' "name" '>' expr ')'
  358               | "typeinfo" '(' . name_in_namespace '<' "name" c_or_s "name" '>' expr ')'

    "::"    shift, and go to state 62
    "name"  shift, and go to state 63

    name_in_namespace  go to state 899


State 672

  359 expr_type_info: "typeinfo" name_in_namespace . '(' expr ')'
  360               | "typeinfo" name_in_namespace . '<' "name" '>' '(' expr ')'
  361               | "typeinfo" name_in_namespace . '<' "name" "end of expression" "name" '>' '(' expr ')'

    '<'  shift, and go to state 900
    '('  shift, and go to state 901


State 673

  355 expr_type_decl: "type" '<' . $@21 type_declaration '>' $@22

    $default  reduce using rule 353 ($@21)

    $@21  go to state 902


State 674

  907 make_dim_decl: "array" "struct" . '<' $@101 type_declaration_no_options '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 903


State 675

  910 make_dim_decl: "array" "tuple" . '<' $@103 tuple_type_list '>' $@104 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 904


State 676

  913 make_dim_decl: "array" "variant" . '<' $@105 variant_type_list '>' $@106 '(' make_variant_dim ')'

    '<'  shift, and go to state 905


State 677

  917 make_dim_decl: "array" '<' . $@107 type_declaration_no_options '>' $@108 '(' optional_expr_list ')'

    $default  reduce using rule 915 ($@107)

    $@107  go to state 906


State 678

  914 make_dim_decl: "array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    expr_list               go to state 907
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 752
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 679

  315 expression_return_no_pipe: "return" "<-" . expr_list
  318 expression_return: "return" "<-" . expr_pipe

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 502
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "$ <|"                            shift, and go to state 506
    "@ <|"                            shift, and go to state 507
    "@@ <|"                           shift, and go to state 508
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expr_call_pipe          go to state 553
    expression_keyword      go to state 556
    expr_pipe               go to state 908
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    expr_list               go to state 909
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_assign             go to state 682
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 683
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 680

  317 expression_return: "return" expr_pipe .

    $default  reduce using rule 317 (expression_return)


State 681

  314 expression_return_no_pipe: "return" expr_list .
  363 expr_list: expr_list . ',' expr

    ','  shift, and go to state 910

    $default  reduce using rule 314 (expression_return_no_pipe)


State 682

  291 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 776


State 683

  249 expr_call_pipe: expr . expr_full_block_assumed_piped
  362 expr_list: expr .
  392 expr_assign: expr .
  393            | expr . '=' expr
  394            | expr . "<-" expr
  395            | expr . ":=" expr
  396            | expr . "&=" expr
  397            | expr . "|=" expr
  398            | expr . "^=" expr
  399            | expr . "&&=" expr
  400            | expr . "||=" expr
  401            | expr . "^^=" expr
  402            | expr . "+=" expr
  403            | expr . "-=" expr
  404            | expr . "*=" expr
  405            | expr . "/=" expr
  406            | expr . "%=" expr
  407            | expr . "<<=" expr
  408            | expr . ">>=" expr
  409            | expr . "<<<=" expr
  410            | expr . ">>>=" expr
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 778
    "as"    shift, and go to state 779
    "+="    shift, and go to state 911
    "-="    shift, and go to state 912
    "/="    shift, and go to state 913
    "*="    shift, and go to state 914
    "%="    shift, and go to state 915
    "&="    shift, and go to state 916
    "|="    shift, and go to state 917
    "^="    shift, and go to state 918
    "<<"    shift, and go to state 788
    ">>"    shift, and go to state 789
    "++"    shift, and go to state 790
    "--"    shift, and go to state 791
    "<="    shift, and go to state 792
    "<<="   shift, and go to state 919
    ">>="   shift, and go to state 920
    ">="    shift, and go to state 795
    "=="    shift, and go to state 796
    "!="    shift, and go to state 797
    "->"    shift, and go to state 798
    "<-"    shift, and go to state 921
    "??"    shift, and go to state 800
    "?."    shift, and go to state 801
    "?["    shift, and go to state 802
    "<|"    shift, and go to state 803
    "|>"    shift, and go to state 804
    ":="    shift, and go to state 805
    "<<<"   shift, and go to state 806
    ">>>"   shift, and go to state 807
    "<<<="  shift, and go to state 922
    ">>>="  shift, and go to state 923
    "&&"    shift, and go to state 810
    "||"    shift, and go to state 811
    "^^"    shift, and go to state 812
    "&&="   shift, and go to state 924
    "||="   shift, and go to state 925
    "^^="   shift, and go to state 926
    ".."    shift, and go to state 816
    '='     shift, and go to state 927
    '?'     shift, and go to state 818
    '|'     shift, and go to state 819
    '^'     shift, and go to state 820
    '&'     shift, and go to state 821
    '<'     shift, and go to state 822
    '>'     shift, and go to state 823
    '-'     shift, and go to state 824
    '+'     shift, and go to state 825
    '*'     shift, and go to state 826
    '/'     shift, and go to state 827
    '%'     shift, and go to state 828
    '.'     shift, and go to state 829
    '['     shift, and go to state 830
    '$'     shift, and go to state 537
    '@'     shift, and go to state 715

    " <|"     reduce using rule 392 (expr_assign)
    $default  reduce using rule 362 (expr_list)

    block_or_lambda                go to state 764
    expr_full_block_assumed_piped  go to state 831


State 684

  324 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 928


State 685

  929 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  930                | "table" '<' . type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 929


State 686

  928 make_table_decl: "table" '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    $default  reduce using rule 281 (optional_expr_map_tuple_list)

    string_builder                go to state 539
    expr_reader                   go to state 540
    optional_expr_map_tuple_list  go to state 930
    expression_keyword            go to state 603
    name_in_namespace             go to state 558
    expr_new                      go to state 560
    expr_cast                     go to state 570
    expr_type_decl                go to state 571
    expr_type_info                go to state 572
    block_or_lambda               go to state 573
    expr_full_block               go to state 574
    expr_numeric_const            go to state 575
    expr_named_call               go to state 578
    expr_method_call              go to state 579
    func_addr_expr                go to state 580
    expr_field                    go to state 581
    expr_call                     go to state 582
    expr                          go to state 732
    expr_mtag                     go to state 584
    basic_type_declaration        go to state 585
    make_decl                     go to state 586
    make_struct_decl              go to state 587
    make_map_tuple                go to state 741
    make_tuple_call               go to state 588
    make_dim_decl                 go to state 589
    expr_map_tuple_list           go to state 742
    make_table_decl               go to state 590
    array_comprehension           go to state 591


State 687

  300 expression_delete: "delete" "explicit" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 931
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 688

  299 expression_delete: "delete" expr .
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 299 (expression_delete)


State 689

  513 expr: "deref" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 932
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 690

   93 expression_with_alias: "typedef" $@7 . "name" '=' type_declaration

    "name"  shift, and go to state 933


State 691

   89 expression_with: "with" expr . expression_block
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 778
    "as"                   shift, and go to state 779
    "<<"                   shift, and go to state 788
    ">>"                   shift, and go to state 789
    "++"                   shift, and go to state 790
    "--"                   shift, and go to state 791
    "<="                   shift, and go to state 792
    ">="                   shift, and go to state 795
    "=="                   shift, and go to state 796
    "!="                   shift, and go to state 797
    "->"                   shift, and go to state 798
    "??"                   shift, and go to state 800
    "?."                   shift, and go to state 801
    "?["                   shift, and go to state 802
    "<|"                   shift, and go to state 803
    "|>"                   shift, and go to state 804
    "<<<"                  shift, and go to state 806
    ">>>"                  shift, and go to state 807
    "&&"                   shift, and go to state 810
    "||"                   shift, and go to state 811
    "^^"                   shift, and go to state 812
    ".."                   shift, and go to state 816
    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '?'                    shift, and go to state 818
    '|'                    shift, and go to state 819
    '^'                    shift, and go to state 820
    '&'                    shift, and go to state 821
    '<'                    shift, and go to state 822
    '>'                    shift, and go to state 823
    '-'                    shift, and go to state 824
    '+'                    shift, and go to state 825
    '*'                    shift, and go to state 826
    '/'                    shift, and go to state 827
    '%'                    shift, and go to state 828
    '.'                    shift, and go to state 829
    '['                    shift, and go to state 830

    open_block        go to state 301
    expression_block  go to state 934


State 692

   91 expression_with_alias: "assume" "name" . '=' $@6 expr

    '='  shift, and go to state 935


State 693

  346 expr_cast: "cast" '<' . $@15 type_declaration_no_options '>' $@16 expr

    $default  reduce using rule 344 ($@15)

    $@15  go to state 936


State 694

  349 expr_cast: "upcast" '<' . $@17 type_declaration_no_options '>' $@18 expr

    $default  reduce using rule 347 ($@17)

    $@17  go to state 937


State 695

  514 expr: "addr" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 938
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 696

  272 expression_any: "pass" semicolon .

    $default  reduce using rule 272 (expression_any)


State 697

  352 expr_cast: "reinterpret" '<' . $@19 type_declaration_no_options '>' $@20 expr

    $default  reduce using rule 350 ($@19)

    $@19  go to state 939


State 698

   62 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 940


State 699

   63 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 941


State 700

   64 expression_goto: "goto" expr .
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 64 (expression_goto)


State 701

  545 expr: "unsafe" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 942
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 702

   87 expression_unsafe: "unsafe" expression_block .

    $default  reduce using rule 87 (expression_unsafe)


State 703

  921 make_dim_decl: "fixed_array" '<' . $@109 type_declaration_no_options '>' $@110 '(' expr_list optional_comma ')'

    $default  reduce using rule 919 ($@109)

    $@109  go to state 943


State 704

  918 make_dim_decl: "fixed_array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    expr_list               go to state 944
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 752
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 705

  890 make_struct_decl: "default" '<' . $@97 type_declaration_no_options '>' $@98 use_initializer

    $default  reduce using rule 888 ($@97)

    $@97  go to state 945


State 706

  899 make_tuple_call: "tuple" '<' . $@99 tuple_type_list '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 897 ($@99)

    $@99  go to state 946


State 707

  896 make_tuple_call: "tuple" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    expr_list               go to state 947
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 752
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 708

  887 make_struct_decl: "variant" '<' . $@95 variant_type_list '>' $@96 '(' use_initializer make_variant_dim ')'

    $default  reduce using rule 885 ($@95)

    $@95  go to state 948


State 709

  251 expr_call_pipe: "generator" '<' . type_declaration_no_options '>' optional_capture_list expr_full_block_assumed_piped
  515 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  516     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 949


State 710

  320 expression_yield_no_pipe: "yield" "<-" . expr
  323 expression_yield: "yield" "<-" . expr_pipe

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 502
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "$ <|"                            shift, and go to state 506
    "@ <|"                            shift, and go to state 507
    "@@ <|"                           shift, and go to state 508
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expr_call_pipe          go to state 553
    expression_keyword      go to state 556
    expr_pipe               go to state 950
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_assign             go to state 682
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 951
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 711

  322 expression_yield: "yield" expr_pipe .

    $default  reduce using rule 322 (expression_yield)


State 712

  249 expr_call_pipe: expr . expr_full_block_assumed_piped
  319 expression_yield_no_pipe: "yield" expr .
  392 expr_assign: expr .
  393            | expr . '=' expr
  394            | expr . "<-" expr
  395            | expr . ":=" expr
  396            | expr . "&=" expr
  397            | expr . "|=" expr
  398            | expr . "^=" expr
  399            | expr . "&&=" expr
  400            | expr . "||=" expr
  401            | expr . "^^=" expr
  402            | expr . "+=" expr
  403            | expr . "-=" expr
  404            | expr . "*=" expr
  405            | expr . "/=" expr
  406            | expr . "%=" expr
  407            | expr . "<<=" expr
  408            | expr . ">>=" expr
  409            | expr . "<<<=" expr
  410            | expr . ">>>=" expr
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 778
    "as"    shift, and go to state 779
    "+="    shift, and go to state 911
    "-="    shift, and go to state 912
    "/="    shift, and go to state 913
    "*="    shift, and go to state 914
    "%="    shift, and go to state 915
    "&="    shift, and go to state 916
    "|="    shift, and go to state 917
    "^="    shift, and go to state 918
    "<<"    shift, and go to state 788
    ">>"    shift, and go to state 789
    "++"    shift, and go to state 790
    "--"    shift, and go to state 791
    "<="    shift, and go to state 792
    "<<="   shift, and go to state 919
    ">>="   shift, and go to state 920
    ">="    shift, and go to state 795
    "=="    shift, and go to state 796
    "!="    shift, and go to state 797
    "->"    shift, and go to state 798
    "<-"    shift, and go to state 921
    "??"    shift, and go to state 800
    "?."    shift, and go to state 801
    "?["    shift, and go to state 802
    "<|"    shift, and go to state 803
    "|>"    shift, and go to state 804
    ":="    shift, and go to state 805
    "<<<"   shift, and go to state 806
    ">>>"   shift, and go to state 807
    "<<<="  shift, and go to state 922
    ">>>="  shift, and go to state 923
    "&&"    shift, and go to state 810
    "||"    shift, and go to state 811
    "^^"    shift, and go to state 812
    "&&="   shift, and go to state 924
    "||="   shift, and go to state 925
    "^^="   shift, and go to state 926
    ".."    shift, and go to state 816
    '='     shift, and go to state 927
    '?'     shift, and go to state 818
    '|'     shift, and go to state 819
    '^'     shift, and go to state 820
    '&'     shift, and go to state 821
    '<'     shift, and go to state 822
    '>'     shift, and go to state 823
    '-'     shift, and go to state 824
    '+'     shift, and go to state 825
    '*'     shift, and go to state 826
    '/'     shift, and go to state 827
    '%'     shift, and go to state 828
    '.'     shift, and go to state 829
    '['     shift, and go to state 830
    '$'     shift, and go to state 537
    '@'     shift, and go to state 715

    " <|"     reduce using rule 392 (expr_assign)
    $default  reduce using rule 319 (expression_yield_no_pipe)

    block_or_lambda                go to state 764
    expr_full_block_assumed_piped  go to state 831


State 713

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  498     | "++" expr .
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 778
    "as"  shift, and go to state 779
    "++"  shift, and go to state 790
    "--"  shift, and go to state 791
    "->"  shift, and go to state 798
    "?."  shift, and go to state 801
    "?["  shift, and go to state 802
    "<|"  shift, and go to state 803
    "|>"  shift, and go to state 804
    '.'   shift, and go to state 829
    '['   shift, and go to state 830

    $default  reduce using rule 498 (expr)


State 714

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  499     | "--" expr .
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 778
    "as"  shift, and go to state 779
    "++"  shift, and go to state 790
    "--"  shift, and go to state 791
    "->"  shift, and go to state 798
    "?."  shift, and go to state 801
    "?["  shift, and go to state 802
    "<|"  shift, and go to state 803
    "|>"  shift, and go to state 804
    '.'   shift, and go to state 829
    '['   shift, and go to state 830

    $default  reduce using rule 499 (expr)


State 715

  368 block_or_lambda: '@' .
  369                | '@' . '@'

    '@'  shift, and go to state 952

    $default  reduce using rule 368 (block_or_lambda)


State 716

  380 expr_block: expression_block .

    $default  reduce using rule 380 (expr_block)


State 717

  381 expr_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 16

    $default  reduce using rule 133 (optional_annotation_list)

    optional_annotation_list  go to state 953


State 718

  294 expr_pipe: "$ <|" expr_block .

    $default  reduce using rule 294 (expr_pipe)


State 719

  292 expr_pipe: "@ <|" expr_block .

    $default  reduce using rule 292 (expr_pipe)


State 720

  293 expr_pipe: "@@ <|" expr_block .

    $default  reduce using rule 293 (expr_pipe)


State 721

  547 expr_mtag: "$$" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 954
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 722

  548 expr_mtag: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 955
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 723

  549 expr_mtag: "$v" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 956
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 724

  550 expr_mtag: "$b" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 957
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 725

  551 expr_mtag: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 958
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 726

  553 expr_mtag: "$c" '(' . expr ')' '(' ')'
  554          | "$c" '(' . expr ')' '(' expr_list ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 959
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 727

  937 array_comprehension: "[[" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']'

    "$i"    shift, and go to state 655
    "name"  shift, and go to state 656

    variable_name_with_pos_list  go to state 960


State 728

  754 type_declaration_no_options: type_declaration_no_options . dim_list
  755                            | type_declaration_no_options . '[' ']'
  763                            | type_declaration_no_options . '-' '[' ']'
  764                            | type_declaration_no_options . "explicit"
  765                            | type_declaration_no_options . "const"
  766                            | type_declaration_no_options . '-' "const"
  767                            | type_declaration_no_options . '&'
  768                            | type_declaration_no_options . '-' '&'
  769                            | type_declaration_no_options . '#'
  770                            | type_declaration_no_options . "implicit"
  771                            | type_declaration_no_options . '-' '#'
  772                            | type_declaration_no_options . "==" "const"
  773                            | type_declaration_no_options . "==" '&'
  774                            | type_declaration_no_options . '?'
  778                            | type_declaration_no_options . "??"
  873 make_struct_decl: "[[" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  874                 | "[[" type_declaration_no_options . optional_block optional_trailing_delim_sqr_sqr
  875                 | "[[" type_declaration_no_options . '(' ')' optional_block optional_trailing_delim_sqr_sqr
  876                 | "[[" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  903 make_dim_decl: "[[" type_declaration_no_options . make_dim optional_trailing_semicolon_sqr_sqr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "const"                           shift, and go to state 428
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "where"                           shift, and go to state 961
    "reinterpret"                     shift, and go to state 493
    "implicit"                        shift, and go to state 429
    "explicit"                        shift, and go to state 430
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "=="                              shift, and go to state 431
    "??"                              shift, and go to state 432
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "$f"                              shift, and go to state 753
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 754
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '?'                               shift, and go to state 433
    '&'                               shift, and go to state 434
    '-'                               shift, and go to state 962
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 963
    '('                               shift, and go to state 964
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538
    '#'                               shift, and go to state 437

    $default  reduce using rule 857 (optional_block)

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 965
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    dim_list                go to state 438
    make_decl               go to state 586
    make_struct_fields      go to state 966
    make_struct_dim         go to state 967
    optional_block          go to state 968
    make_struct_decl        go to state 587
    make_tuple              go to state 969
    make_tuple_call         go to state 588
    make_dim                go to state 970
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 729

  938 array_comprehension: "[{" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "$i"    shift, and go to state 655
    "name"  shift, and go to state 656

    variable_name_with_pos_list  go to state 971


State 730

  754 type_declaration_no_options: type_declaration_no_options . dim_list
  755                            | type_declaration_no_options . '[' ']'
  763                            | type_declaration_no_options . '-' '[' ']'
  764                            | type_declaration_no_options . "explicit"
  765                            | type_declaration_no_options . "const"
  766                            | type_declaration_no_options . '-' "const"
  767                            | type_declaration_no_options . '&'
  768                            | type_declaration_no_options . '-' '&'
  769                            | type_declaration_no_options . '#'
  770                            | type_declaration_no_options . "implicit"
  771                            | type_declaration_no_options . '-' '#'
  772                            | type_declaration_no_options . "==" "const"
  773                            | type_declaration_no_options . "==" '&'
  774                            | type_declaration_no_options . '?'
  778                            | type_declaration_no_options . "??"
  877 make_struct_decl: "[{" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_cur_sqr
  878                 | "[{" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  904 make_dim_decl: "[{" type_declaration_no_options . make_dim optional_trailing_semicolon_cur_sqr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "const"                           shift, and go to state 428
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "implicit"                        shift, and go to state 429
    "explicit"                        shift, and go to state 430
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "=="                              shift, and go to state 431
    "??"                              shift, and go to state 432
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "$f"                              shift, and go to state 753
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 754
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '?'                               shift, and go to state 433
    '&'                               shift, and go to state 434
    '-'                               shift, and go to state 962
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 963
    '('                               shift, and go to state 972
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538
    '#'                               shift, and go to state 437

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 965
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    dim_list                go to state 438
    make_decl               go to state 586
    make_struct_fields      go to state 966
    make_struct_dim         go to state 973
    make_struct_decl        go to state 587
    make_tuple              go to state 969
    make_tuple_call         go to state 588
    make_dim                go to state 974
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 731

  940 array_comprehension: "{{" "for" . variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "$i"    shift, and go to state 655
    "name"  shift, and go to state 656

    variable_name_with_pos_list  go to state 975


State 732

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'
  894 make_map_tuple: expr . "=>" expr
  895               | expr .

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "=>"   shift, and go to state 976
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 895 (make_map_tuple)


State 733

  922 make_table: make_map_tuple .

    $default  reduce using rule 922 (make_table)


State 734

  923 make_table: make_table . "end of expression" make_map_tuple
  927 make_table_decl: "{{" make_table . optional_trailing_semicolon_cur_cur

    "end of code block"  shift, and go to state 977
    "end of expression"  shift, and go to state 978
    ";}}"                shift, and go to state 979

    optional_trailing_semicolon_cur_cur  go to state 980


State 735

  287 expression_keyword: "keyword" '<' . $@9 type_declaration_no_options_list '>' $@10 expr

    $default  reduce using rule 285 ($@9)

    $@9  go to state 981


State 736

  276 expr_keyword: "keyword" expr . expression_block
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 778
    "as"                   shift, and go to state 779
    "<<"                   shift, and go to state 788
    ">>"                   shift, and go to state 789
    "++"                   shift, and go to state 790
    "--"                   shift, and go to state 791
    "<="                   shift, and go to state 792
    ">="                   shift, and go to state 795
    "=="                   shift, and go to state 796
    "!="                   shift, and go to state 797
    "->"                   shift, and go to state 798
    "??"                   shift, and go to state 800
    "?."                   shift, and go to state 801
    "?["                   shift, and go to state 802
    "<|"                   shift, and go to state 803
    "|>"                   shift, and go to state 804
    "<<<"                  shift, and go to state 806
    ">>>"                  shift, and go to state 807
    "&&"                   shift, and go to state 810
    "||"                   shift, and go to state 811
    "^^"                   shift, and go to state 812
    ".."                   shift, and go to state 816
    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '?'                    shift, and go to state 818
    '|'                    shift, and go to state 819
    '^'                    shift, and go to state 820
    '&'                    shift, and go to state 821
    '<'                    shift, and go to state 822
    '>'                    shift, and go to state 823
    '-'                    shift, and go to state 824
    '+'                    shift, and go to state 825
    '*'                    shift, and go to state 826
    '/'                    shift, and go to state 827
    '%'                    shift, and go to state 828
    '.'                    shift, and go to state 829
    '['                    shift, and go to state 830

    open_block        go to state 301
    expression_block  go to state 982


State 737

  290 expression_keyword: "type function" '<' . $@11 type_declaration_no_options_list '>' $@12 optional_expr_list_in_braces

    $default  reduce using rule 288 ($@11)

    $@11  go to state 983


State 738

   37 string_builder_body: string_builder_body . character_sequence
   38                    | string_builder_body . "{" expr optional_format_string "}"
   39 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 172
    STRING_CHARACTER_ESC  shift, and go to state 173
    "end of the string"   shift, and go to state 984
    "{"                   shift, and go to state 985

    character_sequence  go to state 986


State 739

  939 array_comprehension: "begin of code block" "for" . variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "$i"    shift, and go to state 655
    "name"  shift, and go to state 656

    variable_name_with_pos_list  go to state 987


State 740

  926 make_table_decl: "begin of code block" optional_expr_map_tuple_list . "end of code block"

    "end of code block"  shift, and go to state 988


State 741

  924 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 924 (expr_map_tuple_list)


State 742

  282 optional_expr_map_tuple_list: expr_map_tuple_list . optional_comma
  925 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple

    ','  shift, and go to state 989

    $default  reduce using rule 933 (optional_comma)

    optional_comma  go to state 990


State 743

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  475 expr: '-' expr .
  476     | expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 778
    "as"  shift, and go to state 779
    "++"  shift, and go to state 790
    "--"  shift, and go to state 791
    "->"  shift, and go to state 798
    "?."  shift, and go to state 801
    "?["  shift, and go to state 802
    "<|"  shift, and go to state 803
    "|>"  shift, and go to state 804
    '.'   shift, and go to state 829
    '['   shift, and go to state 830

    $default  reduce using rule 475 (expr)


State 744

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  474 expr: '+' expr .
  476     | expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 778
    "as"  shift, and go to state 779
    "++"  shift, and go to state 790
    "--"  shift, and go to state 791
    "->"  shift, and go to state 798
    "?."  shift, and go to state 801
    "?["  shift, and go to state 802
    "<|"  shift, and go to state 803
    "|>"  shift, and go to state 804
    '.'   shift, and go to state 829
    '['   shift, and go to state 830

    $default  reduce using rule 474 (expr)


State 745

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  512     | '*' expr .
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 801
    "?["  shift, and go to state 802
    '.'   shift, and go to state 829
    '['   shift, and go to state 830

    $default  reduce using rule 512 (expr)


State 746

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  473 expr: '~' expr .
  476     | expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 778
    "as"  shift, and go to state 779
    "++"  shift, and go to state 790
    "--"  shift, and go to state 791
    "->"  shift, and go to state 798
    "?."  shift, and go to state 801
    "?["  shift, and go to state 802
    "<|"  shift, and go to state 803
    "|>"  shift, and go to state 804
    '.'   shift, and go to state 829
    '['   shift, and go to state 830

    $default  reduce using rule 473 (expr)


State 747

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  472 expr: '!' expr .
  476     | expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 778
    "as"  shift, and go to state 779
    "++"  shift, and go to state 790
    "--"  shift, and go to state 791
    "->"  shift, and go to state 798
    "?."  shift, and go to state 801
    "?["  shift, and go to state 802
    "<|"  shift, and go to state 803
    "|>"  shift, and go to state 804
    '.'   shift, and go to state 829
    '['   shift, and go to state 830

    $default  reduce using rule 472 (expr)


State 748

  935 array_comprehension: '[' "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 655
    "name"  shift, and go to state 656

    variable_name_with_pos_list  go to state 991


State 749

  936 array_comprehension: '[' "iterator" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "for"  shift, and go to state 992


State 750

  902 make_dim_decl: '[' optional_expr_list . ']'

    ']'  shift, and go to state 993


State 751

  278 optional_expr_list: expr_list . optional_comma
  363 expr_list: expr_list . ',' expr

    ','  shift, and go to state 994

    ','       [reduce using rule 933 (optional_comma)]
    $default  reduce using rule 933 (optional_comma)

    optional_comma  go to state 995


State 752

  362 expr_list: expr .
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 362 (expr_list)


State 753

  842 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  843                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 996


State 754

  296 name_in_namespace: "name" .
  297                  | "name" . "::" "name"
  838 make_struct_fields: "name" . copy_or_move expr
  839                   | "name" . ":=" expr

    "<-"  shift, and go to state 887
    ":="  shift, and go to state 997
    "::"  shift, and go to state 104
    '='   shift, and go to state 889

    $default  reduce using rule 296 (name_in_namespace)

    copy_or_move  go to state 998


State 755

  363 expr_list: expr_list . ',' expr
  502 expr: '(' expr_list . optional_comma ')'

    ','  shift, and go to state 994

    $default  reduce using rule 933 (optional_comma)

    optional_comma  go to state 999


State 756

  840 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  841                   | make_struct_fields . ',' "name" ":=" expr
  844                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  845                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  848 make_struct_single: make_struct_fields . optional_comma

    ','  shift, and go to state 1000

    $default  reduce using rule 933 (optional_comma)

    optional_comma  go to state 1001


State 757

  503 expr: '(' make_struct_single . ')'

    ')'  shift, and go to state 1002


State 758

  369 block_or_lambda: '@' '@' .
  438 func_addr_expr: '@' '@' . func_addr_name
  441               | '@' '@' . '<' $@24 type_declaration_no_options '>' $@25 func_addr_name
  444               | '@' '@' . '<' $@26 optional_function_argument_list optional_function_type '>' $@27 func_addr_name
  562 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 62
    "$i"    shift, and go to state 1003
    "$c"    shift, and go to state 1004
    "name"  shift, and go to state 63
    '<'     shift, and go to state 1005

    $default  reduce using rule 369 (block_or_lambda)

    name_in_namespace  go to state 1006
    func_addr_name     go to state 1007


State 759

  270 expression_any: expression_label semicolon .

    $default  reduce using rule 270 (expression_any)


State 760

  271 expression_any: expression_goto semicolon .

    $default  reduce using rule 271 (expression_any)


State 761

   82 expression_if_then_else: if_or_static_if expr . expression_block expression_else
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 778
    "as"                   shift, and go to state 779
    "<<"                   shift, and go to state 788
    ">>"                   shift, and go to state 789
    "++"                   shift, and go to state 790
    "--"                   shift, and go to state 791
    "<="                   shift, and go to state 792
    ">="                   shift, and go to state 795
    "=="                   shift, and go to state 796
    "!="                   shift, and go to state 797
    "->"                   shift, and go to state 798
    "??"                   shift, and go to state 800
    "?."                   shift, and go to state 801
    "?["                   shift, and go to state 802
    "<|"                   shift, and go to state 803
    "|>"                   shift, and go to state 804
    "<<<"                  shift, and go to state 806
    ">>>"                  shift, and go to state 807
    "&&"                   shift, and go to state 810
    "||"                   shift, and go to state 811
    "^^"                   shift, and go to state 812
    ".."                   shift, and go to state 816
    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '?'                    shift, and go to state 818
    '|'                    shift, and go to state 819
    '^'                    shift, and go to state 820
    '&'                    shift, and go to state 821
    '<'                    shift, and go to state 822
    '>'                    shift, and go to state 823
    '-'                    shift, and go to state 824
    '+'                    shift, and go to state 825
    '*'                    shift, and go to state 826
    '/'                    shift, and go to state 827
    '%'                    shift, and go to state 828
    '.'                    shift, and go to state 829
    '['                    shift, and go to state 830

    open_block        go to state 301
    expression_block  go to state 1008


State 762

   84 expression_if_then_else: expression_if_one_liner "if" . $@4 expr expression_else_one_liner semicolon

    $default  reduce using rule 83 ($@4)

    $@4  go to state 1009


State 763

  248 expression_block: open_block expressions close_block "finally" . open_block expressions close_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block  go to state 1010


State 764

  384 expr_full_block_assumed_piped: block_or_lambda . $@23 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

    $default  reduce using rule 383 ($@23)

    $@23  go to state 1011


State 765

  250 expr_call_pipe: expression_keyword expr_full_block_assumed_piped .

    $default  reduce using rule 250 (expr_call_pipe)


State 766

  544 expr: name_in_namespace "name" .

    $default  reduce using rule 544 (expr)


State 767

  432 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  433                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  455 expr_call: name_in_namespace '(' . ')'
  456          | name_in_namespace '(' . "uninitialized" ')'
  457          | name_in_namespace '(' . make_struct_single ')'
  458          | name_in_namespace '(' . "uninitialized" make_struct_single ')'
  459          | name_in_namespace '(' . expr_list ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "uninitialized"                   shift, and go to state 1012
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "$f"                              shift, and go to state 753
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 754
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 1013
    '('                               shift, and go to state 536
    ')'                               shift, and go to state 1014
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    expr_list               go to state 1015
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 752
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_fields      go to state 756
    make_struct_single      go to state 1016
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 768

  257 expression_any: expression_delete semicolon .

    $default  reduce using rule 257 (expression_any)


State 769

  264 expression_any: expression_break semicolon .

    $default  reduce using rule 264 (expression_any)


State 770

  265 expression_any: expression_continue semicolon .

    $default  reduce using rule 265 (expression_any)


State 771

  316 expression_return: expression_return_no_pipe semicolon .

    $default  reduce using rule 316 (expression_return)


State 772

  321 expression_yield: expression_yield_no_pipe semicolon .

    $default  reduce using rule 321 (expression_yield)


State 773

  330 optional_in_scope: "inscope" .

    $default  reduce using rule 330 (optional_in_scope)


State 774

  342 expression_let: kwd_let optional_in_scope . let_variable_declaration
  343               | kwd_let optional_in_scope . tuple_expansion_variable_declaration

    "$i"    shift, and go to state 322
    "[["    shift, and go to state 1017
    "name"  shift, and go to state 323
    '('     shift, and go to state 1018

    tuple_expansion_variable_declaration  go to state 1019
    let_variable_name_with_pos_list       go to state 324
    let_variable_declaration              go to state 1020


State 775

  382 expr_full_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "capture"  shift, and go to state 1021
    "[["       shift, and go to state 1022

    $default  reduce using rule 377 (optional_capture_list)

    optional_capture_list  go to state 1023


State 776

  291 expr_pipe: expr_assign " <|" . expr_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '$'                    shift, and go to state 537
    '@'                    shift, and go to state 715

    open_block        go to state 301
    expression_block  go to state 716
    block_or_lambda   go to state 717
    expr_block        go to state 1024


State 777

  256 expression_any: expr_assign semicolon .

    $default  reduce using rule 256 (expression_any)


State 778

  521 expr: expr "is" . "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr "is" . basic_type_declaration
  523     | expr "is" . "name"
  561 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 1025
    "bool"      shift, and go to state 333
    "void"      shift, and go to state 334
    "string"    shift, and go to state 335
    "int"       shift, and go to state 337
    "int2"      shift, and go to state 338
    "int3"      shift, and go to state 339
    "int4"      shift, and go to state 340
    "uint"      shift, and go to state 341
    "bitfield"  shift, and go to state 499
    "uint2"     shift, and go to state 343
    "uint3"     shift, and go to state 344
    "uint4"     shift, and go to state 345
    "float"     shift, and go to state 346
    "float2"    shift, and go to state 347
    "float3"    shift, and go to state 348
    "float4"    shift, and go to state 349
    "range"     shift, and go to state 350
    "urange"    shift, and go to state 351
    "range64"   shift, and go to state 352
    "urange64"  shift, and go to state 353
    "int64"     shift, and go to state 355
    "uint64"    shift, and go to state 356
    "double"    shift, and go to state 357
    "int8"      shift, and go to state 360
    "uint8"     shift, and go to state 361
    "int16"     shift, and go to state 362
    "uint16"    shift, and go to state 363
    "$f"        shift, and go to state 1026
    "name"      shift, and go to state 1027

    basic_type_declaration  go to state 1028


State 779

  524 expr: expr "as" . "name"
  527     | expr "as" . "type" '<' $@32 type_declaration '>' $@33
  528     | expr "as" . basic_type_declaration
  559 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1029
    "bool"      shift, and go to state 333
    "void"      shift, and go to state 334
    "string"    shift, and go to state 335
    "int"       shift, and go to state 337
    "int2"      shift, and go to state 338
    "int3"      shift, and go to state 339
    "int4"      shift, and go to state 340
    "uint"      shift, and go to state 341
    "bitfield"  shift, and go to state 499
    "uint2"     shift, and go to state 343
    "uint3"     shift, and go to state 344
    "uint4"     shift, and go to state 345
    "float"     shift, and go to state 346
    "float2"    shift, and go to state 347
    "float3"    shift, and go to state 348
    "float4"    shift, and go to state 349
    "range"     shift, and go to state 350
    "urange"    shift, and go to state 351
    "range64"   shift, and go to state 352
    "urange64"  shift, and go to state 353
    "int64"     shift, and go to state 355
    "uint64"    shift, and go to state 356
    "double"    shift, and go to state 357
    "int8"      shift, and go to state 360
    "uint8"     shift, and go to state 361
    "int16"     shift, and go to state 362
    "uint16"    shift, and go to state 363
    "$f"        shift, and go to state 1030
    "name"      shift, and go to state 1031

    basic_type_declaration  go to state 1032


State 780

  402 expr_assign: expr "+=" . expr
  423 expr_assign_pipe: expr "+=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 502
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "$ <|"                            shift, and go to state 1033
    "@ <|"                            shift, and go to state 1034
    "@@ <|"                           shift, and go to state 1035
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expr_call_pipe          go to state 1036
    expression_keyword      go to state 556
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_assign_pipe_right  go to state 1037
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1038
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 781

  403 expr_assign: expr "-=" . expr
  424 expr_assign_pipe: expr "-=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 502
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "$ <|"                            shift, and go to state 1033
    "@ <|"                            shift, and go to state 1034
    "@@ <|"                           shift, and go to state 1035
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expr_call_pipe          go to state 1036
    expression_keyword      go to state 556
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_assign_pipe_right  go to state 1039
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1040
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 782

  405 expr_assign: expr "/=" . expr
  426 expr_assign_pipe: expr "/=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 502
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "$ <|"                            shift, and go to state 1033
    "@ <|"                            shift, and go to state 1034
    "@@ <|"                           shift, and go to state 1035
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expr_call_pipe          go to state 1036
    expression_keyword      go to state 556
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_assign_pipe_right  go to state 1041
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1042
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 783

  404 expr_assign: expr "*=" . expr
  425 expr_assign_pipe: expr "*=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 502
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "$ <|"                            shift, and go to state 1033
    "@ <|"                            shift, and go to state 1034
    "@@ <|"                           shift, and go to state 1035
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expr_call_pipe          go to state 1036
    expression_keyword      go to state 556
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_assign_pipe_right  go to state 1043
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1044
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 784

  406 expr_assign: expr "%=" . expr
  427 expr_assign_pipe: expr "%=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 502
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "$ <|"                            shift, and go to state 1033
    "@ <|"                            shift, and go to state 1034
    "@@ <|"                           shift, and go to state 1035
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expr_call_pipe          go to state 1036
    expression_keyword      go to state 556
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_assign_pipe_right  go to state 1045
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1046
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 785

  396 expr_assign: expr "&=" . expr
  417 expr_assign_pipe: expr "&=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 502
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "$ <|"                            shift, and go to state 1033
    "@ <|"                            shift, and go to state 1034
    "@@ <|"                           shift, and go to state 1035
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expr_call_pipe          go to state 1036
    expression_keyword      go to state 556
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_assign_pipe_right  go to state 1047
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1048
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 786

  397 expr_assign: expr "|=" . expr
  418 expr_assign_pipe: expr "|=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 502
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "$ <|"                            shift, and go to state 1033
    "@ <|"                            shift, and go to state 1034
    "@@ <|"                           shift, and go to state 1035
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expr_call_pipe          go to state 1036
    expression_keyword      go to state 556
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_assign_pipe_right  go to state 1049
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1050
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 787

  398 expr_assign: expr "^=" . expr
  419 expr_assign_pipe: expr "^=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 502
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "$ <|"                            shift, and go to state 1033
    "@ <|"                            shift, and go to state 1034
    "@@ <|"                           shift, and go to state 1035
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expr_call_pipe          go to state 1036
    expression_keyword      go to state 556
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_assign_pipe_right  go to state 1051
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1052
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 788

  476 expr: expr "<<" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1053
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 789

  477 expr: expr ">>" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1054
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 790

  500 expr: expr "++" .

    $default  reduce using rule 500 (expr)


State 791

  501 expr: expr "--" .

    $default  reduce using rule 501 (expr)


State 792

  489 expr: expr "<=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1055
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 793

  407 expr_assign: expr "<<=" . expr
  428 expr_assign_pipe: expr "<<=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 502
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "$ <|"                            shift, and go to state 1033
    "@ <|"                            shift, and go to state 1034
    "@@ <|"                           shift, and go to state 1035
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expr_call_pipe          go to state 1036
    expression_keyword      go to state 556
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_assign_pipe_right  go to state 1056
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1057
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 794

  408 expr_assign: expr ">>=" . expr
  429 expr_assign_pipe: expr ">>=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 502
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "$ <|"                            shift, and go to state 1033
    "@ <|"                            shift, and go to state 1034
    "@@ <|"                           shift, and go to state 1035
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expr_call_pipe          go to state 1036
    expression_keyword      go to state 556
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_assign_pipe_right  go to state 1058
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1059
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 795

  490 expr: expr ">=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1060
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 796

  487 expr: expr "==" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1061
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 797

  488 expr: expr "!=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1062
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 798

  434 expr_method_call: expr "->" . "name" '(' ')'
  435                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 1063


State 799

  394 expr_assign: expr "<-" . expr
  416 expr_assign_pipe: expr "<-" . expr_assign_pipe_right

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 502
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "$ <|"                            shift, and go to state 1033
    "@ <|"                            shift, and go to state 1034
    "@@ <|"                           shift, and go to state 1035
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expr_call_pipe          go to state 1036
    expression_keyword      go to state 556
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_assign_pipe_right  go to state 1064
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1065
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 800

  517 expr: expr "??" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1066
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 801

  508 expr: expr "?." . "name"
  556 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1067
    "name"  shift, and go to state 1068


State 802

  506 expr: expr "?[" . expr ']'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1069
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 803

  541 expr: expr "<|" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1070
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 804

  542 expr: expr "|>" . expr
  543     | expr "|>" . basic_type_declaration

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1071
    expr_mtag               go to state 584
    basic_type_declaration  go to state 1072
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 805

  395 expr_assign: expr ":=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1073
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 806

  478 expr: expr "<<<" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1074
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 807

  479 expr: expr ">>>" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1075
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 808

  409 expr_assign: expr "<<<=" . expr
  430 expr_assign_pipe: expr "<<<=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 502
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "$ <|"                            shift, and go to state 1033
    "@ <|"                            shift, and go to state 1034
    "@@ <|"                           shift, and go to state 1035
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expr_call_pipe          go to state 1036
    expression_keyword      go to state 556
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_assign_pipe_right  go to state 1076
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1077
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 809

  410 expr_assign: expr ">>>=" . expr
  431 expr_assign_pipe: expr ">>>=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 502
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "$ <|"                            shift, and go to state 1033
    "@ <|"                            shift, and go to state 1034
    "@@ <|"                           shift, and go to state 1035
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expr_call_pipe          go to state 1036
    expression_keyword      go to state 556
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_assign_pipe_right  go to state 1078
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1079
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 810

  494 expr: expr "&&" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1080
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 811

  495 expr: expr "||" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1081
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 812

  496 expr: expr "^^" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1082
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 813

  399 expr_assign: expr "&&=" . expr
  420 expr_assign_pipe: expr "&&=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 502
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "$ <|"                            shift, and go to state 1033
    "@ <|"                            shift, and go to state 1034
    "@@ <|"                           shift, and go to state 1035
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expr_call_pipe          go to state 1036
    expression_keyword      go to state 556
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_assign_pipe_right  go to state 1083
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1084
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 814

  400 expr_assign: expr "||=" . expr
  421 expr_assign_pipe: expr "||=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 502
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "$ <|"                            shift, and go to state 1033
    "@ <|"                            shift, and go to state 1034
    "@@ <|"                           shift, and go to state 1035
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expr_call_pipe          go to state 1036
    expression_keyword      go to state 556
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_assign_pipe_right  go to state 1085
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1086
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 815

  401 expr_assign: expr "^^=" . expr
  422 expr_assign_pipe: expr "^^=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 502
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "$ <|"                            shift, and go to state 1033
    "@ <|"                            shift, and go to state 1034
    "@@ <|"                           shift, and go to state 1035
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expr_call_pipe          go to state 1036
    expression_keyword      go to state 556
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_assign_pipe_right  go to state 1087
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1088
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 816

  497 expr: expr ".." . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1089
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 817

  393 expr_assign: expr '=' . expr
  415 expr_assign_pipe: expr '=' . expr_assign_pipe_right

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 502
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "$ <|"                            shift, and go to state 1033
    "@ <|"                            shift, and go to state 1034
    "@@ <|"                           shift, and go to state 1035
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expr_call_pipe          go to state 1036
    expression_keyword      go to state 556
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_assign_pipe_right  go to state 1090
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1091
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 818

  518 expr: expr '?' . expr ':' expr
  529     | expr '?' . "as" "name"
  532     | expr '?' . "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr '?' . "as" basic_type_declaration
  560 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "as"                              shift, and go to state 1092
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1093
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 819

  492 expr: expr '|' . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1094
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 820

  493 expr: expr '^' . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1095
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 821

  491 expr: expr '&' . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1096
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 822

  485 expr: expr '<' . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1097
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 823

  486 expr: expr '>' . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1098
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 824

  481 expr: expr '-' . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1099
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 825

  480 expr: expr '+' . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1100
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 826

  482 expr: expr '*' . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1101
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 827

  483 expr: expr '/' . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1102
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 828

  484 expr: expr '%' . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1103
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 829

  445 expr_field: expr '.' . "name"
  446           | expr '.' . '.' "name"
  447           | expr '.' . "name" '(' ')'
  448           | expr '.' . "name" '(' expr_list ')'
  449           | expr '.' . "name" '(' '[' make_struct_fields ']' ')'
  450           | expr '.' . basic_type_declaration '(' ')'
  451           | expr '.' . basic_type_declaration '(' expr_list ')'
  454           | expr '.' . $@28 error $@29
  505 expr: expr '.' . '[' expr ']'
  507     | expr '.' . "?[" expr ']'
  509     | expr '.' . "?." "name"
  555 expr_mtag: expr '.' . "$f" '(' expr ')'
  557          | expr '.' . '.' "$f" '(' expr ')'
  558          | expr '.' . "?." "$f" '(' expr ')'

    "bool"      shift, and go to state 333
    "void"      shift, and go to state 334
    "string"    shift, and go to state 335
    "int"       shift, and go to state 337
    "int2"      shift, and go to state 338
    "int3"      shift, and go to state 339
    "int4"      shift, and go to state 340
    "uint"      shift, and go to state 341
    "bitfield"  shift, and go to state 499
    "uint2"     shift, and go to state 343
    "uint3"     shift, and go to state 344
    "uint4"     shift, and go to state 345
    "float"     shift, and go to state 346
    "float2"    shift, and go to state 347
    "float3"    shift, and go to state 348
    "float4"    shift, and go to state 349
    "range"     shift, and go to state 350
    "urange"    shift, and go to state 351
    "range64"   shift, and go to state 352
    "urange64"  shift, and go to state 353
    "int64"     shift, and go to state 355
    "uint64"    shift, and go to state 356
    "double"    shift, and go to state 357
    "int8"      shift, and go to state 360
    "uint8"     shift, and go to state 361
    "int16"     shift, and go to state 362
    "uint16"    shift, and go to state 363
    "?."        shift, and go to state 1104
    "?["        shift, and go to state 1105
    "$f"        shift, and go to state 1106
    "name"      shift, and go to state 1107
    '.'         shift, and go to state 1108
    '['         shift, and go to state 1109

    $default  reduce using rule 452 ($@28)

    $@28                    go to state 1110
    basic_type_declaration  go to state 1111


State 830

  504 expr: expr '[' . expr ']'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1112
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 831

  249 expr_call_pipe: expr expr_full_block_assumed_piped .

    $default  reduce using rule 249 (expr_call_pipe)


State 832

  460 expr_call: basic_type_declaration '(' . ')'
  461          | basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    ')'                               shift, and go to state 1113
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    expr_list               go to state 1114
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 752
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 833

  646 enum_list: enum_list . semicolon
  647          | enum_list . "name" semicolon
  648          | enum_list . "name" '=' expr semicolon
  668 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration open_block $@46 enum_list . $@47 close_block

    "end of line"        shift, and go to state 13
    "name"               shift, and go to state 593
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 667 ($@47)

    semicolon  go to state 594
    $@47       go to state 1115


State 834

  648 enum_list: enum_list "name" '=' . expr semicolon

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1116
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 835

  647 enum_list: enum_list "name" semicolon .

    $default  reduce using rule 647 (enum_list)


State 836

  665 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name open_block $@44 enum_list $@45 close_block .

    $default  reduce using rule 665 (enum_declaration)


State 837

  580 struct_variable_declaration_list: struct_variable_declaration_list "typedef" . $@36 "name" '=' type_declaration semicolon

    $default  reduce using rule 579 ($@36)

    $@36  go to state 1117


State 838

  134 optional_annotation_list: '[' . annotation_list ']'
  587 struct_variable_declaration_list: struct_variable_declaration_list '[' . annotation_list ']' semicolon

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 73
    annotation_list               go to state 1118
    name_in_namespace             go to state 75


State 839

  578 struct_variable_declaration_list: struct_variable_declaration_list semicolon .

    $default  reduce using rule 578 (struct_variable_declaration_list)


State 840

  584 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable "abstract" optional_constant $@38 function_declaration_header semicolon
  586                                 | struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@39 function_declaration_header expression_block

    "def"  shift, and go to state 1119


State 841

  682 optional_struct_variable_declaration_list: open_block struct_variable_declaration_list close_block .

    $default  reduce using rule 682 (optional_struct_variable_declaration_list)


State 842

  582 struct_variable_declaration_list: struct_variable_declaration_list $@37 . structure_variable_declaration semicolon

    "[["  shift, and go to state 231
    '@'   shift, and go to state 232

    $default  reduce using rule 563 (optional_field_annotation)

    metadata_argument_list          go to state 233
    optional_field_annotation       go to state 1120
    structure_variable_declaration  go to state 1121


State 843

  515 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  516     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 1122


State 844

  624 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 624 (let_variable_name_with_pos_list)


State 845

  627 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1123


State 846

  628 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options semicolon .

    $default  reduce using rule 628 (let_variable_declaration)


State 847

  629 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr semicolon
  630                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 502
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "$ <|"                            shift, and go to state 506
    "@ <|"                            shift, and go to state 507
    "@@ <|"                           shift, and go to state 508
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expr_call_pipe          go to state 553
    expression_keyword      go to state 556
    expr_pipe               go to state 1124
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_assign             go to state 682
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1125
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 848

  632 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 632 (let_variable_declaration)


State 849

  249 expr_call_pipe: expr . expr_full_block_assumed_piped
  392 expr_assign: expr .
  393            | expr . '=' expr
  394            | expr . "<-" expr
  395            | expr . ":=" expr
  396            | expr . "&=" expr
  397            | expr . "|=" expr
  398            | expr . "^=" expr
  399            | expr . "&&=" expr
  400            | expr . "||=" expr
  401            | expr . "^^=" expr
  402            | expr . "+=" expr
  403            | expr . "-=" expr
  404            | expr . "*=" expr
  405            | expr . "/=" expr
  406            | expr . "%=" expr
  407            | expr . "<<=" expr
  408            | expr . ">>=" expr
  409            | expr . "<<<=" expr
  410            | expr . ">>>=" expr
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'
  631 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . semicolon

    "is"                 shift, and go to state 778
    "as"                 shift, and go to state 779
    "+="                 shift, and go to state 911
    "-="                 shift, and go to state 912
    "/="                 shift, and go to state 913
    "*="                 shift, and go to state 914
    "%="                 shift, and go to state 915
    "&="                 shift, and go to state 916
    "|="                 shift, and go to state 917
    "^="                 shift, and go to state 918
    "<<"                 shift, and go to state 788
    ">>"                 shift, and go to state 789
    "++"                 shift, and go to state 790
    "--"                 shift, and go to state 791
    "<="                 shift, and go to state 792
    "<<="                shift, and go to state 919
    ">>="                shift, and go to state 920
    ">="                 shift, and go to state 795
    "=="                 shift, and go to state 796
    "!="                 shift, and go to state 797
    "->"                 shift, and go to state 798
    "<-"                 shift, and go to state 921
    "??"                 shift, and go to state 800
    "?."                 shift, and go to state 801
    "?["                 shift, and go to state 802
    "<|"                 shift, and go to state 803
    "|>"                 shift, and go to state 804
    ":="                 shift, and go to state 805
    "<<<"                shift, and go to state 806
    ">>>"                shift, and go to state 807
    "<<<="               shift, and go to state 922
    ">>>="               shift, and go to state 923
    "&&"                 shift, and go to state 810
    "||"                 shift, and go to state 811
    "^^"                 shift, and go to state 812
    "&&="                shift, and go to state 924
    "||="                shift, and go to state 925
    "^^="                shift, and go to state 926
    ".."                 shift, and go to state 816
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '='                  shift, and go to state 927
    '?'                  shift, and go to state 818
    '|'                  shift, and go to state 819
    '^'                  shift, and go to state 820
    '&'                  shift, and go to state 821
    '<'                  shift, and go to state 822
    '>'                  shift, and go to state 823
    '-'                  shift, and go to state 824
    '+'                  shift, and go to state 825
    '*'                  shift, and go to state 826
    '/'                  shift, and go to state 827
    '%'                  shift, and go to state 828
    '.'                  shift, and go to state 829
    '['                  shift, and go to state 830
    '$'                  shift, and go to state 537
    '@'                  shift, and go to state 715

    $default  reduce using rule 392 (expr_assign)

    semicolon                      go to state 1126
    block_or_lambda                go to state 764
    expr_full_block_assumed_piped  go to state 831


State 850

  758 type_declaration_no_options: "type" '<' $@52 type_declaration . '>' $@53
  816 type_declaration: type_declaration . '|' type_declaration_no_options
  817                 | type_declaration . '|' '#'

    '|'  shift, and go to state 439
    '>'  shift, and go to state 1127


State 851

  781 type_declaration_no_options: "array" '<' $@57 type_declaration . '>' $@58
  816 type_declaration: type_declaration . '|' type_declaration_no_options
  817                 | type_declaration . '|' '#'

    '|'  shift, and go to state 439
    '>'  shift, and go to state 1128


State 852

  784 type_declaration_no_options: "table" '<' $@59 table_type_pair . '>' $@60

    '>'  shift, and go to state 1129


State 853

  746 table_type_pair: type_declaration .
  747                | type_declaration . c_or_s type_declaration
  816 type_declaration: type_declaration . '|' type_declaration_no_options
  817                 | type_declaration . '|' '#'

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 644
    '|'                  shift, and go to state 439

    $default  reduce using rule 746 (table_type_pair)

    semicolon  go to state 645
    c_or_s     go to state 1130


State 854

  759 type_declaration_no_options: "typedecl" '(' expr ')' .

    $default  reduce using rule 759 (type_declaration_no_options)


State 855

  787 type_declaration_no_options: "iterator" '<' $@61 type_declaration . '>' $@62
  816 type_declaration: type_declaration . '|' type_declaration_no_options
  817                 | type_declaration . '|' '#'

    '|'  shift, and go to state 439
    '>'  shift, and go to state 1131


State 856

  777 type_declaration_no_options: "smart_ptr" '<' $@55 type_declaration . '>' $@56
  816 type_declaration: type_declaration . '|' type_declaration_no_options
  817                 | type_declaration . '|' '#'

    '|'  shift, and go to state 439
    '>'  shift, and go to state 1132


State 857

  728 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 728 (auto_type_declaration)


State 858

  743 bitfield_type_declaration: "bitfield" bitfield_basic_type_declaration '<' $@50 . bitfield_bits '>' $@51

    "name"  shift, and go to state 1133

    bitfield_bits  go to state 1134


State 859

  791 type_declaration_no_options: "block" '<' $@63 type_declaration . '>' $@64
  816 type_declaration: type_declaration . '|' type_declaration_no_options
  817                 | type_declaration . '|' '#'

    '|'  shift, and go to state 439
    '>'  shift, and go to state 1135


State 860

  794 type_declaration_no_options: "block" '<' $@65 optional_function_argument_list . optional_function_type '>' $@66

    ':'  shift, and go to state 395

    $default  reduce using rule 138 (optional_function_type)

    optional_function_type  go to state 1136


State 861

  798 type_declaration_no_options: "function" '<' $@67 type_declaration . '>' $@68
  816 type_declaration: type_declaration . '|' type_declaration_no_options
  817                 | type_declaration . '|' '#'

    '|'  shift, and go to state 439
    '>'  shift, and go to state 1137


State 862

  801 type_declaration_no_options: "function" '<' $@69 optional_function_argument_list . optional_function_type '>' $@70

    ':'  shift, and go to state 395

    $default  reduce using rule 138 (optional_function_type)

    optional_function_type  go to state 1138


State 863

  805 type_declaration_no_options: "lambda" '<' $@71 type_declaration . '>' $@72
  816 type_declaration: type_declaration . '|' type_declaration_no_options
  817                 | type_declaration . '|' '#'

    '|'  shift, and go to state 439
    '>'  shift, and go to state 1139


State 864

  808 type_declaration_no_options: "lambda" '<' $@73 optional_function_argument_list . optional_function_type '>' $@74

    ':'  shift, and go to state 395

    $default  reduce using rule 138 (optional_function_type)

    optional_function_type  go to state 1140


State 865

  598 tuple_type_list: tuple_type .

    $default  reduce using rule 598 (tuple_type_list)


State 866

  599 tuple_type_list: tuple_type_list . c_or_s tuple_type
  811 type_declaration_no_options: "tuple" '<' $@75 tuple_type_list . '>' $@76

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 644
    '>'                  shift, and go to state 1141

    semicolon  go to state 645
    c_or_s     go to state 1142


State 867

  604 variant_type_list: variant_type .

    $default  reduce using rule 604 (variant_type_list)


State 868

  605 variant_type_list: variant_type_list . c_or_s variant_type
  814 type_declaration_no_options: "variant" '<' $@77 variant_type_list . '>' $@78

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 644
    '>'                  shift, and go to state 1143

    semicolon  go to state 645
    c_or_s     go to state 1144


State 869

  729 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 729 (auto_type_declaration)


State 870

  762 type_declaration_no_options: '$' name_in_namespace '<' $@54 . type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    type_declaration_no_options_list  go to state 1145
    name_in_namespace                 go to state 368
    basic_type_declaration            go to state 369
    structure_type_declaration        go to state 370
    auto_type_declaration             go to state 371
    bitfield_type_declaration         go to state 372
    type_declaration_no_options       go to state 373
    type_declaration                  go to state 1146


State 871

  760 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list . ')'

    ')'  shift, and go to state 1147


State 872

  763 type_declaration_no_options: type_declaration_no_options '-' '[' ']' .

    $default  reduce using rule 763 (type_declaration_no_options)


State 873

  748 dim_list: '[' expr ']' .

    $default  reduce using rule 748 (dim_list)


State 874

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'
  749 dim_list: dim_list '[' expr . ']'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830
    ']'    shift, and go to state 1148


State 875

  734 bitfield_alias_bits: bitfield_alias_bits "name" . semicolon
  735                    | bitfield_alias_bits "name" . '=' expr semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '='                  shift, and go to state 1149

    semicolon  go to state 1150


State 876

  733 bitfield_alias_bits: bitfield_alias_bits semicolon .

    $default  reduce using rule 733 (bitfield_alias_bits)


State 877

  832 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@87 "name" $@88 bitfield_basic_type_declaration open_block $@89 bitfield_alias_bits $@90 . close_block

    "close scope"        shift, and go to state 146
    "end of code block"  shift, and go to state 147

    close_block  go to state 1151


State 878

  597 tuple_type: "name" ':' . type_declaration

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 1152


State 879

  602 tuple_alias_type_list: tuple_alias_type_list tuple_type c_or_s .

    $default  reduce using rule 602 (tuple_alias_type_list)


State 880

  822 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@79 "name" $@80 open_block $@81 tuple_alias_type_list $@82 close_block .

    $default  reduce using rule 822 (tuple_alias_declaration)


State 881

  603 variant_type: "name" ':' . type_declaration

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 1153


State 882

  608 variant_alias_type_list: variant_alias_type_list variant_type c_or_s .

    $default  reduce using rule 608 (variant_alias_type_list)


State 883

  827 variant_alias_declaration: "variant" optional_public_or_private_alias $@83 "name" $@84 open_block $@85 variant_alias_type_list $@86 close_block .

    $default  reduce using rule 827 (variant_alias_declaration)


State 884

  590 function_argument_declaration_type: "$a" '(' expr ')' .

    $default  reduce using rule 590 (function_argument_declaration_type)


State 885

  687 variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1154
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 886

  688 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1155


State 887

  610 copy_or_move: "<-" .

    $default  reduce using rule 610 (copy_or_move)


State 888

  689 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  690                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 1156


State 889

  609 copy_or_move: '=' .

    $default  reduce using rule 609 (copy_or_move)


State 890

  614 variable_declaration_type: variable_name_with_pos_list ':' . type_declaration
  615                          | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 1157


State 891

  612 variable_declaration_no_type: variable_name_with_pos_list '&' .

    $default  reduce using rule 612 (variable_declaration_no_type)


State 892

  613 variable_declaration_no_type: variable_name_with_pos_list copy_or_move . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1158
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 893

  881 make_struct_decl: "struct" '<' $@91 . type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 1159


State 894

  884 make_struct_decl: "class" '<' $@93 . type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 1160


State 895

   88 expression_while_loop: "while" expr expression_block .

    $default  reduce using rule 88 (expression_while_loop)


State 896

   86 expression_for_loop: "for" $@5 variable_name_with_pos_list . "in" expr_list expression_block
  689 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  690                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 1161
    ','   shift, and go to state 888


State 897

  303 new_type_declaration: '<' $@13 . type_declaration '>' $@14

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 1162


State 898

  306 expr_new: "new" new_type_declaration '(' . use_initializer ')'
  307         | "new" new_type_declaration '(' . expr_list ')'
  308         | "new" new_type_declaration '(' . make_struct_single ')'
  309         | "new" new_type_declaration '(' . "uninitialized" make_struct_single ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "uninitialized"                   shift, and go to state 1163
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "$f"                              shift, and go to state 753
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 754
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    $default  reduce using rule 871 (use_initializer)

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    expr_list               go to state 1164
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 752
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_fields      go to state 756
    make_struct_single      go to state 1165
    use_initializer         go to state 1166
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 899

  356 expr_type_info: "typeinfo" '(' name_in_namespace . expr ')'
  357               | "typeinfo" '(' name_in_namespace . '<' "name" '>' expr ')'
  358               | "typeinfo" '(' name_in_namespace . '<' "name" c_or_s "name" '>' expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '<'                               shift, and go to state 1167
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1168
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 900

  360 expr_type_info: "typeinfo" name_in_namespace '<' . "name" '>' '(' expr ')'
  361               | "typeinfo" name_in_namespace '<' . "name" "end of expression" "name" '>' '(' expr ')'

    "name"  shift, and go to state 1169


State 901

  359 expr_type_info: "typeinfo" name_in_namespace '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1170
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 902

  355 expr_type_decl: "type" '<' $@21 . type_declaration '>' $@22

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 1171


State 903

  907 make_dim_decl: "array" "struct" '<' . $@101 type_declaration_no_options '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 905 ($@101)

    $@101  go to state 1172


State 904

  910 make_dim_decl: "array" "tuple" '<' . $@103 tuple_type_list '>' $@104 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 908 ($@103)

    $@103  go to state 1173


State 905

  913 make_dim_decl: "array" "variant" '<' . $@105 variant_type_list '>' $@106 '(' make_variant_dim ')'

    $default  reduce using rule 911 ($@105)

    $@105  go to state 1174


State 906

  917 make_dim_decl: "array" '<' $@107 . type_declaration_no_options '>' $@108 '(' optional_expr_list ')'

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 1175


State 907

  363 expr_list: expr_list . ',' expr
  914 make_dim_decl: "array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 994

    $default  reduce using rule 933 (optional_comma)

    optional_comma  go to state 1176


State 908

  318 expression_return: "return" "<-" expr_pipe .

    $default  reduce using rule 318 (expression_return)


State 909

  315 expression_return_no_pipe: "return" "<-" expr_list .
  363 expr_list: expr_list . ',' expr

    ','  shift, and go to state 910

    $default  reduce using rule 315 (expression_return_no_pipe)


State 910

  363 expr_list: expr_list ',' . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1177
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 911

  402 expr_assign: expr "+=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1178
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 912

  403 expr_assign: expr "-=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1179
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 913

  405 expr_assign: expr "/=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1180
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 914

  404 expr_assign: expr "*=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1181
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 915

  406 expr_assign: expr "%=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1182
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 916

  396 expr_assign: expr "&=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1183
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 917

  397 expr_assign: expr "|=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1184
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 918

  398 expr_assign: expr "^=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1185
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 919

  407 expr_assign: expr "<<=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1186
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 920

  408 expr_assign: expr ">>=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1187
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 921

  394 expr_assign: expr "<-" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1188
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 922

  409 expr_assign: expr "<<<=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1189
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 923

  410 expr_assign: expr ">>>=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1190
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 924

  399 expr_assign: expr "&&=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1191
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 925

  400 expr_assign: expr "||=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1192
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 926

  401 expr_assign: expr "^^=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1193
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 927

  393 expr_assign: expr '=' . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1194
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 928

  324 expression_try_catch: "try" expression_block "recover" . expression_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block        go to state 301
    expression_block  go to state 1195


State 929

  754 type_declaration_no_options: type_declaration_no_options . dim_list
  755                            | type_declaration_no_options . '[' ']'
  763                            | type_declaration_no_options . '-' '[' ']'
  764                            | type_declaration_no_options . "explicit"
  765                            | type_declaration_no_options . "const"
  766                            | type_declaration_no_options . '-' "const"
  767                            | type_declaration_no_options . '&'
  768                            | type_declaration_no_options . '-' '&'
  769                            | type_declaration_no_options . '#'
  770                            | type_declaration_no_options . "implicit"
  771                            | type_declaration_no_options . '-' '#'
  772                            | type_declaration_no_options . "==" "const"
  773                            | type_declaration_no_options . "==" '&'
  774                            | type_declaration_no_options . '?'
  778                            | type_declaration_no_options . "??"
  929 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'
  930                | "table" '<' type_declaration_no_options . c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "const"              shift, and go to state 428
    "implicit"           shift, and go to state 429
    "explicit"           shift, and go to state 430
    "=="                 shift, and go to state 431
    "??"                 shift, and go to state 432
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 644
    '?'                  shift, and go to state 433
    '&'                  shift, and go to state 434
    '>'                  shift, and go to state 1196
    '-'                  shift, and go to state 435
    '['                  shift, and go to state 436
    '#'                  shift, and go to state 437

    semicolon  go to state 645
    c_or_s     go to state 1197
    dim_list   go to state 438


State 930

  928 make_table_decl: "table" '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1198


State 931

  300 expression_delete: "delete" "explicit" expr .
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 300 (expression_delete)


State 932

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  513     | "deref" '(' expr . ')'
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830
    ')'    shift, and go to state 1199


State 933

   93 expression_with_alias: "typedef" $@7 "name" . '=' type_declaration

    '='  shift, and go to state 1200


State 934

   89 expression_with: "with" expr expression_block .

    $default  reduce using rule 89 (expression_with)


State 935

   91 expression_with_alias: "assume" "name" '=' . $@6 expr

    $default  reduce using rule 90 ($@6)

    $@6  go to state 1201


State 936

  346 expr_cast: "cast" '<' $@15 . type_declaration_no_options '>' $@16 expr

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 1202


State 937

  349 expr_cast: "upcast" '<' $@17 . type_declaration_no_options '>' $@18 expr

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 1203


State 938

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  514     | "addr" '(' expr . ')'
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830
    ')'    shift, and go to state 1204


State 939

  352 expr_cast: "reinterpret" '<' $@19 . type_declaration_no_options '>' $@20 expr

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 1205


State 940

   62 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 62 (expression_label)


State 941

   63 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 63 (expression_goto)


State 942

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  545     | "unsafe" '(' expr . ')'
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830
    ')'    shift, and go to state 1206


State 943

  921 make_dim_decl: "fixed_array" '<' $@109 . type_declaration_no_options '>' $@110 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 1207


State 944

  363 expr_list: expr_list . ',' expr
  918 make_dim_decl: "fixed_array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 994

    $default  reduce using rule 933 (optional_comma)

    optional_comma  go to state 1208


State 945

  890 make_struct_decl: "default" '<' $@97 . type_declaration_no_options '>' $@98 use_initializer

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 1209


State 946

  899 make_tuple_call: "tuple" '<' $@99 . tuple_type_list '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 643
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    tuple_type                   go to state 865
    tuple_type_list              go to state 1210
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 648


State 947

  363 expr_list: expr_list . ',' expr
  896 make_tuple_call: "tuple" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 994

    $default  reduce using rule 933 (optional_comma)

    optional_comma  go to state 1211


State 948

  887 make_struct_decl: "variant" '<' $@95 . variant_type_list '>' $@96 '(' use_initializer make_variant_dim ')'

    "name"  shift, and go to state 650

    variant_type       go to state 867
    variant_type_list  go to state 1212


State 949

  251 expr_call_pipe: "generator" '<' type_declaration_no_options . '>' optional_capture_list expr_full_block_assumed_piped
  515 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  516     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  754 type_declaration_no_options: type_declaration_no_options . dim_list
  755                            | type_declaration_no_options . '[' ']'
  763                            | type_declaration_no_options . '-' '[' ']'
  764                            | type_declaration_no_options . "explicit"
  765                            | type_declaration_no_options . "const"
  766                            | type_declaration_no_options . '-' "const"
  767                            | type_declaration_no_options . '&'
  768                            | type_declaration_no_options . '-' '&'
  769                            | type_declaration_no_options . '#'
  770                            | type_declaration_no_options . "implicit"
  771                            | type_declaration_no_options . '-' '#'
  772                            | type_declaration_no_options . "==" "const"
  773                            | type_declaration_no_options . "==" '&'
  774                            | type_declaration_no_options . '?'
  778                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 428
    "implicit"  shift, and go to state 429
    "explicit"  shift, and go to state 430
    "=="        shift, and go to state 431
    "??"        shift, and go to state 432
    '?'         shift, and go to state 433
    '&'         shift, and go to state 434
    '>'         shift, and go to state 1213
    '-'         shift, and go to state 435
    '['         shift, and go to state 436
    '#'         shift, and go to state 437

    dim_list  go to state 438


State 950

  323 expression_yield: "yield" "<-" expr_pipe .

    $default  reduce using rule 323 (expression_yield)


State 951

  249 expr_call_pipe: expr . expr_full_block_assumed_piped
  320 expression_yield_no_pipe: "yield" "<-" expr .
  392 expr_assign: expr .
  393            | expr . '=' expr
  394            | expr . "<-" expr
  395            | expr . ":=" expr
  396            | expr . "&=" expr
  397            | expr . "|=" expr
  398            | expr . "^=" expr
  399            | expr . "&&=" expr
  400            | expr . "||=" expr
  401            | expr . "^^=" expr
  402            | expr . "+=" expr
  403            | expr . "-=" expr
  404            | expr . "*=" expr
  405            | expr . "/=" expr
  406            | expr . "%=" expr
  407            | expr . "<<=" expr
  408            | expr . ">>=" expr
  409            | expr . "<<<=" expr
  410            | expr . ">>>=" expr
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 778
    "as"    shift, and go to state 779
    "+="    shift, and go to state 911
    "-="    shift, and go to state 912
    "/="    shift, and go to state 913
    "*="    shift, and go to state 914
    "%="    shift, and go to state 915
    "&="    shift, and go to state 916
    "|="    shift, and go to state 917
    "^="    shift, and go to state 918
    "<<"    shift, and go to state 788
    ">>"    shift, and go to state 789
    "++"    shift, and go to state 790
    "--"    shift, and go to state 791
    "<="    shift, and go to state 792
    "<<="   shift, and go to state 919
    ">>="   shift, and go to state 920
    ">="    shift, and go to state 795
    "=="    shift, and go to state 796
    "!="    shift, and go to state 797
    "->"    shift, and go to state 798
    "<-"    shift, and go to state 921
    "??"    shift, and go to state 800
    "?."    shift, and go to state 801
    "?["    shift, and go to state 802
    "<|"    shift, and go to state 803
    "|>"    shift, and go to state 804
    ":="    shift, and go to state 805
    "<<<"   shift, and go to state 806
    ">>>"   shift, and go to state 807
    "<<<="  shift, and go to state 922
    ">>>="  shift, and go to state 923
    "&&"    shift, and go to state 810
    "||"    shift, and go to state 811
    "^^"    shift, and go to state 812
    "&&="   shift, and go to state 924
    "||="   shift, and go to state 925
    "^^="   shift, and go to state 926
    ".."    shift, and go to state 816
    '='     shift, and go to state 927
    '?'     shift, and go to state 818
    '|'     shift, and go to state 819
    '^'     shift, and go to state 820
    '&'     shift, and go to state 821
    '<'     shift, and go to state 822
    '>'     shift, and go to state 823
    '-'     shift, and go to state 824
    '+'     shift, and go to state 825
    '*'     shift, and go to state 826
    '/'     shift, and go to state 827
    '%'     shift, and go to state 828
    '.'     shift, and go to state 829
    '['     shift, and go to state 830
    '$'     shift, and go to state 537
    '@'     shift, and go to state 715

    " <|"     reduce using rule 392 (expr_assign)
    $default  reduce using rule 320 (expression_yield_no_pipe)

    block_or_lambda                go to state 764
    expr_full_block_assumed_piped  go to state 831


State 952

  369 block_or_lambda: '@' '@' .

    $default  reduce using rule 369 (block_or_lambda)


State 953

  381 expr_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "capture"  shift, and go to state 1021
    "[["       shift, and go to state 1022

    $default  reduce using rule 377 (optional_capture_list)

    optional_capture_list  go to state 1214


State 954

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  547 expr_mtag: "$$" '(' expr . ')'
  555          | expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830
    ')'    shift, and go to state 1215


State 955

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  548 expr_mtag: "$i" '(' expr . ')'
  555          | expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830
    ')'    shift, and go to state 1216


State 956

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  549 expr_mtag: "$v" '(' expr . ')'
  555          | expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830
    ')'    shift, and go to state 1217


State 957

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  550 expr_mtag: "$b" '(' expr . ')'
  555          | expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830
    ')'    shift, and go to state 1218


State 958

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  551 expr_mtag: "$a" '(' expr . ')'
  555          | expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830
    ')'    shift, and go to state 1219


State 959

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  553 expr_mtag: "$c" '(' expr . ')' '(' ')'
  554          | "$c" '(' expr . ')' '(' expr_list ')'
  555          | expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830
    ')'    shift, and go to state 1220


State 960

  689 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  690                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  937 array_comprehension: "[[" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']' ']'

    "in"  shift, and go to state 1221
    ','   shift, and go to state 888


State 961

  858 optional_block: "where" . expr_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '$'                    shift, and go to state 537
    '@'                    shift, and go to state 715

    open_block        go to state 301
    expression_block  go to state 716
    block_or_lambda   go to state 717
    expr_block        go to state 1222


State 962

  475 expr: '-' . expr
  763 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  766                            | type_declaration_no_options '-' . "const"
  768                            | type_declaration_no_options '-' . '&'
  771                            | type_declaration_no_options '-' . '#'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "const"                           shift, and go to state 633
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '&'                               shift, and go to state 634
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 1223
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538
    '#'                               shift, and go to state 636

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 743
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 963

  748 dim_list: '[' . expr ']'
  755 type_declaration_no_options: type_declaration_no_options '[' . ']'
  902 make_dim_decl: '[' . optional_expr_list ']'
  935 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  936                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "for"                             shift, and go to state 748
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "iterator"                        shift, and go to state 749
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    ']'                               shift, and go to state 637
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    ']'  [reduce using rule 277 (optional_expr_list)]

    string_builder          go to state 539
    expr_reader             go to state 540
    optional_expr_list      go to state 750
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    expr_list               go to state 751
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1224
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 964

  502 expr: '(' . expr_list optional_comma ')'
  503     | '(' . make_struct_single ')'
  875 make_struct_decl: "[[" type_declaration_no_options '(' . ')' optional_block optional_trailing_delim_sqr_sqr
  876                 | "[[" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "$f"                              shift, and go to state 753
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 754
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    ')'                               shift, and go to state 1225
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    expr_list               go to state 755
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 752
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_fields      go to state 756
    make_struct_single      go to state 757
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 965

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'
  891 make_tuple: expr .
  892           | expr . "=>" expr

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "=>"   shift, and go to state 1226
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 891 (make_tuple)


State 966

  840 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  841                   | make_struct_fields . ',' "name" ":=" expr
  844                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  845                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  849 make_struct_dim: make_struct_fields .

    ','  shift, and go to state 1227

    $default  reduce using rule 849 (make_struct_dim)


State 967

  850 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  873 make_struct_decl: "[[" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"              shift, and go to state 961
    "end of expression"  shift, and go to state 1228

    $default  reduce using rule 857 (optional_block)

    optional_block  go to state 1229


State 968

  874 make_struct_decl: "[[" type_declaration_no_options optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1230
    ",]]"  shift, and go to state 1231
    ']'    shift, and go to state 1232

    optional_trailing_delim_sqr_sqr  go to state 1233


State 969

  893 make_tuple: make_tuple . ',' expr
  900 make_dim: make_tuple .

    ','  shift, and go to state 1234

    $default  reduce using rule 900 (make_dim)


State 970

  901 make_dim: make_dim . "end of expression" make_tuple
  903 make_dim_decl: "[[" type_declaration_no_options make_dim . optional_trailing_semicolon_sqr_sqr

    "end of expression"  shift, and go to state 1235
    ";]]"                shift, and go to state 1236
    ']'                  shift, and go to state 1237

    optional_trailing_semicolon_sqr_sqr  go to state 1238


State 971

  689 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  690                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  938 array_comprehension: "[{" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "in"  shift, and go to state 1239
    ','   shift, and go to state 888


State 972

  502 expr: '(' . expr_list optional_comma ')'
  503     | '(' . make_struct_single ')'
  878 make_struct_decl: "[{" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "$f"                              shift, and go to state 753
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 754
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    ')'                               shift, and go to state 1240
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    expr_list               go to state 755
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 752
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_fields      go to state 756
    make_struct_single      go to state 757
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 973

  850 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  877 make_struct_decl: "[{" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"              shift, and go to state 961
    "end of expression"  shift, and go to state 1228

    $default  reduce using rule 857 (optional_block)

    optional_block  go to state 1241


State 974

  901 make_dim: make_dim . "end of expression" make_tuple
  904 make_dim_decl: "[{" type_declaration_no_options make_dim . optional_trailing_semicolon_cur_sqr

    "end of code block"  shift, and go to state 1242
    "end of expression"  shift, and go to state 1235
    ";}]"                shift, and go to state 1243

    optional_trailing_semicolon_cur_sqr  go to state 1244


State 975

  689 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  690                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  940 array_comprehension: "{{" "for" variable_name_with_pos_list . "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "in"  shift, and go to state 1245
    ','   shift, and go to state 888


State 976

  894 make_map_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1246
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 977

  859 optional_trailing_semicolon_cur_cur: "end of code block" . "end of code block"

    "end of code block"  shift, and go to state 1247


State 978

  923 make_table: make_table "end of expression" . make_map_tuple

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 732
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_map_tuple          go to state 1248
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 979

  860 optional_trailing_semicolon_cur_cur: ";}}" .

    $default  reduce using rule 860 (optional_trailing_semicolon_cur_cur)


State 980

  927 make_table_decl: "{{" make_table optional_trailing_semicolon_cur_cur .

    $default  reduce using rule 927 (make_table_decl)


State 981

  287 expression_keyword: "keyword" '<' $@9 . type_declaration_no_options_list '>' $@10 expr

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    type_declaration_no_options_list  go to state 1249
    name_in_namespace                 go to state 368
    basic_type_declaration            go to state 369
    structure_type_declaration        go to state 370
    auto_type_declaration             go to state 371
    bitfield_type_declaration         go to state 372
    type_declaration_no_options       go to state 373
    type_declaration                  go to state 1146


State 982

  276 expr_keyword: "keyword" expr expression_block .

    $default  reduce using rule 276 (expr_keyword)


State 983

  290 expression_keyword: "type function" '<' $@11 . type_declaration_no_options_list '>' $@12 optional_expr_list_in_braces

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    type_declaration_no_options_list  go to state 1250
    name_in_namespace                 go to state 368
    basic_type_declaration            go to state 369
    structure_type_declaration        go to state 370
    auto_type_declaration             go to state 371
    bitfield_type_declaration         go to state 372
    type_declaration_no_options       go to state 373
    type_declaration                  go to state 1146


State 984

   39 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 39 (string_builder)


State 985

   38 string_builder_body: string_builder_body "{" . expr optional_format_string "}"

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1251
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 986

   27 character_sequence: character_sequence . STRING_CHARACTER
   28                   | character_sequence . STRING_CHARACTER_ESC
   37 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 235
    STRING_CHARACTER_ESC  shift, and go to state 236

    $default  reduce using rule 37 (string_builder_body)


State 987

  689 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  690                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  939 array_comprehension: "begin of code block" "for" variable_name_with_pos_list . "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "in"  shift, and go to state 1252
    ','   shift, and go to state 888


State 988

  926 make_table_decl: "begin of code block" optional_expr_map_tuple_list "end of code block" .

    $default  reduce using rule 926 (make_table_decl)


State 989

  925 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple
  934 optional_comma: ',' .

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    $default  reduce using rule 934 (optional_comma)

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 732
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_map_tuple          go to state 1253
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 990

  282 optional_expr_map_tuple_list: expr_map_tuple_list optional_comma .

    $default  reduce using rule 282 (optional_expr_map_tuple_list)


State 991

  689 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  690                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  935 array_comprehension: '[' "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1254
    ','   shift, and go to state 888


State 992

  936 array_comprehension: '[' "iterator" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 655
    "name"  shift, and go to state 656

    variable_name_with_pos_list  go to state 1255


State 993

  902 make_dim_decl: '[' optional_expr_list ']' .

    $default  reduce using rule 902 (make_dim_decl)


State 994

  363 expr_list: expr_list ',' . expr
  934 optional_comma: ',' .

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    $default  reduce using rule 934 (optional_comma)

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1177
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 995

  278 optional_expr_list: expr_list optional_comma .

    $default  reduce using rule 278 (optional_expr_list)


State 996

  842 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  843                   | "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1256
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 997

  839 make_struct_fields: "name" ":=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1257
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 998

  838 make_struct_fields: "name" copy_or_move . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1258
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 999

  502 expr: '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1259


State 1000

  840 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  841                   | make_struct_fields ',' . "name" ":=" expr
  844                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  845                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr
  934 optional_comma: ',' .

    "$f"    shift, and go to state 1260
    "name"  shift, and go to state 1261

    $default  reduce using rule 934 (optional_comma)


State 1001

  848 make_struct_single: make_struct_fields optional_comma .

    $default  reduce using rule 848 (make_struct_single)


State 1002

  503 expr: '(' make_struct_single ')' .

    $default  reduce using rule 503 (expr)


State 1003

  437 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 1262


State 1004

  562 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 1263


State 1005

  441 func_addr_expr: '@' '@' '<' . $@24 type_declaration_no_options '>' $@25 func_addr_name
  444               | '@' '@' '<' . $@26 optional_function_argument_list optional_function_type '>' $@27 func_addr_name

    ':'       reduce using rule 442 ($@26)
    '>'       reduce using rule 442 ($@26)
    '('       reduce using rule 442 ($@26)
    $default  reduce using rule 439 ($@24)

    $@24  go to state 1264
    $@26  go to state 1265


State 1006

  436 func_addr_name: name_in_namespace .

    $default  reduce using rule 436 (func_addr_name)


State 1007

  438 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 438 (func_addr_expr)


State 1008

   82 expression_if_then_else: if_or_static_if expr expression_block . expression_else

    "else"         shift, and go to state 1266
    "elif"         shift, and go to state 1267
    "static_elif"  shift, and go to state 1268

    $default  reduce using rule 67 (expression_else)

    elif_or_static_elif  go to state 1269
    expression_else      go to state 1270


State 1009

   84 expression_if_then_else: expression_if_one_liner "if" $@4 . expr expression_else_one_liner semicolon

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1271
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1010

  248 expression_block: open_block expressions close_block "finally" open_block . expressions close_block

    $default  reduce using rule 273 (expressions)

    expressions  go to state 1272


State 1011

  384 expr_full_block_assumed_piped: block_or_lambda $@23 . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

    '['  shift, and go to state 16

    $default  reduce using rule 133 (optional_annotation_list)

    optional_annotation_list  go to state 1273


State 1012

  456 expr_call: name_in_namespace '(' "uninitialized" . ')'
  458          | name_in_namespace '(' "uninitialized" . make_struct_single ')'

    "$f"    shift, and go to state 753
    "name"  shift, and go to state 1274
    ')'     shift, and go to state 1275

    make_struct_fields  go to state 756
    make_struct_single  go to state 1276


State 1013

  432 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'
  902 make_dim_decl: '[' . optional_expr_list ']'
  935 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  936                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "for"                             shift, and go to state 748
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "iterator"                        shift, and go to state 749
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "$f"                              shift, and go to state 753
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 754
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    $default  reduce using rule 277 (optional_expr_list)

    string_builder          go to state 539
    expr_reader             go to state 540
    optional_expr_list      go to state 750
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    expr_list               go to state 751
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 752
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_fields      go to state 1277
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1014

  455 expr_call: name_in_namespace '(' ')' .

    $default  reduce using rule 455 (expr_call)


State 1015

  363 expr_list: expr_list . ',' expr
  433 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  459 expr_call: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 1278
    ')'  shift, and go to state 1279


State 1016

  457 expr_call: name_in_namespace '(' make_struct_single . ')'

    ')'  shift, and go to state 1280


State 1017

  334 tuple_expansion_variable_declaration: "[[" . tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  335                                     | "[[" . tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  338                                     | "[[" . tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr semicolon
  339                                     | "[[" . tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr_pipe

    "name"  shift, and go to state 1281

    tuple_expansion  go to state 1282


State 1018

  336 tuple_expansion_variable_declaration: '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  337                                     | '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  340                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr semicolon
  341                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr_pipe

    "name"  shift, and go to state 1281

    tuple_expansion  go to state 1283


State 1019

  343 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 343 (expression_let)


State 1020

  342 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 342 (expression_let)


State 1021

  379 optional_capture_list: "capture" . '(' capture_list ')'

    '('  shift, and go to state 1284


State 1022

  378 optional_capture_list: "[[" . capture_list ']' ']'

    "<-"    shift, and go to state 1285
    ":="    shift, and go to state 1286
    "name"  shift, and go to state 1287
    '='     shift, and go to state 1288
    '&'     shift, and go to state 1289

    capture_entry  go to state 1290
    capture_list   go to state 1291


State 1023

  382 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 299

    $default  reduce using rule 135 (optional_function_argument_list)

    optional_function_argument_list  go to state 1292


State 1024

  291 expr_pipe: expr_assign " <|" expr_block .

    $default  reduce using rule 291 (expr_pipe)


State 1025

  521 expr: expr "is" "type" . '<' $@30 type_declaration_no_options '>' $@31

    '<'  shift, and go to state 1293


State 1026

  561 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 1294


State 1027

  523 expr: expr "is" "name" .

    $default  reduce using rule 523 (expr)


State 1028

  522 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 522 (expr)


State 1029

  527 expr: expr "as" "type" . '<' $@32 type_declaration '>' $@33

    '<'  shift, and go to state 1295


State 1030

  559 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1296


State 1031

  524 expr: expr "as" "name" .

    $default  reduce using rule 524 (expr)


State 1032

  528 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 528 (expr)


State 1033

  413 expr_assign_pipe_right: "$ <|" . expr_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '$'                    shift, and go to state 537
    '@'                    shift, and go to state 715

    open_block        go to state 301
    expression_block  go to state 716
    block_or_lambda   go to state 717
    expr_block        go to state 1297


State 1034

  411 expr_assign_pipe_right: "@ <|" . expr_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '$'                    shift, and go to state 537
    '@'                    shift, and go to state 715

    open_block        go to state 301
    expression_block  go to state 716
    block_or_lambda   go to state 717
    expr_block        go to state 1298


State 1035

  412 expr_assign_pipe_right: "@@ <|" . expr_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '$'                    shift, and go to state 537
    '@'                    shift, and go to state 715

    open_block        go to state 301
    expression_block  go to state 716
    block_or_lambda   go to state 717
    expr_block        go to state 1299


State 1036

  414 expr_assign_pipe_right: expr_call_pipe .

    $default  reduce using rule 414 (expr_assign_pipe_right)


State 1037

  423 expr_assign_pipe: expr "+=" expr_assign_pipe_right .

    $default  reduce using rule 423 (expr_assign_pipe)


State 1038

  249 expr_call_pipe: expr . expr_full_block_assumed_piped
  402 expr_assign: expr "+=" expr .
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830
    '$'    shift, and go to state 537
    '@'    shift, and go to state 715

    $default  reduce using rule 402 (expr_assign)

    block_or_lambda                go to state 764
    expr_full_block_assumed_piped  go to state 831


State 1039

  424 expr_assign_pipe: expr "-=" expr_assign_pipe_right .

    $default  reduce using rule 424 (expr_assign_pipe)


State 1040

  249 expr_call_pipe: expr . expr_full_block_assumed_piped
  403 expr_assign: expr "-=" expr .
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830
    '$'    shift, and go to state 537
    '@'    shift, and go to state 715

    $default  reduce using rule 403 (expr_assign)

    block_or_lambda                go to state 764
    expr_full_block_assumed_piped  go to state 831


State 1041

  426 expr_assign_pipe: expr "/=" expr_assign_pipe_right .

    $default  reduce using rule 426 (expr_assign_pipe)


State 1042

  249 expr_call_pipe: expr . expr_full_block_assumed_piped
  405 expr_assign: expr "/=" expr .
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830
    '$'    shift, and go to state 537
    '@'    shift, and go to state 715

    $default  reduce using rule 405 (expr_assign)

    block_or_lambda                go to state 764
    expr_full_block_assumed_piped  go to state 831


State 1043

  425 expr_assign_pipe: expr "*=" expr_assign_pipe_right .

    $default  reduce using rule 425 (expr_assign_pipe)


State 1044

  249 expr_call_pipe: expr . expr_full_block_assumed_piped
  404 expr_assign: expr "*=" expr .
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830
    '$'    shift, and go to state 537
    '@'    shift, and go to state 715

    $default  reduce using rule 404 (expr_assign)

    block_or_lambda                go to state 764
    expr_full_block_assumed_piped  go to state 831


State 1045

  427 expr_assign_pipe: expr "%=" expr_assign_pipe_right .

    $default  reduce using rule 427 (expr_assign_pipe)


State 1046

  249 expr_call_pipe: expr . expr_full_block_assumed_piped
  406 expr_assign: expr "%=" expr .
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830
    '$'    shift, and go to state 537
    '@'    shift, and go to state 715

    $default  reduce using rule 406 (expr_assign)

    block_or_lambda                go to state 764
    expr_full_block_assumed_piped  go to state 831


State 1047

  417 expr_assign_pipe: expr "&=" expr_assign_pipe_right .

    $default  reduce using rule 417 (expr_assign_pipe)


State 1048

  249 expr_call_pipe: expr . expr_full_block_assumed_piped
  396 expr_assign: expr "&=" expr .
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830
    '$'    shift, and go to state 537
    '@'    shift, and go to state 715

    $default  reduce using rule 396 (expr_assign)

    block_or_lambda                go to state 764
    expr_full_block_assumed_piped  go to state 831


State 1049

  418 expr_assign_pipe: expr "|=" expr_assign_pipe_right .

    $default  reduce using rule 418 (expr_assign_pipe)


State 1050

  249 expr_call_pipe: expr . expr_full_block_assumed_piped
  397 expr_assign: expr "|=" expr .
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830
    '$'    shift, and go to state 537
    '@'    shift, and go to state 715

    $default  reduce using rule 397 (expr_assign)

    block_or_lambda                go to state 764
    expr_full_block_assumed_piped  go to state 831


State 1051

  419 expr_assign_pipe: expr "^=" expr_assign_pipe_right .

    $default  reduce using rule 419 (expr_assign_pipe)


State 1052

  249 expr_call_pipe: expr . expr_full_block_assumed_piped
  398 expr_assign: expr "^=" expr .
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830
    '$'    shift, and go to state 537
    '@'    shift, and go to state 715

    $default  reduce using rule 398 (expr_assign)

    block_or_lambda                go to state 764
    expr_full_block_assumed_piped  go to state 831


State 1053

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  476     | expr "<<" expr .
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 778
    "as"  shift, and go to state 779
    "++"  shift, and go to state 790
    "--"  shift, and go to state 791
    "->"  shift, and go to state 798
    "??"  shift, and go to state 800
    "?."  shift, and go to state 801
    "?["  shift, and go to state 802
    "<|"  shift, and go to state 803
    "|>"  shift, and go to state 804
    '-'   shift, and go to state 824
    '+'   shift, and go to state 825
    '*'   shift, and go to state 826
    '/'   shift, and go to state 827
    '%'   shift, and go to state 828
    '.'   shift, and go to state 829
    '['   shift, and go to state 830

    $default  reduce using rule 476 (expr)


State 1054

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  477     | expr ">>" expr .
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 778
    "as"  shift, and go to state 779
    "++"  shift, and go to state 790
    "--"  shift, and go to state 791
    "->"  shift, and go to state 798
    "??"  shift, and go to state 800
    "?."  shift, and go to state 801
    "?["  shift, and go to state 802
    "<|"  shift, and go to state 803
    "|>"  shift, and go to state 804
    '-'   shift, and go to state 824
    '+'   shift, and go to state 825
    '*'   shift, and go to state 826
    '/'   shift, and go to state 827
    '%'   shift, and go to state 828
    '.'   shift, and go to state 829
    '['   shift, and go to state 830

    $default  reduce using rule 477 (expr)


State 1055

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  489     | expr "<=" expr .
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 489 (expr)


State 1056

  428 expr_assign_pipe: expr "<<=" expr_assign_pipe_right .

    $default  reduce using rule 428 (expr_assign_pipe)


State 1057

  249 expr_call_pipe: expr . expr_full_block_assumed_piped
  407 expr_assign: expr "<<=" expr .
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830
    '$'    shift, and go to state 537
    '@'    shift, and go to state 715

    $default  reduce using rule 407 (expr_assign)

    block_or_lambda                go to state 764
    expr_full_block_assumed_piped  go to state 831


State 1058

  429 expr_assign_pipe: expr ">>=" expr_assign_pipe_right .

    $default  reduce using rule 429 (expr_assign_pipe)


State 1059

  249 expr_call_pipe: expr . expr_full_block_assumed_piped
  408 expr_assign: expr ">>=" expr .
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830
    '$'    shift, and go to state 537
    '@'    shift, and go to state 715

    $default  reduce using rule 408 (expr_assign)

    block_or_lambda                go to state 764
    expr_full_block_assumed_piped  go to state 831


State 1060

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  490     | expr ">=" expr .
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 490 (expr)


State 1061

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  487     | expr "==" expr .
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 487 (expr)


State 1062

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  488     | expr "!=" expr .
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 488 (expr)


State 1063

  434 expr_method_call: expr "->" "name" . '(' ')'
  435                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 1300


State 1064

  416 expr_assign_pipe: expr "<-" expr_assign_pipe_right .

    $default  reduce using rule 416 (expr_assign_pipe)


State 1065

  249 expr_call_pipe: expr . expr_full_block_assumed_piped
  394 expr_assign: expr "<-" expr .
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830
    '$'    shift, and go to state 537
    '@'    shift, and go to state 715

    $default  reduce using rule 394 (expr_assign)

    block_or_lambda                go to state 764
    expr_full_block_assumed_piped  go to state 831


State 1066

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  517     | expr "??" expr .
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 778
    "as"  shift, and go to state 779
    "++"  shift, and go to state 790
    "--"  shift, and go to state 791
    "->"  shift, and go to state 798
    "??"  shift, and go to state 800
    "?."  shift, and go to state 801
    "?["  shift, and go to state 802
    "<|"  shift, and go to state 803
    "|>"  shift, and go to state 804
    '.'   shift, and go to state 829
    '['   shift, and go to state 830

    $default  reduce using rule 517 (expr)


State 1067

  556 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1301


State 1068

  508 expr: expr "?." "name" .

    $default  reduce using rule 508 (expr)


State 1069

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  506     | expr "?[" expr . ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830
    ']'    shift, and go to state 1302


State 1070

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  541     | expr "<|" expr .
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 798
    "?."  shift, and go to state 801
    "?["  shift, and go to state 802
    '.'   shift, and go to state 829
    '['   shift, and go to state 830

    $default  reduce using rule 541 (expr)


State 1071

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  542     | expr "|>" expr .
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 798
    "?."  shift, and go to state 801
    "?["  shift, and go to state 802
    '.'   shift, and go to state 829
    '['   shift, and go to state 830

    $default  reduce using rule 542 (expr)


State 1072

  460 expr_call: basic_type_declaration . '(' ')'
  461          | basic_type_declaration . '(' expr_list ')'
  543 expr: expr "|>" basic_type_declaration .

    '('  shift, and go to state 832

    $default  reduce using rule 543 (expr)


State 1073

  395 expr_assign: expr ":=" expr .
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 395 (expr_assign)


State 1074

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  478     | expr "<<<" expr .
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 778
    "as"  shift, and go to state 779
    "++"  shift, and go to state 790
    "--"  shift, and go to state 791
    "->"  shift, and go to state 798
    "??"  shift, and go to state 800
    "?."  shift, and go to state 801
    "?["  shift, and go to state 802
    "<|"  shift, and go to state 803
    "|>"  shift, and go to state 804
    '-'   shift, and go to state 824
    '+'   shift, and go to state 825
    '*'   shift, and go to state 826
    '/'   shift, and go to state 827
    '%'   shift, and go to state 828
    '.'   shift, and go to state 829
    '['   shift, and go to state 830

    $default  reduce using rule 478 (expr)


State 1075

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  479     | expr ">>>" expr .
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 778
    "as"  shift, and go to state 779
    "++"  shift, and go to state 790
    "--"  shift, and go to state 791
    "->"  shift, and go to state 798
    "??"  shift, and go to state 800
    "?."  shift, and go to state 801
    "?["  shift, and go to state 802
    "<|"  shift, and go to state 803
    "|>"  shift, and go to state 804
    '-'   shift, and go to state 824
    '+'   shift, and go to state 825
    '*'   shift, and go to state 826
    '/'   shift, and go to state 827
    '%'   shift, and go to state 828
    '.'   shift, and go to state 829
    '['   shift, and go to state 830

    $default  reduce using rule 479 (expr)


State 1076

  430 expr_assign_pipe: expr "<<<=" expr_assign_pipe_right .

    $default  reduce using rule 430 (expr_assign_pipe)


State 1077

  249 expr_call_pipe: expr . expr_full_block_assumed_piped
  409 expr_assign: expr "<<<=" expr .
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830
    '$'    shift, and go to state 537
    '@'    shift, and go to state 715

    $default  reduce using rule 409 (expr_assign)

    block_or_lambda                go to state 764
    expr_full_block_assumed_piped  go to state 831


State 1078

  431 expr_assign_pipe: expr ">>>=" expr_assign_pipe_right .

    $default  reduce using rule 431 (expr_assign_pipe)


State 1079

  249 expr_call_pipe: expr . expr_full_block_assumed_piped
  410 expr_assign: expr ">>>=" expr .
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830
    '$'    shift, and go to state 537
    '@'    shift, and go to state 715

    $default  reduce using rule 410 (expr_assign)

    block_or_lambda                go to state 764
    expr_full_block_assumed_piped  go to state 831


State 1080

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  494     | expr "&&" expr .
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 494 (expr)


State 1081

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  495     | expr "||" expr .
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "^^"   shift, and go to state 812
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 495 (expr)


State 1082

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  496     | expr "^^" expr .
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 496 (expr)


State 1083

  420 expr_assign_pipe: expr "&&=" expr_assign_pipe_right .

    $default  reduce using rule 420 (expr_assign_pipe)


State 1084

  249 expr_call_pipe: expr . expr_full_block_assumed_piped
  399 expr_assign: expr "&&=" expr .
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830
    '$'    shift, and go to state 537
    '@'    shift, and go to state 715

    $default  reduce using rule 399 (expr_assign)

    block_or_lambda                go to state 764
    expr_full_block_assumed_piped  go to state 831


State 1085

  421 expr_assign_pipe: expr "||=" expr_assign_pipe_right .

    $default  reduce using rule 421 (expr_assign_pipe)


State 1086

  249 expr_call_pipe: expr . expr_full_block_assumed_piped
  400 expr_assign: expr "||=" expr .
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830
    '$'    shift, and go to state 537
    '@'    shift, and go to state 715

    $default  reduce using rule 400 (expr_assign)

    block_or_lambda                go to state 764
    expr_full_block_assumed_piped  go to state 831


State 1087

  422 expr_assign_pipe: expr "^^=" expr_assign_pipe_right .

    $default  reduce using rule 422 (expr_assign_pipe)


State 1088

  249 expr_call_pipe: expr . expr_full_block_assumed_piped
  401 expr_assign: expr "^^=" expr .
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830
    '$'    shift, and go to state 537
    '@'    shift, and go to state 715

    $default  reduce using rule 401 (expr_assign)

    block_or_lambda                go to state 764
    expr_full_block_assumed_piped  go to state 831


State 1089

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  497     | expr ".." expr .
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    ".."  error (nonassociative)

    $default  reduce using rule 497 (expr)


State 1090

  415 expr_assign_pipe: expr '=' expr_assign_pipe_right .

    $default  reduce using rule 415 (expr_assign_pipe)


State 1091

  249 expr_call_pipe: expr . expr_full_block_assumed_piped
  393 expr_assign: expr '=' expr .
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830
    '$'    shift, and go to state 537
    '@'    shift, and go to state 715

    $default  reduce using rule 393 (expr_assign)

    block_or_lambda                go to state 764
    expr_full_block_assumed_piped  go to state 831


State 1092

  529 expr: expr '?' "as" . "name"
  532     | expr '?' "as" . "type" '<' $@34 type_declaration '>' $@35
  533     | expr '?' "as" . basic_type_declaration
  560 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1303
    "bool"      shift, and go to state 333
    "void"      shift, and go to state 334
    "string"    shift, and go to state 335
    "int"       shift, and go to state 337
    "int2"      shift, and go to state 338
    "int3"      shift, and go to state 339
    "int4"      shift, and go to state 340
    "uint"      shift, and go to state 341
    "bitfield"  shift, and go to state 499
    "uint2"     shift, and go to state 343
    "uint3"     shift, and go to state 344
    "uint4"     shift, and go to state 345
    "float"     shift, and go to state 346
    "float2"    shift, and go to state 347
    "float3"    shift, and go to state 348
    "float4"    shift, and go to state 349
    "range"     shift, and go to state 350
    "urange"    shift, and go to state 351
    "range64"   shift, and go to state 352
    "urange64"  shift, and go to state 353
    "int64"     shift, and go to state 355
    "uint64"    shift, and go to state 356
    "double"    shift, and go to state 357
    "int8"      shift, and go to state 360
    "uint8"     shift, and go to state 361
    "int16"     shift, and go to state 362
    "uint16"    shift, and go to state 363
    "$f"        shift, and go to state 1304
    "name"      shift, and go to state 1305

    basic_type_declaration  go to state 1306


State 1093

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  518     | expr '?' expr . ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    ':'    shift, and go to state 1307
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830


State 1094

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  492     | expr '|' expr .
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 492 (expr)


State 1095

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  493     | expr '^' expr .
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 493 (expr)


State 1096

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  491     | expr '&' expr .
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 491 (expr)


State 1097

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  485     | expr '<' expr .
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 485 (expr)


State 1098

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  486     | expr '>' expr .
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 486 (expr)


State 1099

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  481     | expr '-' expr .
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 778
    "as"  shift, and go to state 779
    "++"  shift, and go to state 790
    "--"  shift, and go to state 791
    "->"  shift, and go to state 798
    "??"  shift, and go to state 800
    "?."  shift, and go to state 801
    "?["  shift, and go to state 802
    "<|"  shift, and go to state 803
    "|>"  shift, and go to state 804
    '*'   shift, and go to state 826
    '/'   shift, and go to state 827
    '%'   shift, and go to state 828
    '.'   shift, and go to state 829
    '['   shift, and go to state 830

    $default  reduce using rule 481 (expr)


State 1100

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  480     | expr '+' expr .
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 778
    "as"  shift, and go to state 779
    "++"  shift, and go to state 790
    "--"  shift, and go to state 791
    "->"  shift, and go to state 798
    "??"  shift, and go to state 800
    "?."  shift, and go to state 801
    "?["  shift, and go to state 802
    "<|"  shift, and go to state 803
    "|>"  shift, and go to state 804
    '*'   shift, and go to state 826
    '/'   shift, and go to state 827
    '%'   shift, and go to state 828
    '.'   shift, and go to state 829
    '['   shift, and go to state 830

    $default  reduce using rule 480 (expr)


State 1101

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  482     | expr '*' expr .
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 778
    "as"  shift, and go to state 779
    "++"  shift, and go to state 790
    "--"  shift, and go to state 791
    "->"  shift, and go to state 798
    "??"  shift, and go to state 800
    "?."  shift, and go to state 801
    "?["  shift, and go to state 802
    "<|"  shift, and go to state 803
    "|>"  shift, and go to state 804
    '.'   shift, and go to state 829
    '['   shift, and go to state 830

    $default  reduce using rule 482 (expr)


State 1102

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  483     | expr '/' expr .
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 778
    "as"  shift, and go to state 779
    "++"  shift, and go to state 790
    "--"  shift, and go to state 791
    "->"  shift, and go to state 798
    "??"  shift, and go to state 800
    "?."  shift, and go to state 801
    "?["  shift, and go to state 802
    "<|"  shift, and go to state 803
    "|>"  shift, and go to state 804
    '.'   shift, and go to state 829
    '['   shift, and go to state 830

    $default  reduce using rule 483 (expr)


State 1103

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  484     | expr '%' expr .
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 778
    "as"  shift, and go to state 779
    "++"  shift, and go to state 790
    "--"  shift, and go to state 791
    "->"  shift, and go to state 798
    "??"  shift, and go to state 800
    "?."  shift, and go to state 801
    "?["  shift, and go to state 802
    "<|"  shift, and go to state 803
    "|>"  shift, and go to state 804
    '.'   shift, and go to state 829
    '['   shift, and go to state 830

    $default  reduce using rule 484 (expr)


State 1104

  509 expr: expr '.' "?." . "name"
  558 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1308
    "name"  shift, and go to state 1309


State 1105

  507 expr: expr '.' "?[" . expr ']'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1310
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1106

  555 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1311


State 1107

  445 expr_field: expr '.' "name" .
  447           | expr '.' "name" . '(' ')'
  448           | expr '.' "name" . '(' expr_list ')'
  449           | expr '.' "name" . '(' '[' make_struct_fields ']' ')'

    '('  shift, and go to state 1312

    '('       [reduce using rule 445 (expr_field)]
    $default  reduce using rule 445 (expr_field)


State 1108

  446 expr_field: expr '.' '.' . "name"
  557 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1313
    "name"  shift, and go to state 1314


State 1109

  505 expr: expr '.' '[' . expr ']'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1315
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1110

  454 expr_field: expr '.' $@28 . error $@29

    error  shift, and go to state 1316


State 1111

  450 expr_field: expr '.' basic_type_declaration . '(' ')'
  451           | expr '.' basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 1317


State 1112

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  504     | expr '[' expr . ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830
    ']'    shift, and go to state 1318


State 1113

  460 expr_call: basic_type_declaration '(' ')' .

    $default  reduce using rule 460 (expr_call)


State 1114

  363 expr_list: expr_list . ',' expr
  461 expr_call: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 910
    ')'  shift, and go to state 1319


State 1115

  668 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration open_block $@46 enum_list $@47 . close_block

    "close scope"        shift, and go to state 146
    "end of code block"  shift, and go to state 147

    close_block  go to state 1320


State 1116

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'
  648 enum_list: enum_list "name" '=' expr . semicolon

    "is"                 shift, and go to state 778
    "as"                 shift, and go to state 779
    "<<"                 shift, and go to state 788
    ">>"                 shift, and go to state 789
    "++"                 shift, and go to state 790
    "--"                 shift, and go to state 791
    "<="                 shift, and go to state 792
    ">="                 shift, and go to state 795
    "=="                 shift, and go to state 796
    "!="                 shift, and go to state 797
    "->"                 shift, and go to state 798
    "??"                 shift, and go to state 800
    "?."                 shift, and go to state 801
    "?["                 shift, and go to state 802
    "<|"                 shift, and go to state 803
    "|>"                 shift, and go to state 804
    "<<<"                shift, and go to state 806
    ">>>"                shift, and go to state 807
    "&&"                 shift, and go to state 810
    "||"                 shift, and go to state 811
    "^^"                 shift, and go to state 812
    ".."                 shift, and go to state 816
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '?'                  shift, and go to state 818
    '|'                  shift, and go to state 819
    '^'                  shift, and go to state 820
    '&'                  shift, and go to state 821
    '<'                  shift, and go to state 822
    '>'                  shift, and go to state 823
    '-'                  shift, and go to state 824
    '+'                  shift, and go to state 825
    '*'                  shift, and go to state 826
    '/'                  shift, and go to state 827
    '%'                  shift, and go to state 828
    '.'                  shift, and go to state 829
    '['                  shift, and go to state 830

    semicolon  go to state 1321


State 1117

  580 struct_variable_declaration_list: struct_variable_declaration_list "typedef" $@36 . "name" '=' type_declaration semicolon

    "name"  shift, and go to state 1322


State 1118

  132 annotation_list: annotation_list . ',' annotation_declaration
  134 optional_annotation_list: '[' annotation_list . ']'
  587 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list . ']' semicolon

    ','  shift, and go to state 113
    ']'  shift, and go to state 1323


State 1119

  584 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable "abstract" optional_constant $@38 function_declaration_header semicolon
  586                                 | struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@39 function_declaration_header expression_block

    "public"   shift, and go to state 1324
    "private"  shift, and go to state 1325

    $default  reduce using rule 571 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1326


State 1120

  576 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1327

    $default  reduce using rule 574 (optional_static_member_variable)

    optional_static_member_variable  go to state 1328


State 1121

  582 struct_variable_declaration_list: struct_variable_declaration_list $@37 structure_variable_declaration . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 1329


State 1122

  515 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  516     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  754 type_declaration_no_options: type_declaration_no_options . dim_list
  755                            | type_declaration_no_options . '[' ']'
  763                            | type_declaration_no_options . '-' '[' ']'
  764                            | type_declaration_no_options . "explicit"
  765                            | type_declaration_no_options . "const"
  766                            | type_declaration_no_options . '-' "const"
  767                            | type_declaration_no_options . '&'
  768                            | type_declaration_no_options . '-' '&'
  769                            | type_declaration_no_options . '#'
  770                            | type_declaration_no_options . "implicit"
  771                            | type_declaration_no_options . '-' '#'
  772                            | type_declaration_no_options . "==" "const"
  773                            | type_declaration_no_options . "==" '&'
  774                            | type_declaration_no_options . '?'
  778                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 428
    "implicit"  shift, and go to state 429
    "explicit"  shift, and go to state 430
    "=="        shift, and go to state 431
    "??"        shift, and go to state 432
    '?'         shift, and go to state 433
    '&'         shift, and go to state 434
    '>'         shift, and go to state 1330
    '-'         shift, and go to state 435
    '['         shift, and go to state 436
    '#'         shift, and go to state 437

    dim_list  go to state 438


State 1123

  627 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 627 (let_variable_name_with_pos_list)


State 1124

  630 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 630 (let_variable_declaration)


State 1125

  249 expr_call_pipe: expr . expr_full_block_assumed_piped
  392 expr_assign: expr .
  393            | expr . '=' expr
  394            | expr . "<-" expr
  395            | expr . ":=" expr
  396            | expr . "&=" expr
  397            | expr . "|=" expr
  398            | expr . "^=" expr
  399            | expr . "&&=" expr
  400            | expr . "||=" expr
  401            | expr . "^^=" expr
  402            | expr . "+=" expr
  403            | expr . "-=" expr
  404            | expr . "*=" expr
  405            | expr . "/=" expr
  406            | expr . "%=" expr
  407            | expr . "<<=" expr
  408            | expr . ">>=" expr
  409            | expr . "<<<=" expr
  410            | expr . ">>>=" expr
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'
  629 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . semicolon

    "is"                 shift, and go to state 778
    "as"                 shift, and go to state 779
    "+="                 shift, and go to state 911
    "-="                 shift, and go to state 912
    "/="                 shift, and go to state 913
    "*="                 shift, and go to state 914
    "%="                 shift, and go to state 915
    "&="                 shift, and go to state 916
    "|="                 shift, and go to state 917
    "^="                 shift, and go to state 918
    "<<"                 shift, and go to state 788
    ">>"                 shift, and go to state 789
    "++"                 shift, and go to state 790
    "--"                 shift, and go to state 791
    "<="                 shift, and go to state 792
    "<<="                shift, and go to state 919
    ">>="                shift, and go to state 920
    ">="                 shift, and go to state 795
    "=="                 shift, and go to state 796
    "!="                 shift, and go to state 797
    "->"                 shift, and go to state 798
    "<-"                 shift, and go to state 921
    "??"                 shift, and go to state 800
    "?."                 shift, and go to state 801
    "?["                 shift, and go to state 802
    "<|"                 shift, and go to state 803
    "|>"                 shift, and go to state 804
    ":="                 shift, and go to state 805
    "<<<"                shift, and go to state 806
    ">>>"                shift, and go to state 807
    "<<<="               shift, and go to state 922
    ">>>="               shift, and go to state 923
    "&&"                 shift, and go to state 810
    "||"                 shift, and go to state 811
    "^^"                 shift, and go to state 812
    "&&="                shift, and go to state 924
    "||="                shift, and go to state 925
    "^^="                shift, and go to state 926
    ".."                 shift, and go to state 816
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '='                  shift, and go to state 927
    '?'                  shift, and go to state 818
    '|'                  shift, and go to state 819
    '^'                  shift, and go to state 820
    '&'                  shift, and go to state 821
    '<'                  shift, and go to state 822
    '>'                  shift, and go to state 823
    '-'                  shift, and go to state 824
    '+'                  shift, and go to state 825
    '*'                  shift, and go to state 826
    '/'                  shift, and go to state 827
    '%'                  shift, and go to state 828
    '.'                  shift, and go to state 829
    '['                  shift, and go to state 830
    '$'                  shift, and go to state 537
    '@'                  shift, and go to state 715

    $default  reduce using rule 392 (expr_assign)

    semicolon                      go to state 1331
    block_or_lambda                go to state 764
    expr_full_block_assumed_piped  go to state 831


State 1126

  631 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr semicolon .

    $default  reduce using rule 631 (let_variable_declaration)


State 1127

  758 type_declaration_no_options: "type" '<' $@52 type_declaration '>' . $@53

    $default  reduce using rule 757 ($@53)

    $@53  go to state 1332


State 1128

  781 type_declaration_no_options: "array" '<' $@57 type_declaration '>' . $@58

    $default  reduce using rule 780 ($@58)

    $@58  go to state 1333


State 1129

  784 type_declaration_no_options: "table" '<' $@59 table_type_pair '>' . $@60

    $default  reduce using rule 783 ($@60)

    $@60  go to state 1334


State 1130

  747 table_type_pair: type_declaration c_or_s . type_declaration

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 1335


State 1131

  787 type_declaration_no_options: "iterator" '<' $@61 type_declaration '>' . $@62

    $default  reduce using rule 786 ($@62)

    $@62  go to state 1336


State 1132

  777 type_declaration_no_options: "smart_ptr" '<' $@55 type_declaration '>' . $@56

    $default  reduce using rule 776 ($@56)

    $@56  go to state 1337


State 1133

  730 bitfield_bits: "name" .

    $default  reduce using rule 730 (bitfield_bits)


State 1134

  731 bitfield_bits: bitfield_bits . semicolon "name"
  743 bitfield_type_declaration: "bitfield" bitfield_basic_type_declaration '<' $@50 bitfield_bits . '>' $@51

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '>'                  shift, and go to state 1338

    semicolon  go to state 1339


State 1135

  791 type_declaration_no_options: "block" '<' $@63 type_declaration '>' . $@64

    $default  reduce using rule 790 ($@64)

    $@64  go to state 1340


State 1136

  794 type_declaration_no_options: "block" '<' $@65 optional_function_argument_list optional_function_type . '>' $@66

    '>'  shift, and go to state 1341


State 1137

  798 type_declaration_no_options: "function" '<' $@67 type_declaration '>' . $@68

    $default  reduce using rule 797 ($@68)

    $@68  go to state 1342


State 1138

  801 type_declaration_no_options: "function" '<' $@69 optional_function_argument_list optional_function_type . '>' $@70

    '>'  shift, and go to state 1343


State 1139

  805 type_declaration_no_options: "lambda" '<' $@71 type_declaration '>' . $@72

    $default  reduce using rule 804 ($@72)

    $@72  go to state 1344


State 1140

  808 type_declaration_no_options: "lambda" '<' $@73 optional_function_argument_list optional_function_type . '>' $@74

    '>'  shift, and go to state 1345


State 1141

  811 type_declaration_no_options: "tuple" '<' $@75 tuple_type_list '>' . $@76

    $default  reduce using rule 810 ($@76)

    $@76  go to state 1346


State 1142

  599 tuple_type_list: tuple_type_list c_or_s . tuple_type

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 643
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    tuple_type                   go to state 1347
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 648


State 1143

  814 type_declaration_no_options: "variant" '<' $@77 variant_type_list '>' . $@78

    $default  reduce using rule 813 ($@78)

    $@78  go to state 1348


State 1144

  605 variant_type_list: variant_type_list c_or_s . variant_type

    "name"  shift, and go to state 650

    variant_type  go to state 1349


State 1145

  284 type_declaration_no_options_list: type_declaration_no_options_list . c_or_s type_declaration
  762 type_declaration_no_options: '$' name_in_namespace '<' $@54 type_declaration_no_options_list . '>' '(' optional_expr_list ')'

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 644
    '>'                  shift, and go to state 1350

    semicolon  go to state 645
    c_or_s     go to state 1351


State 1146

  283 type_declaration_no_options_list: type_declaration .
  816 type_declaration: type_declaration . '|' type_declaration_no_options
  817                 | type_declaration . '|' '#'

    '|'  shift, and go to state 439

    $default  reduce using rule 283 (type_declaration_no_options_list)


State 1147

  760 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list ')' .

    $default  reduce using rule 760 (type_declaration_no_options)


State 1148

  749 dim_list: dim_list '[' expr ']' .

    $default  reduce using rule 749 (dim_list)


State 1149

  735 bitfield_alias_bits: bitfield_alias_bits "name" '=' . expr semicolon

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1352
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1150

  734 bitfield_alias_bits: bitfield_alias_bits "name" semicolon .

    $default  reduce using rule 734 (bitfield_alias_bits)


State 1151

  832 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@87 "name" $@88 bitfield_basic_type_declaration open_block $@89 bitfield_alias_bits $@90 close_block .

    $default  reduce using rule 832 (bitfield_alias_declaration)


State 1152

  597 tuple_type: "name" ':' type_declaration .
  816 type_declaration: type_declaration . '|' type_declaration_no_options
  817                 | type_declaration . '|' '#'

    '|'  shift, and go to state 439

    $default  reduce using rule 597 (tuple_type)


State 1153

  603 variant_type: "name" ':' type_declaration .
  816 type_declaration: type_declaration . '|' type_declaration_no_options
  817                 | type_declaration . '|' '#'

    '|'  shift, and go to state 439

    $default  reduce using rule 603 (variant_type)


State 1154

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'
  687 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830
    ')'    shift, and go to state 1353


State 1155

  688 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 688 (variable_name_with_pos_list)


State 1156

  689 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  690                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1354

    $default  reduce using rule 689 (variable_name_with_pos_list)


State 1157

  614 variable_declaration_type: variable_name_with_pos_list ':' type_declaration .
  615                          | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  816 type_declaration: type_declaration . '|' type_declaration_no_options
  817                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 887
    '='   shift, and go to state 889
    '|'   shift, and go to state 439

    $default  reduce using rule 614 (variable_declaration_type)

    copy_or_move  go to state 1355


State 1158

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'
  613 variable_declaration_no_type: variable_name_with_pos_list copy_or_move expr .

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 613 (variable_declaration_no_type)


State 1159

  754 type_declaration_no_options: type_declaration_no_options . dim_list
  755                            | type_declaration_no_options . '[' ']'
  763                            | type_declaration_no_options . '-' '[' ']'
  764                            | type_declaration_no_options . "explicit"
  765                            | type_declaration_no_options . "const"
  766                            | type_declaration_no_options . '-' "const"
  767                            | type_declaration_no_options . '&'
  768                            | type_declaration_no_options . '-' '&'
  769                            | type_declaration_no_options . '#'
  770                            | type_declaration_no_options . "implicit"
  771                            | type_declaration_no_options . '-' '#'
  772                            | type_declaration_no_options . "==" "const"
  773                            | type_declaration_no_options . "==" '&'
  774                            | type_declaration_no_options . '?'
  778                            | type_declaration_no_options . "??"
  881 make_struct_decl: "struct" '<' $@91 type_declaration_no_options . '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 428
    "implicit"  shift, and go to state 429
    "explicit"  shift, and go to state 430
    "=="        shift, and go to state 431
    "??"        shift, and go to state 432
    '?'         shift, and go to state 433
    '&'         shift, and go to state 434
    '>'         shift, and go to state 1356
    '-'         shift, and go to state 435
    '['         shift, and go to state 436
    '#'         shift, and go to state 437

    dim_list  go to state 438


State 1160

  754 type_declaration_no_options: type_declaration_no_options . dim_list
  755                            | type_declaration_no_options . '[' ']'
  763                            | type_declaration_no_options . '-' '[' ']'
  764                            | type_declaration_no_options . "explicit"
  765                            | type_declaration_no_options . "const"
  766                            | type_declaration_no_options . '-' "const"
  767                            | type_declaration_no_options . '&'
  768                            | type_declaration_no_options . '-' '&'
  769                            | type_declaration_no_options . '#'
  770                            | type_declaration_no_options . "implicit"
  771                            | type_declaration_no_options . '-' '#'
  772                            | type_declaration_no_options . "==" "const"
  773                            | type_declaration_no_options . "==" '&'
  774                            | type_declaration_no_options . '?'
  778                            | type_declaration_no_options . "??"
  884 make_struct_decl: "class" '<' $@93 type_declaration_no_options . '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 428
    "implicit"  shift, and go to state 429
    "explicit"  shift, and go to state 430
    "=="        shift, and go to state 431
    "??"        shift, and go to state 432
    '?'         shift, and go to state 433
    '&'         shift, and go to state 434
    '>'         shift, and go to state 1357
    '-'         shift, and go to state 435
    '['         shift, and go to state 436
    '#'         shift, and go to state 437

    dim_list  go to state 438


State 1161

   86 expression_for_loop: "for" $@5 variable_name_with_pos_list "in" . expr_list expression_block

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    expr_list               go to state 1358
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 752
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1162

  303 new_type_declaration: '<' $@13 type_declaration . '>' $@14
  816 type_declaration: type_declaration . '|' type_declaration_no_options
  817                 | type_declaration . '|' '#'

    '|'  shift, and go to state 439
    '>'  shift, and go to state 1359


State 1163

  309 expr_new: "new" new_type_declaration '(' "uninitialized" . make_struct_single ')'
  872 use_initializer: "uninitialized" .

    "$f"    shift, and go to state 753
    "name"  shift, and go to state 1274

    $default  reduce using rule 872 (use_initializer)

    make_struct_fields  go to state 756
    make_struct_single  go to state 1360


State 1164

  307 expr_new: "new" new_type_declaration '(' expr_list . ')'
  363 expr_list: expr_list . ',' expr

    ','  shift, and go to state 910
    ')'  shift, and go to state 1361


State 1165

  308 expr_new: "new" new_type_declaration '(' make_struct_single . ')'

    ')'  shift, and go to state 1362


State 1166

  306 expr_new: "new" new_type_declaration '(' use_initializer . ')'

    ')'  shift, and go to state 1363


State 1167

  357 expr_type_info: "typeinfo" '(' name_in_namespace '<' . "name" '>' expr ')'
  358               | "typeinfo" '(' name_in_namespace '<' . "name" c_or_s "name" '>' expr ')'

    "name"  shift, and go to state 1364


State 1168

  356 expr_type_info: "typeinfo" '(' name_in_namespace expr . ')'
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830
    ')'    shift, and go to state 1365


State 1169

  360 expr_type_info: "typeinfo" name_in_namespace '<' "name" . '>' '(' expr ')'
  361               | "typeinfo" name_in_namespace '<' "name" . "end of expression" "name" '>' '(' expr ')'

    "end of expression"  shift, and go to state 1366
    '>'                  shift, and go to state 1367


State 1170

  359 expr_type_info: "typeinfo" name_in_namespace '(' expr . ')'
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830
    ')'    shift, and go to state 1368


State 1171

  355 expr_type_decl: "type" '<' $@21 type_declaration . '>' $@22
  816 type_declaration: type_declaration . '|' type_declaration_no_options
  817                 | type_declaration . '|' '#'

    '|'  shift, and go to state 439
    '>'  shift, and go to state 1369


State 1172

  907 make_dim_decl: "array" "struct" '<' $@101 . type_declaration_no_options '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 1370


State 1173

  910 make_dim_decl: "array" "tuple" '<' $@103 . tuple_type_list '>' $@104 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 643
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    tuple_type                   go to state 865
    tuple_type_list              go to state 1371
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 648


State 1174

  913 make_dim_decl: "array" "variant" '<' $@105 . variant_type_list '>' $@106 '(' make_variant_dim ')'

    "name"  shift, and go to state 650

    variant_type       go to state 867
    variant_type_list  go to state 1372


State 1175

  754 type_declaration_no_options: type_declaration_no_options . dim_list
  755                            | type_declaration_no_options . '[' ']'
  763                            | type_declaration_no_options . '-' '[' ']'
  764                            | type_declaration_no_options . "explicit"
  765                            | type_declaration_no_options . "const"
  766                            | type_declaration_no_options . '-' "const"
  767                            | type_declaration_no_options . '&'
  768                            | type_declaration_no_options . '-' '&'
  769                            | type_declaration_no_options . '#'
  770                            | type_declaration_no_options . "implicit"
  771                            | type_declaration_no_options . '-' '#'
  772                            | type_declaration_no_options . "==" "const"
  773                            | type_declaration_no_options . "==" '&'
  774                            | type_declaration_no_options . '?'
  778                            | type_declaration_no_options . "??"
  917 make_dim_decl: "array" '<' $@107 type_declaration_no_options . '>' $@108 '(' optional_expr_list ')'

    "const"     shift, and go to state 428
    "implicit"  shift, and go to state 429
    "explicit"  shift, and go to state 430
    "=="        shift, and go to state 431
    "??"        shift, and go to state 432
    '?'         shift, and go to state 433
    '&'         shift, and go to state 434
    '>'         shift, and go to state 1373
    '-'         shift, and go to state 435
    '['         shift, and go to state 436
    '#'         shift, and go to state 437

    dim_list  go to state 438


State 1176

  914 make_dim_decl: "array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1374


State 1177

  363 expr_list: expr_list ',' expr .
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 363 (expr_list)


State 1178

  402 expr_assign: expr "+=" expr .
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 402 (expr_assign)


State 1179

  403 expr_assign: expr "-=" expr .
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 403 (expr_assign)


State 1180

  405 expr_assign: expr "/=" expr .
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 405 (expr_assign)


State 1181

  404 expr_assign: expr "*=" expr .
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 404 (expr_assign)


State 1182

  406 expr_assign: expr "%=" expr .
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 406 (expr_assign)


State 1183

  396 expr_assign: expr "&=" expr .
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 396 (expr_assign)


State 1184

  397 expr_assign: expr "|=" expr .
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 397 (expr_assign)


State 1185

  398 expr_assign: expr "^=" expr .
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 398 (expr_assign)


State 1186

  407 expr_assign: expr "<<=" expr .
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 407 (expr_assign)


State 1187

  408 expr_assign: expr ">>=" expr .
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 408 (expr_assign)


State 1188

  394 expr_assign: expr "<-" expr .
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 394 (expr_assign)


State 1189

  409 expr_assign: expr "<<<=" expr .
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 409 (expr_assign)


State 1190

  410 expr_assign: expr ">>>=" expr .
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 410 (expr_assign)


State 1191

  399 expr_assign: expr "&&=" expr .
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 399 (expr_assign)


State 1192

  400 expr_assign: expr "||=" expr .
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 400 (expr_assign)


State 1193

  401 expr_assign: expr "^^=" expr .
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 401 (expr_assign)


State 1194

  393 expr_assign: expr '=' expr .
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 393 (expr_assign)


State 1195

  324 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 324 (expression_try_catch)


State 1196

  929 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1375


State 1197

  930 make_table_decl: "table" '<' type_declaration_no_options c_or_s . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 1376


State 1198

  928 make_table_decl: "table" '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 928 (make_table_decl)


State 1199

  513 expr: "deref" '(' expr ')' .

    $default  reduce using rule 513 (expr)


State 1200

   93 expression_with_alias: "typedef" $@7 "name" '=' . type_declaration

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 1377


State 1201

   91 expression_with_alias: "assume" "name" '=' $@6 . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1378
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1202

  346 expr_cast: "cast" '<' $@15 type_declaration_no_options . '>' $@16 expr
  754 type_declaration_no_options: type_declaration_no_options . dim_list
  755                            | type_declaration_no_options . '[' ']'
  763                            | type_declaration_no_options . '-' '[' ']'
  764                            | type_declaration_no_options . "explicit"
  765                            | type_declaration_no_options . "const"
  766                            | type_declaration_no_options . '-' "const"
  767                            | type_declaration_no_options . '&'
  768                            | type_declaration_no_options . '-' '&'
  769                            | type_declaration_no_options . '#'
  770                            | type_declaration_no_options . "implicit"
  771                            | type_declaration_no_options . '-' '#'
  772                            | type_declaration_no_options . "==" "const"
  773                            | type_declaration_no_options . "==" '&'
  774                            | type_declaration_no_options . '?'
  778                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 428
    "implicit"  shift, and go to state 429
    "explicit"  shift, and go to state 430
    "=="        shift, and go to state 431
    "??"        shift, and go to state 432
    '?'         shift, and go to state 433
    '&'         shift, and go to state 434
    '>'         shift, and go to state 1379
    '-'         shift, and go to state 435
    '['         shift, and go to state 436
    '#'         shift, and go to state 437

    dim_list  go to state 438


State 1203

  349 expr_cast: "upcast" '<' $@17 type_declaration_no_options . '>' $@18 expr
  754 type_declaration_no_options: type_declaration_no_options . dim_list
  755                            | type_declaration_no_options . '[' ']'
  763                            | type_declaration_no_options . '-' '[' ']'
  764                            | type_declaration_no_options . "explicit"
  765                            | type_declaration_no_options . "const"
  766                            | type_declaration_no_options . '-' "const"
  767                            | type_declaration_no_options . '&'
  768                            | type_declaration_no_options . '-' '&'
  769                            | type_declaration_no_options . '#'
  770                            | type_declaration_no_options . "implicit"
  771                            | type_declaration_no_options . '-' '#'
  772                            | type_declaration_no_options . "==" "const"
  773                            | type_declaration_no_options . "==" '&'
  774                            | type_declaration_no_options . '?'
  778                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 428
    "implicit"  shift, and go to state 429
    "explicit"  shift, and go to state 430
    "=="        shift, and go to state 431
    "??"        shift, and go to state 432
    '?'         shift, and go to state 433
    '&'         shift, and go to state 434
    '>'         shift, and go to state 1380
    '-'         shift, and go to state 435
    '['         shift, and go to state 436
    '#'         shift, and go to state 437

    dim_list  go to state 438


State 1204

  514 expr: "addr" '(' expr ')' .

    $default  reduce using rule 514 (expr)


State 1205

  352 expr_cast: "reinterpret" '<' $@19 type_declaration_no_options . '>' $@20 expr
  754 type_declaration_no_options: type_declaration_no_options . dim_list
  755                            | type_declaration_no_options . '[' ']'
  763                            | type_declaration_no_options . '-' '[' ']'
  764                            | type_declaration_no_options . "explicit"
  765                            | type_declaration_no_options . "const"
  766                            | type_declaration_no_options . '-' "const"
  767                            | type_declaration_no_options . '&'
  768                            | type_declaration_no_options . '-' '&'
  769                            | type_declaration_no_options . '#'
  770                            | type_declaration_no_options . "implicit"
  771                            | type_declaration_no_options . '-' '#'
  772                            | type_declaration_no_options . "==" "const"
  773                            | type_declaration_no_options . "==" '&'
  774                            | type_declaration_no_options . '?'
  778                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 428
    "implicit"  shift, and go to state 429
    "explicit"  shift, and go to state 430
    "=="        shift, and go to state 431
    "??"        shift, and go to state 432
    '?'         shift, and go to state 433
    '&'         shift, and go to state 434
    '>'         shift, and go to state 1381
    '-'         shift, and go to state 435
    '['         shift, and go to state 436
    '#'         shift, and go to state 437

    dim_list  go to state 438


State 1206

  545 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 545 (expr)


State 1207

  754 type_declaration_no_options: type_declaration_no_options . dim_list
  755                            | type_declaration_no_options . '[' ']'
  763                            | type_declaration_no_options . '-' '[' ']'
  764                            | type_declaration_no_options . "explicit"
  765                            | type_declaration_no_options . "const"
  766                            | type_declaration_no_options . '-' "const"
  767                            | type_declaration_no_options . '&'
  768                            | type_declaration_no_options . '-' '&'
  769                            | type_declaration_no_options . '#'
  770                            | type_declaration_no_options . "implicit"
  771                            | type_declaration_no_options . '-' '#'
  772                            | type_declaration_no_options . "==" "const"
  773                            | type_declaration_no_options . "==" '&'
  774                            | type_declaration_no_options . '?'
  778                            | type_declaration_no_options . "??"
  921 make_dim_decl: "fixed_array" '<' $@109 type_declaration_no_options . '>' $@110 '(' expr_list optional_comma ')'

    "const"     shift, and go to state 428
    "implicit"  shift, and go to state 429
    "explicit"  shift, and go to state 430
    "=="        shift, and go to state 431
    "??"        shift, and go to state 432
    '?'         shift, and go to state 433
    '&'         shift, and go to state 434
    '>'         shift, and go to state 1382
    '-'         shift, and go to state 435
    '['         shift, and go to state 436
    '#'         shift, and go to state 437

    dim_list  go to state 438


State 1208

  918 make_dim_decl: "fixed_array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1383


State 1209

  754 type_declaration_no_options: type_declaration_no_options . dim_list
  755                            | type_declaration_no_options . '[' ']'
  763                            | type_declaration_no_options . '-' '[' ']'
  764                            | type_declaration_no_options . "explicit"
  765                            | type_declaration_no_options . "const"
  766                            | type_declaration_no_options . '-' "const"
  767                            | type_declaration_no_options . '&'
  768                            | type_declaration_no_options . '-' '&'
  769                            | type_declaration_no_options . '#'
  770                            | type_declaration_no_options . "implicit"
  771                            | type_declaration_no_options . '-' '#'
  772                            | type_declaration_no_options . "==" "const"
  773                            | type_declaration_no_options . "==" '&'
  774                            | type_declaration_no_options . '?'
  778                            | type_declaration_no_options . "??"
  890 make_struct_decl: "default" '<' $@97 type_declaration_no_options . '>' $@98 use_initializer

    "const"     shift, and go to state 428
    "implicit"  shift, and go to state 429
    "explicit"  shift, and go to state 430
    "=="        shift, and go to state 431
    "??"        shift, and go to state 432
    '?'         shift, and go to state 433
    '&'         shift, and go to state 434
    '>'         shift, and go to state 1384
    '-'         shift, and go to state 435
    '['         shift, and go to state 436
    '#'         shift, and go to state 437

    dim_list  go to state 438


State 1210

  599 tuple_type_list: tuple_type_list . c_or_s tuple_type
  899 make_tuple_call: "tuple" '<' $@99 tuple_type_list . '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 644
    '>'                  shift, and go to state 1385

    semicolon  go to state 645
    c_or_s     go to state 1142


State 1211

  896 make_tuple_call: "tuple" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1386


State 1212

  605 variant_type_list: variant_type_list . c_or_s variant_type
  887 make_struct_decl: "variant" '<' $@95 variant_type_list . '>' $@96 '(' use_initializer make_variant_dim ')'

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 644
    '>'                  shift, and go to state 1387

    semicolon  go to state 645
    c_or_s     go to state 1144


State 1213

  251 expr_call_pipe: "generator" '<' type_declaration_no_options '>' . optional_capture_list expr_full_block_assumed_piped
  515 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  516     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'

    "capture"  shift, and go to state 1021
    "[["       shift, and go to state 1022

    $default  reduce using rule 377 (optional_capture_list)

    optional_capture_list  go to state 1388


State 1214

  381 expr_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 299

    $default  reduce using rule 135 (optional_function_argument_list)

    optional_function_argument_list  go to state 1389


State 1215

  547 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 547 (expr_mtag)


State 1216

  548 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 548 (expr_mtag)


State 1217

  549 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 549 (expr_mtag)


State 1218

  550 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 550 (expr_mtag)


State 1219

  551 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 551 (expr_mtag)


State 1220

  553 expr_mtag: "$c" '(' expr ')' . '(' ')'
  554          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1390


State 1221

  937 array_comprehension: "[[" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']' ']'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    expr_list               go to state 1391
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 752
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1222

  858 optional_block: "where" expr_block .

    $default  reduce using rule 858 (optional_block)


State 1223

  763 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'
  902 make_dim_decl: '[' . optional_expr_list ']'
  935 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  936                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "for"                             shift, and go to state 748
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "iterator"                        shift, and go to state 749
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    ']'                               shift, and go to state 872
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    ']'  [reduce using rule 277 (optional_expr_list)]

    string_builder          go to state 539
    expr_reader             go to state 540
    optional_expr_list      go to state 750
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    expr_list               go to state 751
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 752
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1224

  362 expr_list: expr .
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'
  748 dim_list: '[' expr . ']'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830
    ']'    shift, and go to state 873

    ']'       [reduce using rule 362 (expr_list)]
    $default  reduce using rule 362 (expr_list)


State 1225

  875 make_struct_decl: "[[" type_declaration_no_options '(' ')' . optional_block optional_trailing_delim_sqr_sqr
  876                 | "[[" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "where"  shift, and go to state 961
    "$f"     shift, and go to state 753
    "name"   shift, and go to state 1274

    $default  reduce using rule 857 (optional_block)

    make_struct_fields  go to state 966
    make_struct_dim     go to state 1392
    optional_block      go to state 1393


State 1226

  892 make_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1394
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1227

  840 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  841                   | make_struct_fields ',' . "name" ":=" expr
  844                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  845                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 1260
    "name"  shift, and go to state 1261


State 1228

  850 make_struct_dim: make_struct_dim "end of expression" . make_struct_fields

    "$f"    shift, and go to state 753
    "name"  shift, and go to state 1274

    make_struct_fields  go to state 1395


State 1229

  873 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1230
    ",]]"  shift, and go to state 1231
    ']'    shift, and go to state 1232

    optional_trailing_delim_sqr_sqr  go to state 1396


State 1230

  866 optional_trailing_delim_sqr_sqr: ";]]" .

    $default  reduce using rule 866 (optional_trailing_delim_sqr_sqr)


State 1231

  867 optional_trailing_delim_sqr_sqr: ",]]" .

    $default  reduce using rule 867 (optional_trailing_delim_sqr_sqr)


State 1232

  865 optional_trailing_delim_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1397


State 1233

  874 make_struct_decl: "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 874 (make_struct_decl)


State 1234

  893 make_tuple: make_tuple ',' . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1398
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1235

  901 make_dim: make_dim "end of expression" . make_tuple

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 965
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple              go to state 1399
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1236

  864 optional_trailing_semicolon_sqr_sqr: ";]]" .

    $default  reduce using rule 864 (optional_trailing_semicolon_sqr_sqr)


State 1237

  863 optional_trailing_semicolon_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1400


State 1238

  903 make_dim_decl: "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr .

    $default  reduce using rule 903 (make_dim_decl)


State 1239

  938 array_comprehension: "[{" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    expr_list               go to state 1401
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 752
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1240

  878 make_struct_decl: "[{" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "$f"    shift, and go to state 753
    "name"  shift, and go to state 1274

    make_struct_fields  go to state 966
    make_struct_dim     go to state 1402


State 1241

  877 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    "end of code block"  shift, and go to state 1403
    ";}]"                shift, and go to state 1404
    ",}]"                shift, and go to state 1405

    optional_trailing_delim_cur_sqr  go to state 1406


State 1242

  861 optional_trailing_semicolon_cur_sqr: "end of code block" . ']'

    ']'  shift, and go to state 1407


State 1243

  862 optional_trailing_semicolon_cur_sqr: ";}]" .

    $default  reduce using rule 862 (optional_trailing_semicolon_cur_sqr)


State 1244

  904 make_dim_decl: "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr .

    $default  reduce using rule 904 (make_dim_decl)


State 1245

  940 array_comprehension: "{{" "for" variable_name_with_pos_list "in" . expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    expr_list               go to state 1408
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 752
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1246

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'
  894 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 894 (make_map_tuple)


State 1247

  859 optional_trailing_semicolon_cur_cur: "end of code block" "end of code block" .

    $default  reduce using rule 859 (optional_trailing_semicolon_cur_cur)


State 1248

  923 make_table: make_table "end of expression" make_map_tuple .

    $default  reduce using rule 923 (make_table)


State 1249

  284 type_declaration_no_options_list: type_declaration_no_options_list . c_or_s type_declaration
  287 expression_keyword: "keyword" '<' $@9 type_declaration_no_options_list . '>' $@10 expr

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 644
    '>'                  shift, and go to state 1409

    semicolon  go to state 645
    c_or_s     go to state 1351


State 1250

  284 type_declaration_no_options_list: type_declaration_no_options_list . c_or_s type_declaration
  290 expression_keyword: "type function" '<' $@11 type_declaration_no_options_list . '>' $@12 optional_expr_list_in_braces

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 644
    '>'                  shift, and go to state 1410

    semicolon  go to state 645
    c_or_s     go to state 1351


State 1251

   38 string_builder_body: string_builder_body "{" expr . optional_format_string "}"
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    ':'    shift, and go to state 1411
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 33 (optional_format_string)

    optional_format_string  go to state 1412


State 1252

  939 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" . expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    expr_list               go to state 1413
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 752
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1253

  925 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 925 (expr_map_tuple_list)


State 1254

  935 array_comprehension: '[' "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    expr_list               go to state 1414
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 752
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1255

  689 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  690                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  936 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1415
    ','   shift, and go to state 888


State 1256

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'
  842 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  843                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830
    ')'    shift, and go to state 1416


State 1257

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'
  839 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 839 (make_struct_fields)


State 1258

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'
  838 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 838 (make_struct_fields)


State 1259

  502 expr: '(' expr_list optional_comma ')' .

    $default  reduce using rule 502 (expr)


State 1260

  844 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  845                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1417


State 1261

  840 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  841                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 887
    ":="  shift, and go to state 1418
    '='   shift, and go to state 889

    copy_or_move  go to state 1419


State 1262

  437 func_addr_name: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1420
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1263

  562 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1421
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1264

  441 func_addr_expr: '@' '@' '<' $@24 . type_declaration_no_options '>' $@25 func_addr_name

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 1422


State 1265

  444 func_addr_expr: '@' '@' '<' $@26 . optional_function_argument_list optional_function_type '>' $@27 func_addr_name

    '('  shift, and go to state 299

    $default  reduce using rule 135 (optional_function_argument_list)

    optional_function_argument_list  go to state 1423


State 1266

   68 expression_else: "else" . expression_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block        go to state 301
    expression_block  go to state 1424


State 1267

   65 elif_or_static_elif: "elif" .

    $default  reduce using rule 65 (elif_or_static_elif)


State 1268

   66 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 66 (elif_or_static_elif)


State 1269

   69 expression_else: elif_or_static_elif . expr expression_block expression_else

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1425
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1270

   82 expression_if_then_else: if_or_static_if expr expression_block expression_else .

    $default  reduce using rule 82 (expression_if_then_else)


State 1271

   84 expression_if_then_else: expression_if_one_liner "if" $@4 expr . expression_else_one_liner semicolon
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "else"  shift, and go to state 1426
    "is"    shift, and go to state 778
    "as"    shift, and go to state 779
    "<<"    shift, and go to state 788
    ">>"    shift, and go to state 789
    "++"    shift, and go to state 790
    "--"    shift, and go to state 791
    "<="    shift, and go to state 792
    ">="    shift, and go to state 795
    "=="    shift, and go to state 796
    "!="    shift, and go to state 797
    "->"    shift, and go to state 798
    "??"    shift, and go to state 800
    "?."    shift, and go to state 801
    "?["    shift, and go to state 802
    "<|"    shift, and go to state 803
    "|>"    shift, and go to state 804
    "<<<"   shift, and go to state 806
    ">>>"   shift, and go to state 807
    "&&"    shift, and go to state 810
    "||"    shift, and go to state 811
    "^^"    shift, and go to state 812
    ".."    shift, and go to state 816
    '?'     shift, and go to state 818
    '|'     shift, and go to state 819
    '^'     shift, and go to state 820
    '&'     shift, and go to state 821
    '<'     shift, and go to state 822
    '>'     shift, and go to state 823
    '-'     shift, and go to state 824
    '+'     shift, and go to state 825
    '*'     shift, and go to state 826
    '/'     shift, and go to state 827
    '%'     shift, and go to state 828
    '.'     shift, and go to state 829
    '['     shift, and go to state 830

    $default  reduce using rule 74 (expression_else_one_liner)

    expression_else_one_liner  go to state 1427


State 1272

  248 expression_block: open_block expressions close_block "finally" open_block expressions . close_block
  274 expressions: expressions . expression_any
  275            | expressions . error

    error                             shift, and go to state 465
    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 468
    "if"                              shift, and go to state 469
    "static_if"                       shift, and go to state 470
    "for"                             shift, and go to state 471
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "return"                          shift, and go to state 478
    "null"                            shift, and go to state 479
    "break"                           shift, and go to state 480
    "try"                             shift, and go to state 481
    "table"                           shift, and go to state 482
    "delete"                          shift, and go to state 483
    "deref"                           shift, and go to state 484
    "typedef"                         shift, and go to state 485
    "with"                            shift, and go to state 486
    "assume"                          shift, and go to state 487
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 490
    "continue"                        shift, and go to state 491
    "pass"                            shift, and go to state 492
    "reinterpret"                     shift, and go to state 493
    "label"                           shift, and go to state 494
    "goto"                            shift, and go to state 495
    "unsafe"                          shift, and go to state 496
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 502
    "yield"                           shift, and go to state 503
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "$ <|"                            shift, and go to state 506
    "@ <|"                            shift, and go to state 507
    "@@ <|"                           shift, and go to state 508
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "close scope"                     shift, and go to state 146
    "end of line"                     shift, and go to state 13
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 526
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    "end of code block"               shift, and go to state 147
    "end of expression"               shift, and go to state 14
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder             go to state 539
    expr_reader                go to state 540
    expression_label           go to state 541
    expression_goto            go to state 542
    semicolon                  go to state 543
    if_or_static_if            go to state 544
    expression_if_one_liner    go to state 545
    expression_if_then_else    go to state 546
    expression_for_loop        go to state 547
    expression_unsafe          go to state 548
    expression_while_loop      go to state 549
    expression_with            go to state 550
    expression_with_alias      go to state 551
    close_block                go to state 1428
    expr_call_pipe             go to state 553
    expression_any             go to state 554
    expr_keyword               go to state 555
    expression_keyword         go to state 556
    expr_pipe                  go to state 557
    name_in_namespace          go to state 558
    expression_delete          go to state 559
    expr_new                   go to state 560
    expression_break           go to state 561
    expression_continue        go to state 562
    expression_return_no_pipe  go to state 563
    expression_return          go to state 564
    expression_yield_no_pipe   go to state 565
    expression_yield           go to state 566
    expression_try_catch       go to state 567
    kwd_let                    go to state 568
    expression_let             go to state 569
    expr_cast                  go to state 570
    expr_type_decl             go to state 571
    expr_type_info             go to state 572
    block_or_lambda            go to state 573
    expr_full_block            go to state 574
    expr_numeric_const         go to state 575
    expr_assign                go to state 576
    expr_assign_pipe           go to state 577
    expr_named_call            go to state 578
    expr_method_call           go to state 579
    func_addr_expr             go to state 580
    expr_field                 go to state 581
    expr_call                  go to state 582
    expr                       go to state 583
    expr_mtag                  go to state 584
    basic_type_declaration     go to state 585
    make_decl                  go to state 586
    make_struct_decl           go to state 587
    make_tuple_call            go to state 588
    make_dim_decl              go to state 589
    make_table_decl            go to state 590
    array_comprehension        go to state 591


State 1273

  384 expr_full_block_assumed_piped: block_or_lambda $@23 optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type expression_block

    "capture"  shift, and go to state 1021
    "[["       shift, and go to state 1022

    $default  reduce using rule 377 (optional_capture_list)

    optional_capture_list  go to state 1429


State 1274

  838 make_struct_fields: "name" . copy_or_move expr
  839                   | "name" . ":=" expr

    "<-"  shift, and go to state 887
    ":="  shift, and go to state 997
    '='   shift, and go to state 889

    copy_or_move  go to state 998


State 1275

  456 expr_call: name_in_namespace '(' "uninitialized" ')' .

    $default  reduce using rule 456 (expr_call)


State 1276

  458 expr_call: name_in_namespace '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1430


State 1277

  432 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  840 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  841                   | make_struct_fields . ',' "name" ":=" expr
  844                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  845                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1227
    ']'  shift, and go to state 1431


State 1278

  363 expr_list: expr_list ',' . expr
  433 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 1432
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1177
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1279

  459 expr_call: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 459 (expr_call)


State 1280

  457 expr_call: name_in_namespace '(' make_struct_single ')' .

    $default  reduce using rule 457 (expr_call)


State 1281

  332 tuple_expansion: "name" .

    $default  reduce using rule 332 (tuple_expansion)


State 1282

  333 tuple_expansion: tuple_expansion . ',' "name"
  334 tuple_expansion_variable_declaration: "[[" tuple_expansion . ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  335                                     | "[[" tuple_expansion . ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  338                                     | "[[" tuple_expansion . ']' ']' optional_ref copy_or_move_or_clone expr semicolon
  339                                     | "[[" tuple_expansion . ']' ']' optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 1433
    ']'  shift, and go to state 1434


State 1283

  333 tuple_expansion: tuple_expansion . ',' "name"
  336 tuple_expansion_variable_declaration: '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  337                                     | '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  340                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr semicolon
  341                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 1433
    ')'  shift, and go to state 1435


State 1284

  379 optional_capture_list: "capture" '(' . capture_list ')'

    "<-"    shift, and go to state 1285
    ":="    shift, and go to state 1286
    "name"  shift, and go to state 1287
    '='     shift, and go to state 1288
    '&'     shift, and go to state 1289

    capture_entry  go to state 1290
    capture_list   go to state 1436


State 1285

  372 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1437


State 1286

  373 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1438


State 1287

  374 capture_entry: "name" . '(' "name" ')'

    '('  shift, and go to state 1439


State 1288

  371 capture_entry: '=' . "name"

    "name"  shift, and go to state 1440


State 1289

  370 capture_entry: '&' . "name"

    "name"  shift, and go to state 1441


State 1290

  375 capture_list: capture_entry .

    $default  reduce using rule 375 (capture_list)


State 1291

  376 capture_list: capture_list . ',' capture_entry
  378 optional_capture_list: "[[" capture_list . ']' ']'

    ','  shift, and go to state 1442
    ']'  shift, and go to state 1443


State 1292

  382 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 395

    $default  reduce using rule 138 (optional_function_type)

    optional_function_type  go to state 1444


State 1293

  521 expr: expr "is" "type" '<' . $@30 type_declaration_no_options '>' $@31

    $default  reduce using rule 519 ($@30)

    $@30  go to state 1445


State 1294

  561 expr_mtag: expr "is" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1446
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1295

  527 expr: expr "as" "type" '<' . $@32 type_declaration '>' $@33

    $default  reduce using rule 525 ($@32)

    $@32  go to state 1447


State 1296

  559 expr_mtag: expr "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1448
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1297

  413 expr_assign_pipe_right: "$ <|" expr_block .

    $default  reduce using rule 413 (expr_assign_pipe_right)


State 1298

  411 expr_assign_pipe_right: "@ <|" expr_block .

    $default  reduce using rule 411 (expr_assign_pipe_right)


State 1299

  412 expr_assign_pipe_right: "@@ <|" expr_block .

    $default  reduce using rule 412 (expr_assign_pipe_right)


State 1300

  434 expr_method_call: expr "->" "name" '(' . ')'
  435                 | expr "->" "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    ')'                               shift, and go to state 1449
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    expr_list               go to state 1450
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 752
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1301

  556 expr_mtag: expr "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1451
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1302

  506 expr: expr "?[" expr ']' .

    $default  reduce using rule 506 (expr)


State 1303

  532 expr: expr '?' "as" "type" . '<' $@34 type_declaration '>' $@35

    '<'  shift, and go to state 1452


State 1304

  560 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1453


State 1305

  529 expr: expr '?' "as" "name" .

    $default  reduce using rule 529 (expr)


State 1306

  533 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 533 (expr)


State 1307

  518 expr: expr '?' expr ':' . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1454
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1308

  558 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1455


State 1309

  509 expr: expr '.' "?." "name" .

    $default  reduce using rule 509 (expr)


State 1310

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  507     | expr '.' "?[" expr . ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830
    ']'    shift, and go to state 1456


State 1311

  555 expr_mtag: expr '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1457
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1312

  447 expr_field: expr '.' "name" '(' . ')'
  448           | expr '.' "name" '(' . expr_list ')'
  449           | expr '.' "name" '(' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 1458
    '('                               shift, and go to state 536
    ')'                               shift, and go to state 1459
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    expr_list               go to state 1460
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 752
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1313

  557 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1461


State 1314

  446 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 446 (expr_field)


State 1315

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  505     | expr '.' '[' expr . ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830
    ']'    shift, and go to state 1462


State 1316

  454 expr_field: expr '.' $@28 error . $@29

    $default  reduce using rule 453 ($@29)

    $@29  go to state 1463


State 1317

  450 expr_field: expr '.' basic_type_declaration '(' . ')'
  451           | expr '.' basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    ')'                               shift, and go to state 1464
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    expr_list               go to state 1465
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 752
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1318

  504 expr: expr '[' expr ']' .

    $default  reduce using rule 504 (expr)


State 1319

  461 expr_call: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 461 (expr_call)


State 1320

  668 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration open_block $@46 enum_list $@47 close_block .

    $default  reduce using rule 668 (enum_declaration)


State 1321

  648 enum_list: enum_list "name" '=' expr semicolon .

    $default  reduce using rule 648 (enum_list)


State 1322

  580 struct_variable_declaration_list: struct_variable_declaration_list "typedef" $@36 "name" . '=' type_declaration semicolon

    '='  shift, and go to state 1466


State 1323

  134 optional_annotation_list: '[' annotation_list ']' .
  587 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 134 (optional_annotation_list)

    semicolon  go to state 1467


State 1324

  572 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 572 (optional_public_or_private_member_variable)


State 1325

  573 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 573 (optional_public_or_private_member_variable)


State 1326

  584 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . "abstract" optional_constant $@38 function_declaration_header semicolon
  586                                 | struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@39 function_declaration_header expression_block

    "abstract"  shift, and go to state 1468
    "static"    shift, and go to state 1327

    $default  reduce using rule 574 (optional_static_member_variable)

    optional_static_member_variable  go to state 1469


State 1327

  575 optional_static_member_variable: "static" .

    $default  reduce using rule 575 (optional_static_member_variable)


State 1328

  576 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1470
    "sealed"    shift, and go to state 1471

    $default  reduce using rule 566 (optional_override)

    optional_override  go to state 1472


State 1329

  582 struct_variable_declaration_list: struct_variable_declaration_list $@37 structure_variable_declaration semicolon .

    $default  reduce using rule 582 (struct_variable_declaration_list)


State 1330

  515 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  516     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'

    "capture"  shift, and go to state 1021
    "[["       shift, and go to state 1022

    $default  reduce using rule 377 (optional_capture_list)

    optional_capture_list  go to state 1473


State 1331

  629 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr semicolon .

    $default  reduce using rule 629 (let_variable_declaration)


State 1332

  758 type_declaration_no_options: "type" '<' $@52 type_declaration '>' $@53 .

    $default  reduce using rule 758 (type_declaration_no_options)


State 1333

  781 type_declaration_no_options: "array" '<' $@57 type_declaration '>' $@58 .

    $default  reduce using rule 781 (type_declaration_no_options)


State 1334

  784 type_declaration_no_options: "table" '<' $@59 table_type_pair '>' $@60 .

    $default  reduce using rule 784 (type_declaration_no_options)


State 1335

  747 table_type_pair: type_declaration c_or_s type_declaration .
  816 type_declaration: type_declaration . '|' type_declaration_no_options
  817                 | type_declaration . '|' '#'

    '|'  shift, and go to state 439

    $default  reduce using rule 747 (table_type_pair)


State 1336

  787 type_declaration_no_options: "iterator" '<' $@61 type_declaration '>' $@62 .

    $default  reduce using rule 787 (type_declaration_no_options)


State 1337

  777 type_declaration_no_options: "smart_ptr" '<' $@55 type_declaration '>' $@56 .

    $default  reduce using rule 777 (type_declaration_no_options)


State 1338

  743 bitfield_type_declaration: "bitfield" bitfield_basic_type_declaration '<' $@50 bitfield_bits '>' . $@51

    $default  reduce using rule 742 ($@51)

    $@51  go to state 1474


State 1339

  731 bitfield_bits: bitfield_bits semicolon . "name"

    "name"  shift, and go to state 1475


State 1340

  791 type_declaration_no_options: "block" '<' $@63 type_declaration '>' $@64 .

    $default  reduce using rule 791 (type_declaration_no_options)


State 1341

  794 type_declaration_no_options: "block" '<' $@65 optional_function_argument_list optional_function_type '>' . $@66

    $default  reduce using rule 793 ($@66)

    $@66  go to state 1476


State 1342

  798 type_declaration_no_options: "function" '<' $@67 type_declaration '>' $@68 .

    $default  reduce using rule 798 (type_declaration_no_options)


State 1343

  801 type_declaration_no_options: "function" '<' $@69 optional_function_argument_list optional_function_type '>' . $@70

    $default  reduce using rule 800 ($@70)

    $@70  go to state 1477


State 1344

  805 type_declaration_no_options: "lambda" '<' $@71 type_declaration '>' $@72 .

    $default  reduce using rule 805 (type_declaration_no_options)


State 1345

  808 type_declaration_no_options: "lambda" '<' $@73 optional_function_argument_list optional_function_type '>' . $@74

    $default  reduce using rule 807 ($@74)

    $@74  go to state 1478


State 1346

  811 type_declaration_no_options: "tuple" '<' $@75 tuple_type_list '>' $@76 .

    $default  reduce using rule 811 (type_declaration_no_options)


State 1347

  599 tuple_type_list: tuple_type_list c_or_s tuple_type .

    $default  reduce using rule 599 (tuple_type_list)


State 1348

  814 type_declaration_no_options: "variant" '<' $@77 variant_type_list '>' $@78 .

    $default  reduce using rule 814 (type_declaration_no_options)


State 1349

  605 variant_type_list: variant_type_list c_or_s variant_type .

    $default  reduce using rule 605 (variant_type_list)


State 1350

  762 type_declaration_no_options: '$' name_in_namespace '<' $@54 type_declaration_no_options_list '>' . '(' optional_expr_list ')'

    '('  shift, and go to state 1479


State 1351

  284 type_declaration_no_options_list: type_declaration_no_options_list c_or_s . type_declaration

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 1480


State 1352

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'
  735 bitfield_alias_bits: bitfield_alias_bits "name" '=' expr . semicolon

    "is"                 shift, and go to state 778
    "as"                 shift, and go to state 779
    "<<"                 shift, and go to state 788
    ">>"                 shift, and go to state 789
    "++"                 shift, and go to state 790
    "--"                 shift, and go to state 791
    "<="                 shift, and go to state 792
    ">="                 shift, and go to state 795
    "=="                 shift, and go to state 796
    "!="                 shift, and go to state 797
    "->"                 shift, and go to state 798
    "??"                 shift, and go to state 800
    "?."                 shift, and go to state 801
    "?["                 shift, and go to state 802
    "<|"                 shift, and go to state 803
    "|>"                 shift, and go to state 804
    "<<<"                shift, and go to state 806
    ">>>"                shift, and go to state 807
    "&&"                 shift, and go to state 810
    "||"                 shift, and go to state 811
    "^^"                 shift, and go to state 812
    ".."                 shift, and go to state 816
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '?'                  shift, and go to state 818
    '|'                  shift, and go to state 819
    '^'                  shift, and go to state 820
    '&'                  shift, and go to state 821
    '<'                  shift, and go to state 822
    '>'                  shift, and go to state 823
    '-'                  shift, and go to state 824
    '+'                  shift, and go to state 825
    '*'                  shift, and go to state 826
    '/'                  shift, and go to state 827
    '%'                  shift, and go to state 828
    '.'                  shift, and go to state 829
    '['                  shift, and go to state 830

    semicolon  go to state 1481


State 1353

  687 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 687 (variable_name_with_pos_list)


State 1354

  690 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1482


State 1355

  615 variable_declaration_type: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1483
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1356

  881 make_struct_decl: "struct" '<' $@91 type_declaration_no_options '>' . $@92 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 880 ($@92)

    $@92  go to state 1484


State 1357

  884 make_struct_decl: "class" '<' $@93 type_declaration_no_options '>' . $@94 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 883 ($@94)

    $@94  go to state 1485


State 1358

   86 expression_for_loop: "for" $@5 variable_name_with_pos_list "in" expr_list . expression_block
  363 expr_list: expr_list . ',' expr

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    ','                    shift, and go to state 910

    open_block        go to state 301
    expression_block  go to state 1486


State 1359

  303 new_type_declaration: '<' $@13 type_declaration '>' . $@14

    $default  reduce using rule 302 ($@14)

    $@14  go to state 1487


State 1360

  309 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1488


State 1361

  307 expr_new: "new" new_type_declaration '(' expr_list ')' .

    $default  reduce using rule 307 (expr_new)


State 1362

  308 expr_new: "new" new_type_declaration '(' make_struct_single ')' .

    $default  reduce using rule 308 (expr_new)


State 1363

  306 expr_new: "new" new_type_declaration '(' use_initializer ')' .

    $default  reduce using rule 306 (expr_new)


State 1364

  357 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" . '>' expr ')'
  358               | "typeinfo" '(' name_in_namespace '<' "name" . c_or_s "name" '>' expr ')'

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 644
    '>'                  shift, and go to state 1489

    semicolon  go to state 645
    c_or_s     go to state 1490


State 1365

  356 expr_type_info: "typeinfo" '(' name_in_namespace expr ')' .

    $default  reduce using rule 356 (expr_type_info)


State 1366

  361 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" . "name" '>' '(' expr ')'

    "name"  shift, and go to state 1491


State 1367

  360 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' . '(' expr ')'

    '('  shift, and go to state 1492


State 1368

  359 expr_type_info: "typeinfo" name_in_namespace '(' expr ')' .

    $default  reduce using rule 359 (expr_type_info)


State 1369

  355 expr_type_decl: "type" '<' $@21 type_declaration '>' . $@22

    $default  reduce using rule 354 ($@22)

    $@22  go to state 1493


State 1370

  754 type_declaration_no_options: type_declaration_no_options . dim_list
  755                            | type_declaration_no_options . '[' ']'
  763                            | type_declaration_no_options . '-' '[' ']'
  764                            | type_declaration_no_options . "explicit"
  765                            | type_declaration_no_options . "const"
  766                            | type_declaration_no_options . '-' "const"
  767                            | type_declaration_no_options . '&'
  768                            | type_declaration_no_options . '-' '&'
  769                            | type_declaration_no_options . '#'
  770                            | type_declaration_no_options . "implicit"
  771                            | type_declaration_no_options . '-' '#'
  772                            | type_declaration_no_options . "==" "const"
  773                            | type_declaration_no_options . "==" '&'
  774                            | type_declaration_no_options . '?'
  778                            | type_declaration_no_options . "??"
  907 make_dim_decl: "array" "struct" '<' $@101 type_declaration_no_options . '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 428
    "implicit"  shift, and go to state 429
    "explicit"  shift, and go to state 430
    "=="        shift, and go to state 431
    "??"        shift, and go to state 432
    '?'         shift, and go to state 433
    '&'         shift, and go to state 434
    '>'         shift, and go to state 1494
    '-'         shift, and go to state 435
    '['         shift, and go to state 436
    '#'         shift, and go to state 437

    dim_list  go to state 438


State 1371

  599 tuple_type_list: tuple_type_list . c_or_s tuple_type
  910 make_dim_decl: "array" "tuple" '<' $@103 tuple_type_list . '>' $@104 '(' use_initializer optional_make_struct_dim_decl ')'

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 644
    '>'                  shift, and go to state 1495

    semicolon  go to state 645
    c_or_s     go to state 1142


State 1372

  605 variant_type_list: variant_type_list . c_or_s variant_type
  913 make_dim_decl: "array" "variant" '<' $@105 variant_type_list . '>' $@106 '(' make_variant_dim ')'

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 644
    '>'                  shift, and go to state 1496

    semicolon  go to state 645
    c_or_s     go to state 1144


State 1373

  917 make_dim_decl: "array" '<' $@107 type_declaration_no_options '>' . $@108 '(' optional_expr_list ')'

    $default  reduce using rule 916 ($@108)

    $@108  go to state 1497


State 1374

  914 make_dim_decl: "array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 914 (make_dim_decl)


State 1375

  929 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    $default  reduce using rule 281 (optional_expr_map_tuple_list)

    string_builder                go to state 539
    expr_reader                   go to state 540
    optional_expr_map_tuple_list  go to state 1498
    expression_keyword            go to state 603
    name_in_namespace             go to state 558
    expr_new                      go to state 560
    expr_cast                     go to state 570
    expr_type_decl                go to state 571
    expr_type_info                go to state 572
    block_or_lambda               go to state 573
    expr_full_block               go to state 574
    expr_numeric_const            go to state 575
    expr_named_call               go to state 578
    expr_method_call              go to state 579
    func_addr_expr                go to state 580
    expr_field                    go to state 581
    expr_call                     go to state 582
    expr                          go to state 732
    expr_mtag                     go to state 584
    basic_type_declaration        go to state 585
    make_decl                     go to state 586
    make_struct_decl              go to state 587
    make_map_tuple                go to state 741
    make_tuple_call               go to state 588
    make_dim_decl                 go to state 589
    expr_map_tuple_list           go to state 742
    make_table_decl               go to state 590
    array_comprehension           go to state 591


State 1376

  754 type_declaration_no_options: type_declaration_no_options . dim_list
  755                            | type_declaration_no_options . '[' ']'
  763                            | type_declaration_no_options . '-' '[' ']'
  764                            | type_declaration_no_options . "explicit"
  765                            | type_declaration_no_options . "const"
  766                            | type_declaration_no_options . '-' "const"
  767                            | type_declaration_no_options . '&'
  768                            | type_declaration_no_options . '-' '&'
  769                            | type_declaration_no_options . '#'
  770                            | type_declaration_no_options . "implicit"
  771                            | type_declaration_no_options . '-' '#'
  772                            | type_declaration_no_options . "==" "const"
  773                            | type_declaration_no_options . "==" '&'
  774                            | type_declaration_no_options . '?'
  778                            | type_declaration_no_options . "??"
  930 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'

    "const"     shift, and go to state 428
    "implicit"  shift, and go to state 429
    "explicit"  shift, and go to state 430
    "=="        shift, and go to state 431
    "??"        shift, and go to state 432
    '?'         shift, and go to state 433
    '&'         shift, and go to state 434
    '>'         shift, and go to state 1499
    '-'         shift, and go to state 435
    '['         shift, and go to state 436
    '#'         shift, and go to state 437

    dim_list  go to state 438


State 1377

   93 expression_with_alias: "typedef" $@7 "name" '=' type_declaration .
  816 type_declaration: type_declaration . '|' type_declaration_no_options
  817                 | type_declaration . '|' '#'

    '|'  shift, and go to state 439

    $default  reduce using rule 93 (expression_with_alias)


State 1378

   91 expression_with_alias: "assume" "name" '=' $@6 expr .
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 91 (expression_with_alias)


State 1379

  346 expr_cast: "cast" '<' $@15 type_declaration_no_options '>' . $@16 expr

    $default  reduce using rule 345 ($@16)

    $@16  go to state 1500


State 1380

  349 expr_cast: "upcast" '<' $@17 type_declaration_no_options '>' . $@18 expr

    $default  reduce using rule 348 ($@18)

    $@18  go to state 1501


State 1381

  352 expr_cast: "reinterpret" '<' $@19 type_declaration_no_options '>' . $@20 expr

    $default  reduce using rule 351 ($@20)

    $@20  go to state 1502


State 1382

  921 make_dim_decl: "fixed_array" '<' $@109 type_declaration_no_options '>' . $@110 '(' expr_list optional_comma ')'

    $default  reduce using rule 920 ($@110)

    $@110  go to state 1503


State 1383

  918 make_dim_decl: "fixed_array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 918 (make_dim_decl)


State 1384

  890 make_struct_decl: "default" '<' $@97 type_declaration_no_options '>' . $@98 use_initializer

    $default  reduce using rule 889 ($@98)

    $@98  go to state 1504


State 1385

  899 make_tuple_call: "tuple" '<' $@99 tuple_type_list '>' . $@100 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 898 ($@100)

    $@100  go to state 1505


State 1386

  896 make_tuple_call: "tuple" '(' expr_list optional_comma ')' .

    $default  reduce using rule 896 (make_tuple_call)


State 1387

  887 make_struct_decl: "variant" '<' $@95 variant_type_list '>' . $@96 '(' use_initializer make_variant_dim ')'

    $default  reduce using rule 886 ($@96)

    $@96  go to state 1506


State 1388

  251 expr_call_pipe: "generator" '<' type_declaration_no_options '>' optional_capture_list . expr_full_block_assumed_piped
  515 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  516     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 1507
    '$'  shift, and go to state 537
    '@'  shift, and go to state 715

    block_or_lambda                go to state 764
    expr_full_block_assumed_piped  go to state 1508


State 1389

  381 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 395

    $default  reduce using rule 138 (optional_function_type)

    optional_function_type  go to state 1509


State 1390

  553 expr_mtag: "$c" '(' expr ')' '(' . ')'
  554          | "$c" '(' expr ')' '(' . expr_list ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    ')'                               shift, and go to state 1510
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    expr_list               go to state 1511
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 752
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1391

  363 expr_list: expr_list . ',' expr
  937 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']' ']'

    "end of expression"  shift, and go to state 1512
    ','                  shift, and go to state 910


State 1392

  850 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  876 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"              shift, and go to state 961
    "end of expression"  shift, and go to state 1228

    $default  reduce using rule 857 (optional_block)

    optional_block  go to state 1513


State 1393

  875 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1230
    ",]]"  shift, and go to state 1231
    ']'    shift, and go to state 1232

    optional_trailing_delim_sqr_sqr  go to state 1514


State 1394

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'
  892 make_tuple: expr "=>" expr .

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 892 (make_tuple)


State 1395

  840 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  841                   | make_struct_fields . ',' "name" ":=" expr
  844                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  845                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  850 make_struct_dim: make_struct_dim "end of expression" make_struct_fields .

    ','  shift, and go to state 1227

    $default  reduce using rule 850 (make_struct_dim)


State 1396

  873 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 873 (make_struct_decl)


State 1397

  865 optional_trailing_delim_sqr_sqr: ']' ']' .

    $default  reduce using rule 865 (optional_trailing_delim_sqr_sqr)


State 1398

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'
  893 make_tuple: make_tuple ',' expr .

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 893 (make_tuple)


State 1399

  893 make_tuple: make_tuple . ',' expr
  901 make_dim: make_dim "end of expression" make_tuple .

    ','  shift, and go to state 1234

    $default  reduce using rule 901 (make_dim)


State 1400

  863 optional_trailing_semicolon_sqr_sqr: ']' ']' .

    $default  reduce using rule 863 (optional_trailing_semicolon_sqr_sqr)


State 1401

  363 expr_list: expr_list . ',' expr
  938 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where "end of code block" ']'

    "end of expression"  shift, and go to state 1515
    ','                  shift, and go to state 910


State 1402

  850 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  878 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"              shift, and go to state 961
    "end of expression"  shift, and go to state 1228

    $default  reduce using rule 857 (optional_block)

    optional_block  go to state 1516


State 1403

  868 optional_trailing_delim_cur_sqr: "end of code block" . ']'

    ']'  shift, and go to state 1517


State 1404

  869 optional_trailing_delim_cur_sqr: ";}]" .

    $default  reduce using rule 869 (optional_trailing_delim_cur_sqr)


State 1405

  870 optional_trailing_delim_cur_sqr: ",}]" .

    $default  reduce using rule 870 (optional_trailing_delim_cur_sqr)


State 1406

  877 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 877 (make_struct_decl)


State 1407

  861 optional_trailing_semicolon_cur_sqr: "end of code block" ']' .

    $default  reduce using rule 861 (optional_trailing_semicolon_cur_sqr)


State 1408

  363 expr_list: expr_list . ',' expr
  940 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list . "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "end of expression"  shift, and go to state 1518
    ','                  shift, and go to state 910


State 1409

  287 expression_keyword: "keyword" '<' $@9 type_declaration_no_options_list '>' . $@10 expr

    $default  reduce using rule 286 ($@10)

    $@10  go to state 1519


State 1410

  290 expression_keyword: "type function" '<' $@11 type_declaration_no_options_list '>' . $@12 optional_expr_list_in_braces

    $default  reduce using rule 289 ($@12)

    $@12  go to state 1520


State 1411

   35 optional_format_string: ':' . $@1 format_string

    $default  reduce using rule 34 ($@1)

    $@1  go to state 1521


State 1412

   38 string_builder_body: string_builder_body "{" expr optional_format_string . "}"

    "}"  shift, and go to state 1522


State 1413

  363 expr_list: expr_list . ',' expr
  939 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list . "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1523
    ','                  shift, and go to state 910


State 1414

  363 expr_list: expr_list . ',' expr
  935 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1524
    ','                  shift, and go to state 910


State 1415

  936 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    expr_list               go to state 1525
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 752
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1416

  842 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  843                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 887
    ":="  shift, and go to state 1526
    '='   shift, and go to state 889

    copy_or_move  go to state 1527


State 1417

  844 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  845                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1528
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1418

  841 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1529
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1419

  840 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1530
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1420

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  437 func_addr_name: "$i" '(' expr . ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830
    ')'    shift, and go to state 1531


State 1421

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'
  562          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830
    ')'    shift, and go to state 1532


State 1422

  441 func_addr_expr: '@' '@' '<' $@24 type_declaration_no_options . '>' $@25 func_addr_name
  754 type_declaration_no_options: type_declaration_no_options . dim_list
  755                            | type_declaration_no_options . '[' ']'
  763                            | type_declaration_no_options . '-' '[' ']'
  764                            | type_declaration_no_options . "explicit"
  765                            | type_declaration_no_options . "const"
  766                            | type_declaration_no_options . '-' "const"
  767                            | type_declaration_no_options . '&'
  768                            | type_declaration_no_options . '-' '&'
  769                            | type_declaration_no_options . '#'
  770                            | type_declaration_no_options . "implicit"
  771                            | type_declaration_no_options . '-' '#'
  772                            | type_declaration_no_options . "==" "const"
  773                            | type_declaration_no_options . "==" '&'
  774                            | type_declaration_no_options . '?'
  778                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 428
    "implicit"  shift, and go to state 429
    "explicit"  shift, and go to state 430
    "=="        shift, and go to state 431
    "??"        shift, and go to state 432
    '?'         shift, and go to state 433
    '&'         shift, and go to state 434
    '>'         shift, and go to state 1533
    '-'         shift, and go to state 435
    '['         shift, and go to state 436
    '#'         shift, and go to state 437

    dim_list  go to state 438


State 1423

  444 func_addr_expr: '@' '@' '<' $@26 optional_function_argument_list . optional_function_type '>' $@27 func_addr_name

    ':'  shift, and go to state 395

    $default  reduce using rule 138 (optional_function_type)

    optional_function_type  go to state 1534


State 1424

   68 expression_else: "else" expression_block .

    $default  reduce using rule 68 (expression_else)


State 1425

   69 expression_else: elif_or_static_elif expr . expression_block expression_else
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 778
    "as"                   shift, and go to state 779
    "<<"                   shift, and go to state 788
    ">>"                   shift, and go to state 789
    "++"                   shift, and go to state 790
    "--"                   shift, and go to state 791
    "<="                   shift, and go to state 792
    ">="                   shift, and go to state 795
    "=="                   shift, and go to state 796
    "!="                   shift, and go to state 797
    "->"                   shift, and go to state 798
    "??"                   shift, and go to state 800
    "?."                   shift, and go to state 801
    "?["                   shift, and go to state 802
    "<|"                   shift, and go to state 803
    "|>"                   shift, and go to state 804
    "<<<"                  shift, and go to state 806
    ">>>"                  shift, and go to state 807
    "&&"                   shift, and go to state 810
    "||"                   shift, and go to state 811
    "^^"                   shift, and go to state 812
    ".."                   shift, and go to state 816
    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '?'                    shift, and go to state 818
    '|'                    shift, and go to state 819
    '^'                    shift, and go to state 820
    '&'                    shift, and go to state 821
    '<'                    shift, and go to state 822
    '>'                    shift, and go to state 823
    '-'                    shift, and go to state 824
    '+'                    shift, and go to state 825
    '*'                    shift, and go to state 826
    '/'                    shift, and go to state 827
    '%'                    shift, and go to state 828
    '.'                    shift, and go to state 829
    '['                    shift, and go to state 830

    open_block        go to state 301
    expression_block  go to state 1535


State 1426

   76 expression_else_one_liner: "else" . $@3 expression_if_one_liner

    $default  reduce using rule 75 ($@3)

    $@3  go to state 1536


State 1427

   84 expression_if_then_else: expression_if_one_liner "if" $@4 expr expression_else_one_liner . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 1537


State 1428

  248 expression_block: open_block expressions close_block "finally" open_block expressions close_block .

    $default  reduce using rule 248 (expression_block)


State 1429

  384 expr_full_block_assumed_piped: block_or_lambda $@23 optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type expression_block

    '('  shift, and go to state 299

    $default  reduce using rule 135 (optional_function_argument_list)

    optional_function_argument_list  go to state 1538


State 1430

  458 expr_call: name_in_namespace '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 458 (expr_call)


State 1431

  432 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1539


State 1432

  433 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'
  902 make_dim_decl: '[' . optional_expr_list ']'
  935 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  936                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "for"                             shift, and go to state 748
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "iterator"                        shift, and go to state 749
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "$f"                              shift, and go to state 753
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 754
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    $default  reduce using rule 277 (optional_expr_list)

    string_builder          go to state 539
    expr_reader             go to state 540
    optional_expr_list      go to state 750
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    expr_list               go to state 751
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 752
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_fields      go to state 1540
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1433

  333 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1541


State 1434

  334 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' . ']' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  335                                     | "[[" tuple_expansion ']' . ']' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  338                                     | "[[" tuple_expansion ']' . ']' optional_ref copy_or_move_or_clone expr semicolon
  339                                     | "[[" tuple_expansion ']' . ']' optional_ref copy_or_move_or_clone expr_pipe

    ']'  shift, and go to state 1542


State 1435

  336 tuple_expansion_variable_declaration: '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  337                                     | '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  340                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr semicolon
  341                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr_pipe

    ':'  shift, and go to state 1543
    '&'  shift, and go to state 411

    $default  reduce using rule 621 (optional_ref)

    optional_ref  go to state 1544


State 1436

  376 capture_list: capture_list . ',' capture_entry
  379 optional_capture_list: "capture" '(' capture_list . ')'

    ','  shift, and go to state 1442
    ')'  shift, and go to state 1545


State 1437

  372 capture_entry: "<-" "name" .

    $default  reduce using rule 372 (capture_entry)


State 1438

  373 capture_entry: ":=" "name" .

    $default  reduce using rule 373 (capture_entry)


State 1439

  374 capture_entry: "name" '(' . "name" ')'

    "name"  shift, and go to state 1546


State 1440

  371 capture_entry: '=' "name" .

    $default  reduce using rule 371 (capture_entry)


State 1441

  370 capture_entry: '&' "name" .

    $default  reduce using rule 370 (capture_entry)


State 1442

  376 capture_list: capture_list ',' . capture_entry

    "<-"    shift, and go to state 1285
    ":="    shift, and go to state 1286
    "name"  shift, and go to state 1287
    '='     shift, and go to state 1288
    '&'     shift, and go to state 1289

    capture_entry  go to state 1547


State 1443

  378 optional_capture_list: "[[" capture_list ']' . ']'

    ']'  shift, and go to state 1548


State 1444

  382 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"                   shift, and go to state 1549
    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block             go to state 301
    expression_block       go to state 1550
    block_or_simple_block  go to state 1551


State 1445

  521 expr: expr "is" "type" '<' $@30 . type_declaration_no_options '>' $@31

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 1552


State 1446

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'
  561          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830
    ')'    shift, and go to state 1553


State 1447

  527 expr: expr "as" "type" '<' $@32 . type_declaration '>' $@33

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 1554


State 1448

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  559          | expr "as" "$f" '(' expr . ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830
    ')'    shift, and go to state 1555


State 1449

  434 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 434 (expr_method_call)


State 1450

  363 expr_list: expr_list . ',' expr
  435 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 910
    ')'  shift, and go to state 1556


State 1451

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  556          | expr "?." "$f" '(' expr . ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830
    ')'    shift, and go to state 1557


State 1452

  532 expr: expr '?' "as" "type" '<' . $@34 type_declaration '>' $@35

    $default  reduce using rule 530 ($@34)

    $@34  go to state 1558


State 1453

  560 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1559
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1454

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  518     | expr '?' expr ':' expr .
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 518 (expr)


State 1455

  558 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1560
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1456

  507 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 507 (expr)


State 1457

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr '.' "$f" '(' expr . ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830
    ')'    shift, and go to state 1561


State 1458

  449 expr_field: expr '.' "name" '(' '[' . make_struct_fields ']' ')'
  902 make_dim_decl: '[' . optional_expr_list ']'
  935 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  936                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "for"                             shift, and go to state 748
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "iterator"                        shift, and go to state 749
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "$f"                              shift, and go to state 753
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 754
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    $default  reduce using rule 277 (optional_expr_list)

    string_builder          go to state 539
    expr_reader             go to state 540
    optional_expr_list      go to state 750
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    expr_list               go to state 751
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 752
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_fields      go to state 1562
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1459

  447 expr_field: expr '.' "name" '(' ')' .

    $default  reduce using rule 447 (expr_field)


State 1460

  363 expr_list: expr_list . ',' expr
  448 expr_field: expr '.' "name" '(' expr_list . ')'

    ','  shift, and go to state 910
    ')'  shift, and go to state 1563


State 1461

  557 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1564
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1462

  505 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 505 (expr)


State 1463

  454 expr_field: expr '.' $@28 error $@29 .

    $default  reduce using rule 454 (expr_field)


State 1464

  450 expr_field: expr '.' basic_type_declaration '(' ')' .

    $default  reduce using rule 450 (expr_field)


State 1465

  363 expr_list: expr_list . ',' expr
  451 expr_field: expr '.' basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 910
    ')'  shift, and go to state 1565


State 1466

  580 struct_variable_declaration_list: struct_variable_declaration_list "typedef" $@36 "name" '=' . type_declaration semicolon

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 1566


State 1467

  587 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' semicolon .

    $default  reduce using rule 587 (struct_variable_declaration_list)


State 1468

  584 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" . optional_constant $@38 function_declaration_header semicolon

    "const"  shift, and go to state 1567

    $default  reduce using rule 569 (optional_constant)

    optional_constant  go to state 1568


State 1469

  586 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@39 function_declaration_header expression_block

    "override"  shift, and go to state 1470
    "sealed"    shift, and go to state 1471

    $default  reduce using rule 566 (optional_override)

    optional_override  go to state 1569


State 1470

  567 optional_override: "override" .

    $default  reduce using rule 567 (optional_override)


State 1471

  568 optional_override: "sealed" .

    $default  reduce using rule 568 (optional_override)


State 1472

  576 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1324
    "private"  shift, and go to state 1325

    $default  reduce using rule 571 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1570


State 1473

  515 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  516     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 1507


State 1474

  743 bitfield_type_declaration: "bitfield" bitfield_basic_type_declaration '<' $@50 bitfield_bits '>' $@51 .

    $default  reduce using rule 743 (bitfield_type_declaration)


State 1475

  731 bitfield_bits: bitfield_bits semicolon "name" .

    $default  reduce using rule 731 (bitfield_bits)


State 1476

  794 type_declaration_no_options: "block" '<' $@65 optional_function_argument_list optional_function_type '>' $@66 .

    $default  reduce using rule 794 (type_declaration_no_options)


State 1477

  801 type_declaration_no_options: "function" '<' $@69 optional_function_argument_list optional_function_type '>' $@70 .

    $default  reduce using rule 801 (type_declaration_no_options)


State 1478

  808 type_declaration_no_options: "lambda" '<' $@73 optional_function_argument_list optional_function_type '>' $@74 .

    $default  reduce using rule 808 (type_declaration_no_options)


State 1479

  762 type_declaration_no_options: '$' name_in_namespace '<' $@54 type_declaration_no_options_list '>' '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    $default  reduce using rule 277 (optional_expr_list)

    string_builder          go to state 539
    expr_reader             go to state 540
    optional_expr_list      go to state 1571
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    expr_list               go to state 751
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 752
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1480

  284 type_declaration_no_options_list: type_declaration_no_options_list c_or_s type_declaration .
  816 type_declaration: type_declaration . '|' type_declaration_no_options
  817                 | type_declaration . '|' '#'

    '|'  shift, and go to state 439

    $default  reduce using rule 284 (type_declaration_no_options_list)


State 1481

  735 bitfield_alias_bits: bitfield_alias_bits "name" '=' expr semicolon .

    $default  reduce using rule 735 (bitfield_alias_bits)


State 1482

  690 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 690 (variable_name_with_pos_list)


State 1483

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'
  615 variable_declaration_type: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 615 (variable_declaration_type)


State 1484

  881 make_struct_decl: "struct" '<' $@91 type_declaration_no_options '>' $@92 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1572


State 1485

  884 make_struct_decl: "class" '<' $@93 type_declaration_no_options '>' $@94 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1573


State 1486

   86 expression_for_loop: "for" $@5 variable_name_with_pos_list "in" expr_list expression_block .

    $default  reduce using rule 86 (expression_for_loop)


State 1487

  303 new_type_declaration: '<' $@13 type_declaration '>' $@14 .

    $default  reduce using rule 303 (new_type_declaration)


State 1488

  309 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 309 (expr_new)


State 1489

  357 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1574
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1490

  358 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s . "name" '>' expr ')'

    "name"  shift, and go to state 1575


State 1491

  361 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" . '>' '(' expr ')'

    '>'  shift, and go to state 1576


State 1492

  360 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1577
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1493

  355 expr_type_decl: "type" '<' $@21 type_declaration '>' $@22 .

    $default  reduce using rule 355 (expr_type_decl)


State 1494

  907 make_dim_decl: "array" "struct" '<' $@101 type_declaration_no_options '>' . $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 906 ($@102)

    $@102  go to state 1578


State 1495

  910 make_dim_decl: "array" "tuple" '<' $@103 tuple_type_list '>' . $@104 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 909 ($@104)

    $@104  go to state 1579


State 1496

  913 make_dim_decl: "array" "variant" '<' $@105 variant_type_list '>' . $@106 '(' make_variant_dim ')'

    $default  reduce using rule 912 ($@106)

    $@106  go to state 1580


State 1497

  917 make_dim_decl: "array" '<' $@107 type_declaration_no_options '>' $@108 . '(' optional_expr_list ')'

    '('  shift, and go to state 1581


State 1498

  929 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1582


State 1499

  930 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1583


State 1500

  346 expr_cast: "cast" '<' $@15 type_declaration_no_options '>' $@16 . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1584
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1501

  349 expr_cast: "upcast" '<' $@17 type_declaration_no_options '>' $@18 . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1585
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1502

  352 expr_cast: "reinterpret" '<' $@19 type_declaration_no_options '>' $@20 . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1586
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1503

  921 make_dim_decl: "fixed_array" '<' $@109 type_declaration_no_options '>' $@110 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1587


State 1504

  890 make_struct_decl: "default" '<' $@97 type_declaration_no_options '>' $@98 . use_initializer

    "uninitialized"  shift, and go to state 1588

    $default  reduce using rule 871 (use_initializer)

    use_initializer  go to state 1589


State 1505

  899 make_tuple_call: "tuple" '<' $@99 tuple_type_list '>' $@100 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1590


State 1506

  887 make_struct_decl: "variant" '<' $@95 variant_type_list '>' $@96 . '(' use_initializer make_variant_dim ')'

    '('  shift, and go to state 1591


State 1507

  515 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  516     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    ')'                               shift, and go to state 1592
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1593
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1508

  251 expr_call_pipe: "generator" '<' type_declaration_no_options '>' optional_capture_list expr_full_block_assumed_piped .

    $default  reduce using rule 251 (expr_call_pipe)


State 1509

  381 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"                   shift, and go to state 1549
    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block             go to state 301
    expression_block       go to state 1550
    block_or_simple_block  go to state 1594


State 1510

  553 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 553 (expr_mtag)


State 1511

  363 expr_list: expr_list . ',' expr
  554 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 910
    ')'  shift, and go to state 1595


State 1512

  937 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']' ']'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1596
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1513

  876 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1230
    ",]]"  shift, and go to state 1231
    ']'    shift, and go to state 1232

    optional_trailing_delim_sqr_sqr  go to state 1597


State 1514

  875 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 875 (make_struct_decl)


State 1515

  938 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where "end of code block" ']'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1598
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1516

  878 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    "end of code block"  shift, and go to state 1403
    ";}]"                shift, and go to state 1404
    ",}]"                shift, and go to state 1405

    optional_trailing_delim_cur_sqr  go to state 1599


State 1517

  868 optional_trailing_delim_cur_sqr: "end of code block" ']' .

    $default  reduce using rule 868 (optional_trailing_delim_cur_sqr)


State 1518

  940 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" . make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 732
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_map_tuple          go to state 1600
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1519

  287 expression_keyword: "keyword" '<' $@9 type_declaration_no_options_list '>' $@10 . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1601
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1520

  290 expression_keyword: "type function" '<' $@11 type_declaration_no_options_list '>' $@12 . optional_expr_list_in_braces

    '('  shift, and go to state 1602

    '('       [reduce using rule 279 (optional_expr_list_in_braces)]
    $default  reduce using rule 279 (optional_expr_list_in_braces)

    optional_expr_list_in_braces  go to state 1603


State 1521

   35 optional_format_string: ':' $@1 . format_string

    $default  reduce using rule 31 (format_string)

    format_string  go to state 1604


State 1522

   38 string_builder_body: string_builder_body "{" expr optional_format_string "}" .

    $default  reduce using rule 38 (string_builder_body)


State 1523

  939 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" . make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 732
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_map_tuple          go to state 1605
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1524

  935 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1606
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1525

  363 expr_list: expr_list . ',' expr
  936 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1607
    ','                  shift, and go to state 910


State 1526

  843 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1608
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1527

  842 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1609
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1528

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'
  844 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  845                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830
    ')'    shift, and go to state 1610


State 1529

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'
  841 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 841 (make_struct_fields)


State 1530

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'
  840 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 840 (make_struct_fields)


State 1531

  437 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 437 (func_addr_name)


State 1532

  562 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 562 (expr_mtag)


State 1533

  441 func_addr_expr: '@' '@' '<' $@24 type_declaration_no_options '>' . $@25 func_addr_name

    $default  reduce using rule 440 ($@25)

    $@25  go to state 1611


State 1534

  444 func_addr_expr: '@' '@' '<' $@26 optional_function_argument_list optional_function_type . '>' $@27 func_addr_name

    '>'  shift, and go to state 1612


State 1535

   69 expression_else: elif_or_static_elif expr expression_block . expression_else

    "else"         shift, and go to state 1266
    "elif"         shift, and go to state 1267
    "static_elif"  shift, and go to state 1268

    $default  reduce using rule 67 (expression_else)

    elif_or_static_elif  go to state 1269
    expression_else      go to state 1613


State 1536

   76 expression_else_one_liner: "else" $@3 . expression_if_one_liner

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "return"                          shift, and go to state 1614
    "null"                            shift, and go to state 479
    "break"                           shift, and go to state 480
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "continue"                        shift, and go to state 491
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "yield"                           shift, and go to state 1615
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder             go to state 539
    expr_reader                go to state 540
    expression_if_one_liner    go to state 1616
    expression_keyword         go to state 603
    name_in_namespace          go to state 558
    expr_new                   go to state 560
    expression_break           go to state 1617
    expression_continue        go to state 1618
    expression_return_no_pipe  go to state 1619
    expression_yield_no_pipe   go to state 1620
    expr_cast                  go to state 570
    expr_type_decl             go to state 571
    expr_type_info             go to state 572
    block_or_lambda            go to state 573
    expr_full_block            go to state 574
    expr_numeric_const         go to state 575
    expr_named_call            go to state 578
    expr_method_call           go to state 579
    func_addr_expr             go to state 580
    expr_field                 go to state 581
    expr_call                  go to state 582
    expr                       go to state 1621
    expr_mtag                  go to state 584
    basic_type_declaration     go to state 585
    make_decl                  go to state 586
    make_struct_decl           go to state 587
    make_tuple_call            go to state 588
    make_dim_decl              go to state 589
    make_table_decl            go to state 590
    array_comprehension        go to state 591


State 1537

   84 expression_if_then_else: expression_if_one_liner "if" $@4 expr expression_else_one_liner semicolon .

    $default  reduce using rule 84 (expression_if_then_else)


State 1538

  384 expr_full_block_assumed_piped: block_or_lambda $@23 optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type expression_block

    ':'  shift, and go to state 395

    $default  reduce using rule 138 (optional_function_type)

    optional_function_type  go to state 1622


State 1539

  432 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 432 (expr_named_call)


State 1540

  433 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  840 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  841                   | make_struct_fields . ',' "name" ":=" expr
  844                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  845                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1227
    ']'  shift, and go to state 1623


State 1541

  333 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 333 (tuple_expansion)


State 1542

  334 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' . ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  335                                     | "[[" tuple_expansion ']' ']' . ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  338                                     | "[[" tuple_expansion ']' ']' . optional_ref copy_or_move_or_clone expr semicolon
  339                                     | "[[" tuple_expansion ']' ']' . optional_ref copy_or_move_or_clone expr_pipe

    ':'  shift, and go to state 1624
    '&'  shift, and go to state 411

    $default  reduce using rule 621 (optional_ref)

    optional_ref  go to state 1625


State 1543

  336 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr semicolon
  337                                     | '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr_pipe

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 1626


State 1544

  340 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr semicolon
  341                                     | '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 608
    ":="  shift, and go to state 609
    '='   shift, and go to state 610

    copy_or_move_or_clone  go to state 1627


State 1545

  379 optional_capture_list: "capture" '(' capture_list ')' .

    $default  reduce using rule 379 (optional_capture_list)


State 1546

  374 capture_entry: "name" '(' "name" . ')'

    ')'  shift, and go to state 1628


State 1547

  376 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 376 (capture_list)


State 1548

  378 optional_capture_list: "[[" capture_list ']' ']' .

    $default  reduce using rule 378 (optional_capture_list)


State 1549

  365 block_or_simple_block: "=>" . expr
  366                      | "=>" . "<-" expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "<-"                              shift, and go to state 1629
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1630
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1550

  364 block_or_simple_block: expression_block .

    $default  reduce using rule 364 (block_or_simple_block)


State 1551

  382 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 382 (expr_full_block)


State 1552

  521 expr: expr "is" "type" '<' $@30 type_declaration_no_options . '>' $@31
  754 type_declaration_no_options: type_declaration_no_options . dim_list
  755                            | type_declaration_no_options . '[' ']'
  763                            | type_declaration_no_options . '-' '[' ']'
  764                            | type_declaration_no_options . "explicit"
  765                            | type_declaration_no_options . "const"
  766                            | type_declaration_no_options . '-' "const"
  767                            | type_declaration_no_options . '&'
  768                            | type_declaration_no_options . '-' '&'
  769                            | type_declaration_no_options . '#'
  770                            | type_declaration_no_options . "implicit"
  771                            | type_declaration_no_options . '-' '#'
  772                            | type_declaration_no_options . "==" "const"
  773                            | type_declaration_no_options . "==" '&'
  774                            | type_declaration_no_options . '?'
  778                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 428
    "implicit"  shift, and go to state 429
    "explicit"  shift, and go to state 430
    "=="        shift, and go to state 431
    "??"        shift, and go to state 432
    '?'         shift, and go to state 433
    '&'         shift, and go to state 434
    '>'         shift, and go to state 1631
    '-'         shift, and go to state 435
    '['         shift, and go to state 436
    '#'         shift, and go to state 437

    dim_list  go to state 438


State 1553

  561 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 561 (expr_mtag)


State 1554

  527 expr: expr "as" "type" '<' $@32 type_declaration . '>' $@33
  816 type_declaration: type_declaration . '|' type_declaration_no_options
  817                 | type_declaration . '|' '#'

    '|'  shift, and go to state 439
    '>'  shift, and go to state 1632


State 1555

  559 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 559 (expr_mtag)


State 1556

  435 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 435 (expr_method_call)


State 1557

  556 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 556 (expr_mtag)


State 1558

  532 expr: expr '?' "as" "type" '<' $@34 . type_declaration '>' $@35

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 1633


State 1559

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr '?' "as" "$f" '(' expr . ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830
    ')'    shift, and go to state 1634


State 1560

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr '.' "?." "$f" '(' expr . ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830
    ')'    shift, and go to state 1635


State 1561

  555 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 555 (expr_mtag)


State 1562

  449 expr_field: expr '.' "name" '(' '[' make_struct_fields . ']' ')'
  840 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  841                   | make_struct_fields . ',' "name" ":=" expr
  844                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  845                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1227
    ']'  shift, and go to state 1636


State 1563

  448 expr_field: expr '.' "name" '(' expr_list ')' .

    $default  reduce using rule 448 (expr_field)


State 1564

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr '.' '.' "$f" '(' expr . ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830
    ')'    shift, and go to state 1637


State 1565

  451 expr_field: expr '.' basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 451 (expr_field)


State 1566

  580 struct_variable_declaration_list: struct_variable_declaration_list "typedef" $@36 "name" '=' type_declaration . semicolon
  816 type_declaration: type_declaration . '|' type_declaration_no_options
  817                 | type_declaration . '|' '#'

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '|'                  shift, and go to state 439

    semicolon  go to state 1638


State 1567

  570 optional_constant: "const" .

    $default  reduce using rule 570 (optional_constant)


State 1568

  584 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant . $@38 function_declaration_header semicolon

    $default  reduce using rule 583 ($@38)

    $@38  go to state 1639


State 1569

  586 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@39 function_declaration_header expression_block

    "const"  shift, and go to state 1567

    $default  reduce using rule 569 (optional_constant)

    optional_constant  go to state 1640


State 1570

  576 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 655
    "name"  shift, and go to state 656

    variable_declaration_no_type  go to state 1641
    variable_declaration_type     go to state 1642
    variable_declaration          go to state 1643
    variable_name_with_pos_list   go to state 659


State 1571

  762 type_declaration_no_options: '$' name_in_namespace '<' $@54 type_declaration_no_options_list '>' '(' optional_expr_list . ')'

    ')'  shift, and go to state 1644


State 1572

  881 make_struct_decl: "struct" '<' $@91 type_declaration_no_options '>' $@92 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1588

    $default  reduce using rule 871 (use_initializer)

    use_initializer  go to state 1645


State 1573

  884 make_struct_decl: "class" '<' $@93 type_declaration_no_options '>' $@94 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1588

    $default  reduce using rule 871 (use_initializer)

    use_initializer  go to state 1646


State 1574

  357 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr . ')'
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830
    ')'    shift, and go to state 1647


State 1575

  358 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" . '>' expr ')'

    '>'  shift, and go to state 1648


State 1576

  361 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' . '(' expr ')'

    '('  shift, and go to state 1649


State 1577

  360 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr . ')'
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830
    ')'    shift, and go to state 1650


State 1578

  907 make_dim_decl: "array" "struct" '<' $@101 type_declaration_no_options '>' $@102 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1651


State 1579

  910 make_dim_decl: "array" "tuple" '<' $@103 tuple_type_list '>' $@104 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1652


State 1580

  913 make_dim_decl: "array" "variant" '<' $@105 variant_type_list '>' $@106 . '(' make_variant_dim ')'

    '('  shift, and go to state 1653


State 1581

  917 make_dim_decl: "array" '<' $@107 type_declaration_no_options '>' $@108 '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    $default  reduce using rule 277 (optional_expr_list)

    string_builder          go to state 539
    expr_reader             go to state 540
    optional_expr_list      go to state 1654
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    expr_list               go to state 751
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 752
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1582

  929 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 929 (make_table_decl)


State 1583

  930 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    $default  reduce using rule 281 (optional_expr_map_tuple_list)

    string_builder                go to state 539
    expr_reader                   go to state 540
    optional_expr_map_tuple_list  go to state 1655
    expression_keyword            go to state 603
    name_in_namespace             go to state 558
    expr_new                      go to state 560
    expr_cast                     go to state 570
    expr_type_decl                go to state 571
    expr_type_info                go to state 572
    block_or_lambda               go to state 573
    expr_full_block               go to state 574
    expr_numeric_const            go to state 575
    expr_named_call               go to state 578
    expr_method_call              go to state 579
    func_addr_expr                go to state 580
    expr_field                    go to state 581
    expr_call                     go to state 582
    expr                          go to state 732
    expr_mtag                     go to state 584
    basic_type_declaration        go to state 585
    make_decl                     go to state 586
    make_struct_decl              go to state 587
    make_map_tuple                go to state 741
    make_tuple_call               go to state 588
    make_dim_decl                 go to state 589
    expr_map_tuple_list           go to state 742
    make_table_decl               go to state 590
    array_comprehension           go to state 591


State 1584

  346 expr_cast: "cast" '<' $@15 type_declaration_no_options '>' $@16 expr .
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 346 (expr_cast)


State 1585

  349 expr_cast: "upcast" '<' $@17 type_declaration_no_options '>' $@18 expr .
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 349 (expr_cast)


State 1586

  352 expr_cast: "reinterpret" '<' $@19 type_declaration_no_options '>' $@20 expr .
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 352 (expr_cast)


State 1587

  921 make_dim_decl: "fixed_array" '<' $@109 type_declaration_no_options '>' $@110 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    expr_list               go to state 1656
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 752
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1588

  872 use_initializer: "uninitialized" .

    $default  reduce using rule 872 (use_initializer)


State 1589

  890 make_struct_decl: "default" '<' $@97 type_declaration_no_options '>' $@98 use_initializer .

    $default  reduce using rule 890 (make_struct_decl)


State 1590

  899 make_tuple_call: "tuple" '<' $@99 tuple_type_list '>' $@100 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1588

    $default  reduce using rule 871 (use_initializer)

    use_initializer  go to state 1657


State 1591

  887 make_struct_decl: "variant" '<' $@95 variant_type_list '>' $@96 '(' . use_initializer make_variant_dim ')'

    "uninitialized"  shift, and go to state 1588

    $default  reduce using rule 871 (use_initializer)

    use_initializer  go to state 1658


State 1592

  515 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 515 (expr)


State 1593

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  516     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830
    ')'    shift, and go to state 1659


State 1594

  381 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 381 (expr_block)


State 1595

  554 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 554 (expr_mtag)


State 1596

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'
  937 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']' ']'

    "is"                 shift, and go to state 778
    "as"                 shift, and go to state 779
    "<<"                 shift, and go to state 788
    ">>"                 shift, and go to state 789
    "++"                 shift, and go to state 790
    "--"                 shift, and go to state 791
    "<="                 shift, and go to state 792
    ">="                 shift, and go to state 795
    "=="                 shift, and go to state 796
    "!="                 shift, and go to state 797
    "->"                 shift, and go to state 798
    "??"                 shift, and go to state 800
    "?."                 shift, and go to state 801
    "?["                 shift, and go to state 802
    "<|"                 shift, and go to state 803
    "|>"                 shift, and go to state 804
    "<<<"                shift, and go to state 806
    ">>>"                shift, and go to state 807
    "&&"                 shift, and go to state 810
    "||"                 shift, and go to state 811
    "^^"                 shift, and go to state 812
    ".."                 shift, and go to state 816
    "end of expression"  shift, and go to state 1660
    '?'                  shift, and go to state 818
    '|'                  shift, and go to state 819
    '^'                  shift, and go to state 820
    '&'                  shift, and go to state 821
    '<'                  shift, and go to state 822
    '>'                  shift, and go to state 823
    '-'                  shift, and go to state 824
    '+'                  shift, and go to state 825
    '*'                  shift, and go to state 826
    '/'                  shift, and go to state 827
    '%'                  shift, and go to state 828
    '.'                  shift, and go to state 829
    '['                  shift, and go to state 830

    $default  reduce using rule 931 (array_comprehension_where)

    array_comprehension_where  go to state 1661


State 1597

  876 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 876 (make_struct_decl)


State 1598

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'
  938 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where "end of code block" ']'

    "is"                 shift, and go to state 778
    "as"                 shift, and go to state 779
    "<<"                 shift, and go to state 788
    ">>"                 shift, and go to state 789
    "++"                 shift, and go to state 790
    "--"                 shift, and go to state 791
    "<="                 shift, and go to state 792
    ">="                 shift, and go to state 795
    "=="                 shift, and go to state 796
    "!="                 shift, and go to state 797
    "->"                 shift, and go to state 798
    "??"                 shift, and go to state 800
    "?."                 shift, and go to state 801
    "?["                 shift, and go to state 802
    "<|"                 shift, and go to state 803
    "|>"                 shift, and go to state 804
    "<<<"                shift, and go to state 806
    ">>>"                shift, and go to state 807
    "&&"                 shift, and go to state 810
    "||"                 shift, and go to state 811
    "^^"                 shift, and go to state 812
    ".."                 shift, and go to state 816
    "end of expression"  shift, and go to state 1660
    '?'                  shift, and go to state 818
    '|'                  shift, and go to state 819
    '^'                  shift, and go to state 820
    '&'                  shift, and go to state 821
    '<'                  shift, and go to state 822
    '>'                  shift, and go to state 823
    '-'                  shift, and go to state 824
    '+'                  shift, and go to state 825
    '*'                  shift, and go to state 826
    '/'                  shift, and go to state 827
    '%'                  shift, and go to state 828
    '.'                  shift, and go to state 829
    '['                  shift, and go to state 830

    $default  reduce using rule 931 (array_comprehension_where)

    array_comprehension_where  go to state 1662


State 1599

  878 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 878 (make_struct_decl)


State 1600

  940 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple . array_comprehension_where "end of code block" "end of code block"

    "end of expression"  shift, and go to state 1660

    $default  reduce using rule 931 (array_comprehension_where)

    array_comprehension_where  go to state 1663


State 1601

  287 expression_keyword: "keyword" '<' $@9 type_declaration_no_options_list '>' $@10 expr .
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 287 (expression_keyword)


State 1602

  280 optional_expr_list_in_braces: '(' . optional_expr_list optional_comma ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    $default  reduce using rule 277 (optional_expr_list)

    string_builder          go to state 539
    expr_reader             go to state 540
    optional_expr_list      go to state 1664
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    expr_list               go to state 751
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 752
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1603

  290 expression_keyword: "type function" '<' $@11 type_declaration_no_options_list '>' $@12 optional_expr_list_in_braces .

    $default  reduce using rule 290 (expression_keyword)


State 1604

   32 format_string: format_string . STRING_CHARACTER
   35 optional_format_string: ':' $@1 format_string .

    STRING_CHARACTER  shift, and go to state 1665

    $default  reduce using rule 35 (optional_format_string)


State 1605

  939 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple . array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1660

    $default  reduce using rule 931 (array_comprehension_where)

    array_comprehension_where  go to state 1666


State 1606

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'
  935 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 778
    "as"                 shift, and go to state 779
    "<<"                 shift, and go to state 788
    ">>"                 shift, and go to state 789
    "++"                 shift, and go to state 790
    "--"                 shift, and go to state 791
    "<="                 shift, and go to state 792
    ">="                 shift, and go to state 795
    "=="                 shift, and go to state 796
    "!="                 shift, and go to state 797
    "->"                 shift, and go to state 798
    "??"                 shift, and go to state 800
    "?."                 shift, and go to state 801
    "?["                 shift, and go to state 802
    "<|"                 shift, and go to state 803
    "|>"                 shift, and go to state 804
    "<<<"                shift, and go to state 806
    ">>>"                shift, and go to state 807
    "&&"                 shift, and go to state 810
    "||"                 shift, and go to state 811
    "^^"                 shift, and go to state 812
    ".."                 shift, and go to state 816
    "end of expression"  shift, and go to state 1660
    '?'                  shift, and go to state 818
    '|'                  shift, and go to state 819
    '^'                  shift, and go to state 820
    '&'                  shift, and go to state 821
    '<'                  shift, and go to state 822
    '>'                  shift, and go to state 823
    '-'                  shift, and go to state 824
    '+'                  shift, and go to state 825
    '*'                  shift, and go to state 826
    '/'                  shift, and go to state 827
    '%'                  shift, and go to state 828
    '.'                  shift, and go to state 829
    '['                  shift, and go to state 830

    $default  reduce using rule 931 (array_comprehension_where)

    array_comprehension_where  go to state 1667


State 1607

  936 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1668
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1608

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'
  843 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 843 (make_struct_fields)


State 1609

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'
  842 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 842 (make_struct_fields)


State 1610

  844 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  845                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 887
    ":="  shift, and go to state 1669
    '='   shift, and go to state 889

    copy_or_move  go to state 1670


State 1611

  441 func_addr_expr: '@' '@' '<' $@24 type_declaration_no_options '>' $@25 . func_addr_name

    "::"    shift, and go to state 62
    "$i"    shift, and go to state 1003
    "name"  shift, and go to state 63

    name_in_namespace  go to state 1006
    func_addr_name     go to state 1671


State 1612

  444 func_addr_expr: '@' '@' '<' $@26 optional_function_argument_list optional_function_type '>' . $@27 func_addr_name

    $default  reduce using rule 443 ($@27)

    $@27  go to state 1672


State 1613

   69 expression_else: elif_or_static_elif expr expression_block expression_else .

    $default  reduce using rule 69 (expression_else)


State 1614

  313 expression_return_no_pipe: "return" .
  314                          | "return" . expr_list
  315                          | "return" . "<-" expr_list

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "<-"                              shift, and go to state 1673
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    $default  reduce using rule 313 (expression_return_no_pipe)

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    expr_list               go to state 681
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 752
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1615

  319 expression_yield_no_pipe: "yield" . expr
  320                         | "yield" . "<-" expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "<-"                              shift, and go to state 1674
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1675
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1616

   76 expression_else_one_liner: "else" $@3 expression_if_one_liner .

    $default  reduce using rule 76 (expression_else_one_liner)


State 1617

   80 expression_if_one_liner: expression_break .

    $default  reduce using rule 80 (expression_if_one_liner)


State 1618

   81 expression_if_one_liner: expression_continue .

    $default  reduce using rule 81 (expression_if_one_liner)


State 1619

   78 expression_if_one_liner: expression_return_no_pipe .

    $default  reduce using rule 78 (expression_if_one_liner)


State 1620

   79 expression_if_one_liner: expression_yield_no_pipe .

    $default  reduce using rule 79 (expression_if_one_liner)


State 1621

   77 expression_if_one_liner: expr .
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 77 (expression_if_one_liner)


State 1622

  384 expr_full_block_assumed_piped: block_or_lambda $@23 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . expression_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block        go to state 301
    expression_block  go to state 1676


State 1623

  433 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1677


State 1624

  334 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' . type_declaration_no_options copy_or_move_or_clone expr semicolon
  335                                     | "[[" tuple_expansion ']' ']' ':' . type_declaration_no_options copy_or_move_or_clone expr_pipe

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 1678


State 1625

  338 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref . copy_or_move_or_clone expr semicolon
  339                                     | "[[" tuple_expansion ']' ']' optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 608
    ":="  shift, and go to state 609
    '='   shift, and go to state 610

    copy_or_move_or_clone  go to state 1679


State 1626

  336 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr semicolon
  337                                     | '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr_pipe
  754 type_declaration_no_options: type_declaration_no_options . dim_list
  755                            | type_declaration_no_options . '[' ']'
  763                            | type_declaration_no_options . '-' '[' ']'
  764                            | type_declaration_no_options . "explicit"
  765                            | type_declaration_no_options . "const"
  766                            | type_declaration_no_options . '-' "const"
  767                            | type_declaration_no_options . '&'
  768                            | type_declaration_no_options . '-' '&'
  769                            | type_declaration_no_options . '#'
  770                            | type_declaration_no_options . "implicit"
  771                            | type_declaration_no_options . '-' '#'
  772                            | type_declaration_no_options . "==" "const"
  773                            | type_declaration_no_options . "==" '&'
  774                            | type_declaration_no_options . '?'
  778                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 428
    "implicit"  shift, and go to state 429
    "explicit"  shift, and go to state 430
    "=="        shift, and go to state 431
    "<-"        shift, and go to state 608
    "??"        shift, and go to state 432
    ":="        shift, and go to state 609
    '='         shift, and go to state 610
    '?'         shift, and go to state 433
    '&'         shift, and go to state 434
    '-'         shift, and go to state 435
    '['         shift, and go to state 436
    '#'         shift, and go to state 437

    copy_or_move_or_clone  go to state 1680
    dim_list               go to state 438


State 1627

  340 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr semicolon
  341                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 502
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "$ <|"                            shift, and go to state 506
    "@ <|"                            shift, and go to state 507
    "@@ <|"                           shift, and go to state 508
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expr_call_pipe          go to state 553
    expression_keyword      go to state 556
    expr_pipe               go to state 1681
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_assign             go to state 682
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1682
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1628

  374 capture_entry: "name" '(' "name" ')' .

    $default  reduce using rule 374 (capture_entry)


State 1629

  366 block_or_simple_block: "=>" "<-" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1683
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1630

  365 block_or_simple_block: "=>" expr .
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    ".."  error (nonassociative)

    $default  reduce using rule 365 (block_or_simple_block)


State 1631

  521 expr: expr "is" "type" '<' $@30 type_declaration_no_options '>' . $@31

    $default  reduce using rule 520 ($@31)

    $@31  go to state 1684


State 1632

  527 expr: expr "as" "type" '<' $@32 type_declaration '>' . $@33

    $default  reduce using rule 526 ($@33)

    $@33  go to state 1685


State 1633

  532 expr: expr '?' "as" "type" '<' $@34 type_declaration . '>' $@35
  816 type_declaration: type_declaration . '|' type_declaration_no_options
  817                 | type_declaration . '|' '#'

    '|'  shift, and go to state 439
    '>'  shift, and go to state 1686


State 1634

  560 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 560 (expr_mtag)


State 1635

  558 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 558 (expr_mtag)


State 1636

  449 expr_field: expr '.' "name" '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1687


State 1637

  557 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 557 (expr_mtag)


State 1638

  580 struct_variable_declaration_list: struct_variable_declaration_list "typedef" $@36 "name" '=' type_declaration semicolon .

    $default  reduce using rule 580 (struct_variable_declaration_list)


State 1639

  584 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@38 . function_declaration_header semicolon

    "operator"  shift, and go to state 194
    "bool"      shift, and go to state 195
    "string"    shift, and go to state 196
    "int"       shift, and go to state 197
    "int2"      shift, and go to state 198
    "int3"      shift, and go to state 199
    "int4"      shift, and go to state 200
    "uint"      shift, and go to state 201
    "uint2"     shift, and go to state 202
    "uint3"     shift, and go to state 203
    "uint4"     shift, and go to state 204
    "float"     shift, and go to state 205
    "float2"    shift, and go to state 206
    "float3"    shift, and go to state 207
    "float4"    shift, and go to state 208
    "range"     shift, and go to state 209
    "urange"    shift, and go to state 210
    "range64"   shift, and go to state 211
    "urange64"  shift, and go to state 212
    "int64"     shift, and go to state 213
    "uint64"    shift, and go to state 214
    "double"    shift, and go to state 215
    "int8"      shift, and go to state 216
    "uint8"     shift, and go to state 217
    "int16"     shift, and go to state 218
    "uint16"    shift, and go to state 219
    "++"        shift, and go to state 220
    "--"        shift, and go to state 221
    "name"      shift, and go to state 222

    function_name                go to state 223
    function_declaration_header  go to state 1688


State 1640

  586 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@39 function_declaration_header expression_block

    $default  reduce using rule 585 ($@39)

    $@39  go to state 1689


State 1641

  617 variable_declaration: variable_declaration_no_type .

    $default  reduce using rule 617 (variable_declaration)


State 1642

  616 variable_declaration: variable_declaration_type .

    $default  reduce using rule 616 (variable_declaration)


State 1643

  576 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 576 (structure_variable_declaration)


State 1644

  762 type_declaration_no_options: '$' name_in_namespace '<' $@54 type_declaration_no_options_list '>' '(' optional_expr_list ')' .

    $default  reduce using rule 762 (type_declaration_no_options)


State 1645

  881 make_struct_decl: "struct" '<' $@91 type_declaration_no_options '>' $@92 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 753
    "name"  shift, and go to state 1274
    '('     shift, and go to state 1690

    $default  reduce using rule 856 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1691
    make_struct_dim_list           go to state 1692
    make_struct_dim_decl           go to state 1693
    optional_make_struct_dim_decl  go to state 1694


State 1646

  884 make_struct_decl: "class" '<' $@93 type_declaration_no_options '>' $@94 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 753
    "name"  shift, and go to state 1274
    '('     shift, and go to state 1690

    $default  reduce using rule 856 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1691
    make_struct_dim_list           go to state 1692
    make_struct_dim_decl           go to state 1693
    optional_make_struct_dim_decl  go to state 1695


State 1647

  357 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')' .

    $default  reduce using rule 357 (expr_type_info)


State 1648

  358 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" '>' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1696
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1649

  361 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1697
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1650

  360 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')' .

    $default  reduce using rule 360 (expr_type_info)


State 1651

  907 make_dim_decl: "array" "struct" '<' $@101 type_declaration_no_options '>' $@102 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1588

    $default  reduce using rule 871 (use_initializer)

    use_initializer  go to state 1698


State 1652

  910 make_dim_decl: "array" "tuple" '<' $@103 tuple_type_list '>' $@104 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1588

    $default  reduce using rule 871 (use_initializer)

    use_initializer  go to state 1699


State 1653

  913 make_dim_decl: "array" "variant" '<' $@105 variant_type_list '>' $@106 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 753
    "name"  shift, and go to state 1274

    $default  reduce using rule 846 (make_variant_dim)

    make_struct_fields  go to state 1700
    make_variant_dim    go to state 1701


State 1654

  917 make_dim_decl: "array" '<' $@107 type_declaration_no_options '>' $@108 '(' optional_expr_list . ')'

    ')'  shift, and go to state 1702


State 1655

  930 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1703


State 1656

  363 expr_list: expr_list . ',' expr
  921 make_dim_decl: "fixed_array" '<' $@109 type_declaration_no_options '>' $@110 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 994

    $default  reduce using rule 933 (optional_comma)

    optional_comma  go to state 1704


State 1657

  899 make_tuple_call: "tuple" '<' $@99 tuple_type_list '>' $@100 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 753
    "name"  shift, and go to state 1274
    '('     shift, and go to state 1690

    $default  reduce using rule 856 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1691
    make_struct_dim_list           go to state 1692
    make_struct_dim_decl           go to state 1693
    optional_make_struct_dim_decl  go to state 1705


State 1658

  887 make_struct_decl: "variant" '<' $@95 variant_type_list '>' $@96 '(' use_initializer . make_variant_dim ')'

    "$f"    shift, and go to state 753
    "name"  shift, and go to state 1274

    $default  reduce using rule 846 (make_variant_dim)

    make_struct_fields  go to state 1700
    make_variant_dim    go to state 1706


State 1659

  516 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 516 (expr)


State 1660

  932 array_comprehension_where: "end of expression" . "where" expr

    "where"  shift, and go to state 1707


State 1661

  937 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']' ']'

    ']'  shift, and go to state 1708


State 1662

  938 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . "end of code block" ']'

    "end of code block"  shift, and go to state 1709


State 1663

  940 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where . "end of code block" "end of code block"

    "end of code block"  shift, and go to state 1710


State 1664

  280 optional_expr_list_in_braces: '(' optional_expr_list . optional_comma ')'

    ','  shift, and go to state 1711

    $default  reduce using rule 933 (optional_comma)

    optional_comma  go to state 1712


State 1665

   32 format_string: format_string STRING_CHARACTER .

    $default  reduce using rule 32 (format_string)


State 1666

  939 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where . "end of code block"

    "end of code block"  shift, and go to state 1713


State 1667

  935 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1714


State 1668

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'
  936 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 778
    "as"                 shift, and go to state 779
    "<<"                 shift, and go to state 788
    ">>"                 shift, and go to state 789
    "++"                 shift, and go to state 790
    "--"                 shift, and go to state 791
    "<="                 shift, and go to state 792
    ">="                 shift, and go to state 795
    "=="                 shift, and go to state 796
    "!="                 shift, and go to state 797
    "->"                 shift, and go to state 798
    "??"                 shift, and go to state 800
    "?."                 shift, and go to state 801
    "?["                 shift, and go to state 802
    "<|"                 shift, and go to state 803
    "|>"                 shift, and go to state 804
    "<<<"                shift, and go to state 806
    ">>>"                shift, and go to state 807
    "&&"                 shift, and go to state 810
    "||"                 shift, and go to state 811
    "^^"                 shift, and go to state 812
    ".."                 shift, and go to state 816
    "end of expression"  shift, and go to state 1660
    '?'                  shift, and go to state 818
    '|'                  shift, and go to state 819
    '^'                  shift, and go to state 820
    '&'                  shift, and go to state 821
    '<'                  shift, and go to state 822
    '>'                  shift, and go to state 823
    '-'                  shift, and go to state 824
    '+'                  shift, and go to state 825
    '*'                  shift, and go to state 826
    '/'                  shift, and go to state 827
    '%'                  shift, and go to state 828
    '.'                  shift, and go to state 829
    '['                  shift, and go to state 830

    $default  reduce using rule 931 (array_comprehension_where)

    array_comprehension_where  go to state 1715


State 1669

  845 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1716
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1670

  844 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1717
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1671

  441 func_addr_expr: '@' '@' '<' $@24 type_declaration_no_options '>' $@25 func_addr_name .

    $default  reduce using rule 441 (func_addr_expr)


State 1672

  444 func_addr_expr: '@' '@' '<' $@26 optional_function_argument_list optional_function_type '>' $@27 . func_addr_name

    "::"    shift, and go to state 62
    "$i"    shift, and go to state 1003
    "name"  shift, and go to state 63

    name_in_namespace  go to state 1006
    func_addr_name     go to state 1718


State 1673

  315 expression_return_no_pipe: "return" "<-" . expr_list

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    expr_list               go to state 909
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 752
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1674

  320 expression_yield_no_pipe: "yield" "<-" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1719
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1675

  319 expression_yield_no_pipe: "yield" expr .
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 319 (expression_yield_no_pipe)


State 1676

  384 expr_full_block_assumed_piped: block_or_lambda $@23 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block .

    $default  reduce using rule 384 (expr_full_block_assumed_piped)


State 1677

  433 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 433 (expr_named_call)


State 1678

  334 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options . copy_or_move_or_clone expr semicolon
  335                                     | "[[" tuple_expansion ']' ']' ':' type_declaration_no_options . copy_or_move_or_clone expr_pipe
  754 type_declaration_no_options: type_declaration_no_options . dim_list
  755                            | type_declaration_no_options . '[' ']'
  763                            | type_declaration_no_options . '-' '[' ']'
  764                            | type_declaration_no_options . "explicit"
  765                            | type_declaration_no_options . "const"
  766                            | type_declaration_no_options . '-' "const"
  767                            | type_declaration_no_options . '&'
  768                            | type_declaration_no_options . '-' '&'
  769                            | type_declaration_no_options . '#'
  770                            | type_declaration_no_options . "implicit"
  771                            | type_declaration_no_options . '-' '#'
  772                            | type_declaration_no_options . "==" "const"
  773                            | type_declaration_no_options . "==" '&'
  774                            | type_declaration_no_options . '?'
  778                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 428
    "implicit"  shift, and go to state 429
    "explicit"  shift, and go to state 430
    "=="        shift, and go to state 431
    "<-"        shift, and go to state 608
    "??"        shift, and go to state 432
    ":="        shift, and go to state 609
    '='         shift, and go to state 610
    '?'         shift, and go to state 433
    '&'         shift, and go to state 434
    '-'         shift, and go to state 435
    '['         shift, and go to state 436
    '#'         shift, and go to state 437

    copy_or_move_or_clone  go to state 1720
    dim_list               go to state 438


State 1679

  338 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone . expr semicolon
  339                                     | "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 502
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "$ <|"                            shift, and go to state 506
    "@ <|"                            shift, and go to state 507
    "@@ <|"                           shift, and go to state 508
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expr_call_pipe          go to state 553
    expression_keyword      go to state 556
    expr_pipe               go to state 1721
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_assign             go to state 682
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1722
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1680

  336 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr semicolon
  337                                     | '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 502
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "$ <|"                            shift, and go to state 506
    "@ <|"                            shift, and go to state 507
    "@@ <|"                           shift, and go to state 508
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expr_call_pipe          go to state 553
    expression_keyword      go to state 556
    expr_pipe               go to state 1723
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_assign             go to state 682
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1724
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1681

  341 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 341 (tuple_expansion_variable_declaration)


State 1682

  249 expr_call_pipe: expr . expr_full_block_assumed_piped
  340 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr . semicolon
  392 expr_assign: expr .
  393            | expr . '=' expr
  394            | expr . "<-" expr
  395            | expr . ":=" expr
  396            | expr . "&=" expr
  397            | expr . "|=" expr
  398            | expr . "^=" expr
  399            | expr . "&&=" expr
  400            | expr . "||=" expr
  401            | expr . "^^=" expr
  402            | expr . "+=" expr
  403            | expr . "-=" expr
  404            | expr . "*=" expr
  405            | expr . "/=" expr
  406            | expr . "%=" expr
  407            | expr . "<<=" expr
  408            | expr . ">>=" expr
  409            | expr . "<<<=" expr
  410            | expr . ">>>=" expr
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 778
    "as"                 shift, and go to state 779
    "+="                 shift, and go to state 911
    "-="                 shift, and go to state 912
    "/="                 shift, and go to state 913
    "*="                 shift, and go to state 914
    "%="                 shift, and go to state 915
    "&="                 shift, and go to state 916
    "|="                 shift, and go to state 917
    "^="                 shift, and go to state 918
    "<<"                 shift, and go to state 788
    ">>"                 shift, and go to state 789
    "++"                 shift, and go to state 790
    "--"                 shift, and go to state 791
    "<="                 shift, and go to state 792
    "<<="                shift, and go to state 919
    ">>="                shift, and go to state 920
    ">="                 shift, and go to state 795
    "=="                 shift, and go to state 796
    "!="                 shift, and go to state 797
    "->"                 shift, and go to state 798
    "<-"                 shift, and go to state 921
    "??"                 shift, and go to state 800
    "?."                 shift, and go to state 801
    "?["                 shift, and go to state 802
    "<|"                 shift, and go to state 803
    "|>"                 shift, and go to state 804
    ":="                 shift, and go to state 805
    "<<<"                shift, and go to state 806
    ">>>"                shift, and go to state 807
    "<<<="               shift, and go to state 922
    ">>>="               shift, and go to state 923
    "&&"                 shift, and go to state 810
    "||"                 shift, and go to state 811
    "^^"                 shift, and go to state 812
    "&&="                shift, and go to state 924
    "||="                shift, and go to state 925
    "^^="                shift, and go to state 926
    ".."                 shift, and go to state 816
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '='                  shift, and go to state 927
    '?'                  shift, and go to state 818
    '|'                  shift, and go to state 819
    '^'                  shift, and go to state 820
    '&'                  shift, and go to state 821
    '<'                  shift, and go to state 822
    '>'                  shift, and go to state 823
    '-'                  shift, and go to state 824
    '+'                  shift, and go to state 825
    '*'                  shift, and go to state 826
    '/'                  shift, and go to state 827
    '%'                  shift, and go to state 828
    '.'                  shift, and go to state 829
    '['                  shift, and go to state 830
    '$'                  shift, and go to state 537
    '@'                  shift, and go to state 715

    $default  reduce using rule 392 (expr_assign)

    semicolon                      go to state 1725
    block_or_lambda                go to state 764
    expr_full_block_assumed_piped  go to state 831


State 1683

  366 block_or_simple_block: "=>" "<-" expr .
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 366 (block_or_simple_block)


State 1684

  521 expr: expr "is" "type" '<' $@30 type_declaration_no_options '>' $@31 .

    $default  reduce using rule 521 (expr)


State 1685

  527 expr: expr "as" "type" '<' $@32 type_declaration '>' $@33 .

    $default  reduce using rule 527 (expr)


State 1686

  532 expr: expr '?' "as" "type" '<' $@34 type_declaration '>' . $@35

    $default  reduce using rule 531 ($@35)

    $@35  go to state 1726


State 1687

  449 expr_field: expr '.' "name" '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 449 (expr_field)


State 1688

  584 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@38 function_declaration_header . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 1727


State 1689

  586 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@39 . function_declaration_header expression_block

    "operator"  shift, and go to state 194
    "bool"      shift, and go to state 195
    "string"    shift, and go to state 196
    "int"       shift, and go to state 197
    "int2"      shift, and go to state 198
    "int3"      shift, and go to state 199
    "int4"      shift, and go to state 200
    "uint"      shift, and go to state 201
    "uint2"     shift, and go to state 202
    "uint3"     shift, and go to state 203
    "uint4"     shift, and go to state 204
    "float"     shift, and go to state 205
    "float2"    shift, and go to state 206
    "float3"    shift, and go to state 207
    "float4"    shift, and go to state 208
    "range"     shift, and go to state 209
    "urange"    shift, and go to state 210
    "range64"   shift, and go to state 211
    "urange64"  shift, and go to state 212
    "int64"     shift, and go to state 213
    "uint64"    shift, and go to state 214
    "double"    shift, and go to state 215
    "int8"      shift, and go to state 216
    "uint8"     shift, and go to state 217
    "int16"     shift, and go to state 218
    "uint16"    shift, and go to state 219
    "++"        shift, and go to state 220
    "--"        shift, and go to state 221
    "name"      shift, and go to state 222

    function_name                go to state 223
    function_declaration_header  go to state 1728


State 1690

  851 make_struct_dim_list: '(' . make_struct_fields ')'

    "$f"    shift, and go to state 753
    "name"  shift, and go to state 1274

    make_struct_fields  go to state 1729


State 1691

  840 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  841                   | make_struct_fields . ',' "name" ":=" expr
  844                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  845                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  853 make_struct_dim_decl: make_struct_fields .

    ','  shift, and go to state 1227

    $default  reduce using rule 853 (make_struct_dim_decl)


State 1692

  852 make_struct_dim_list: make_struct_dim_list . ',' '(' make_struct_fields ')'
  854 make_struct_dim_decl: make_struct_dim_list . optional_comma

    ','  shift, and go to state 1730

    $default  reduce using rule 933 (optional_comma)

    optional_comma  go to state 1731


State 1693

  855 optional_make_struct_dim_decl: make_struct_dim_decl .

    $default  reduce using rule 855 (optional_make_struct_dim_decl)


State 1694

  881 make_struct_decl: "struct" '<' $@91 type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1732


State 1695

  884 make_struct_decl: "class" '<' $@93 type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1733


State 1696

  358 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" '>' expr . ')'
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830
    ')'    shift, and go to state 1734


State 1697

  361 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr . ')'
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830
    ')'    shift, and go to state 1735


State 1698

  907 make_dim_decl: "array" "struct" '<' $@101 type_declaration_no_options '>' $@102 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 753
    "name"  shift, and go to state 1274
    '('     shift, and go to state 1690

    $default  reduce using rule 856 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1691
    make_struct_dim_list           go to state 1692
    make_struct_dim_decl           go to state 1693
    optional_make_struct_dim_decl  go to state 1736


State 1699

  910 make_dim_decl: "array" "tuple" '<' $@103 tuple_type_list '>' $@104 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 753
    "name"  shift, and go to state 1274
    '('     shift, and go to state 1690

    $default  reduce using rule 856 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1691
    make_struct_dim_list           go to state 1692
    make_struct_dim_decl           go to state 1693
    optional_make_struct_dim_decl  go to state 1737


State 1700

  840 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  841                   | make_struct_fields . ',' "name" ":=" expr
  844                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  845                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  847 make_variant_dim: make_struct_fields .

    ','  shift, and go to state 1227

    $default  reduce using rule 847 (make_variant_dim)


State 1701

  913 make_dim_decl: "array" "variant" '<' $@105 variant_type_list '>' $@106 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1738


State 1702

  917 make_dim_decl: "array" '<' $@107 type_declaration_no_options '>' $@108 '(' optional_expr_list ')' .

    $default  reduce using rule 917 (make_dim_decl)


State 1703

  930 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 930 (make_table_decl)


State 1704

  921 make_dim_decl: "fixed_array" '<' $@109 type_declaration_no_options '>' $@110 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1739


State 1705

  899 make_tuple_call: "tuple" '<' $@99 tuple_type_list '>' $@100 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1740


State 1706

  887 make_struct_decl: "variant" '<' $@95 variant_type_list '>' $@96 '(' use_initializer make_variant_dim . ')'

    ')'  shift, and go to state 1741


State 1707

  932 array_comprehension_where: "end of expression" "where" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 601
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expression_keyword      go to state 603
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1742
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1708

  937 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' . ']'

    ']'  shift, and go to state 1743


State 1709

  938 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" . ']'

    ']'  shift, and go to state 1744


State 1710

  940 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" . "end of code block"

    "end of code block"  shift, and go to state 1745


State 1711

  934 optional_comma: ',' .

    $default  reduce using rule 934 (optional_comma)


State 1712

  280 optional_expr_list_in_braces: '(' optional_expr_list optional_comma . ')'

    ')'  shift, and go to state 1746


State 1713

  939 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" .

    $default  reduce using rule 939 (array_comprehension)


State 1714

  935 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 935 (array_comprehension)


State 1715

  936 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1747


State 1716

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'
  845 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 845 (make_struct_fields)


State 1717

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'
  844 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 844 (make_struct_fields)


State 1718

  444 func_addr_expr: '@' '@' '<' $@26 optional_function_argument_list optional_function_type '>' $@27 func_addr_name .

    $default  reduce using rule 444 (func_addr_expr)


State 1719

  320 expression_yield_no_pipe: "yield" "<-" expr .
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 320 (expression_yield_no_pipe)


State 1720

  334 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone . expr semicolon
  335                                     | "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 488
    "upcast"                          shift, and go to state 489
    "addr"                            shift, and go to state 490
    "reinterpret"                     shift, and go to state 493
    "unsafe"                          shift, and go to state 600
    "fixed_array"                     shift, and go to state 497
    "default"                         shift, and go to state 498
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 499
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 500
    "variant"                         shift, and go to state 501
    "generator"                       shift, and go to state 502
    "++"                              shift, and go to state 504
    "--"                              shift, and go to state 505
    "$ <|"                            shift, and go to state 506
    "@ <|"                            shift, and go to state 507
    "@@ <|"                           shift, and go to state 508
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 509
    "$i"                              shift, and go to state 510
    "$v"                              shift, and go to state 511
    "$b"                              shift, and go to state 512
    "$a"                              shift, and go to state 513
    "$c"                              shift, and go to state 514
    "..."                             shift, and go to state 515
    "[["                              shift, and go to state 516
    "[{"                              shift, and go to state 517
    "{{"                              shift, and go to state 518
    "integer constant"                shift, and go to state 519
    "long integer constant"           shift, and go to state 520
    "unsigned integer constant"       shift, and go to state 521
    "unsigned long integer constant"  shift, and go to state 522
    "unsigned int8 constant"          shift, and go to state 523
    "floating point constant"         shift, and go to state 524
    "double constant"                 shift, and go to state 525
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 602
    "type function"                   shift, and go to state 527
    "start of the string"             shift, and go to state 528
    "begin of code block"             shift, and go to state 529
    '-'                               shift, and go to state 530
    '+'                               shift, and go to state 531
    '*'                               shift, and go to state 532
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 533
    '!'                               shift, and go to state 534
    '['                               shift, and go to state 535
    '('                               shift, and go to state 536
    '$'                               shift, and go to state 537
    '@'                               shift, and go to state 538

    string_builder          go to state 539
    expr_reader             go to state 540
    expr_call_pipe          go to state 553
    expression_keyword      go to state 556
    expr_pipe               go to state 1748
    name_in_namespace       go to state 558
    expr_new                go to state 560
    expr_cast               go to state 570
    expr_type_decl          go to state 571
    expr_type_info          go to state 572
    block_or_lambda         go to state 573
    expr_full_block         go to state 574
    expr_numeric_const      go to state 575
    expr_assign             go to state 682
    expr_named_call         go to state 578
    expr_method_call        go to state 579
    func_addr_expr          go to state 580
    expr_field              go to state 581
    expr_call               go to state 582
    expr                    go to state 1749
    expr_mtag               go to state 584
    basic_type_declaration  go to state 585
    make_decl               go to state 586
    make_struct_decl        go to state 587
    make_tuple_call         go to state 588
    make_dim_decl           go to state 589
    make_table_decl         go to state 590
    array_comprehension     go to state 591


State 1721

  339 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 339 (tuple_expansion_variable_declaration)


State 1722

  249 expr_call_pipe: expr . expr_full_block_assumed_piped
  338 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr . semicolon
  392 expr_assign: expr .
  393            | expr . '=' expr
  394            | expr . "<-" expr
  395            | expr . ":=" expr
  396            | expr . "&=" expr
  397            | expr . "|=" expr
  398            | expr . "^=" expr
  399            | expr . "&&=" expr
  400            | expr . "||=" expr
  401            | expr . "^^=" expr
  402            | expr . "+=" expr
  403            | expr . "-=" expr
  404            | expr . "*=" expr
  405            | expr . "/=" expr
  406            | expr . "%=" expr
  407            | expr . "<<=" expr
  408            | expr . ">>=" expr
  409            | expr . "<<<=" expr
  410            | expr . ">>>=" expr
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 778
    "as"                 shift, and go to state 779
    "+="                 shift, and go to state 911
    "-="                 shift, and go to state 912
    "/="                 shift, and go to state 913
    "*="                 shift, and go to state 914
    "%="                 shift, and go to state 915
    "&="                 shift, and go to state 916
    "|="                 shift, and go to state 917
    "^="                 shift, and go to state 918
    "<<"                 shift, and go to state 788
    ">>"                 shift, and go to state 789
    "++"                 shift, and go to state 790
    "--"                 shift, and go to state 791
    "<="                 shift, and go to state 792
    "<<="                shift, and go to state 919
    ">>="                shift, and go to state 920
    ">="                 shift, and go to state 795
    "=="                 shift, and go to state 796
    "!="                 shift, and go to state 797
    "->"                 shift, and go to state 798
    "<-"                 shift, and go to state 921
    "??"                 shift, and go to state 800
    "?."                 shift, and go to state 801
    "?["                 shift, and go to state 802
    "<|"                 shift, and go to state 803
    "|>"                 shift, and go to state 804
    ":="                 shift, and go to state 805
    "<<<"                shift, and go to state 806
    ">>>"                shift, and go to state 807
    "<<<="               shift, and go to state 922
    ">>>="               shift, and go to state 923
    "&&"                 shift, and go to state 810
    "||"                 shift, and go to state 811
    "^^"                 shift, and go to state 812
    "&&="                shift, and go to state 924
    "||="                shift, and go to state 925
    "^^="                shift, and go to state 926
    ".."                 shift, and go to state 816
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '='                  shift, and go to state 927
    '?'                  shift, and go to state 818
    '|'                  shift, and go to state 819
    '^'                  shift, and go to state 820
    '&'                  shift, and go to state 821
    '<'                  shift, and go to state 822
    '>'                  shift, and go to state 823
    '-'                  shift, and go to state 824
    '+'                  shift, and go to state 825
    '*'                  shift, and go to state 826
    '/'                  shift, and go to state 827
    '%'                  shift, and go to state 828
    '.'                  shift, and go to state 829
    '['                  shift, and go to state 830
    '$'                  shift, and go to state 537
    '@'                  shift, and go to state 715

    $default  reduce using rule 392 (expr_assign)

    semicolon                      go to state 1750
    block_or_lambda                go to state 764
    expr_full_block_assumed_piped  go to state 831


State 1723

  337 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 337 (tuple_expansion_variable_declaration)


State 1724

  249 expr_call_pipe: expr . expr_full_block_assumed_piped
  336 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr . semicolon
  392 expr_assign: expr .
  393            | expr . '=' expr
  394            | expr . "<-" expr
  395            | expr . ":=" expr
  396            | expr . "&=" expr
  397            | expr . "|=" expr
  398            | expr . "^=" expr
  399            | expr . "&&=" expr
  400            | expr . "||=" expr
  401            | expr . "^^=" expr
  402            | expr . "+=" expr
  403            | expr . "-=" expr
  404            | expr . "*=" expr
  405            | expr . "/=" expr
  406            | expr . "%=" expr
  407            | expr . "<<=" expr
  408            | expr . ">>=" expr
  409            | expr . "<<<=" expr
  410            | expr . ">>>=" expr
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 778
    "as"                 shift, and go to state 779
    "+="                 shift, and go to state 911
    "-="                 shift, and go to state 912
    "/="                 shift, and go to state 913
    "*="                 shift, and go to state 914
    "%="                 shift, and go to state 915
    "&="                 shift, and go to state 916
    "|="                 shift, and go to state 917
    "^="                 shift, and go to state 918
    "<<"                 shift, and go to state 788
    ">>"                 shift, and go to state 789
    "++"                 shift, and go to state 790
    "--"                 shift, and go to state 791
    "<="                 shift, and go to state 792
    "<<="                shift, and go to state 919
    ">>="                shift, and go to state 920
    ">="                 shift, and go to state 795
    "=="                 shift, and go to state 796
    "!="                 shift, and go to state 797
    "->"                 shift, and go to state 798
    "<-"                 shift, and go to state 921
    "??"                 shift, and go to state 800
    "?."                 shift, and go to state 801
    "?["                 shift, and go to state 802
    "<|"                 shift, and go to state 803
    "|>"                 shift, and go to state 804
    ":="                 shift, and go to state 805
    "<<<"                shift, and go to state 806
    ">>>"                shift, and go to state 807
    "<<<="               shift, and go to state 922
    ">>>="               shift, and go to state 923
    "&&"                 shift, and go to state 810
    "||"                 shift, and go to state 811
    "^^"                 shift, and go to state 812
    "&&="                shift, and go to state 924
    "||="                shift, and go to state 925
    "^^="                shift, and go to state 926
    ".."                 shift, and go to state 816
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '='                  shift, and go to state 927
    '?'                  shift, and go to state 818
    '|'                  shift, and go to state 819
    '^'                  shift, and go to state 820
    '&'                  shift, and go to state 821
    '<'                  shift, and go to state 822
    '>'                  shift, and go to state 823
    '-'                  shift, and go to state 824
    '+'                  shift, and go to state 825
    '*'                  shift, and go to state 826
    '/'                  shift, and go to state 827
    '%'                  shift, and go to state 828
    '.'                  shift, and go to state 829
    '['                  shift, and go to state 830
    '$'                  shift, and go to state 537
    '@'                  shift, and go to state 715

    $default  reduce using rule 392 (expr_assign)

    semicolon                      go to state 1751
    block_or_lambda                go to state 764
    expr_full_block_assumed_piped  go to state 831


State 1725

  340 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr semicolon .

    $default  reduce using rule 340 (tuple_expansion_variable_declaration)


State 1726

  532 expr: expr '?' "as" "type" '<' $@34 type_declaration '>' $@35 .

    $default  reduce using rule 532 (expr)


State 1727

  584 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@38 function_declaration_header semicolon .

    $default  reduce using rule 584 (struct_variable_declaration_list)


State 1728

  586 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@39 function_declaration_header . expression_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block        go to state 301
    expression_block  go to state 1752


State 1729

  840 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  841                   | make_struct_fields . ',' "name" ":=" expr
  844                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  845                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  851 make_struct_dim_list: '(' make_struct_fields . ')'

    ','  shift, and go to state 1227
    ')'  shift, and go to state 1753


State 1730

  852 make_struct_dim_list: make_struct_dim_list ',' . '(' make_struct_fields ')'
  934 optional_comma: ',' .

    '('  shift, and go to state 1754

    $default  reduce using rule 934 (optional_comma)


State 1731

  854 make_struct_dim_decl: make_struct_dim_list optional_comma .

    $default  reduce using rule 854 (make_struct_dim_decl)


State 1732

  881 make_struct_decl: "struct" '<' $@91 type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 881 (make_struct_decl)


State 1733

  884 make_struct_decl: "class" '<' $@93 type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 884 (make_struct_decl)


State 1734

  358 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" '>' expr ')' .

    $default  reduce using rule 358 (expr_type_info)


State 1735

  361 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr ')' .

    $default  reduce using rule 361 (expr_type_info)


State 1736

  907 make_dim_decl: "array" "struct" '<' $@101 type_declaration_no_options '>' $@102 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1755


State 1737

  910 make_dim_decl: "array" "tuple" '<' $@103 tuple_type_list '>' $@104 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1756


State 1738

  913 make_dim_decl: "array" "variant" '<' $@105 variant_type_list '>' $@106 '(' make_variant_dim ')' .

    $default  reduce using rule 913 (make_dim_decl)


State 1739

  921 make_dim_decl: "fixed_array" '<' $@109 type_declaration_no_options '>' $@110 '(' expr_list optional_comma ')' .

    $default  reduce using rule 921 (make_dim_decl)


State 1740

  899 make_tuple_call: "tuple" '<' $@99 tuple_type_list '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 899 (make_tuple_call)


State 1741

  887 make_struct_decl: "variant" '<' $@95 variant_type_list '>' $@96 '(' use_initializer make_variant_dim ')' .

    $default  reduce using rule 887 (make_struct_decl)


State 1742

  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'
  932 array_comprehension_where: "end of expression" "where" expr .

    "is"   shift, and go to state 778
    "as"   shift, and go to state 779
    "<<"   shift, and go to state 788
    ">>"   shift, and go to state 789
    "++"   shift, and go to state 790
    "--"   shift, and go to state 791
    "<="   shift, and go to state 792
    ">="   shift, and go to state 795
    "=="   shift, and go to state 796
    "!="   shift, and go to state 797
    "->"   shift, and go to state 798
    "??"   shift, and go to state 800
    "?."   shift, and go to state 801
    "?["   shift, and go to state 802
    "<|"   shift, and go to state 803
    "|>"   shift, and go to state 804
    "<<<"  shift, and go to state 806
    ">>>"  shift, and go to state 807
    "&&"   shift, and go to state 810
    "||"   shift, and go to state 811
    "^^"   shift, and go to state 812
    ".."   shift, and go to state 816
    '?'    shift, and go to state 818
    '|'    shift, and go to state 819
    '^'    shift, and go to state 820
    '&'    shift, and go to state 821
    '<'    shift, and go to state 822
    '>'    shift, and go to state 823
    '-'    shift, and go to state 824
    '+'    shift, and go to state 825
    '*'    shift, and go to state 826
    '/'    shift, and go to state 827
    '%'    shift, and go to state 828
    '.'    shift, and go to state 829
    '['    shift, and go to state 830

    $default  reduce using rule 932 (array_comprehension_where)


State 1743

  937 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']' .

    $default  reduce using rule 937 (array_comprehension)


State 1744

  938 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']' .

    $default  reduce using rule 938 (array_comprehension)


State 1745

  940 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block" .

    $default  reduce using rule 940 (array_comprehension)


State 1746

  280 optional_expr_list_in_braces: '(' optional_expr_list optional_comma ')' .

    $default  reduce using rule 280 (optional_expr_list_in_braces)


State 1747

  936 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 936 (array_comprehension)


State 1748

  335 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 335 (tuple_expansion_variable_declaration)


State 1749

  249 expr_call_pipe: expr . expr_full_block_assumed_piped
  334 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr . semicolon
  392 expr_assign: expr .
  393            | expr . '=' expr
  394            | expr . "<-" expr
  395            | expr . ":=" expr
  396            | expr . "&=" expr
  397            | expr . "|=" expr
  398            | expr . "^=" expr
  399            | expr . "&&=" expr
  400            | expr . "||=" expr
  401            | expr . "^^=" expr
  402            | expr . "+=" expr
  403            | expr . "-=" expr
  404            | expr . "*=" expr
  405            | expr . "/=" expr
  406            | expr . "%=" expr
  407            | expr . "<<=" expr
  408            | expr . ">>=" expr
  409            | expr . "<<<=" expr
  410            | expr . ">>>=" expr
  434 expr_method_call: expr . "->" "name" '(' ')'
  435                 | expr . "->" "name" '(' expr_list ')'
  445 expr_field: expr . '.' "name"
  446           | expr . '.' '.' "name"
  447           | expr . '.' "name" '(' ')'
  448           | expr . '.' "name" '(' expr_list ')'
  449           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  450           | expr . '.' basic_type_declaration '(' ')'
  451           | expr . '.' basic_type_declaration '(' expr_list ')'
  454           | expr . '.' $@28 error $@29
  476 expr: expr . "<<" expr
  477     | expr . ">>" expr
  478     | expr . "<<<" expr
  479     | expr . ">>>" expr
  480     | expr . '+' expr
  481     | expr . '-' expr
  482     | expr . '*' expr
  483     | expr . '/' expr
  484     | expr . '%' expr
  485     | expr . '<' expr
  486     | expr . '>' expr
  487     | expr . "==" expr
  488     | expr . "!=" expr
  489     | expr . "<=" expr
  490     | expr . ">=" expr
  491     | expr . '&' expr
  492     | expr . '|' expr
  493     | expr . '^' expr
  494     | expr . "&&" expr
  495     | expr . "||" expr
  496     | expr . "^^" expr
  497     | expr . ".." expr
  500     | expr . "++"
  501     | expr . "--"
  504     | expr . '[' expr ']'
  505     | expr . '.' '[' expr ']'
  506     | expr . "?[" expr ']'
  507     | expr . '.' "?[" expr ']'
  508     | expr . "?." "name"
  509     | expr . '.' "?." "name"
  517     | expr . "??" expr
  518     | expr . '?' expr ':' expr
  521     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  522     | expr . "is" basic_type_declaration
  523     | expr . "is" "name"
  524     | expr . "as" "name"
  527     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  528     | expr . "as" basic_type_declaration
  529     | expr . '?' "as" "name"
  532     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  533     | expr . '?' "as" basic_type_declaration
  541     | expr . "<|" expr
  542     | expr . "|>" expr
  543     | expr . "|>" basic_type_declaration
  555 expr_mtag: expr . '.' "$f" '(' expr ')'
  556          | expr . "?." "$f" '(' expr ')'
  557          | expr . '.' '.' "$f" '(' expr ')'
  558          | expr . '.' "?." "$f" '(' expr ')'
  559          | expr . "as" "$f" '(' expr ')'
  560          | expr . '?' "as" "$f" '(' expr ')'
  561          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 778
    "as"                 shift, and go to state 779
    "+="                 shift, and go to state 911
    "-="                 shift, and go to state 912
    "/="                 shift, and go to state 913
    "*="                 shift, and go to state 914
    "%="                 shift, and go to state 915
    "&="                 shift, and go to state 916
    "|="                 shift, and go to state 917
    "^="                 shift, and go to state 918
    "<<"                 shift, and go to state 788
    ">>"                 shift, and go to state 789
    "++"                 shift, and go to state 790
    "--"                 shift, and go to state 791
    "<="                 shift, and go to state 792
    "<<="                shift, and go to state 919
    ">>="                shift, and go to state 920
    ">="                 shift, and go to state 795
    "=="                 shift, and go to state 796
    "!="                 shift, and go to state 797
    "->"                 shift, and go to state 798
    "<-"                 shift, and go to state 921
    "??"                 shift, and go to state 800
    "?."                 shift, and go to state 801
    "?["                 shift, and go to state 802
    "<|"                 shift, and go to state 803
    "|>"                 shift, and go to state 804
    ":="                 shift, and go to state 805
    "<<<"                shift, and go to state 806
    ">>>"                shift, and go to state 807
    "<<<="               shift, and go to state 922
    ">>>="               shift, and go to state 923
    "&&"                 shift, and go to state 810
    "||"                 shift, and go to state 811
    "^^"                 shift, and go to state 812
    "&&="                shift, and go to state 924
    "||="                shift, and go to state 925
    "^^="                shift, and go to state 926
    ".."                 shift, and go to state 816
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '='                  shift, and go to state 927
    '?'                  shift, and go to state 818
    '|'                  shift, and go to state 819
    '^'                  shift, and go to state 820
    '&'                  shift, and go to state 821
    '<'                  shift, and go to state 822
    '>'                  shift, and go to state 823
    '-'                  shift, and go to state 824
    '+'                  shift, and go to state 825
    '*'                  shift, and go to state 826
    '/'                  shift, and go to state 827
    '%'                  shift, and go to state 828
    '.'                  shift, and go to state 829
    '['                  shift, and go to state 830
    '$'                  shift, and go to state 537
    '@'                  shift, and go to state 715

    $default  reduce using rule 392 (expr_assign)

    semicolon                      go to state 1757
    block_or_lambda                go to state 764
    expr_full_block_assumed_piped  go to state 831


State 1750

  338 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr semicolon .

    $default  reduce using rule 338 (tuple_expansion_variable_declaration)


State 1751

  336 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon .

    $default  reduce using rule 336 (tuple_expansion_variable_declaration)


State 1752

  586 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@39 function_declaration_header expression_block .

    $default  reduce using rule 586 (struct_variable_declaration_list)


State 1753

  851 make_struct_dim_list: '(' make_struct_fields ')' .

    $default  reduce using rule 851 (make_struct_dim_list)


State 1754

  852 make_struct_dim_list: make_struct_dim_list ',' '(' . make_struct_fields ')'

    "$f"    shift, and go to state 753
    "name"  shift, and go to state 1274

    make_struct_fields  go to state 1758


State 1755

  907 make_dim_decl: "array" "struct" '<' $@101 type_declaration_no_options '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 907 (make_dim_decl)


State 1756

  910 make_dim_decl: "array" "tuple" '<' $@103 tuple_type_list '>' $@104 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 910 (make_dim_decl)


State 1757

  334 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon .

    $default  reduce using rule 334 (tuple_expansion_variable_declaration)


State 1758

  840 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  841                   | make_struct_fields . ',' "name" ":=" expr
  844                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  845                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  852 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields . ')'

    ','  shift, and go to state 1227
    ')'  shift, and go to state 1759


State 1759

  852 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields ')' .

    $default  reduce using rule 852 (make_struct_dim_list)
